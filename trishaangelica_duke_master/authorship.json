[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "D | 0 | return book|June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "T | 1 | join sports club"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "T | 0 | borrow book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "D | 0 | return book|Sunday"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "E | 0 | project meeting|Mon 2-4pm"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 6
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.task.Deadlines;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.task.Events;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.task.ToDos;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.io.Writer;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static final Path FILENAME \u003d Paths.get(System.getProperty(\"user.dir\"), \"data\", \"duke.txt\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static String fileDoneStatus;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static final String COMMAND_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static final String COMMAND_TODO_DESC \u003d \"Add a simple to-do task.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static final String COMMAND_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static final String COMMAND_DEADLINE_DESC \u003d \"Add a deadline.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static final String COMMAND_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static final String COMMAND_EVENT_DESC \u003d \"Add an event.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static final String COMMAND_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static final String COMMAND_LIST_DESC \u003d \"List all tasks at hand.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static final String COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static final String COMMAND_DELETE_DESC \u003d \"Delete specific task from list.\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static final String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static final String COMMAND_DONE_DESC \u003d \"Mark specific task as done.\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static final String COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static final String COMMAND_BYE_DESC \u003d \"Exit program.\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static final String COMMAND_CLEAR \u003d \"clear\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static final String COMMAND_CLEAR_DESC \u003d \"Clear all tasks in list\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static final String COMMAND_MESSAGE \u003d \"|| %s: %s\\n||  Example: %s\\n||\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d \"|| OOPS! The %s of a %s command cannot be empty.\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static final String ERROR_TODO_PARAM \u003d \"|| Parameters: todo [DESCRIPTION]\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static final String ERROR_TODO_EXAMPLE \u003d \"|| Example: todo brainstorm ideas\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static final String ERROR_DEADLINES_PARAM \u003d \"|| Parameters: deadline [DESCRIPTION] /by [DUEDATE]\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static final String ERROR_DEADLINES_EXAMPLE \u003d \"|| Example: deadline submit essay /by Tues 4pm\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static final String ERROR_EVENTS_PARAM \u003d \"|| Parameters: event [DESCRIPTION] /at [TIME]\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static final String ERROR_EVENTS_EXAMPLE \u003d \"|| Example: event project meeting /at Mon 4pm\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static final String ERROR_DELETE_PARAM \u003d \"|| Parameters: delete [TASK NUMBER]\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static final String ERROR_DELETE_EXAMPLE \u003d \"|| Example: delete 1\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static final String ERROR_DONE_PARAM \u003d \"|| Parameters: done [TASK NUMBER]\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static final String ERROR_DONE_EXAMPLE \u003d \"|| Example: done 1\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static final String ERROR_LIST_MESSAGE \u003d \"|| OOPS! That task cannot be marked done.\" + \"\\n|| Try \""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + \"adding a task first. \";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static final String ERROR_DELETE_MESSAGE \u003d \"|| OOPS! I can\u0027t delete that because\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + \" you haven\u0027t\" + \" added task %s yet!\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static final String divider \u003d \"\\n - - - - - - - - - - - - - - - - - - - - - - - - \\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Start of duke main."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @param args the args from command line"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d initDuke();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            System.out.println(divider + \"\\nLoading previously saved tasks (if any)..\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            readFile(taskList);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            executeListCommand(taskList);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            System.out.println(\"\\nAll loaded. Let\u0027s begin to add more tasks!\\n\" + divider);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } catch (IOException | DukeException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            System.out.println(\"Well this is embarrassing, you haven\u0027t got any saved list.\\nLet\u0027s create a new \""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    + \"one!\\n\" + divider);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        //noinspection InfiniteLoopStatement"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            System.out.println(\"Enter command: \");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            input \u003d scan.nextLine();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            final Command command \u003d splitCommandAndArgs(input);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            switch (command.getCommandName()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            case COMMAND_BYE: // exit program"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                executeByeCommand(taskList);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            case COMMAND_LIST: // list tasks"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    executeListCommand(taskList);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    System.out.println(\"\\n\" + divider);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    System.out.println(\"Well this is embarrassing, you haven\u0027t got anything listed.\\nLet\u0027s add one!\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            case COMMAND_CLEAR:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                executeClearCommand(taskList);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            case COMMAND_DELETE:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    executeDeleteCommand(taskList, command);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    System.out.println(String.format(divider + ERROR_MESSAGE, \"task number\", COMMAND_DELETE)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                            + ERROR_DELETE_PARAM + ERROR_DELETE_EXAMPLE + divider);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    System.out.println(divider + String.format(ERROR_DELETE_MESSAGE, command.getArgs()) + divider);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            case COMMAND_DONE: // mark as done"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    executeDoneCommand(taskList, command);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    System.out.println(String.format(divider + ERROR_MESSAGE, \"task number\", COMMAND_DONE)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                            + ERROR_DONE_PARAM + ERROR_DONE_EXAMPLE + divider);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    System.out.println(divider + ERROR_LIST_MESSAGE + divider);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            case COMMAND_TODO: // add to-do"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    executeTodoCommand(taskList, command);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    System.out.println(String.format(divider + ERROR_MESSAGE, \"description\", COMMAND_TODO)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                            + ERROR_TODO_PARAM + ERROR_TODO_EXAMPLE + divider);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            case COMMAND_DEADLINE: // add deadlines"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    executeDeadlineCommand(taskList, command);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                } catch (NullPointerException | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    System.out.println(String.format(divider + ERROR_MESSAGE, \"description and/or due date\","
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                            COMMAND_DEADLINE) + ERROR_DEADLINES_PARAM + ERROR_DEADLINES_EXAMPLE + divider);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            case COMMAND_EVENT: // add event"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    executeEventCommand(taskList, command);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                } catch (NullPointerException | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    System.out.println(String.format(divider + ERROR_MESSAGE, \"description and/or time\","
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                            COMMAND_EVENT) + ERROR_EVENTS_PARAM + ERROR_EVENTS_EXAMPLE + divider);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            default: // Invalid input; List accepted commands"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                System.out.print(divider + \" Sorry, you have entered an invalid input. \""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                        + \"\\n\\t\\tHere\u0027s a help list to get you started: \\n\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                getCommandInfo();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Display message at start of program"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static ArrayList\u003cTask\u003e initDuke() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        String logo \u003d"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                \" _ _ __                           \\n\" + \"|_ _   |  _ _     _   __   _      _   _ _  _ _ _\\n\""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                        + \"    \""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                        + \"|  | / _ \\\\   | |/ __|[   ]  [   ]|_\u003d_||      |\\n\""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                        + \" _  |  || | | \\\\  |  /     \\\\ \\\\   / /\""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                        + \"    _   \\\\  \\\\ /\\n\""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                        + \"| |_|  || |_|  \\\\ |  |      \\\\ \\\\_/ /    | | | \\\\  \\\\\\n\""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                        + \"|_ _ _ / \" + \"\\\\_ _/\\\\_\\\\[_ _]      \\\\__ /     |_| |_ _ _/\";"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        System.out.println(\"\\nHello from\\n\" + logo + \",\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        System.out.println(String.format(divider + \"|             %-34s|\\n|       %-40s|\", \"Hello! I\u0027m Jarvis :D\","
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                \"What can I do for you today?\") + divider);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Manipulation of user input by splitting of command and args"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @param input user input"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static Command splitCommandAndArgs(String input) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        String com;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        String args;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            com \u003d input.trim().substring(0, input.indexOf(\u0027 \u0027));"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            if (com.equals(\"done\") || com.equals(\"delete\")) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                args \u003d input.trim().substring(input.indexOf(\u0027 \u0027)).trim();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                args \u003d input.substring(input.indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) { // input is \"bye\" or \"list\"; set args: null"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            com \u003d input.trim();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            args \u003d null;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return new Command(com, args);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Exit Program"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @param taskList array list to save to duke.txt file"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static void executeByeCommand(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        System.out.println(\"Hang on, saving your list...\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        saveOnFile(taskList);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        System.out.print(divider + \" Bye. Hope to see you again soon!\" + divider);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Clear all tasks in list"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     *"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static void executeClearCommand(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        taskList.clear();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            clearFile();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }catch (FileNotFoundException e){"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            System.out.println(\"File not found.\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        System.out.print(divider + \"List is empty now. You can add new tasks.\" + divider);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Addition of new events task"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @param taskList list to add to"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @param command command args"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static void executeEventCommand(ArrayList\u003cTask\u003e taskList, Command command) throws StringIndexOutOfBoundsException{"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        final int indexOfAtPrefix \u003d command.getArgs().indexOf(\"/at\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        description \u003d command.getArgs().substring(0, indexOfAtPrefix);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        String timeOfEvent \u003d command.getArgs().substring(indexOfAtPrefix + 3).trim();"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if (description.isEmpty() || timeOfEvent.isEmpty()) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            throw new StringIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        Task event \u003d new Events(description, timeOfEvent);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        taskList.add(event);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        showSuccessfulAddition(taskList, event);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        saveOnFile(taskList);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Addition of new deadlines task"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @param taskList list to add to"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @param command command args"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static void executeDeadlineCommand(ArrayList\u003cTask\u003e taskList, Command command) throws StringIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        final int indexOfByPrefix \u003d command.getArgs().trim().indexOf(\"/by\");"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        description \u003d command.getArgs().trim().substring(0, indexOfByPrefix);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        String dueDate \u003d command.getArgs().substring(indexOfByPrefix + 3).trim();"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if (description.isEmpty() || dueDate.isEmpty()) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            throw new StringIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        Task deadline \u003d new Deadlines(description, dueDate);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        taskList.add(deadline);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        showSuccessfulAddition(taskList, deadline);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        saveOnFile(taskList);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Addition of new todo task"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @param taskList list to add to"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @param command command args"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static void executeTodoCommand(ArrayList\u003cTask\u003e taskList, Command command) throws StringIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if (command.getArgs() \u003d\u003d null) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            throw new StringIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            Task newTask \u003d new ToDos(command.getArgs());"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            taskList.add(newTask);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            showSuccessfulAddition(taskList, newTask);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        //save to text file newly added task"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        saveOnFile(taskList);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Mark specific task as done"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     *"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static void executeDoneCommand(ArrayList\u003cTask\u003e taskList, Command command) throws NumberFormatException, IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if (command.getArgs() \u003d\u003d null) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            throw new NumberFormatException();"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        index \u003d Integer.parseInt(String.valueOf(command.getArgs()));"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if (index \u003e taskList.size()) {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        Task t \u003d taskList.get(index - 1);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        taskList.set(index-1, t);"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        updateFile(index, t);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        System.out.print(Duke.divider + \" Nice! I\u0027ve marked this task as done: [\" + t.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                + t.description + Duke.divider);"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Remove specified task from list"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     *"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static void executeDeleteCommand(ArrayList\u003cTask\u003e taskList, Command command) throws NumberFormatException, IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if (command.getArgs() \u003d\u003d null) {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            throw new NumberFormatException();"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        index \u003d Integer.parseInt(String.valueOf(command.getArgs()));"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if (index \u003e taskList.size()) {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        Task t \u003d taskList.get(index - 1);"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        taskList.remove(index - 1);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            deleteOnFile(index);"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            System.out.println(\"File Access Error.\");"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        System.out.print(Duke.divider + \" Noted! I\u0027ve removed this task:\" + System.lineSeparator()"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                + \"\\t\" + t.toString() + System.lineSeparator()"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                + String.format(\" Now you have %d tasks in your list.\", taskList.size()) + Duke.divider);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * List all stored task"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     *"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static void executeListCommand(ArrayList\u003cTask\u003e taskList) throws DukeException {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        System.out.print(Duke.divider);"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        int taskCounter \u003d 1;"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            System.out.println(System.lineSeparator() + \"Currently, you have these items in your list: \\n\");"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            for (Task t : taskList) {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                System.out.println(taskCounter + \". \" + t.toString());"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                taskCounter++;"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Display command info"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static void getCommandInfo() {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        System.out.println(String.format(COMMAND_MESSAGE, COMMAND_TODO, COMMAND_TODO_DESC, COMMAND_TODO)"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                + String.format(COMMAND_MESSAGE, COMMAND_DEADLINE, COMMAND_DEADLINE_DESC, COMMAND_DEADLINE)"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                + String.format(COMMAND_MESSAGE, COMMAND_EVENT, COMMAND_EVENT_DESC, COMMAND_EVENT)"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                + String.format(COMMAND_MESSAGE, COMMAND_LIST, COMMAND_LIST_DESC, COMMAND_LIST)"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                + String.format(COMMAND_MESSAGE, COMMAND_DONE, COMMAND_DONE_DESC, COMMAND_DONE)"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                + String.format(COMMAND_MESSAGE, COMMAND_DELETE, COMMAND_DELETE_DESC, COMMAND_DELETE)"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                + String.format(COMMAND_MESSAGE, COMMAND_BYE, COMMAND_BYE_DESC, COMMAND_BYE)"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                + String.format(COMMAND_MESSAGE,COMMAND_CLEAR,COMMAND_CLEAR_DESC,COMMAND_CLEAR)+ divider);"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Display successful addition message"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     *"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @param taskList  task array"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @param newTask   newly added task"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static void showSuccessfulAddition(ArrayList\u003cTask\u003e taskList, Task newTask) {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        System.out.println(Duke.divider + \"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        System.out.print(\"\\t\" + newTask.toString());"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        System.out.printf(\"\\nNow you have %d tasks in your list.\" + Duke.divider, taskList.size());"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Read from duke.txt file. To load array list in program."
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     *"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @param taskList array to update"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static void readFile(ArrayList\u003cTask\u003e taskList) throws IOException {"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        FileReader fr \u003d new FileReader(String.valueOf(FILENAME));"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            String[] parse \u003d line.trim().split(\"\\\\s*\\\\|\\\\s*\");"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            if (parse.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                ToDos t \u003d new ToDos(parse[2]);"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                if (parse[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    t.markAsDone();"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                }"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                taskList.add(t);"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            } else if (parse.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                if (parse[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    Deadlines d \u003d new Deadlines(parse[2], parse[3]);"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    if (parse[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                        d.markAsDone();"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    taskList.add(d);"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    Events e \u003d new Events(parse[2], parse[3]);"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    if (parse[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                        e.markAsDone();"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    taskList.add(e);"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                }"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            }"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        br.close();"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        fr.close();"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Update task in duke.txt file."
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     *"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @param lineNumber line number equivalent to index of task"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @param t          task"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static void updateFile(int lineNumber, Task t) {"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if (t.getStatusIcon().equals(\"done\")) {"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            fileDoneStatus \u003d \"1\";"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            fileDoneStatus \u003d \"0\";"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e(Files.readAllLines(FILENAME, StandardCharsets.UTF_8));"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            if (t instanceof ToDos) {"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                lines.set(lineNumber - 1, t.getTaskType() + \" | \" + fileDoneStatus + \" | \" + t.description + \"\\n\");"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            } else if (t instanceof Events) {"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                lines.set(lineNumber - 1,"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                        t.getTaskType() + \" | \" + fileDoneStatus + \" | \" + t.description + \"| \""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                                + ((Events) t).getTimeOfEvent() + \"\\n\");"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            } else if (t instanceof Deadlines) {"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                lines.set(lineNumber - 1,"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                        t.getTaskType() + \" | \" + fileDoneStatus + \" | \" + t.description + \"| \""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                                + ((Deadlines) t).getDueDate() + \"\\n\");"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                Files.write(FILENAME, lines, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            }"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            Files.write(FILENAME, lines, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            //File error"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Delete task on duke.txt file."
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     *"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @param lineNumber line number equivalent to index number of task"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static void deleteOnFile(int lineNumber) throws IOException {"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e(Files.readAllLines(FILENAME, StandardCharsets.UTF_8));"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        lines.remove(lineNumber - 1);"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        Files.write(FILENAME, lines, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Save task array to duke.txt file"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     *"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @param taskList tasklist to save"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static void saveOnFile(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        boolean directoryExists \u003d Files.exists(FILENAME); // C:\\cs2113T\\duke\\data\\duke.txt"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            if (directoryExists) {"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                FileWriter fw \u003d new FileWriter(String.valueOf(FILENAME));"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                Writer output \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                for (Task t : taskList) {"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    if (t.getStatusIcon().equals(\"done\")) {"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                        fileDoneStatus \u003d \"1\";"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                        fileDoneStatus \u003d \"0\";"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    if (t instanceof ToDos) {"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                        output.write(t.getTaskType() + \" | \" + fileDoneStatus + \" | \" + t.description + \"\\n\");"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    } else if (t instanceof Events) {"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                        output.write(t.getTaskType() + \" | \" + fileDoneStatus + \" | \" + t.description + \"|\""
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                                + ((Events) t).getTimeOfEvent() + \"\\n\");"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    } else if (t instanceof Deadlines) {"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                        output.write(t.getTaskType() + \" | \" + fileDoneStatus + \" | \" + t.description + \"|\""
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                                + ((Deadlines) t).getDueDate() + \"\\n\");"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                }"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                output.close();"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            }"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            //File error"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            System.out.println(\"File Access Error.\");"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static void clearFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        PrintWriter writer \u003d new PrintWriter(String.valueOf(FILENAME));"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        writer.print(\"\");"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 5,
      "trishaangelica": 500
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private String commandName;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private String args;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public Command(String command, String args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.commandName \u003d command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.args \u003d args;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public String getCommandName() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return commandName;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public String getArgs() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return args;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 21
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 6
    }
  },
  {
    "path": "src/main/java/duke/task/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  protected String dueDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "   *  Represents a Deadline object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "   * @param description     description of deadline task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "   * @param dueDate         due date of deadline task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "   */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public Deadlines(String description, String dueDate) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    super.setTaskType(\"D\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public String getDueDate() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    return dueDate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    return \"[\" + super.getTaskType() + \"]\" + super.toString() + \"(by: \" + getDueDate() + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 26
    }
  },
  {
    "path": "src/main/java/duke/task/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  protected String timeOfEvent;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "   * Represents an event object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "   * @param description       description of event"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "   * @param timeOfEvent       time of event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "   */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public Events(String description, String timeOfEvent) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    super.setTaskType(\"E\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    this.timeOfEvent \u003d timeOfEvent;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public String getTimeOfEvent() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    return timeOfEvent;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    return \"[\" + super.getTaskType() + \"]\" + super.toString() + \"(at: \" + getTimeOfEvent()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 27
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  protected String taskType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "   * Represents a task object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "   * @param description       description of task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "   */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    this.taskType \u003d null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public String getTaskType() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    return taskType;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public void setTaskType(String taskType) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public void markAsDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public String getStatusIcon() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    return (isDone ? \"done\" : \"undone\"); // return tick or X symbols"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    return \"-[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 39
    }
  },
  {
    "path": "src/main/java/duke/task/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public ToDos(String description) throws NullPointerException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        super.setTaskType(\"T\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return \"[\" + super.getTaskType() + \"]\" + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 14
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " _ _ __                           "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "|_ _   |  _ _     _   __   _      _   _ _  _ _ _"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    |  | / _ \\   | |/ __|[   ]  [   ]|_\u003d_||      |"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " _  |  || | | \\  |  /     \\ \\   / /    _   \\  \\ /"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "| |_|  || |_|  \\ |  |      \\ \\_/ /    | | | \\  \\"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "|_ _ _ / \\_ _/\\_\\[_ _]      \\__ /     |_| |_ _ _/,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "|             Hello! I\u0027m Jarvis :D              |"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "|       What can I do for you today?            |"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Enter command: "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t[T][✘] read book"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Now you have 1 tasks in your list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Enter command: "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t[D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Now you have 2 tasks in your list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Enter command: "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t[E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Now you have 3 tasks in your list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Enter command: "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t[T][✘] join sports club"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Now you have 4 tasks in your list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Enter command: "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " Nice! I\u0027ve marked this task as done: [✓] read book"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Enter command: "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " Nice! I\u0027ve marked this task as done: [✓] join sports club"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Enter command: "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t[T][✘] borrow book"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Now you have 5 tasks in your list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Enter command: "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Currently, you have these items in your list: 📌"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "1. [T][✓] read book"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "2. [D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "3. [E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "4. [T][✓] join sports club"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "5. [T][✘] borrow book"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Enter command: "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Now you have 6 tasks in your list."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Enter command: "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Now you have 7 tasks in your list."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Enter command: "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " Noted! I\u0027ve removed this task:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t[E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " Now you have 6 tasks in your list."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Enter command: "
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 94
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "delete 3"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 11
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\task\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "java -Dfile.encoding\u003dUTF8 -classpath ..\\bin Duke\u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 21
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "java -classpath -Dfile.encoding\u003dUTF8 ../bin Duke\u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 34
    }
  }
]

[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "# :calendar:  Jarvis Task Manager - User Guide "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "* [1. Introduction](#1-introduction)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "* [2. Features](#2-features)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    + [2.1. Adding a task](#21-add-a-task)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    + [2.2. Marking a task done](#22-mark-task-as-done)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    + [2.3. Listing all tasks](#23-list)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    + [2.4. Find task by keyword](#24-find)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    + [2.5. Delete a task](#25-delete)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    + [2.6. Filter list by category](#26-filter)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    + [2.7. Clear all tasks](#27-clear)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    + [2.8. Viewing Help](#28-help)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "- [3. Command Summary](#3-command-summary)       "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Jarvis is for those who *prefer to use a desktop app for managing their tasks*. More importantly, Jarvis is *strictly optimized for those who prefer to work with a Command Line Interface* (CLI). So, if you can type fast, you can rely on Jarvis to get your task management done much quicker than many other traditional apps out there. Enjoy! "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "## 2. Features"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "*Command Format*"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "* Words in `UPPER_CASE` are the parameters to be supplied by the user e.g. in `todo [DESCRIPTION]`, `DESCRIPTION` is a parameter which can be used as `todo grab breakfast`."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "### 2.1 Add a task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "With Jarvis, you can add 3 different types of tasks: todo, deadline and event."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "#### 2.1.1 `todo` - Adds a todo task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "A todo type of task will be added to the current task list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Format: `todo [description]`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Example of usage:`todo read book`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003e - Adds a todo task described as \"read book\" to the list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003cimg src \u003d\"images/todo_example.png\" width \u003d \"400\"\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "#### 2.1.2 `deadline` - Adds a deadline task"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "A deadline type of task will be added to the current task list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " `deadline [DESCRIPTION] /by [DUE DATE \u0026 TIME]`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003e - Adds a deadline and its\u0027 due date to the list"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003e - **/by** signals start of `[DUE DATE \u0026 TIME]`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003e - Accepted `[DUE DATE \u0026 TIME]` format:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003e  + Year-Month-Day -- 24HR Time "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003e     + e.g. **2020-03-02 1800** "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003e   "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003e  + Any String value"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003e     + e.g. **June 6th** "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "`deadline project submission /by 2020-03-02 1200`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003cimg src \u003d\"images/deadline_example.png\" width\u003d \"400\"\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "`deadline return book /by June 6th`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003cimg src \u003d\"images/deadline_example1.png\" width\u003d\"400\"\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "#### 2.1.3 `event` - Adds a event task"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "An event type of task will be added to the current task list."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " `event [DESCRIPTION] /at [EVENT TIME \u0026 VENUE]`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003e - Adds an event and its\u0027 event time and/or place to the list"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003e - **/at** signals start of `[EVENT TIME \u0026 VENUE]`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003e - Accepted `[EVENT TIME \u0026 VENUE]` format:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003e  + Year-Month-Day -- 24HR Time "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003e     + e.g. **2020-03-02 1800** "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003e   "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003e  + Any String value"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003e     + e.g. **at Julia\u0027s house tmr** "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "`event project meeting /at 2020-03-02 1200`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003cimg src \u003d \"images/event_example.png\" width \u003d\"400\"\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "`event party /at Julia\u0027s house tmr`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003cimg src \u003d \"images/event_example1.png\" width \u003d \"400\"\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "### 2.2 Mark task as done"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "#### `done` - Mark done"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Marks specified task as done."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " `done [INDEX]`"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003e - Deletes the item at the specified index."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003e- The index refers to the index number shown in the displayed task list."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003e- The index **must** be a positive integer 1, 2, 3, …"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003cimg src\u003d \"images/done_example.png\" width \u003d \"400\"\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "### 2.3 List"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "#### `list` - Displays all tasks in list"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " `list`"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003cimg src \u003d \"images/list_example.png\" width \u003d \"400\"\u003e"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "### 2.4 Find "
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "#### `find` - Find tasks that match keyword"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Find all tasks that match the given keyword"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " `find [KEYWORD]`"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003e - `[KEYWORD]` is matched with task `description`."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003e - Tasks with descriptions that have the `[KEYWORD]` are displayed. "
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "`find book`"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003cimg src \u003d \"images/find_example.png\" width \u003d \"400\"\u003e"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "### 2.5 Delete"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "#### `delete` - Deletes task from list"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Deletes specified task from list."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " `delete [INDEX]`"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003e - Deletes the item at the specified index."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003e- The index refers to the index number shown in the displayed task list."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003e- The index **must** be a positive integer 1, 2, 3, …​"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003cimg src \u003d \"images/delete_example.png\" width \"400\"\u003e"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "### 2.6 Filter"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Allows you to filter your task list by 3 different categories: task type, done status and date."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "#### `filter` - Filters list according to category"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "The task list is filtered according to the given category."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Format: `filter [category]`"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003e - Accepted values for categories include: `\"todo\"`,`\"event\"`,`\"deadline\"`,`DATE`"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003e   - `DATE` **must** follow format: Month-Date"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003e     - e.g. Mar 02"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Example of usage:`filter todo`"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003e - Displays all todo tasks in list"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003cimg src #\"images/filter_todo_example.PNG\" width# \"400\"\u003e"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Example of usage:`filter deadline`"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003e - Displays all deadline tasks in list"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003cimg src \u003d \"images/filter_deadline_example.PNG\" width \u003d \"400\"\u003e"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Example of usage:`filter event`"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003e - Displays all event tasks in list"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003cimg src \u003d \"images/filter_event_example.PNG\" width \u003d \"400\"\u003e"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Example of usage:`filter DATE`"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003e - Displays all deadlines/events occurring on a specific date. "
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "| :bulb: | Jarvis is smart enough to list events/ deadlines occurring on the same day in chronological order! |"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "| ------------- | ------------- |"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "### 2.7 Clear"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "#### `clear` - Clear all tasks in list"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Clears and deletes **all** task in list"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " `clear`"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "`clear`"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003cimg src \u003d \"images/clear_example.PNG\" width \u003d  \"400\"\u003e"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "### 2.8 Help"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "#### `help` - Displays a help list"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "The help list contains information about all accepted commands."
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "It will be displayed if the input command is invalid."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " `help`"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "`help`"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003cimg src #\"images/help.PNG\" width# \"400\"\u003e"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "### 2.9 Exit Program"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "#### `bye` - Exits the program"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Saves task list to a local storage file in the computer and exits program."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " `bye`"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u003cimg src \u003d \"images/bye.png\" width \u003d \"400\"\u003e"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "## 3. Command Summary "
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "* *Todo* : `todo DESCRIPTION` \\"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "e.g. `todo read book`"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "* *Deadline* : `deadline DESCRIPTION /by [DUE DATE \u0026 TIME]` \\"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "e.g. `deadline project submission /by 2020-03-02 1200`   **OR**   `deadline return book /by June 6th`"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "* *Event* : `event DESCRIPTION /by [EVENT TIME \u0026 VENUE]` \\"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "e.g. `event project meeting /at 2020-03-02 1200` **OR** `event party /at Julia\u0027s house tmr`"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "* *Mark* : `done [INDEX]` \\"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "e.g. `done 1`"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "* *List* : `list` "
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "* *Find* : `find KEYWORD` \\"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "e.g. `find book`"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "* *Delete* : `delete [INDEX]` "
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "e.g. `delete 3`"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "* *Filter* : `filter [CATEGORY]` \\"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "e.g. `filter todo` **OR** `filter deadline` **OR** `filter event` **OR** `filter Mar 02`"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "* *Clear* : `clear`"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "* *Help* : `help`"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "* *Exit* : `bye`"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 17,
      "trishaangelica": 319
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "D | 0 | project submission | Mar 02 2020 12:00 PM"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "D | 0 | return book | June 6th"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "E | 0 | project meeting | Mar 02 2020 12:00 PM"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "E | 0 | party | Julia\u0027s house tmr"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 5
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.command.CommandResult;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.storage.StorageFile;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.storage.StorageFile.StorageFilePathException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private TextUi ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public StorageFile storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static void main(String... launchArgs) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        new Duke().run(launchArgs);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /** Runs the program until termination.  */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public void run(String[] launchArgs) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        start(launchArgs);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        runCommandLoopUntilExitCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private void start(String[] launchArgs) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            this.ui \u003d new TextUi();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            this.storage \u003d initializeStorage(launchArgs);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            this.taskList \u003d storage.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            ui.showWelcomeMessage(storage.getPath());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            ui.showLoadedList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } catch (StorageFile.StorageOperationException | StorageFilePathException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            ui.showInitFailedMessage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            throw new RuntimeException(e);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /** Prints the Goodbye message and exits. */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        ui.showGoodbyeMessage();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /** Reads the user command and executes it, until the user inputs the exit command.  */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private void runCommandLoopUntilExitCommand() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            String userCommandText \u003d ui.getUserCommand();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            command \u003d new Parser().parseCommand(userCommandText);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            CommandResult result \u003d executeCommand(command);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            ui.showResultToUser(result);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } while (!ExitCommand.isExit(command));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Executes the command and returns the result."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @param command user command"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @return result of the command"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private CommandResult executeCommand(Command command) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            command.setData(taskList);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            storage.save(taskList);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return command.execute();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            ui.showToUser(e.getMessage());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            throw new RuntimeException(e);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Creates the StorageFile object based on the user specified path (if any) or the default storage path."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @param launchArgs arguments supplied by the user at program launch"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @throws StorageFilePathException if the target file path is incorrect."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private StorageFile initializeStorage(String[] launchArgs) throws StorageFilePathException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        boolean isStorageFileSpecifiedByUser \u003d launchArgs.length \u003e 0;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return isStorageFileSpecifiedByUser ? new StorageFile(launchArgs[0]) : new StorageFile();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "trishaangelica": 82
    }
  },
  {
    "path": "src/main/java/duke/Ui/TextUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.command.CommandResult;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import static duke.common.Messages.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " * Text UI of the application."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class TextUi {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * A platform independent line separator."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String LS \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String DIVIDER \u003d LS + \" - - - - - - - - - - - - - - - - - - - - - - - - \" + LS;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public TextUi() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public TextUi(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Prompts for the command and reads the text entered by the user."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Ignores empty, pure whitespace, and comment lines."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Echos the command back to the user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @return command (full line) entered by the user"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public String getUserCommand() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        out.print(\"Enter command: \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        String fullInputLine \u003d in.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        showToUser(\"[Command entered:\" + fullInputLine + \"]\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return fullInputLine;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Generates and prints the welcome message upon the start of the application."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @param storageFilePath path to the storage file being used."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public void showWelcomeMessage(String storageFilePath) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        String storageFileInfo \u003d String.format(MESSAGE_USING_STORAGE_FILE, storageFilePath);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        showToUser(MESSAGE_WELCOME, storageFileInfo);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public void showGoodbyeMessage() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        showToUser(MESSAGE_GOODBYE, DIVIDER);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public void showInitFailedMessage() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        showToUser(MESSAGE_INIT_FAILED, DIVIDER);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Shows message(s) to the user"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public void showToUser(String... message) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        for (String m : message) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            out.println(m);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public void showResultToUser(CommandResult result) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        showToUser(result.feedbackToUser, DIVIDER);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public void showLoadedList() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if (TaskList.size() \u003e 0) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            System.out.println(\"\\nGreat we\u0027re all loaded!\\nHave a look at your previously saved list!\" + DIVIDER);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            TaskList.showStoredTaskList();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            System.out.println(TextUi.DIVIDER + TextUi.LS);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            System.out.println(\"\\nSeems like we\u0027re starting from scratch ...\\nI\u0027ve created a new storage file for you!\" + DIVIDER);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 90
    }
  },
  {
    "path": "src/main/java/duke/command/ClearCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.storage.StorageFile;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import static duke.data.TaskList.clear;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " * Clears the Task List."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"clear\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD +\": Clears task list permanently.\" + TextUi.LS"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + \"|| Parameter: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + TextUi.LS"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + \"|| Example: \" + COMMAND_WORD + TextUi.LS;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d TextUi.LS + \"Task list has been cleared!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_FAIL \u003d TextUi.LS + \"Error clearing file: \" + StorageFile.DEFAULT_STORAGE_FILEPATH;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public ClearCommand() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        clear();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            PrintWriter writer \u003d new PrintWriter(StorageFile.DEFAULT_STORAGE_FILEPATH);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            writer.print(\"\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new CommandResult(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } catch (FileNotFoundException ioe) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new CommandResult(MESSAGE_FAIL);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 42
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " * Represents an executable command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    protected TaskList taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static String getMessageForTaskListShownSummary(ArrayList\u003cTask\u003e tasksDisplayed) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, tasksDisplayed.size());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public CommandResult execute() throws FileNotFoundException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        throw new UnsupportedOperationException(\"This method is to be implemented by child classes\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    };"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public void setData(TaskList taskList) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 32
    }
  },
  {
    "path": "src/main/java/duke/command/CommandResult.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " * Represents the result of a command execution."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /** The feedback message to be shown to the user. Contains a description of the execution result */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public final String feedbackToUser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public CommandResult(String feedbackToUser) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.feedbackToUser \u003d feedbackToUser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 17
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.task.Deadlines;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " * Adds a deadline-type task to the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d TextUi.LS + \"Got it. I\u0027ve added this task: \" +TextUi.LS"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + \"\\t%s.\"+ TextUi.LS + \"Now you have %d tasks in your list.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_PARAM \u003d TextUi.LS + \"|| Parameters: deadline [DESCRIPTION] /by [DUEDATE]\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + TextUi.LS;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_EXAMPLE \u003d\"|| Example: deadline submit essay /by 2019-10-15 1600\" + TextUi.LS;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a simple deadline task to the list.\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + MESSAGE_PARAM + MESSAGE_EXAMPLE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the list.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private Deadlines toAdd;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public DeadlineCommand(Deadlines toAdd){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.toAdd \u003d toAdd;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public DeadlineCommand(String desc,String duedate) throws StringIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if (desc.isEmpty() || duedate.isEmpty()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            throw new StringIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.toAdd \u003d new Deadlines(desc,duedate);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public DeadlineCommand(String desc, LocalDateTime date) throws StringIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if (desc.isEmpty()||date.toString().isEmpty()){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            throw new StringIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.toAdd \u003d new Deadlines(desc.trim(),date);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            TaskList.add(toAdd);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd.toString(),TaskList.size()));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } catch (TaskList.DuplicateTaskException dpe) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new CommandResult(MESSAGE_DUPLICATE_TASK);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 53
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " * Deletes a task identified by it\u0027s index from the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    int targetIndex;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + \": Deletes the task (identified by index number) in the list.\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + \"|| Parameters: delete [TASK NUMBER]\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + \"|| Example: delete 1\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + \"\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted task: %1$s.\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public DeleteCommand(int targetIndex) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "       this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            Task t \u003d TaskList.retrieve(targetIndex-1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            TaskList.remove(targetIndex-1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS,t.toString())"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    + \"\\tNow you have \" + taskList.size() + \" tasks in your list.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } catch (IndexOutOfBoundsException ie) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new CommandResult(String.format(Messages.MESSAGE_TASK_NOT_IN_LIST,targetIndex));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } catch (TaskList.TaskNotFoundException pnfe) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new CommandResult(String.format(Messages.MESSAGE_TASK_NOT_IN_LIST,targetIndex));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 44
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " * Marks a task as [done] in the task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class DoneCommand extends Command{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    int targetIndex;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + \": Marks a task (identified by index number) as done in the list.\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + \"|| Parameters: done [TASK NUMBER]\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            +\"|| Example: done 1\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_MARKED_TASK_DONE_SUCCESS \u003d \"Hooray! This task has been marked done: %1$s\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public DoneCommand(int targetIndex) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            Task t \u003d TaskList.markAsDone(targetIndex);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_MARKED_TASK_DONE_SUCCESS,t.toString()));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } catch (IndexOutOfBoundsException ie) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new CommandResult(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } catch (TaskList.TaskNotFoundException tnf) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new CommandResult(Messages.MESSAGE_TASK_NOT_IN_LIST);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 39
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.task.Events;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " * Adds an event-type of task in the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"event\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d TextUi.LS + \"Got it. I\u0027ve added this task: \" + TextUi.LS"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            +\"\\t%s.\" + TextUi.LS + \"Now you have %d tasks in your list.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_PARAM \u003d TextUi.LS + \"|| Parameters: event [DESCRIPTION] /at [TIME]\" + TextUi.LS;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_EXAMPLE \u003d\"|| Example: event project meeting /at Mon 4pm\" + TextUi.LS;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an event task to the list.\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + MESSAGE_PARAM + MESSAGE_EXAMPLE;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the list.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private Events toAdd;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public EventCommand(Events toAdd) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.toAdd \u003d toAdd;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public EventCommand(String desc, String date) throws StringIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if(desc.isEmpty() || date.isEmpty()){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            throw new StringIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.toAdd \u003d new Events(desc, date);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public EventCommand(String desc, LocalDateTime date) throws StringIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if (desc.isEmpty()||date.toString().isEmpty()){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            throw new StringIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.toAdd \u003d new Events(desc,date);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            TaskList.add(toAdd);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd, TaskList.size()));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } catch (TaskList.DuplicateTaskException dpe) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new CommandResult(MESSAGE_DUPLICATE_TASK);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 52
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " * Terminates the program."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Exits the program.\" + TextUi.LS"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + \"|| Parameters: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + TextUi.LS"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + \"|| Example: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_EXIT_ACKNOWlEDGEMENT \u003d \"Exiting program ...\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return new CommandResult(MESSAGE_EXIT_ACKNOWlEDGEMENT);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static boolean isExit(Command command) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return command instanceof ExitCommand; // instanceof returns false if it is null"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 26
    }
  },
  {
    "path": "src/main/java/duke/command/FilterCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import static duke.data.TaskList.filterList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class FilterCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"filter\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String EMPTY_LIST_MESSAGE \u003d TextUi.LS + \"|| OOPS! No task in the list fits that category.\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + TextUi.LS + \"|| Accepted category words are: [todo, event, deadline, done, undone, [MMM-dd]]\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + TextUi.LS;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_PARAM \u003d \"|| Parameters: \" + COMMAND_WORD + \" [CATEGORY]\" + TextUi.LS;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_EXAMPLE \u003d \"|| Example 1: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + \" event\" + TextUi.LS + \"|| Example 2: \" + COMMAND_WORD + \" Mar 02\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + \": Displays tasks that fits category.\" + TextUi.LS"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + MESSAGE_PARAM + MESSAGE_EXAMPLE + TextUi.LS;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    String filterParam;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    String keyword; //keep original keyword"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    Date date;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public FilterCommand(String keyword) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if (keyword.equals(\"todo\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            this.filterParam \u003d \"T\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } else if (keyword.equals(\"event\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            this.filterParam \u003d \"E\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } else if (keyword.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            this.filterParam \u003d \"D\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } else if (keyword.matches(\".*done.*\")) { //filter done/undone"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            this.filterParam \u003d keyword;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public FilterCommand(Date dateTime) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.date \u003d dateTime;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        ArrayList\u003cTask\u003e copiedList \u003d TaskList.copy();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"E, dd MMM\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            ArrayList\u003cTask\u003e filteredList \u003d filterList(copiedList, date);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            String showDate \u003d formatter.format(date);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            System.out.println(TextUi.LS + TextUi.DIVIDER + TextUi.LS + \"Here are the tasks you have on [\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    + showDate + \"]\" + TextUi.LS);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            TaskList.showTaskList(filteredList);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new CommandResult(String.format(getMessageForTaskListShownSummary(filteredList), filteredList));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } catch (NullPointerException e) { //exception for Date means it doesn\u0027t exist at this point so try parse string"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                ArrayList\u003cTask\u003e filteredList \u003d filterList(copiedList, filterParam);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                System.out.println(TextUi.LS + TextUi.DIVIDER + TextUi.LS + \"Here are the [\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                        + keyword + \"] tasks in your list.\" + TextUi.LS);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                TaskList.showTaskList(filteredList);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                return new CommandResult(String.format(getMessageForTaskListShownSummary(filteredList), filteredList));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            } catch (NullPointerException npe) { //exception for string, it doesn\u0027t exist too so print error message"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                return new CommandResult(String.format(EMPTY_LIST_MESSAGE)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                        + MESSAGE_PARAM + MESSAGE_EXAMPLE);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 76
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import static duke.data.TaskList.filterList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " * Displays all the tasks in task list that matches the keyword."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String EMPTY_LIST_MESSAGE \u003d \"|| OOPS! There is no such task in the list.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_PARAM \u003d TextUi.LS + \"|| Parameters: \" + COMMAND_WORD + \" [KEYWORD]\" + TextUi.LS;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_EXAMPLE \u003d \"|| Example: \" + COMMAND_WORD + \" book\" + TextUi.LS;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + \": Find tasks stored in the list by keyword.\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + MESSAGE_PARAM + MESSAGE_EXAMPLE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    String keyword;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public FindCommand(String kw) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.keyword \u003d kw;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            ArrayList\u003cTask\u003e copiedList \u003d TaskList.copy();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            ArrayList\u003cTask\u003e filteredList \u003d filterList(copiedList, keyword);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            System.out.println(TextUi.LS + TextUi.DIVIDER + TextUi.LS +\"Here are the matching tasks in your list:\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    + TextUi.LS);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            TaskList.showTaskList(filteredList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new CommandResult(String.format(getMessageForTaskListShownSummary(filteredList),filteredList));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new CommandResult(String.format(EMPTY_LIST_MESSAGE) + MESSAGE_PARAM + MESSAGE_EXAMPLE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 45
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " * Shows help instructions."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"help\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\" + TextUi.LS"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + \"|| Parameters: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + TextUi.LS"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + \"|| Example: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + TextUi.LS;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return new CommandResult("
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                TodoCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                        + TextUi.LS + EventCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                        + TextUi.LS + DeadlineCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                        + TextUi.LS + DoneCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                        + TextUi.LS + DeleteCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                        + TextUi.LS + FindCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                        + TextUi.LS + FilterCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                        + TextUi.LS + ListCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                        + TextUi.LS + ClearCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                        + TextUi.LS + HelpCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                        + TextUi.LS + ExitCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        );"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 34
    }
  },
  {
    "path": "src/main/java/duke/command/IncorrectCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " * Represents an incorrect command. Upon execution, produces some feedback to the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class IncorrectCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public final String feedbackToUser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public IncorrectCommand(String feedbackToUser) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.feedbackToUser \u003d feedbackToUser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return new CommandResult(feedbackToUser);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 20
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " * Displays all the tasks currently in the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String EMPTY_LIST_MESSAGE \u003d \"|| OOPS! List is currently empty.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_PARAM \u003d \"|| Parameters: \" + COMMAND_WORD+ TextUi.LS;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_EXAMPLE \u003d \"|| Example: \" + COMMAND_WORD + TextUi.LS;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + \": Displays all tasks stored in the list.\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + TextUi.LS"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + MESSAGE_PARAM + MESSAGE_EXAMPLE;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            ArrayList\u003cTask\u003e copiedList \u003d TaskList.copy();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            System.out.print(TextUi.DIVIDER);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            System.out.println(TextUi.LS + \"Currently, you have these items in your list: \" + TextUi.LS);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            TaskList.showTaskList(copiedList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new CommandResult(String.format(getMessageForTaskListShownSummary(copiedList),copiedList));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new CommandResult(String.format(EMPTY_LIST_MESSAGE));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 37
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.task.ToDos;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import static duke.common.Messages.MESSAGE_ERROR;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " * Adds a todo-type of task in the task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"todo\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d  TextUi.LS + \"Got it. I\u0027ve added this task: \" +  TextUi.LS"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + \"\\t%s. \" +  TextUi.LS + \"Now you have %d tasks in your list.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_PARAM \u003d TextUi.LS + \"|| Parameters: todo [DESCRIPTION]\"+ TextUi.LS;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_EXAMPLE \u003d\"|| Example: todo brainstorm ideas\" + TextUi.LS;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d  duke.ui.TextUi.DIVIDER +  TextUi.LS + COMMAND_WORD"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + \": Adds a simple to-do task to the list.\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + MESSAGE_PARAM + MESSAGE_EXAMPLE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the list.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private ToDos toAdd;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public TodoCommand(ToDos toAdd) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.toAdd \u003d toAdd;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public TodoCommand(String desc) throws NullPointerException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if (desc.isEmpty()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            throw new NullPointerException();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.toAdd \u003d new ToDos(desc);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            TaskList.add(toAdd);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd.toString(), TaskList.size()));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } catch (TaskList.DuplicateTaskException dpe) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new CommandResult(MESSAGE_DUPLICATE_TASK);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } catch (NullPointerException NPE) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_ERROR, \"description\", COMMAND_WORD));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 50
    }
  },
  {
    "path": "src/main/java/duke/common/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " * Container for user visible messages."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String LOGO \u003d"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            \" _ _ __                           \\n\" + \"|_ _   |  _ _     _   __   _      _   _ _  _ _ _\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    + \"    \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    + \"|  | / _ \\\\   | |/ __|[   ]  [   ]|_\u003d_||      |\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    + \" _  |  || | | \\\\  |  /     \\\\ \\\\   / /\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    + \"    _   \\\\  \\\\ /\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    + \"| |_|  || |_|  \\\\ |  |      \\\\ \\\\_/ /    | | | \\\\  \\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    + \"|_ _ _ / \" + \"\\\\_ _/\\\\_\\\\[_ _]      \\\\__ /     |_| |_ _ _/\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_GOODBYE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_INIT_FAILED \u003d \"Failed to initialise Jarvis application. Exiting...\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \"+ TextUi.LS + \"%1$s\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_TASK_NOT_IN_LIST \u003d \"|| OOPS! I can\u0027t delete that because\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + \" you haven\u0027t\" + \" added task %s yet!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_TASKS_LISTED_OVERVIEW \u003d TextUi.LS + \"\\t%1$d tasks listed!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_WELCOME \u003d TextUi.LS + \"Hello from\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + TextUi.LS + LOGO + \",\" + TextUi.LS + duke.ui.TextUi.DIVIDER"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            + String.format(\"|             %-34s|\" + TextUi.LS + \"|       %-40s|\", \"Hello! I\u0027m Jarvis :D\","
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            \"What can I do for you today?\") + duke.ui.TextUi.DIVIDER;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_ERROR \u003d \"|| OOPS! The %s of a %s command cannot be empty.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String MESSAGE_USING_STORAGE_FILE \u003d \"Using storage file : %1$s\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 33
    }
  },
  {
    "path": "src/main/java/duke/common/Utils.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " * Utility methods"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class Utils {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Returns true if every element the given collection are unique by {@link Object#equals(Object)}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static boolean elementsAreUnique(Collection\u003c?\u003e items) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        final Set\u003cObject\u003e testSet \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        for (Object item : items) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            final boolean itemAlreadyExists \u003d !testSet.add(item); // see Set documentation"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            if (itemAlreadyExists) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 25
    }
  },
  {
    "path": "src/main/java/duke/data/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.common.Utils;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.exception.DuplicateDataException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.task.Deadlines;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.task.Events;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.task.ToDos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " * Represents the entire task  list. Contains the data of the task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Constructs empty task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Constructs a list from the items in the given collection."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @param Tasks a collection of tasks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @throws DuplicateTaskException if the {@code persons} contains duplicate tasks"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public TaskList(List\u003cTask\u003e Tasks) throws DuplicateTaskException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if (!Utils.elementsAreUnique(Tasks)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            throw new DuplicateTaskException();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        taskList.addAll(Tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static boolean contains(Task toCheck) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        for (Task p : taskList) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            if (p instanceof ToDos \u0026\u0026 toCheck instanceof ToDos) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                return p.isSameTask(toCheck);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            } else if (p instanceof Events \u0026\u0026 toCheck instanceof Events) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                return (p.isSameTask(toCheck));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            } else if (p instanceof Deadlines \u0026\u0026 toCheck instanceof Deadlines) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                return p.isSameTask(toCheck);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Adds a task to the list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @throws DuplicateTaskException if the task to add is a duplicate of an existing task in the list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static void add(Task toAdd) throws DuplicateTaskException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if (contains(toAdd)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            throw new DuplicateTaskException();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            taskList.add(toAdd);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static Task retrieve(int targetIndex) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return taskList.get(targetIndex);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Removes the specified task from the list."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @throws TaskNotFoundException if no such task could be found in the list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static void remove(int toRemove) throws TaskNotFoundException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        Task t \u003d taskList.get(toRemove);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        final boolean taskFoundAndDeleted \u003d taskList.remove(t);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if (!taskFoundAndDeleted) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            throw new TaskNotFoundException();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Gets the number of tasks currently in the list."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static int size() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Clears task list."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static void clear() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        taskList.clear();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @return copy of task list"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static ArrayList\u003cTask\u003e copy() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        // Clone the list"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return (new ArrayList\u003c\u003e(taskList));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    //by word"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static ArrayList\u003cTask\u003e filterList(ArrayList\u003cTask\u003e taskList, String keyword) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if(keyword.equals(\"T\")||keyword.equals(\"E\")||keyword.equals(\"D\")){"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return (ArrayList\u003cTask\u003e) taskList.stream()"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    .filter(task -\u003e task.taskType.equals(keyword))"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    .collect(Collectors.toList());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        else if(keyword.matches(\".*done.*\")){"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return (ArrayList\u003cTask\u003e) taskList.stream()"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    .filter(task -\u003e task.getStatus().equals(keyword))"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    .collect(Collectors.toList());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return (ArrayList\u003cTask\u003e) taskList.stream()"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                .filter(task -\u003e task.description.contains(keyword))"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    //by datetime object"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static ArrayList\u003cTask\u003e filterList(ArrayList\u003cTask\u003e taskList, Date keyword) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        ArrayList\u003cTask\u003e filteredArray \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"MMM dd\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        DateTimeFormatter newPattern \u003d DateTimeFormatter.ofPattern(\"MMM dd\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        String toCompare \u003d formatter.format(keyword);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        for (Task p : taskList) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            if (p instanceof Events) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                if (((Events) p).getEventTime()!\u003d null) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    if (((Events) p).getEventTime().format(newPattern).equals(toCompare)) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                        filteredArray.add(p);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            if (p instanceof Deadlines) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                if(p.getDate()!\u003d null) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    if (p.getDate().format(newPattern).equals(toCompare)) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                        filteredArray.add(p);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        Collections.sort(filteredArray);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return filteredArray;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "         * Shows to user all elements in stored task list."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "         */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static void showStoredTaskList() throws NullPointerException {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        int taskCounter \u003d 1;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            throw new NullPointerException();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            for (Task t : taskList) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                if(taskCounter\u003e\u003d10){ //for pretty alignment if there\u0027s \u003e10 tasks"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    System.out.println(\"    \\b\"+ taskCounter + \". \" + t.toString());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                }else {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    System.out.println(\"\\t\" + taskCounter + \". \" + t.toString());"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                taskCounter++;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Shows to user all elements in specified task list."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static void showTaskList(ArrayList\u003cTask\u003e taskList) throws NullPointerException {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        int taskCounter \u003d 1;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            throw new NullPointerException();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            for (Task t : taskList) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                System.out.println(\"\\t\" + taskCounter + \". \" + t.toString());"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                taskCounter++;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Marks a task as [done]."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static Task markAsDone(int targetIndex) throws TaskNotFoundException {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        Task t \u003d TaskList.retrieve(targetIndex);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        final boolean taskFoundandMarked \u003d t.isDone;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if (!taskFoundandMarked) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            throw new TaskNotFoundException();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Returns a new task list of all tasks in list at the time of the call."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public ArrayList\u003cTask\u003e getAllTasks() {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Signals that an operation would have violated the \u0027no duplicates\u0027 property of the list."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static class DuplicateTaskException extends DuplicateDataException {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        protected DuplicateTaskException() {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            super(\"Operation would result in duplicate tasks\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Signals that an operation targeting a specified task in the list would fail because"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * there is no such matching task in the list."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static class TaskNotFoundException extends Exception {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        protected TaskNotFoundException() {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            super(\"|| OOPS! I can\u0027t delete that because you haven\u0027t added that task yet!\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 234
    }
  },
  {
    "path": "src/main/java/duke/data/exception/DuplicateDataException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.data.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " * Signals an error caused by duplicate data where there should be none."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public abstract class DuplicateDataException extends IllegalValueException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public DuplicateDataException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 10
    }
  },
  {
    "path": "src/main/java/duke/data/exception/IllegalValueException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.data.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " * Signals that some given data does not fulfill some constraints."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class IllegalValueException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @param message should contain relevant information on the failed constraint(s)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public IllegalValueException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 13
    }
  },
  {
    "path": "src/main/java/duke/data/exception/TaskNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.data.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class TaskNotFoundException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 4
    }
  },
  {
    "path": "src/main/java/duke/data/task/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.data.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    protected String dueDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    protected LocalDateTime date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Represents a Deadline object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @param description description of deadline task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @param dueDate     due date of deadline task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public Deadlines(String description, String dueDate) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        super.setTaskType(\"D\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public Deadlines(String description, LocalDateTime date) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        super.setTaskType(\"D\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        super.setDate(date);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public LocalDateTime getDate() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public String getDueDate() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return dueDate;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if (date !\u003d null) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            DateTimeFormatter newPattern \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return \"[\" + super.getTaskType() + \"]\" + super.toString()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    + \" (by: \" + getDate().format(newPattern) + \")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return \"[\" + super.getTaskType() + \"]\" + super.toString() + \" (by: \" + getDueDate() + \")\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public boolean isSameTask(Task toCheck) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if (date !\u003d null) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return (toCheck \u003d\u003d this) || (toCheck !\u003d null \u0026\u0026 toCheck.getDescription().equals(this.getDescription())"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    \u0026\u0026 toCheck.getDate().equals(this.getDate()));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return (toCheck \u003d\u003d this) || (toCheck !\u003d null \u0026\u0026 toCheck.getDescription().equals(this.getDescription())"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    \u0026\u0026 ((Deadlines)toCheck).getDueDate().equals(this.getDueDate()));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 64
    }
  },
  {
    "path": "src/main/java/duke/data/task/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.data.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  protected String timeOfEvent;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  protected LocalDateTime eventTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "   * Represents an event object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "   *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "   * @param description description of event"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "   * @param timeOfEvent time of event"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "   */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public Events(String description, String timeOfEvent) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    super(description.trim());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    super.setTaskType(\"E\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    this.timeOfEvent \u003d timeOfEvent;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public LocalDateTime getEventTime() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    return eventTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public Events(String description, LocalDateTime eventTime) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    super(description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    super.setTaskType(\"E\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    super.setDate(eventTime);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public String getTimeOfEvent() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    return timeOfEvent;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    if (eventTime !\u003d null) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "      DateTimeFormatter newPattern \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "      return \"[\" + super.getTaskType() + \"]\" + super.toString()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "              + \" (at: \" + getEventTime().format(newPattern) + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "      return \"[\" + super.getTaskType() + \"]\" + super.toString() + \" (at: \" + getTimeOfEvent()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "              + \")\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public boolean isSameTask(Task toCheck) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    if(eventTime!\u003dnull){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "      return (toCheck \u003d\u003d this) || (toCheck !\u003d null \u0026\u0026 toCheck.getDescription().equals(this.getDescription())"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "              \u0026\u0026 ((Events) toCheck).getEventTime().equals(this.getEventTime()));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "      return (toCheck \u003d\u003d this) || (toCheck !\u003d null \u0026\u0026 toCheck.getDescription().equals(this.getDescription())"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "      \u0026\u0026 ((Events) toCheck).getTimeOfEvent().equals(this.getTimeOfEvent()));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 61
    }
  },
  {
    "path": "src/main/java/duke/data/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.data.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class Task implements Comparable\u003cTask\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public String taskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public LocalDateTime date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "   * Represents a task object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "   *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "   * @param description description of task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "   */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public Task(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    this.description \u003d description.trim();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    this.taskType \u003d null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    this.date \u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public LocalDateTime getDate() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    return date;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public void setDate(LocalDateTime date) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    this.date \u003d date;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public String getTaskType() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    return taskType;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public void setTaskType(String taskType) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public String getDescription() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    return description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public void setDescription(String description) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    this.description \u003d description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public void markAsDone() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    isDone \u003d true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public String getStatus() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    return (isDone ? \"done\" : \"undone\"); // return tick or X symbols"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    return \"-[\" + getStatus() + \"] \" + description;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public boolean isSameTask(Task toCheck) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    return (toCheck \u003d\u003d this)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            || (toCheck !\u003d null"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            \u0026\u0026 toCheck.getDescription().equals(this.getDescription()));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  public int compareTo(Task o) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    if (getDate() \u003d\u003d null || o.getDate() \u003d\u003d null)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "      return 0;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    return getDate().compareTo(o.getDate());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "  }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 74
    }
  },
  {
    "path": "src/main/java/duke/data/task/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.data.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public ToDos(String description) throws NullPointerException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        super.setTaskType(\"T\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        super.setDate(null);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return \"[\" + super.getTaskType() + \"]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public boolean isSameTask(Task toCheck) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return (toCheck \u003d\u003d this)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                || (toCheck !\u003d null"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                \u0026\u0026 toCheck.getDescription().equals(this.getDescription()));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 22
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import static duke.common.Messages.*;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @param userInput full user input string"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @return the command based on the user input"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandword\u003e^[\\\\S]+)(?\u003carguments\u003e[\\\\d\\\\s\\\\S]*$)\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public Command parseCommand(String userInput) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new IncorrectCommand(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        final String commandWord \u003d matcher.group(\"commandword\").trim();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        final String arguments \u003d matcher.group(\"arguments\").trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        case TodoCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return prepareTodo(arguments);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        case EventCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return prepareEvent(arguments);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        case DeadlineCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return prepareDeadline(arguments);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        case DoneCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return prepareDone(arguments);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        case ClearCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new ClearCommand();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return prepareDelete(arguments);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        case FindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new FindCommand(arguments);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        case FilterCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return prepareFilter(arguments);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private Command prepareTodo(String arguments) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new TodoCommand(arguments);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } catch (NullPointerException npe) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new IncorrectCommand(System.lineSeparator()"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    + String.format(MESSAGE_ERROR, \"description\", TodoCommand.COMMAND_WORD)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    + TodoCommand.MESSAGE_PARAM + TodoCommand.MESSAGE_EXAMPLE);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private Command prepareEvent(String arguments) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            final int indexOfAtPrefix \u003d arguments.indexOf(\"/at\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            String description \u003d arguments.substring(0, indexOfAtPrefix);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            String timeOfEvent \u003d arguments.substring(indexOfAtPrefix + 3).trim();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                DateTimeFormatter oldPattern \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                LocalDateTime datetime \u003d LocalDateTime.parse(timeOfEvent, oldPattern);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                return new EventCommand(description, datetime); //Example: 0ct 15 2019 06:20 PM"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            } catch (DateTimeParseException dpe) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                return new EventCommand(description, timeOfEvent); //store date as string as it is not in parsable format"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }catch (StringIndexOutOfBoundsException iob) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new IncorrectCommand(System.lineSeparator()"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    + String.format(MESSAGE_ERROR, \"description and/or time\", EventCommand.COMMAND_WORD)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    + EventCommand.MESSAGE_PARAM + EventCommand.MESSAGE_EXAMPLE);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private Command prepareDeadline(String arguments) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            final int indexOfByPrefix \u003d arguments.trim().indexOf(\"/by\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            String description \u003d arguments.trim().substring(0, indexOfByPrefix);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            String dueDate \u003d arguments.substring(indexOfByPrefix + 3).trim();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                DateTimeFormatter oldPattern \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                LocalDateTime datetime \u003d LocalDateTime.parse(dueDate, oldPattern);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                return new DeadlineCommand(description, datetime); //Example: 0ct 15 2019 06:20 PM"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            } catch (DateTimeParseException dpe) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                return new DeadlineCommand(description,dueDate); //store date as string as it is not in parsable format"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            } catch (StringIndexOutOfBoundsException iob) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                return new IncorrectCommand(System.lineSeparator()"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                        + String.format(MESSAGE_ERROR, \"description and/or due date\", DeadlineCommand.COMMAND_WORD)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                        + DeadlineCommand.MESSAGE_PARAM + DeadlineCommand.MESSAGE_EXAMPLE);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Parses arguments in the context of the delete task command."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @param arguments full command args string"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @return the prepared command"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private Command prepareDelete(String arguments) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            final int targetIndex \u003d parseArgsAsDisplayedIndex(arguments);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new DeleteCommand(targetIndex);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new IncorrectCommand(MESSAGE_INVALID_TASK_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private Command prepareDone(String arguments) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            final int targetIndex \u003d parseArgsAsDisplayedIndex(arguments);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new DoneCommand(targetIndex-1);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new IncorrectCommand(MESSAGE_INVALID_TASK_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private int parseArgsAsDisplayedIndex(String args) throws NumberFormatException {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return Integer.parseInt(args.trim());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private Command prepareFilter(String arguments) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"MMM dd\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            Date date \u003d formatter.parse(arguments);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            //System.out.println(formatter.format(date));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new FilterCommand(date); //Example: 0ct 15"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new FilterCommand(arguments); //filter keyword as string        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 162
    }
  },
  {
    "path": "src/main/java/duke/storage/StorageFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.exception.IllegalValueException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " * Represents the file used to store address book data."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class StorageFile {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /** Default file path used if the user doesn\u0027t provide the file name. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static final String DEFAULT_STORAGE_FILEPATH \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public final Path path;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @throws StorageFilePathException if the default path is invalid"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public StorageFile() throws StorageFilePathException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        this(DEFAULT_STORAGE_FILEPATH);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @throws StorageFilePathException if the given file path is invalid"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public StorageFile(String filePath) throws StorageFilePathException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        path \u003d Paths.get(filePath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if (!isValidPath(path)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            throw new StorageFilePathException(\"Storage file should end with \u0027.txt\u0027\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Returns true if the given path is acceptable as a storage file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * The file path is considered acceptable if it ends with \u0027.txt\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static boolean isValidPath(Path filePath) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return filePath.toString().endsWith(\".txt\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Saves the {@code addressBook} data to the storage file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @throws StorageOperationException if there were errors converting and/or storing data to file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public void save(TaskList tasklist) throws StorageOperationException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            List\u003cString\u003e encodedTaskList \u003d TaskListEncoder.encodeTaskList(tasklist);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            Files.write(path, encodedTaskList);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            throw new StorageOperationException(\"Error writing to file: \" + path);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Loads the {@code AddressBook} data from this storage file, and then returns it."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Returns an empty {@code AddressBook} if the file does not exist, or is not a regular file."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * @throws StorageOperationException if there were errors reading and/or converting data from file."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public TaskList load() throws StorageOperationException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if (!Files.exists(path) || !Files.isRegularFile(path)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return new TaskList();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return TaskListDecoder.decodeTaskList(Files.readAllLines(path));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } catch (FileNotFoundException fnfe) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            throw new AssertionError(\"A non-existent file scenario is already handled earlier.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            // other errors"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            throw new StorageOperationException(\"Error writing to file: \" + path);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } catch (IllegalValueException ive) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            throw new StorageOperationException(\"File contains illegal data values; data type constraints not met\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public String getPath() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return path.toString();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Signals that the given file path does not fulfill the storage filepath constraints."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static class StorageFilePathException extends IllegalValueException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        public StorageFilePathException(String message) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            super(message);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Signals that some error has occured while trying to convert and read/write data between the application"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * and the storage file."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static class StorageOperationException extends Exception {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        public StorageOperationException(String message) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            super(message);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 107
    }
  },
  {
    "path": "src/main/java/duke/storage/TaskListDecoder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.task.Deadlines;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.task.Events;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.task.ToDos;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " * Decodes the storage data file into an {@code AddressBook} object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class TaskListDecoder {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Decodes {@code encodedAddressBook} into an {@code AddressBook} containing the decoded persons."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static TaskList decodeTaskList(List\u003cString\u003e encodedTaskList) throws TaskList.DuplicateTaskException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        final List\u003cTask\u003e decodedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        for (String encodedTask : encodedTaskList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            decodedTasks.add(decodeTaskFromString(encodedTask));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return new TaskList(decodedTasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Decodes {@code encodedTask} into a {@code Task}."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static Task decodeTaskFromString(String encodedTask) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        String[] parse \u003d encodedTask.split(\"\\\\s*\\\\|\\\\s*\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        DateTimeFormatter newPattern \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if (parse.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            ToDos t \u003d new ToDos(parse[2]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            if (parse[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                t.markAsDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            return t;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } else if (parse.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            Deadlines d;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            if (parse[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    LocalDateTime datetime \u003d LocalDateTime.parse(parse[3], newPattern);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    d \u003d new Deadlines(parse[2], datetime); //create deadlines object with date as DateTime"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                }catch(DateTimeParseException dtpe) { //create deadlines object with date as string"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    d \u003d new Deadlines(parse[2], parse[3]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                if (parse[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    d.markAsDone();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                return d;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                Events e;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    LocalDateTime datetime \u003d LocalDateTime.parse(parse[3], newPattern);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    e \u003d new Events(parse[2], datetime);  //create events object with date as DateTime"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                }catch(DateTimeParseException dtpe) { //create events object with date as String"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    e \u003d  new Events(parse[2], parse[3]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                if (parse[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                    e.markAsDone();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                return e;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 72
    }
  },
  {
    "path": "src/main/java/duke/storage/TaskListEncoder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.task.Deadlines;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.task.Events;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import duke.data.task.ToDos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " * Encodes the {@code AddressBook} object into a data file for storage."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "public class TaskListEncoder {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    public static List\u003cString\u003e encodeTaskList(TaskList toSave) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        final List\u003cString\u003e encodedTask \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        toSave.getAllTasks().forEach(task -\u003e encodedTask.add(encodeTaskToString(task)));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return encodedTask;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     * Encodes the {@code person} into a decodable and readable string representation."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    private static String encodeTaskToString(Task t) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        DateTimeFormatter newPattern \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        String fileDoneStatus;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if (t.getStatus().equals(\"done\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            fileDoneStatus \u003d \"1\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            fileDoneStatus \u003d \"0\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        final StringBuilder encodedTaskBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        if (t instanceof ToDos){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            encodedTaskBuilder.append(t.getTaskType());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            encodedTaskBuilder.append(\" | \").append(fileDoneStatus);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            encodedTaskBuilder.append(\" | \").append(t.description);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        else if (t instanceof Events) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            encodedTaskBuilder.append(t.getTaskType());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            encodedTaskBuilder.append(\" | \").append(fileDoneStatus);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            encodedTaskBuilder.append(\" | \").append(t.description).append(\" | \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            if(((Events) t).getTimeOfEvent()!\u003dnull) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                encodedTaskBuilder.append(((Events) t).getTimeOfEvent());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                encodedTaskBuilder.append(((Events) t).getEventTime().format(newPattern));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        else if (t instanceof Deadlines) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            encodedTaskBuilder.append(t.getTaskType());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            encodedTaskBuilder.append(\" | \").append(fileDoneStatus);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            encodedTaskBuilder.append(\" | \").append(t.description).append(\" | \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            if(((Deadlines) t).getDueDate()!\u003dnull) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                encodedTaskBuilder.append(((Deadlines) t).getDueDate());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "                encodedTaskBuilder.append(((Deadlines) t).getDate().format(newPattern));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "        return encodedTaskBuilder.toString();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 62
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " _ _ __                           "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "|_ _   |  _ _     _   __   _      _   _ _  _ _ _"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    |  | / _ \\   | |/ __|[   ]  [   ]|_\u003d_||      |"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " _  |  || | | \\  |  /     \\ \\   / /    _   \\  \\ /"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "| |_|  || |_|  \\ |  |      \\ \\_/ /    | | | \\  \\"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "|_ _ _ / \\_ _/\\_\\[_ _]      \\__ /     |_| |_ _ _/,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "|             Hello! I\u0027m Jarvis :D              |"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "|       What can I do for you today?            |"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Using storage file : duke.txt"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Great we\u0027re all loaded!"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Have a look at your previously saved list!"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t1. [T]-[undone] read book"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t2. [D]-[done] return book(by: June 6th)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t3. [T]-[undone] join sports club"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t4. [T]-[undone] borrow book"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t5. [D]-[undone] return book(by: Sunday)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t6. [E]-[undone] project meeting(at: Mon 2-4pm)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Enter command: [Command entered:todo read book]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "This task already exists in the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Enter command: [Command entered:deadline return book /by June 6th]"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t[D]-[undone] return book (by: June 6th)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Now you have 7 tasks in your list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Enter command: [Command entered:event project meeting /at Aug 6th 2-4pm]"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t[E]-[undone] project meeting (at: Aug 6th 2-4pm)."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Now you have 8 tasks in your list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Enter command: [Command entered:todo join sports club]"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t[T]-[undone] join sports club."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Now you have 9 tasks in your list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Enter command: [Command entered:done 1]"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Hooray! This task has been marked done: [D]-[done] return book(by: June 6th)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Enter command: [Command entered:done 4]"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Hooray! This task has been marked done: [D]-[done] return book(by: Sunday)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Enter command: [Command entered:todo borrow book]"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t[T]-[undone] borrow book."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Now you have 10 tasks in your list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Enter command: [Command entered:list]"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Currently, you have these items in your list: "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t1. [T]-[undone] read book"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t2. [D]-[done] return book(by: June 6th)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t3. [T]-[undone] join sports club"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t4. [T]-[undone] borrow book"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t5. [D]-[done] return book(by: Sunday)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t6. [E]-[undone] project meeting(at: Mon 2-4pm)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t7. [D]-[undone] return book (by: June 6th)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t8. [E]-[undone] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t9. [T]-[undone] join sports club"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t10. [T]-[undone] borrow book"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t10 tasks listed!"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Enter command: [Command entered:deadline return book /by Sunday]"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t[D]-[undone] return book (by: Sunday)."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Now you have 11 tasks in your list."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Enter command: [Command entered:event project meeting /at Mon 2-4pm]"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t[E]-[undone] project meeting (at: Mon 2-4pm)."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Now you have 12 tasks in your list."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Enter command: [Command entered:delete 3]"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Deleted task: [T]-[undone] join sports club."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\tNow you have 11 tasks in your list."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Enter command: [Command entered:find book]"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Currently, you have these items in your list: "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t1. [T]-[undone] read book"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t2. [D]-[done] return book(by: June 6th)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t3. [T]-[undone] borrow book"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t4. [D]-[done] return book(by: Sunday)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t5. [D]-[undone] return book (by: June 6th)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t6. [T]-[undone] borrow book"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t7. [D]-[undone] return book (by: Sunday)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "\t7 tasks listed!"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": " - - - - - - - - - - - - - - - - - - - - - - - - "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "Enter command: "
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 133
    }
  },
  {
    "path": "text-ui-test/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "D | 0 | return book  | June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "T | 1 | join sports club"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "T | 0 | borrow book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "D | 0 | return book  | Sunday"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "E | 0 | project meeting  | Mar 02 2020 12:00 pm"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "D | 0 | project CS3235 submission  | Mar 02 2020 12:00 pm"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 7
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "find book"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "event project meeting /at 2020-03-02 1200"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "deadline project CS3235 submission /by 2020-03-02 1200"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "filter Mar 02"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "filter done"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "filter undone"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "filter todo"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "filter event"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "filter deadline"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 20
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\data\\*.java ..\\src\\main\\java\\duke\\common\\*.java ..\\src\\main\\java\\duke\\data\\exception\\*.java ..\\src\\main\\java\\duke\\data\\task\\*.java ..\\src\\main\\java\\duke\\parser\\*.java ..\\src\\main\\java\\duke\\storage\\*.java ..\\src\\main\\java\\duke\\ui\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "java -Dfile.encoding\u003dUTF8 -classpath ..\\bin Duke\u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 21
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "java -classpath -Dfile.encoding\u003dUTF8 ../bin Duke\u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trishaangelica"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "trishaangelica": 34
    }
  }
]

[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelczk"
        },
        "content": "Duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelczk"
        },
        "content": "`A-TextUiTesting` | [Text UI.UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelczk"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for Duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "joelczk": 3,
      "-": 36
    }
  },
  {
    "path": "database.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "[T],true,read book,"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": "[E],false,project meeting,NUS SOC"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "[D],false,submit CS2113T assignment,Sundat"
      }
    ],
    "authorContributionMap": {
      "joelczk": 3
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "# Duke.Duke - User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": "1.Keep track of tasks"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": "  Duke.Duke helps you to keep track of ToDos, Deadlines and Events and displays them."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": "  "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": "2.Mark as done"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": "  Duke.Duke helps you keep track of completed task through the `done` command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": "  "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": "3.Deleting tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": "  Duke.Duke helps you to delete tasks through the `delete` command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": "  "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": "4.Finding tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": "  Duke.Duke helps you to find for tasks with matching keywords using `find` command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelczk"
        },
        "content": "  "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelczk"
        },
        "content": "5.Auto-save and stores our tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelczk"
        },
        "content": "  Duke.Duke helps you to auto-save and stores the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelczk"
        },
        "content": "  "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelczk"
        },
        "content": "### Commands"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelczk"
        },
        "content": "+ [Tasks.ToDo](#todo)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelczk"
        },
        "content": "+ [Tasks.Deadline](#deadline)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelczk"
        },
        "content": "+ [Tasks.Event](#event)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelczk"
        },
        "content": "+ [List](#list) "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelczk"
        },
        "content": "+ [Done](#done)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelczk"
        },
        "content": "+ [Delete](#delete)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelczk"
        },
        "content": "+ [Find](#find)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelczk"
        },
        "content": "+ [Help](#help)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelczk"
        },
        "content": "+ [Bye](#bye)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelczk"
        },
        "content": "### Command Format"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelczk"
        },
        "content": "Words enclosed by `{` and `}` are parameters that are supplied by you."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelczk"
        },
        "content": "## Setting Up"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelczk"
        },
        "content": "1. Extract the jar folder into an empty folder"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelczk"
        },
        "content": "2. Enter your preferred terminal and move to the location of the folder"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelczk"
        },
        "content": "3. Run the Command-Line interface(CLI) with `java -jar Duke.Duke.jar` in your terminal"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelczk"
        },
        "content": "![Setting up Duke.Duke](/images/startup.JPG)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelczk"
        },
        "content": "### \u003ca id\u003d\"todo\"\u003e\u003c/a\u003e `todo` - Adds a todo task to your list"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelczk"
        },
        "content": "Syntax: "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joelczk"
        },
        "content": "`todo {task description}`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joelczk"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joelczk"
        },
        "content": "`todo return book`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joelczk"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joelczk"
        },
        "content": "`adds a Tasks.ToDo task to your list`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joelczk"
        },
        "content": "![Adding Tasks.ToDo task](images/todo.JPG)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joelczk"
        },
        "content": "### \u003ca id\u003d\"deadline\"\u003e\u003c/a\u003e `deadline` - Adds a deadline task to your list"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joelczk"
        },
        "content": "Syntax:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joelczk"
        },
        "content": "`deadline {task description} /by {deadline}`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joelczk"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joelczk"
        },
        "content": "`deadline submit assignment /by Sunday`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joelczk"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joelczk"
        },
        "content": "![Adding Tasks.Deadline task](images/deadline.JPG)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joelczk"
        },
        "content": "### \u003ca id\u003d\"event\"\u003e\u003c/a\u003e `event` - Adds an Tasks.Event task to your list"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joelczk"
        },
        "content": "Syntax: "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joelczk"
        },
        "content": "`event {description} /at {location/time}`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joelczk"
        },
        "content": "`event project meeting /at NUS SOC,2pm`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joelczk"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joelczk"
        },
        "content": "`adds an Tasks.Event task to your list`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joelczk"
        },
        "content": "![Adding Tasks.Event task](images/event.JPG)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joelczk"
        },
        "content": "### \u003ca id\u003d\"list\"\u003e\u003c/a\u003e `list` - Displays all your tasks"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joelczk"
        },
        "content": "Syntax: "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joelczk"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joelczk"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joelczk"
        },
        "content": "`Display all your tasks`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joelczk"
        },
        "content": "![Listing all tasks](images/list.JPG)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joelczk"
        },
        "content": "### \u003ca id\u003d\"done\"\u003e\u003c/a\u003e `done` - Mark task as completed"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joelczk"
        },
        "content": "Syntax: "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joelczk"
        },
        "content": "`done {task index}`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "joelczk"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "joelczk"
        },
        "content": "`done 3`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "joelczk"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "joelczk"
        },
        "content": "`Marks task as completed based on specified index`"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "joelczk"
        },
        "content": "![Marking tasks as completed](images/done.JPG)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "joelczk"
        },
        "content": "### \u003ca id\u003d\"delete\"\u003e\u003c/a\u003e `delete` - Deletes task from list"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "joelczk"
        },
        "content": "Syntax: "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "joelczk"
        },
        "content": "`delete {task index}`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "joelczk"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "joelczk"
        },
        "content": "`Deletes task based on specified index`"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "joelczk"
        },
        "content": "![Deleting tasks](images/delete.JPG)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "joelczk"
        },
        "content": "### \u003ca id\u003d\"find\"\u003e\u003c/a\u003e `find` - Finds task from list"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "joelczk"
        },
        "content": "Syntax: "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "joelczk"
        },
        "content": "`find {keyword}`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "joelczk"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "joelczk"
        },
        "content": "`find assignment`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "joelczk"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "joelczk"
        },
        "content": "`Finds task from list`"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "joelczk"
        },
        "content": "![Finding tasks](images/find.JPG)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "joelczk"
        },
        "content": "### \u003ca id\u003d\"help\"\u003e\u003c/a\u003e `help` - Displays all the commands"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "joelczk"
        },
        "content": "Syntax: "
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "joelczk"
        },
        "content": "`help`"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "joelczk"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "joelczk"
        },
        "content": "`Displays help command`"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "joelczk"
        },
        "content": "![help](images/help.JPG)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "joelczk"
        },
        "content": "### \u003ca id\u003d\"bye\"\u003e\u003c/a\u003e `bye` - Terminate program"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "joelczk"
        },
        "content": "Syntax: "
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "joelczk"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "joelczk"
        },
        "content": "`Terminates program`"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "joelczk"
        },
        "content": "![bye](images/bye.JPG)"
      }
    ],
    "authorContributionMap": {
      "joelczk": 153,
      "-": 21
    }
  },
  {
    "path": "src/main/java/Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import Exceptions.DukeExceptions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import Parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import Tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import UI.UI;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": " * Represents the main logic for running the CLI"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": " * Duke object corresponds to UI, Parser, Tasks, Storage, DukeExceptions and DukeHelp object"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    private UI userInterface;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    private DukeHelp dukeHelp;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        userInterface \u003d new UI();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        dukeHelp \u003d new DukeHelp();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    private void runCommand(Scanner sc) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            String input \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            parser.updateInput(input);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            userInterface.printLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                if (parser.isBye()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                    userInterface.printLeavingMessage();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                    userInterface.printLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                } else if (parser.isList()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                    tasks.list();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                } else if(parser.isDone()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                    tasks.markAsDone(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                } else if (parser.isToDo()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                    tasks.addToDo(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                } else if (parser.isDeadline()){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                    tasks.addDeadline(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                } else if (parser.isDelete()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                    tasks.deleteItem(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                } else if (parser.isFind()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                    tasks.findSearchQuery(input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                } else if (parser.isEvent()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                    tasks.addEvent(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                } else if (parser.isHelp()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                    dukeHelp.printHelp();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                    System.out.println(\"    [Error: Duke does not understand your command]\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            } catch (DukeExceptions exception) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                System.out.println(exception);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            userInterface.printLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        userInterface.printGreetingMessage();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        tasks.list();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        userInterface.printLine();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        runCommand(sc);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        Duke dukeFeatures \u003d new Duke();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        dukeFeatures.run();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joelczk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelczk": 86
    }
  },
  {
    "path": "src/main/java/Duke/DukeHelp.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": " * Represents the help messages Duke.Duke displays"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": "public class DukeHelp {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public DukeHelp() {}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void printHelp() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Here are the commands:\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\"   1. todo: Creates a todo activity [Syntax: todo {description}]\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\"   2. deadline: Creates a deadline activity [Syntax: deadline {description}\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                \"/by {deadline}]\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\"   3. event: Creates an event activity [Syntax: event {description} /at {time/date}]\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\"   4. done: Mark event as done [Syntax: done {index of task}]\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\"   5. delete: removes task from list [Syntax: delete {index of task}]\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\"   6. list: displays list of all tasks [Syntax: list]\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\"   7. find: find the task list with description matching keywords \" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                \"[Syntax: find {keyword}]\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelczk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelczk": 22
    }
  },
  {
    "path": "src/main/java/Exceptions/CompletedTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": " * Represents exception when user tries to mark a completed task as done"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": "public class CompletedTaskException extends DukeExceptions {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public CompletedTaskException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Returns string format of error message for CompletedTaskException"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return String format of error message"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return \" [Warning: Task has already been completed!]\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelczk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelczk": 20
    }
  },
  {
    "path": "src/main/java/Exceptions/DukeExceptions.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": " * Represents all exceptions specific to Duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": "public abstract class DukeExceptions extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelczk": 7
    }
  },
  {
    "path": "src/main/java/Exceptions/EmptyStringException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": " * Represents exceptions when all fields of deadline and event tasks are missing"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": "public class EmptyStringException extends DukeExceptions {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public EmptyStringException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Returns String format of error message for EmptyStringException"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return String format of error message"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return \" [Error: Empty description(s) / date or time or location / placeholder]\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelczk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelczk": 19
    }
  },
  {
    "path": "src/main/java/Exceptions/IndexFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": " * Represents exception when index is not a number"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": "public class IndexFormatException extends DukeExceptions {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public IndexFormatException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Returns string format of error message when index is not a number"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return String format of error message"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return \" [Error: Index is not a number!]\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelczk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelczk": 20
    }
  },
  {
    "path": "src/main/java/Exceptions/MissingDescriptionsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": " * Represents the exception when description is missing"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": "public class MissingDescriptionsException extends DukeExceptions {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public MissingDescriptionsException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Returns string format of error message when description field is missing"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return String format of error message"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return \" [Error: Missing description(s)]\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelczk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelczk": 20
    }
  },
  {
    "path": "src/main/java/Exceptions/MissingDetailsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": " * Represents exception when details of task is missing"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": "public class MissingDetailsException extends DukeExceptions {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public MissingDetailsException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Returns string format of error message when details of task is missing"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return String format of error message"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return \" [Error: Missing date / time / location]\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelczk": 18
    }
  },
  {
    "path": "src/main/java/Exceptions/MissingIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "public class MissingIndexException extends DukeExceptions {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public MissingIndexException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return \" [Error: Missing Index]\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelczk": 12
    }
  },
  {
    "path": "src/main/java/Exceptions/MissingParameterException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": " * Represents exception when parameter of task is missing"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": "public class MissingParameterException extends DukeExceptions {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public MissingParameterException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Returns String format of error message when parameter is missing"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return String format of error message"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return \" [Error: Parameter is missing!]\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelczk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelczk": 20
    }
  },
  {
    "path": "src/main/java/Exceptions/MissingSearchQueryException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": " * Represents exception when search query is missing"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": "public class MissingSearchQueryException extends DukeExceptions {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public MissingSearchQueryException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Returns String format of error message when search query is missing"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return String format of error message"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return \" [Error: Missing Search Query!]\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelczk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelczk": 19
    }
  },
  {
    "path": "src/main/java/Exceptions/OutOfRangeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": " * Represents exceptions when index is out of range"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": "public class OutOfRangeException extends DukeExceptions {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public OutOfRangeException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Returns String format of error message when index is out of range"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return String format of error message"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return \" [Error: Index is out of range!]\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelczk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelczk": 20
    }
  },
  {
    "path": "src/main/java/Parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "package Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": " * Represents a parser for input by user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": " * A Parser.Parser object corresponds to the String input by the user and extracts the command that the user wants to run"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected String firstWord;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        this.input \u003d null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        this.firstWord \u003d null;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Returns the command that the user wants to run"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String getFirstWord() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String removeTrailingSpaces \u003d input.trim();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String [] words \u003d removeTrailingSpaces.split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String firstWord \u003d words[0].toLowerCase();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return firstWord;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Updates String input by user"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @param input String input by user"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void updateInput(String input) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        this.firstWord \u003d getFirstWord();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Checks if command is \u0027bye\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return true if command is \u0027bye\u0027; false otherwise"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public boolean isBye() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return firstWord.equals(\"bye\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Checks if command is \u0027list\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return true if command is \u0027list\u0027; false otherwise"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public boolean isList() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return firstWord.equals(\"list\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Checks if command is \u0027done\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return true if command is \u0027done\u0027; false otherwise"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return firstWord.equals(\"done\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Checks if command is \u0027todo\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return true if command is \u0027todo\u0027; false otherwise"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public boolean isToDo() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return firstWord.equals(\"todo\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Checks if command is \u0027event\u0027"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return true if command is \u0027event\u0027; false otherwise"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public boolean isEvent() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return firstWord.equals(\"event\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Checks if command is \u0027deadline\u0027"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return true if command is \u0027deadline\u0027; false otherwise"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public boolean isDeadline() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return firstWord.equals(\"deadline\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Checks if command is \u0027delete\u0027"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return true if command is \u0027delete\u0027 ; false otherwise"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public boolean isDelete() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return firstWord.equals(\"delete\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Checks if command is \u0027help\u0027"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return true if command is \u0027help\u0027 ; false otherwise"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public boolean isHelp() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return firstWord.equals(\"help\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Checks if command is \u0027find\u0027"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return true if command is \u0027find\u0027 ; false otherwise"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public boolean isFind() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return firstWord.equals(\"find\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joelczk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelczk": 108
    }
  },
  {
    "path": "src/main/java/Storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "package Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import Tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import Tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import Tasks.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": " * Represents the location where text files are stored"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": " * A Storage.Storage object corresponds to filepath and file name"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected File file;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected ArrayList \u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        file \u003d new File(\"database.txt\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        filePath \u003d file.getAbsolutePath();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Saves the tasks in ArrayList into text file"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Prints an error message if there is an IOException"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @param tasks ArrayList of Tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @throws IOException if IO is invalid"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void save(ArrayList \u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                fileWriter.write(task.storeText());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                fileWriter.write(System.lineSeparator());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            System.out.println(\" [Error \" + exception.getMessage() + \"] \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            System.out.println(\" Please contact the systems adminstrator for assistance\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Adds Tasks.Task from text file to ArrayList"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @param input String input by user"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @param tasksList ArrayList to store tasks"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void addTask(String input, ArrayList \u003cTask\u003e tasksList) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String [] parameters \u003d input.split(\",\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String type \u003d parameters[0];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        boolean isDone \u003d Boolean.parseBoolean(parameters[1]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String description \u003d parameters[2];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        if (type.equals(\"[T]\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            ToDo existingToDo \u003d new ToDo(description, isDone);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            tasksList.add(existingToDo);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } else if (type.equals(\"[E]\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            String eventDetails \u003d parameters[3];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            Event existingEvent \u003d new Event(description, isDone, eventDetails);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            tasksList.add(existingEvent);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            String by \u003d parameters[3];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            Deadline existingDeadline \u003d new Deadline(description, isDone, by);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            tasksList.add(existingDeadline);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Adds database file if file cannot be found"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Prints error message if there is an IOException"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @param file database file"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @exception IOException if IO is invalid"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void addFile(File file) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            System.out.println(\" [New database file created at \" + filePath + \"]\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } catch(IOException exception) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            System.out.println(\" [Error \" + exception.getMessage() + \"] \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            System.out.println(\" Please contact the systems adminstrator for assistance\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Restores Tasks from text file into ArrayList"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @param fileReader FileReader object to read text file"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @param tasksList ArrayList to store tasks"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void restoreArray(Scanner fileReader, ArrayList \u003cTask\u003e tasksList) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        while (fileReader.hasNextLine()) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            String input \u003d fileReader.nextLine();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            addTask(input, tasksList);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Returns an ArrayList containing all the updated tasks"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Creates text file if FileNotFoundException"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return ArrayList containing tasks"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @exception FileNotFoundException if text file cannot be found"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public ArrayList \u003cTask\u003e loadTasks() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        ArrayList \u003cTask\u003e tasksList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            Scanner fileReader \u003d new Scanner(file);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            restoreArray(fileReader, tasksList);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            fileReader.close();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } catch (FileNotFoundException exception) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            addFile(file);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } catch (Exception exception) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            System.out.println(\" [Warning: File not found. Please add a task/\u0027database.txt\u0027 file]\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return tasksList;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "joelczk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelczk": 122
    }
  },
  {
    "path": "src/main/java/Tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": " * Represents a Tasks.Deadline object for tasks"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": " * A Deadline object corresponds to a description, time/date, and boolean isDone to check if Tasks.Deadline task has been"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": " * completed"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public Deadline(String description, boolean isDone, String by) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Returns String of date/time of deadline"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return String by"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Returns String format for Deadline tasks to be stored in text file"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return String format of Deadline tasks"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String storeText() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return \"[D],\" + super.getStatus() + \",\" + super.getDescription() + \",\" + by;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Returns String format for Deadline tasks to be printed on CLI"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return String format of Deadline tasks"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return \"[D][ \" + super.getStatusIcon() + \" ] \" + super.getDescription() + \"(By: \" + getBy() + \")\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joelczk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelczk": 48
    }
  },
  {
    "path": "src/main/java/Tasks/ErrorMessages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "public class ErrorMessages {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public ErrorMessages() {}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void doneErrorMessage() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" done: marks task to be completed\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Parameters: done {TASK INDEX}\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Example: done 1\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void toDoErrorMessage() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" todo: Adds todo items\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Parameters: todo {DESCRIPTION}\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Example: todo read book\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void eventErrorMessage() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" event: Adds event tasks\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Parameters: event {DESCRIPTION} /at {LOCATION/TIME}\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Example: event project meeting /at Mon 2-4pm\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void deadlineErrorMessage() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" deadline: Adds deadline tasks\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Parameters: deadline {DESCRIPTION} /by {DATE/TIME}\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Example: deadline return book /by Sunday\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Disclaimer: Description field can be left empty\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void deleteErrorMessage() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" delete: deletes task from stored list\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Parameters: delete [TASK NUMBER]\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Example: delete 1\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void findErrorMessage() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" find: Searches through the tasks for matching queries\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Parameters: find [query]\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Example: find books\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelczk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelczk": 42
    }
  },
  {
    "path": "src/main/java/Tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": " * Represents an Tasks.Event object for tasks"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": " * An Event object corresponds to a description, location/time, and boolean isDone to check if Tasks.Event task has been"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": " * completed"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected String eventDetails;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public Event(String description, String eventDetails) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        this.eventDetails \u003d eventDetails;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public Event(String description, boolean isDone, String eventDetails) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        this.eventDetails \u003d eventDetails;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Returns the location/time of Event"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return eventDetails location/time of Event"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String getEventDetails() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return eventDetails;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Returns String format for Event tasks to be printed on CLI"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return String format of Event tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return \"[E][ \" + super.getStatusIcon() + \" ] \" + super.getDescription() + \"(at: \" + getEventDetails() + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Returns String format for Event tasks to be stored in text file"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return String format of Event tasks"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String storeText() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return \"[E],\" +  super.getStatus() + \",\" + super.getDescription() + \",\" + getEventDetails();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelczk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelczk": 47
    }
  },
  {
    "path": "src/main/java/Tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": " * Represents a Task object for tasks"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": " * AnTask object corresponds to a description, and boolean isDone to check if task has been completed"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public Task (String description, boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Returns boolean status of task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return true if task is completed ; false otherwise"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Returns status icon of Task object based on its status"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return status icon"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return (isDone ? \"/\" : \"x\"); //return tick or X symbols"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Returns description of task"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return description"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Mark Task object as completed"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Returns String format for tasks to be printed on CLI"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return String format of tasks"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return \"[ \" + getStatusIcon() + \" ] \" + getDescription();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Returns String format for Task tasks to be stored in text file"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return String format of Task tasks"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String storeText() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return isDone + \",\" + getDescription();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joelczk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelczk": 68
    }
  },
  {
    "path": "src/main/java/Tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import Exceptions.CompletedTaskException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import Exceptions.EmptyStringException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import Exceptions.IndexFormatException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import Exceptions.MissingDescriptionsException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import Exceptions.MissingParameterException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import Exceptions.MissingDetailsException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import Exceptions.MissingSearchQueryException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import Exceptions.OutOfRangeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import Exceptions.MissingIndexException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import Tasks.ErrorMessages;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected ErrorMessages errorMessages;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        errorMessages \u003d new ErrorMessages();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Returns the String format of index for done and delete operations"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @param input String input by user"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @param position number of characters to remove"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return String format of index"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String getStringIndex (String input, int position) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String removeTrailingSpaces \u003d input.trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String numericalIndex \u003d removeTrailingSpaces.substring(position,input.length()).trim();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return numericalIndex;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Returns true if String is numeric. Otherwise, return false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @param number String to be checked against"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return boolean value"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public boolean isNumeric(String number) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        boolean isDigit \u003d true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        for (int i \u003d 0; i \u003c number.length(); i ++) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            char letter \u003d number.charAt(i);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            if (!Character.isDigit(letter)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                isDigit \u003d false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return isDigit;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Return true if String is out of range, otherwise false"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @param number String index to be checked against"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return boolean value"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public boolean isOutOfRange(String number) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        int index \u003d Integer.parseInt(number);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return (index \u003c\u003d 0 || index \u003e tasks.size());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Return true if task is completed, otherwise false"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @param number String index of task"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return boolean value"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public boolean isCompleted(String number) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        int index \u003d Integer.parseInt(number) - 1;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        Task completedTask \u003d tasks.get(index);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return completedTask.getStatus();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Prints list of tasks in task list"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void printTasks() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        int position \u003d 1;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        for (Task text: tasks) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            System.out.println(\"    \" + position + \". \" + text);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            position ++;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Returns description of task"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @param input String input by user"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @param lengthOfCommand length of the command that the user input"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return description of task"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String getDescription(String input, int lengthOfCommand) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String removeCommand \u003d input.substring(lengthOfCommand).trim();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        int index \u003d removeCommand.indexOf(\"/\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String description \u003d removeCommand.substring(0,index);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return description.trim();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Returns date/time/location of task"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @param input String input by user"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @param lengthOfCommand length of command that user input"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return data/time/location of task"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String getDetails(String input, int lengthOfCommand) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String removeCommand \u003d input.substring(lengthOfCommand).trim();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        int index \u003d removeCommand.indexOf(\"/\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String details \u003d removeCommand.substring(index + 3).trim();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return details.trim();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Returns true if user input an empty description, otherwise false"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @param input String input by user"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @param lengthOfCommand length of command that user inputs"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return boolean value"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public boolean isEmptyDescription(String input, int lengthOfCommand) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String description \u003d getDescription(input, lengthOfCommand);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Returns true if user input an empty details, otherwise false"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @param input String input by user"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @param lengthOfCommand length of command that user inputs"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return boolean value"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public boolean isEmptyDetails(String input, int lengthOfCommand) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String details \u003d getDetails(input, lengthOfCommand);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        if (details.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Prints out the list of  tasks in the task list"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void list() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        tasks \u003d storage.loadTasks();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            System.out.println(\"    [Warning: There are no items queued in the list]\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            System.out.println(\" Here are the list of tasks:\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            printTasks();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Marks task as completed"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @param input String input by user"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @throws IndexFormatException if index is not a number"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @throws OutOfRangeException if index \u003c\u003d 0 or index \u003e size of tasks list"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @throws CompletedTaskException if task has already been completed"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void markAsDone(String input) throws IndexFormatException, OutOfRangeException, CompletedTaskException,"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            MissingIndexException{"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String numericalIndex \u003d getStringIndex(input,4);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        boolean isNumber \u003d isNumeric(numericalIndex);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        if (numericalIndex.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            errorMessages.doneErrorMessage();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            throw new MissingIndexException();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } else if (!isNumber) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            errorMessages.doneErrorMessage();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            throw new IndexFormatException();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } else if(isOutOfRange(numericalIndex)) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            errorMessages.doneErrorMessage();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            throw new OutOfRangeException();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } else if (isCompleted(numericalIndex)){"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            throw new CompletedTaskException();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            int index \u003d Integer.parseInt(numericalIndex) - 1;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            Task completedTask \u003d tasks.get(index);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            completedTask.markAsDone();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            tasks.set(index, completedTask);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            System.out.println(\" Duke.Duke has marked the following tasks as done:\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            System.out.println(\"  \" + completedTask);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Deletes tasks from task list"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @param input String input by user"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @throws IndexFormatException if index is not a number"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @throws OutOfRangeException if index \u003c\u003d 0 or index \u003esize of task list"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void deleteItem(String input) throws IndexFormatException, OutOfRangeException, MissingIndexException {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String numericalIndex \u003d getStringIndex(input,6);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        boolean isNumber \u003d isNumeric(numericalIndex);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        if (numericalIndex.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            errorMessages.deleteErrorMessage();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            throw new MissingIndexException();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } else if (!isNumber) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            errorMessages.deleteErrorMessage();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            throw new IndexFormatException();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } else if(isOutOfRange(numericalIndex)) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            errorMessages.deleteErrorMessage();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            throw new OutOfRangeException();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            int index \u003d Integer.parseInt(numericalIndex) - 1;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            Task deletedTask \u003d tasks.get(index);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            int length \u003d tasks.size() - 1;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            tasks.remove(index);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            System.out.println(\" Got it!I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            System.out.println(\" \" + deletedTask);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            System.out.println(\" There are currently \" + length + \" task(s) being queued\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Adds a toDo task to the task list"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @param input String input by user"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @throws MissingDescriptionsException ToDo task is missing a description"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void addToDo(String input) throws MissingDescriptionsException {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String removeTrailingSpaces \u003d input.trim();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        int lengthOfCommand \u003d 4;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        if (removeTrailingSpaces.length() \u003d\u003d lengthOfCommand) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            errorMessages.toDoErrorMessage();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            throw new MissingDescriptionsException();"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            String description \u003d removeTrailingSpaces.substring(5, input.length());"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            ToDo newToDo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            tasks.add(newToDo);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            System.out.println(\" Got it! I have added the following tasks: \");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            System.out.println( newToDo);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            System.out.println(\"There are currently \" + tasks.size() + \" task(s) queued\");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Adds deadline to task list"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @param input String input by user"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @param lengthOfCommand length of command used by user"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void addDeadlineToList(String input, int lengthOfCommand) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String description \u003d getDescription(input,lengthOfCommand);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String details \u003d getDetails(input,lengthOfCommand);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(description, details);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        tasks.add(newDeadline);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Got it!I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" \" + newDeadline);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" There are currently \" + tasks.size() + \" task(s) being queued\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Adds deadline task to the task list"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @param input String input by user"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @throws EmptyStringException if all fields of deadline tasks are empty"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @throws MissingParameterException if /by is missing"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @throws MissingDescriptionsException if description of deadline task is missing"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @throws MissingDetailsException if details of deadline is missing"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void addDeadline(String input) throws EmptyStringException, MissingParameterException,"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            MissingDescriptionsException, MissingDetailsException {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String removeTrailingSpaces \u003d input.trim();"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        int lengthOfCommand \u003d 8;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        if (removeTrailingSpaces.length() \u003d\u003d lengthOfCommand) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            errorMessages.deadlineErrorMessage();"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            throw new EmptyStringException();"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } else if (!removeTrailingSpaces.contains(\"/by\")) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            errorMessages.deadlineErrorMessage();"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            throw new MissingParameterException();"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } else if (isEmptyDescription(input, lengthOfCommand)) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            errorMessages.deadlineErrorMessage();"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            throw new MissingDescriptionsException();"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } else if (isEmptyDetails(input, lengthOfCommand)) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            errorMessages.deadlineErrorMessage();"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            throw new MissingDetailsException();"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            addDeadlineToList(input, lengthOfCommand);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Adds Event to task list"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @param input String user input"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @param lengthOfCommand length of command that user input"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void addEventToList(String input, int lengthOfCommand) {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String description \u003d getDescription(input,lengthOfCommand);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String details \u003d getDetails(input,lengthOfCommand);"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        Event newEvent \u003d new Event(description, details);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        tasks.add(newEvent);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Got it!I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" \" + newEvent);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" There are currently \" + tasks.size() + \" task(s) being queued\");"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Adds an event task to the task list"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @param input String input by user"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @throws EmptyStringException if all fields are missing"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @throws MissingParameterException if /at is missing"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @throws MissingDescriptionsException if descriptions of event task is missing"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @throws MissingDetailsException if event details are missing"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void addEvent(String input) throws EmptyStringException, MissingParameterException,"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            MissingDescriptionsException, MissingDetailsException {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String removeTrailingSpaces \u003d input.trim();"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        int lengthOfCommand \u003d 5;"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        if (removeTrailingSpaces.length() \u003d\u003d lengthOfCommand) {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            errorMessages.eventErrorMessage();"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            throw new EmptyStringException();"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } else if (!removeTrailingSpaces.contains(\"/at\")) {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            errorMessages.eventErrorMessage();"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            throw new MissingParameterException();"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } else if (isEmptyDescription(input, lengthOfCommand)) {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            errorMessages.eventErrorMessage();"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            throw new MissingDescriptionsException();"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } else if (isEmptyDetails(input, lengthOfCommand)) {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            errorMessages.eventErrorMessage();"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            throw new MissingDetailsException();"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            addEventToList(input, lengthOfCommand);"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Returns an ArrayList containing the search results"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @param input String input by user"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return ArrayList of search results"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public ArrayList\u003cTask\u003e getSearchResults(String input) {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String descriptionLowerCase \u003d input.toLowerCase();"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        ArrayList\u003cTask\u003e results \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            String taskDescription \u003d task.getDescription().toLowerCase();"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            if (taskDescription.contains(descriptionLowerCase)) {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                results.add(task);"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return results;"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Prints search results"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @param description search query"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void printSearchResults(String description) {"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        ArrayList\u003cTask\u003e results \u003d getSearchResults(description);"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        if (results.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            System.out.println(\" [WARNING: There are no tasks that matched the search queries]\");"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            System.out.println(\" Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            int count \u003d 1;"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            for (Task task: results) {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                System.out.println(\"  \" + count + \". \" + task);"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                count +\u003d 1;"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Prints search results based on query given"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @param input String input by user"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @throws MissingSearchQueryException if search query is missing"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void findSearchQuery(String input) throws MissingSearchQueryException {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        int lengthOfCommand \u003d 4;"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String searchQuery \u003d input.substring(lengthOfCommand).trim();"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        if (searchQuery.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            errorMessages.findErrorMessage();"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            throw new MissingSearchQueryException();"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            printSearchResults(searchQuery);"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "joelczk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelczk": 383
    }
  },
  {
    "path": "src/main/java/Tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": " * Represents a ToDo object for tasks"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": " * A ToDo object corresponds to a description, and boolean isDone to check if Tasks.Event task has been completed"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        super(description , isDone);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Returns String format for ToDo tasks to be printed on CLI"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return String format of ToDo tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return \"[T][ \" + super.getStatusIcon() + \" ] \" + super.getDescription();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Returns String format for ToDo tasks to be stored in text file"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * @return String format of ToDo tasks"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String storeText() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return \"[T],\" + super.getStatus() + \",\" + super.getDescription() + \",\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelczk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelczk": 37
    }
  },
  {
    "path": "src/main/java/UI/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "package UI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": " * Represents messages displayed by Duke.Duke for its user interface"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": " * A UI.UI object corresponds to greeting message, leaving message and boundary"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected String leavingMessage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected String boundary;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected String firstGreetingMessage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected String secondGreetingMessage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected String line;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        leavingMessage \u003d \" Bye! Duke is now a freeeeee elf again!!!!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        boundary \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        firstGreetingMessage \u003d \" Hi! I am Duke, your next doooooorrrr friendly elf.....I mean bot\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        secondGreetingMessage \u003d \" How may Dukeeeeee help you today?\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        line \u003d \"____________________________________________________________________________________________\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Prints boundary for user interface"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(boundary);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Prints greeting message when Duke is started"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void printGreetingMessage() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(firstGreetingMessage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(secondGreetingMessage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     * Prints leaving message when Duke is terminated"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelczk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void printLeavingMessage() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(leavingMessage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelczk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelczk": 45
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": " Hi! I am Duke.Duke, your next doooooorrrr friendly elf.....I mean bot"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": " How may Dukeeeeee help you today?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": "_______________________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": " [Warning: There are currently no tasks!]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": " [Error: java.lang.IndexOutOfBoundsException: Index -1 out of bounds for length 0]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": " Please check your input!"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelczk"
        },
        "content": " Got it! I have added the following tasks: "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelczk"
        },
        "content": "[T][ ? ] read book"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelczk"
        },
        "content": "There are currently 1 task(s) queued"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelczk"
        },
        "content": " [Error: java.lang.StringIndexOutOfBoundsException: begin 5, end 4, length 4]"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelczk"
        },
        "content": " Please check your input!"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelczk"
        },
        "content": " Got it!I\u0027ve added this task:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelczk"
        },
        "content": " [D][ ? ] return book (By: Sunday)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelczk"
        },
        "content": " There are currently 2 being queued"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelczk"
        },
        "content": " [Error: java.lang.StringIndexOutOfBoundsException: begin 9, end 8, length 8]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelczk"
        },
        "content": " Please check your input!"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelczk"
        },
        "content": " New task has been added:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelczk"
        },
        "content": " [E][ ? ] project meeting(At: Mon 2-4pm)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelczk"
        },
        "content": " There are currently 3 task(s) being queued"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelczk"
        },
        "content": " [Error: java.lang.StringIndexOutOfBoundsException: begin 0, end -1, length 0]"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelczk"
        },
        "content": " Please check your input!"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelczk"
        },
        "content": " Duke.Duke has marked the following tasks as done:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelczk"
        },
        "content": "  [T][ ? ] read book"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joelczk"
        },
        "content": " Duke.Duke has marked the following tasks as done:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joelczk"
        },
        "content": "  [E][ ? ] project meeting(At: Mon 2-4pm)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joelczk"
        },
        "content": " Here are the list of tasks:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    1. [T][ ? ] read book"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    2. [D][ ? ] return book (By: Sunday)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    3. [E][ ? ] project meeting(At: Mon 2-4pm)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joelczk"
        },
        "content": " [Warning: The task(s) has already been marked as done]"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joelczk"
        },
        "content": " Here are the list of tasks:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    1. [T][ ? ] read book"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    2. [D][ ? ] return book (By: Sunday)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    3. [E][ ? ] project meeting(At: Mon 2-4pm)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joelczk"
        },
        "content": " Duke.Duke has marked the following tasks as done:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joelczk"
        },
        "content": "  [D][ ? ] return book (By: Sunday)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joelczk"
        },
        "content": " [Error: java.lang.IndexOutOfBoundsException: Index 3 out of bounds for length 3]"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joelczk"
        },
        "content": " Please check your input!"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joelczk"
        },
        "content": " Bye! Duke.Duke is now a freeeeee elf again!!!!"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      }
    ],
    "authorContributionMap": {
      "joelczk": 78
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": "todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": "event"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "joelczk": 16
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": "java -classpath ..\\bin Duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelczk"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelczk"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "joelczk": 21
    }
  },
  {
    "path": "text-ui-test/test.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "THIS IS A TEST FILE FOR MERGING"
      }
    ],
    "authorContributionMap": {
      "joelczk": 1
    }
  },
  {
    "path": "text-ui-test/test2.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "This is a testfile no 2 for merging"
      }
    ],
    "authorContributionMap": {
      "joelczk": 1
    }
  },
  {
    "path": "text-ui-test/test3.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "This is the testfile 3 for merge"
      }
    ],
    "authorContributionMap": {
      "joelczk": 1
    }
  }
]

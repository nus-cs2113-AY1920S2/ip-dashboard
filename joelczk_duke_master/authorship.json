[
  {
    "path": "database.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "[T],true,say hello,"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": "[T],true,read book,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "[E],true,say hello,sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": "[D],false,submit assignment ,Sunday"
      }
    ],
    "authorContributionMap": {
      "joelczk": 4
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public Deadline(String description,boolean isDone, String by) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String storeText() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return \"[D],\" + super.getStatus() + \",\" + super.getDescription() + \",\" + by;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return \"[D][ \" + super.getStatusIcon() + \" ] \" + super.getDescription() + \"(By: \" + getBy() + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelczk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelczk": 29
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    private UI userInterface;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    private DukeExceptions dukeExceptions;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        userInterface \u003d new UI();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        dukeExceptions \u003d new DukeExceptions();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        userInterface.printGreetingMessage();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        tasks.list();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        userInterface.printLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            String input \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            parser.updateInput(input);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            userInterface.printLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            if (parser.isBye()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                userInterface.printLeavingMessage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                userInterface.printLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            } else if (parser.isList()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                tasks.list();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            } else if (parser.isDone()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                tasks.getDoneExceptions(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            } else if (parser.isToDo()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                tasks.getToDoExceptions (input);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            } else if (parser.isEvent()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                tasks.getEventExceptions(input);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            } else if (parser.isDeadline()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                tasks.getDeadlineExceptions(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            } else if(parser.isDelete()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                tasks.getDeleteExceptions(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                dukeExceptions.printInvalidInput();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            userInterface.printLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        Duke dukeFeatures \u003d new Duke();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        dukeFeatures.run();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelczk": 51,
      "-": 11
    }
  },
  {
    "path": "src/main/java/DukeExceptions.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "public class DukeExceptions {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public DukeExceptions() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        this.input \u003d null;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void printListExceptions() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" [Warning: There are currently no tasks!]\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void printDoneExceptions() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" [Warning: The task(s) has already been marked as done]\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void printIOBDoneExceptions(String input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Command Entered: \" + input);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" [Error: Specifier entered is out of range]\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" done: marks task to be completed\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Parameters: done [TASK NUMBER]\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Example: done 1\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void printNFEDoneExceptions(String input) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Command Entered: \" + input);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" [Error: Specifier entered is not a numerical value]\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" done: marks task to be completed\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Parameters: done [Specifier]\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Example: done 1\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void printToDoExceptions(String input) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Command Entered: \" + input);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" [Error: Missing specifier(s)]\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" todo: Adds todo items\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Parameters: todo [description]\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Example: todo read book\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void printEventExceptions(String errorMessage, String input) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Command Entered: \" + input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" [Error: \" + errorMessage + \"]\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" event: Adds event items\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Parameters: event [description] /at [date/time]\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Example: event project meeting /at Mon 2-4pm\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Disclaimer: Description field can be left empty\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void printDeadlineExceptions(String errorMessage, String input) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Command entered: \" + input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" [Error: \" + errorMessage + \"]\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" event: Adds deadline\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Parameters: deadline [description] /by [date]\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Example: deadline return book /by Sunday\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Disclaimer: Description field can be left empty\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void printIOBDeleteExceptions(String input) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Command Entered: \" + input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" [Error: Specifier entered is out of range]\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" delete: deletes task from stored list\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Parameters: delete [TASK NUMBER]\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Example: delete 1\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void printNFEDeleteExceptions(String input) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Command Entered: \" + input);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" [Error: Specifier entered is not a numerical value]\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" delete: deletes task from stored list\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Parameters: delete [TASK NUMBER]\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Example: delete 1\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void printInvalidInput() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" [WARNING: INVALID INPUT]\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Here are the command list:\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\"   1. todo: Creates a todo activity[Syntax: todo {description}]\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\"   2. deadline: Creates a deadline activity[Syntax: deadline {description} /by\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                           + \" {deadline}]\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\"   3. event: Creates an event activity[Syntax: event {description} /at {time/date}]\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\"   4. done: Mark event as done[Syntax: done {index of task}]\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\"   5. delete: removes task from list[Syntax: delete {index of task}]\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\"   6. list: displays list of all tasks[Syntax: list]\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\"   7. save: save list of tasks[Syntax: save]\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joelczk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelczk": 86
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected String eventDetails;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public Event(String description, String eventDetails) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        this.eventDetails \u003d eventDetails;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public Event(String description, boolean isDone, String eventDetails) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        this.eventDetails \u003d eventDetails;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String getEventDetails() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return eventDetails;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return \"[E][ \" + super.getStatusIcon() + \" ] \" + super.getDescription() + \"(at: \" + getEventDetails() + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String storeText() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return \"[E],\" +  super.getStatus() + \",\" + super.getDescription() + \",\" + getEventDetails();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelczk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelczk": 28
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected String firstWord;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        this.input \u003d null;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        this.firstWord \u003d null;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String getFirstWord() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String removeTrailingSpaces \u003d input.trim();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String [] words \u003d removeTrailingSpaces.split(\" \");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String firstWord \u003d words[0].toLowerCase();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return firstWord;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void updateInput(String input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        this.firstWord \u003d getFirstWord();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public boolean isBye() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return firstWord.equals(\"bye\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public boolean isList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return firstWord.equals(\"list\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return firstWord.equals(\"done\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public boolean isToDo() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return firstWord.equals(\"todo\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public boolean isEvent() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return firstWord.equals(\"event\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public boolean isDeadline() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return firstWord.equals(\"deadline\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public boolean isDelete() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return firstWord.equals(\"delete\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joelczk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelczk": 50
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected File file;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected ArrayList \u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        file \u003d new File(\"database.txt\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        filePath \u003d file.getAbsolutePath();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void save(ArrayList \u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                fileWriter.write(task.storeText());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelczk"
        },
        "content": "                fileWriter.write(System.lineSeparator());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            System.out.println(\" [Error \" + exception.getMessage() + \"] \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            System.out.println(\" Please contact the systems adminstrator for assistance\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void addTask(String input, ArrayList \u003cTask\u003e tasksList) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String [] parameters \u003d input.split(\",\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String type \u003d parameters[0];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        boolean isDone \u003d Boolean.parseBoolean(parameters[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String description \u003d parameters[2];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        if (type.equals(\"[T]\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            ToDo existingToDo \u003d new ToDo(description, isDone);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            tasksList.add(existingToDo);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } else if (type.equals(\"[E]\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            String eventDetails \u003d parameters[3];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            Event existingEvent \u003d new Event(description, isDone, eventDetails);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            tasksList.add(existingEvent);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            String by \u003d parameters[3];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            Deadline existingDeadline \u003d new Deadline(description, isDone, by);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            tasksList.add(existingDeadline);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void restoreArray(Scanner fileReader, ArrayList \u003cTask\u003e tasksList) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        while (fileReader.hasNextLine()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            String input \u003d fileReader.nextLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            addTask(input, tasksList);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public ArrayList \u003cTask\u003e loadTasks() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        ArrayList \u003cTask\u003e tasksList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            Scanner fileReader \u003d new Scanner(file);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            restoreArray(fileReader, tasksList);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            fileReader.close();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } catch (FileNotFoundException exception) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            System.out.println(\" [Warning: File not found]\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } catch (Exception exception) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            System.out.println(\" [Warning: File not found]\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return tasksList;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joelczk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelczk": 74
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public Task (String description, boolean isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return \"[ \" + getStatusIcon() + \" ] \" + getDescription();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String storeText() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return isDone + \",\" + getDescription();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelczk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelczk": 39
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected Event newEvent;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected ToDo newToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected Deadline newDeadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected DukeExceptions dukeExceptions;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        dukeExceptions \u003d new DukeExceptions();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public int getIndex (String input, int position) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String removeTrailingSpaces \u003d input.trim();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String numericalIndex \u003d removeTrailingSpaces.substring(position,input.length()).trim();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        int index \u003d Integer.valueOf(numericalIndex) - 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void markAsDone(int index) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        Task completedTask \u003d tasks.get(index);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        boolean isCompleted \u003d completedTask.getStatus();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        if (isCompleted) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            dukeExceptions.printDoneExceptions();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            completedTask.markAsDone();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            tasks.set(index, completedTask);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            System.out.println(\" Duke has marked the following tasks as done:\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            System.out.println(\"  \" + completedTask);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void addToDo(String input) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String removeTrailingSpaces \u003d input.trim();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String description \u003d removeTrailingSpaces.substring(5, input.length());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        newToDo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        tasks.add(newToDo);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Got it! I have added the following tasks: \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println( newToDo);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\"There are currently \" + tasks.size() + \" task(s) queued\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void addEvent(String input) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String description \u003d input.substring(5, input.length()).trim();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        int index \u003d description.indexOf(\"/\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String details \u003d description.substring(0, index).trim();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String specifier \u003d description.substring(index + 1, index + 3);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String time \u003d description.substring(index + 3, description.length()).trim();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        boolean isAt \u003d specifier.toLowerCase().equals(\"at\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        if (details.isEmpty() || time.isEmpty() || !isAt) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            String errorMessage \u003d \"Missing placeholder\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            dukeExceptions.printEventExceptions(errorMessage, input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            newEvent \u003d new Event(details, time);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            tasks.add(newEvent);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            System.out.println(\" New task has been added:\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            System.out.println(\" \" + newEvent);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            System.out.println(\" There are currently \" + tasks.size() + \" task(s) being queued\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void addDeadline(String input) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String description \u003d input.substring(9, input.length()).trim();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        int index \u003d description.indexOf(\"/\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String details \u003d description.substring(0, index);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String day \u003d description.substring(index + 3, description.length()).trim();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        String specifier \u003d description.substring(index + 1, index + 3);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        boolean isBy \u003d specifier.toLowerCase().equals(\"by\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        if (details.isEmpty() || day.isEmpty() || !isBy) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            String errorMessage \u003d \"Missing placeholder\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            dukeExceptions.printDeadlineExceptions(errorMessage, input);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            newDeadline \u003d new Deadline(details, day);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            tasks.add(newDeadline);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            System.out.println(\" Got it!I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            System.out.println(\" \" + newDeadline);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            System.out.println(\" There are currently \" + tasks.size() + \" task(s) being queued\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void deleteItem(int index) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        Task deletedTask \u003d tasks.get(index);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        int length \u003d tasks.size() - 1;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" Got it!I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" \" + deletedTask);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(\" There are currently \" + length + \" task(s) being queued\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void printTasks() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        int position \u003d 1;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        for (Task text: tasks) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            System.out.println(\"    \" + position + \". \" + text);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            position ++;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void list() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        tasks \u003d storage.loadTasks();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            dukeExceptions.printListExceptions();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            System.out.println(\" Here are the list of tasks:\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            printTasks();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void getDoneExceptions(String input) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            int index \u003d getIndex(input,5);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            markAsDone(index);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } catch(IndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            dukeExceptions.printIOBDoneExceptions(input);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } catch (NumberFormatException exception) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            dukeExceptions.printNFEDoneExceptions(input);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void getToDoExceptions(String input) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            addToDo(input);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } catch (StringIndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            dukeExceptions.printToDoExceptions(input);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void getEventExceptions(String input) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            addEvent(input);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } catch (IndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            String errorMessage \u003d \"Missing specifier(s)\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            dukeExceptions.printEventExceptions(errorMessage, input);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void getDeadlineExceptions(String input) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            addDeadline(input);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } catch (IndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            String errorMessage \u003d \"Missing specifier(s)\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            dukeExceptions.printDeadlineExceptions(errorMessage, input);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void getDeleteExceptions(String input) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            int index \u003d getIndex(input, 6);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            deleteItem(index);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } catch (IndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            dukeExceptions.printIOBDeleteExceptions(input);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        } catch (NumberFormatException exception) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "joelczk"
        },
        "content": "            dukeExceptions.printNFEDeleteExceptions(input);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "joelczk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelczk": 164
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        super(description , isDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return \"[T][ \" + super.getStatusIcon() + \" ] \" + super.getDescription();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public String storeText() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        return \"[T],\" + super.getStatus() + \",\" + super.getDescription() + \",\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelczk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelczk": 22
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected String leavingMessage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected String boundary;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected String firstGreetingMessage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected String secondGreetingMessage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    protected String line;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        leavingMessage \u003d \" Bye! Duke is now a freeeeee elf again!!!!\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        boundary \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        firstGreetingMessage \u003d \" Hi! I am Duke, your next doooooorrrr friendly elf.....I mean bot\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        secondGreetingMessage \u003d \" How may Dukeeeeee help you today?\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        line \u003d \"____________________________________________________________________________________________\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(boundary);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void printGreetingMessage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(firstGreetingMessage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(secondGreetingMessage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    public void printLeavingMessage() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelczk"
        },
        "content": "        System.out.println(leavingMessage);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelczk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelczk": 27
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": " Hi! I am Duke, your next doooooorrrr friendly elf.....I mean bot"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": " How may Dukeeeeee help you today?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": "_______________________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": " [Warning: There are currently no tasks!]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": " [Error: java.lang.IndexOutOfBoundsException: Index -1 out of bounds for length 0]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": " Please check your input!"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelczk"
        },
        "content": " Got it! I have added the following tasks: "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelczk"
        },
        "content": "[T][ ? ] read book"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelczk"
        },
        "content": "There are currently 1 task(s) queued"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelczk"
        },
        "content": " [Error: java.lang.StringIndexOutOfBoundsException: begin 5, end 4, length 4]"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelczk"
        },
        "content": " Please check your input!"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelczk"
        },
        "content": " Got it!I\u0027ve added this task:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelczk"
        },
        "content": " [D][ ? ] return book (By: Sunday)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelczk"
        },
        "content": " There are currently 2 being queued"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelczk"
        },
        "content": " [Error: java.lang.StringIndexOutOfBoundsException: begin 9, end 8, length 8]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelczk"
        },
        "content": " Please check your input!"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelczk"
        },
        "content": " New task has been added:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelczk"
        },
        "content": " [E][ ? ] project meeting(At: Mon 2-4pm)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelczk"
        },
        "content": " There are currently 3 task(s) being queued"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelczk"
        },
        "content": " [Error: java.lang.StringIndexOutOfBoundsException: begin 0, end -1, length 0]"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelczk"
        },
        "content": " Please check your input!"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelczk"
        },
        "content": " Duke has marked the following tasks as done:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelczk"
        },
        "content": "  [T][ ? ] read book"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joelczk"
        },
        "content": " Duke has marked the following tasks as done:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joelczk"
        },
        "content": "  [E][ ? ] project meeting(At: Mon 2-4pm)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joelczk"
        },
        "content": " Here are the list of tasks:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    1. [T][ ? ] read book"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    2. [D][ ? ] return book (By: Sunday)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    3. [E][ ? ] project meeting(At: Mon 2-4pm)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joelczk"
        },
        "content": " [Warning: The task(s) has already been marked as done]"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joelczk"
        },
        "content": " Here are the list of tasks:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    1. [T][ ? ] read book"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    2. [D][ ? ] return book (By: Sunday)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    3. [E][ ? ] project meeting(At: Mon 2-4pm)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joelczk"
        },
        "content": " Duke has marked the following tasks as done:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joelczk"
        },
        "content": "  [D][ ? ] return book (By: Sunday)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joelczk"
        },
        "content": " [Error: java.lang.IndexOutOfBoundsException: Index 3 out of bounds for length 3]"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joelczk"
        },
        "content": " Please check your input!"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joelczk"
        },
        "content": " Bye! Duke is now a freeeeee elf again!!!!"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joelczk"
        },
        "content": " \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      }
    ],
    "authorContributionMap": {
      "joelczk": 78
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": "todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": "event"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "joelczk": 16
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelczk"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelczk"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelczk"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelczk"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelczk"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelczk"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelczk"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelczk"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelczk"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelczk"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelczk"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelczk"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelczk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelczk"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelczk"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "joelczk": 21
    }
  },
  {
    "path": "text-ui-test/test.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "THIS IS A TEST FILE FOR MERGING"
      }
    ],
    "authorContributionMap": {
      "joelczk": 1
    }
  },
  {
    "path": "text-ui-test/test2.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "This is a testfile no 2 for merging"
      }
    ],
    "authorContributionMap": {
      "joelczk": 1
    }
  },
  {
    "path": "text-ui-test/test3.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelczk"
        },
        "content": "This is the testfile 3 for merge"
      }
    ],
    "authorContributionMap": {
      "joelczk": 1
    }
  }
]

[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "src.main.java.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for src.main.java.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 2,
      "-": 37
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    archiveVersion \u003d \"0.1.1\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    implementation \u0027com.google.code.gson:gson:2.8.6\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 16,
      "-": 21
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### Help"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Fetch the command list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "### `Keyword` - Describe action"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "Describe action and its outcome."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Example of usage: `keyword (optional arguments)`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Expected outcome: `outcome`"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### `Bye` - Exits programme."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Programme closes."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Example of usage:  `bye`"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Expected outcome: `Programme closes`"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### `Clear` - Deletes all tasks in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Example of usage:  `clear`"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Expected outcome: `List becomes empty`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### `Deadline` - Creates task with a deadline."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "deadline [description] /by [date]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Example of usage:  `deadline tutorial /by 1/2/2020`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Expected outcome: `1. [D][✗] tutorial (by 1/2/2020)`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### `Delete` - Deletes task with task number."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "delete [number]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Example of usage:  `delete 1`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Expected outcome: `Deletes task numbered 1`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### `Done` - Marks task with task number as done."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "done [task number]"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Example of usage:  `done 1`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Expected outcome: `1. [D][✓] tutorial (by 1/2/2020)`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### `Event` - Creates task that is an event."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Event [description] /at [date] "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Example of usage:  `event party /at 1/2/2020`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Expected outcome: `1. [E][✗] party (at 1/2/2020)`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### `Find` - Returns list of tasks with keyword in name."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Find [keyword] "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Example of usage:  `find party`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Expected outcome: `1. [E][✗] party (at 1/2/2020)`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "### `Todo` - Creates task."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Todo [description] "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Example of usage:  `todo finish tutorial`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "Expected outcome: `1. [T][✗] finish tutorial`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 66,
      "-": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import Tasks.TaskList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import command.Controller;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import command.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import command.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private static int todoSize \u003d 0;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        Ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        TaskList taskListArrayList \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        Controller controller \u003d new Controller();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            taskListArrayList \u003d storage.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            userInput \u003d userInput.trim();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            System.out.println(controller.readInput(userInput, taskListArrayList));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            storage.save(taskListArrayList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        } while (!userInput.equalsIgnoreCase(\"bye\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        Ui.printBye();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 31,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 7
    }
  },
  {
    "path": "src/main/java/Tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public Deadline(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        super(description.substring(0, description.indexOf(\"/\")) + \"(\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                + description.substring(description.indexOf(\"/\") + 1) + \")\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return \"[D][\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 15
    }
  },
  {
    "path": "src/main/java/Tasks/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public Events(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        super(description.substring(0, description.indexOf(\"/\")) + \"(\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                + description.substring(description.indexOf(\"/\") + 1) + \")\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return \"[E][\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 13
    }
  },
  {
    "path": "src/main/java/Tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return (isDone ? \"✓\" : \"✗\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public boolean containsString(String userInput) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return this.description.toLowerCase().contains(userInput.toLowerCase());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 27
    }
  },
  {
    "path": "src/main/java/Tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import command.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public void removeTask(int i) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        this.tasks.remove(i);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public int getLength() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public void clearList() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        this.tasks.clear();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * Returns the Tasks in the TaskList as Strings."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public StringBuilder printList() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        StringBuilder string \u003d new StringBuilder();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            string.append(i + 1).append(\". \").append(this.tasks.get(i).toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return string;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return this.tasks.isEmpty();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public Task getTask(int i) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return this.tasks.get(i);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * finds tasks that have String userInput in the description."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * @param userInput : String that is provided by the user."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public Serializable find(String userInput) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        StringBuilder string \u003d new StringBuilder();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        int numberOfSimilarStrings \u003d 0;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        for (int i \u003d 0; i \u003c this.getLength(); i++) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            if (this.tasks.get(i).containsString(userInput)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                string.append(i + 1).append(\". \").append(this.tasks.get(i).toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                numberOfSimilarStrings++;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        if (numberOfSimilarStrings \u003d\u003d 0) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return Ui.NO_SIMILAR_LIST;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return string;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 72
    }
  },
  {
    "path": "src/main/java/Tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 14
    }
  },
  {
    "path": "src/main/java/command/Controller.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import Tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import Tasks.Events;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import Tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import Tasks.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "public class Controller {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * Method that reads the user\u0027s input to decide what the user wants to do with it."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * @param userInput : scanned user input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * @param taskListArrayList : ArrayList that stores all the user\u0027s tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * @return : returns the updated ArrayList."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public Serializable readInput(String userInput, TaskList taskListArrayList) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        String command \u003d parser.getCommand(userInput).toLowerCase();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            if (taskListArrayList.isEmpty()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                return Ui.EMPTY_LIST;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return taskListArrayList.printList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                int indexCompleted \u003d Integer.parseInt(userInput.substring(5));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                taskListArrayList.getTask(indexCompleted - 1).markAsDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                return Ui.LINE_SEPARATOR + \"\\nNice! I\u0027ve marked this task as done:\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                        + taskListArrayList.getTask(indexCompleted - 1).toString() + \"\\n\" + Ui.LINE_SEPARATOR;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                return Ui.NO_NUMBER;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                return Ui.OUT_OF_INDEX;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                int indexToDelete \u003d Integer.parseInt(userInput.substring(7));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                taskListArrayList.removeTask(indexToDelete - 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                return Ui.deleteTaskMessage(userInput, taskListArrayList);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                return Ui.NO_NUMBER;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                return Ui.OUT_OF_INDEX;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                userInput \u003d userInput.substring(5).trim();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                if (userInput.equals(\"\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                    throw new DukeException(Ui.EMPTY_STRING);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                ToDo t \u003d new ToDo(userInput);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                taskListArrayList.addTask(t);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                return Ui.addTaskMessage(userInput, taskListArrayList, t);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            } catch (DukeException | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                return Ui.EMPTY_STRING;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                userInput \u003d userInput.substring(9).trim();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                if (userInput.equals(\"\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                    throw new DukeException(Ui.EMPTY_STRING);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                Deadline d \u003d new Deadline(userInput);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                taskListArrayList.addTask(d);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                return Ui.addTaskMessage(userInput, taskListArrayList, d);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            } catch (DukeException | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                return Ui.EMPTY_STRING;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                userInput \u003d userInput.substring(6).trim();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                if (userInput.equals(\"\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                    throw new DukeException(Ui.EMPTY_STRING);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                Events e \u003d new Events(userInput);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                taskListArrayList.addTask(e);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                return Ui.addTaskMessage(userInput, taskListArrayList, e);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            } catch (DukeException | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                return Ui.EMPTY_STRING;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case \"clear\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            taskListArrayList.clearList();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return Ui.CLEAR_LIST;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            userInput \u003d userInput.substring(5).trim();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return taskListArrayList.find(userInput);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return Ui.HELP;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return Ui.DEFAULT;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 107
    }
  },
  {
    "path": "src/main/java/command/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public String getCommand(String input) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return input.split(\" \")[0].toLowerCase();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public String getDescription(String input) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return input.split(\" \")[1];"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public boolean hasDescription(String input) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return input.split(\" \").length \u003e 1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 17
    }
  },
  {
    "path": "src/main/java/command/RuntimeTypeAdapterFactory.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import com.google.gson.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import com.google.gson.internal.Streams;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import com.google.gson.reflect.TypeToken;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import com.google.gson.stream.JsonReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import com.google.gson.stream.JsonWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import java.util.LinkedHashMap;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "public final class RuntimeTypeAdapterFactory\u003cT\u003e implements TypeAdapterFactory {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private final Class\u003c?\u003e baseType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private final String typeFieldName;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private final Map\u003cString, Class\u003c?\u003e\u003e labelToSubtype \u003d new LinkedHashMap\u003cString, Class\u003c?\u003e\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private final Map\u003cClass\u003c?\u003e, String\u003e subtypeToLabel \u003d new LinkedHashMap\u003cClass\u003c?\u003e, String\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private final boolean maintainType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private RuntimeTypeAdapterFactory(Class\u003c?\u003e baseType, String typeFieldName, boolean maintainType) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        if (typeFieldName \u003d\u003d null || baseType \u003d\u003d null) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            throw new NullPointerException();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        this.baseType \u003d baseType;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        this.typeFieldName \u003d typeFieldName;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        this.maintainType \u003d maintainType;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * Creates a new runtime type adapter using for {@code baseType} using {@code"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * typeFieldName} as the type field name. Type field names are case sensitive."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * {@code maintainType} flag decide if the type will be stored in pojo or not."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static \u003cT\u003e RuntimeTypeAdapterFactory\u003cT\u003e of(Class\u003cT\u003e baseType, String typeFieldName, boolean maintainType) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return new RuntimeTypeAdapterFactory\u003cT\u003e(baseType, typeFieldName, maintainType);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * Creates a new runtime type adapter using for {@code baseType} using {@code"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * typeFieldName} as the type field name. Type field names are case sensitive."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static \u003cT\u003e RuntimeTypeAdapterFactory\u003cT\u003e of(Class\u003cT\u003e baseType, String typeFieldName) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return new RuntimeTypeAdapterFactory\u003cT\u003e(baseType, typeFieldName, false);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * Creates a new runtime type adapter for {@code baseType} using {@code \"type\"} as"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * the type field name."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static \u003cT\u003e RuntimeTypeAdapterFactory\u003cT\u003e of(Class\u003cT\u003e baseType) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return new RuntimeTypeAdapterFactory\u003cT\u003e(baseType, \"type\", false);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * Registers {@code type} identified by {@code label}. Labels are case"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * sensitive."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * @throws IllegalArgumentException if either {@code type} or {@code label}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     *     have already been registered on this type adapter."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public RuntimeTypeAdapterFactory\u003cT\u003e registerSubtype(Class\u003c? extends T\u003e type, String label) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        if (type \u003d\u003d null || label \u003d\u003d null) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            throw new NullPointerException();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        if (subtypeToLabel.containsKey(type) || labelToSubtype.containsKey(label)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            throw new IllegalArgumentException(\"types and labels must be unique\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        labelToSubtype.put(label, type);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        subtypeToLabel.put(type, label);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * Registers {@code type} identified by its {@link Class#getSimpleName simple"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * name}. Labels are case sensitive."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * @throws IllegalArgumentException if either {@code type} or its simple name"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     *     have already been registered on this type adapter."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public RuntimeTypeAdapterFactory\u003cT\u003e registerSubtype(Class\u003c? extends T\u003e type) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return registerSubtype(type, type.getSimpleName());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public \u003cR\u003e TypeAdapter\u003cR\u003e create(Gson gson, TypeToken\u003cR\u003e type) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        if (type.getRawType() !\u003d baseType) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        final Map\u003cString, TypeAdapter\u003c?\u003e\u003e labelToDelegate"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                \u003d new LinkedHashMap\u003cString, TypeAdapter\u003c?\u003e\u003e();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        final Map\u003cClass\u003c?\u003e, TypeAdapter\u003c?\u003e\u003e subtypeToDelegate"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                \u003d new LinkedHashMap\u003cClass\u003c?\u003e, TypeAdapter\u003c?\u003e\u003e();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        for (Map.Entry\u003cString, Class\u003c?\u003e\u003e entry : labelToSubtype.entrySet()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            TypeAdapter\u003c?\u003e delegate \u003d gson.getDelegateAdapter(this, TypeToken.get(entry.getValue()));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            labelToDelegate.put(entry.getKey(), delegate);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            subtypeToDelegate.put(entry.getValue(), delegate);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return new TypeAdapter\u003cR\u003e() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            @Override public R read(JsonReader in) throws IOException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                JsonElement jsonElement \u003d Streams.parse(in);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                JsonElement labelJsonElement;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                if (maintainType) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                    labelJsonElement \u003d jsonElement.getAsJsonObject().get(typeFieldName);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                    labelJsonElement \u003d jsonElement.getAsJsonObject().remove(typeFieldName);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                if (labelJsonElement \u003d\u003d null) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                    throw new JsonParseException(\"cannot deserialize \" + baseType"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                            + \" because it does not define a field named \" + typeFieldName);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                String label \u003d labelJsonElement.getAsString();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                @SuppressWarnings(\"unchecked\") // registration requires that subtype extends T"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                        TypeAdapter\u003cR\u003e delegate \u003d (TypeAdapter\u003cR\u003e) labelToDelegate.get(label);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                if (delegate \u003d\u003d null) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                    throw new JsonParseException(\"cannot deserialize \" + baseType + \" subtype named \""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                            + label + \"; did you forget to register a subtype?\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                return delegate.fromJsonTree(jsonElement);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            @Override public void write(JsonWriter out, R value) throws IOException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                Class\u003c?\u003e srcType \u003d value.getClass();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                String label \u003d subtypeToLabel.get(srcType);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                @SuppressWarnings(\"unchecked\") // registration requires that subtype extends T"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                        TypeAdapter\u003cR\u003e delegate \u003d (TypeAdapter\u003cR\u003e) subtypeToDelegate.get(srcType);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                if (delegate \u003d\u003d null) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                    throw new JsonParseException(\"cannot serialize \" + srcType.getName()"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                            + \"; did you forget to register a subtype?\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                JsonObject jsonObject \u003d delegate.toJsonTree(value).getAsJsonObject();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                if (maintainType) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                    Streams.write(jsonObject, out);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                JsonObject clone \u003d new JsonObject();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                if (jsonObject.has(typeFieldName)) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                    throw new JsonParseException(\"cannot serialize \" + srcType.getName()"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                            + \" because it already defines a field named \" + typeFieldName);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                clone.add(typeFieldName, new JsonPrimitive(label));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                for (Map.Entry\u003cString, JsonElement\u003e e : jsonObject.entrySet()) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                    clone.add(e.getKey(), e.getValue());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                Streams.write(clone, out);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }.nullSafe();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 154
    }
  },
  {
    "path": "src/main/java/command/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import Tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import Tasks.Events;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import Tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import Tasks.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import com.google.gson.GsonBuilder;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import com.google.gson.JsonParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import com.google.gson.reflect.TypeToken;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private String userDirectory;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    final RuntimeTypeAdapterFactory\u003cTask\u003e typeFactory \u003d RuntimeTypeAdapterFactory"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            .of(Task.class, \"Type\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            .registerSubtype(ToDo.class, \"todo\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            .registerSubtype(Deadline.class, \"deadline\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            .registerSubtype(Events.class, \"event\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    private Gson gson;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        gson \u003d new GsonBuilder().registerTypeAdapterFactory(typeFactory).create();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        userDirectory \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * Method that is responsible for saving data by using GSON library to convert to a human editable JSON"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * @param taskList : TaskList that is to be converted to a human editable JSON file"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public void save(TaskList taskList) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(userDirectory + \"/taskList.json\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            gson.toJson(taskList, fileWriter);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            fileWriter.flush();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * Method responsible for loading TaskList from the relative user directory."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * @throws FileNotFoundException : throws an exception when a file is not found and creates a new file."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public TaskList load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            FileReader fileReader \u003d new FileReader(userDirectory + \"/taskList.json\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            TaskList newTask \u003d gson.fromJson(fileReader, new TypeToken\u003cTaskList\u003e() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            }.getType());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return newTask;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            System.out.println(\"Opening a new file\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return new TaskList();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        } catch (JsonParseException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            System.out.println(\"It seems like your file is corrupted. \""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                    + \"I have re-written over it to make a new one.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            return new TaskList();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 71
    }
  },
  {
    "path": "src/main/java/command/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import Tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": " * Stores magic strings as constants to be returned as output."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static final String LINE_SEPARATOR \u003d \"----------------------------------------------\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static final String HELP \u003d \"1. \\\"list\\\" to display To Do List\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \"2. \\\"done [index]\\\" to mark as done\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \"3. \\\"todo\\\" or \\\"deadline [string] /by [date/time]\\\" \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \"or \\\"event [string] /at [date/time]\\\" to add to list\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \"4. \\\"delete [index]\\\"to delete\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \"5. \\\"help\\\" to look at possible commands\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \"6. \\\"find [string]\\\" to find in your list\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \"7. \\\"clear\\\" to clear the list\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \"8. \\\"bye\\\" to exit\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static final String EMPTY_LIST \u003d LINE_SEPARATOR + \"\\nYour list is empty bruhh\\n\" + LINE_SEPARATOR;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static final String NO_NUMBER \u003d LINE_SEPARATOR"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \"\\nYou did not enter a number. Try again!!\\n\" + LINE_SEPARATOR;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static final String OUT_OF_INDEX \u003d LINE_SEPARATOR"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \"\\nThe index you entered does not exist??? Look at ur list properly lah\\n\" + LINE_SEPARATOR;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static final String EMPTY_STRING \u003d \"☹ OOPS!!! The description cannot be empty.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static final String DEFAULT \u003d LINE_SEPARATOR + \"\\nOOPS!!! I don\u0027t understand that, type help for help\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + LINE_SEPARATOR;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static final String CLEAR_LIST \u003d LINE_SEPARATOR + \"\\nYour list has been cleared\\n\" + LINE_SEPARATOR;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static final String NO_SIMILAR_LIST \u003d LINE_SEPARATOR"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "            + \"\\nI\u0027m unable to find what you are looking for :O\\n\" + LINE_SEPARATOR;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static String addTaskMessage(String userInput, TaskList taskListArrayList, Task t) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return \"Okie dokes, \\\"\" + userInput + \"\\\" has been added to your to do list:\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                + \"Now there are \" + taskListArrayList.getLength() + \" task(s) in your list\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * Returns a String that prints a message to tell the user that his command to delete a task is done."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * @param userInput : String that is scanned from the user."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * @param taskListArrayList : TaskList that contains all the tasks."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static String deleteTaskMessage(String userInput, TaskList taskListArrayList) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        return LINE_SEPARATOR + \"\\nNoted with thanks. This task is deleted liao: \""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                + userInput + \"\\nNow there are \" + taskListArrayList.getLength() + \" task(s) in your list\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                + LINE_SEPARATOR;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * Prints a welcome message to the user."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static void printWelcomeMessage() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        System.out.println(\"Hello from\\n\" + LOGO);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        System.out.println(LINE_SEPARATOR);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke, your personal assistant\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        System.out.println(\"1. \\\"list\\\" to display To Do List\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                + \"2. \\\"done [index]\\\" to mark as done\\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                + \"3. \\\"todo\\\" or \\\"deadline [string] /by [date/time]\\\" \""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                + \"or \\\"event [string] /at [date/time]\\\" to add to list\\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                + \"4. \\\"delete [index]\\\"to delete\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                + \"5. \\\"help\\\" to look at possible commands\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                + \"6. \\\"find [string]\\\" to find in your list\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                + \"7. \\\"clear\\\" to clear the list\\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "                + \"8. \\\"bye\\\" to exit\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        System.out.println(LINE_SEPARATOR);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static void printSeparator() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        System.out.println(LINE_SEPARATOR);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     * Prints a goodbye message to the user."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    public static void printBye() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        System.out.println(LINE_SEPARATOR);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        System.out.println(\"\\nBye. I hope to see u again soon ^^\\n\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "        System.out.println(LINE_SEPARATOR);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "DeetoMok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DeetoMok": 90
    }
  }
]

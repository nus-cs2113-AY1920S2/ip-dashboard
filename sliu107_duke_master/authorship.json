[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sliu107"
        },
        "content": "duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sliu107"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "sliu107": 2,
      "-": 37
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sliu107"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.excpetions.EmptyDescriptionException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            welcomeMessage();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            Scanner read\u003dnew Scanner(System.in);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            String command\u003dread.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            while(!command.equals(\"bye\")){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                printDividingLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                executeCommand(command);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                command\u003dread.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            writeFile();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            exitMessage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }catch (FileNotFoundException e){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            System.out.println(\"File can not be found!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }catch (IOException e){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            System.out.println(\"Something goes wrong.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private static void executeCommand(String command) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        String commandType \u003d commandDivider(command);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            switch(commandType) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                listTasks();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                doneTask(command);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                addToDo(command);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                addDeadline(command);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                addEvent(command);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                System.out.println(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            printDividingLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            System.out.println(\"Do you have any other commands? \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        } catch (EmptyDescriptionException e){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            System.out.println(\"Please re-enter your command with a description.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private static void writeFile() throws IOException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"./tasksList.txt\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        for (int i\u003d0;i\u003ctasks.size();i++){"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            if (tasks.get(i)!\u003dnull){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                fw.write(tasks.get(i).toString());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                fw.write(\"\\n\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private static void deleteTask(String command) throws EmptyDescriptionException{"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        if(command.indexOf(\" \")\u003d\u003d-1) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            System.out.println(\"☹ OOPS!!! Please specify the index of the task you want to delete.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        int index \u003d Integer.parseInt(command.split(\" \")[1])-1;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(tasks.remove(index));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        printNumOfTasks();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private static String commandDivider(String command){"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        if (command.contains(\" \")){"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sliu107"
        },
        "content": "             return command.substring(0,command.indexOf(\" \"));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            return command;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private static void printNumOfTasks(){"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"Now you have \"+tasks.size()+\" tasks in the list.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private static void addEvent(String command) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        if(command.indexOf(\" \")\u003d\u003d-1) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        String description\u003dcommand.substring(command.indexOf(\" \"),command.indexOf(\"/\"));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        String period\u003dcommand.substring(command.indexOf(\"/at\")+4);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        Event newEvent \u003d new Event(description, period);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        tasks.add(newEvent);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(newEvent);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        printNumOfTasks();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private static void addDeadline(String command) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        if(command.indexOf(\" \")\u003d\u003d-1) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        String description\u003dcommand.substring(command.indexOf(\" \"),command.indexOf(\"/\"));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        String by\u003dcommand.substring(command.indexOf(\"/by\")+4);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(description,by);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        tasks.add(newDeadline);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(newDeadline);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        printNumOfTasks();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private static void addToDo  (String command) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        if(command.indexOf(\" \")\u003d\u003d-1) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        String description\u003dcommand.substring(command.indexOf(\" \"));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        ToDo newTodo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        tasks.add(newTodo);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(newTodo);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        printNumOfTasks();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private static void doneTask(String command) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        String[] splitCommand\u003dcommand.split(\" \");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        int taskIndex\u003dInteger.parseInt(splitCommand[1])-1;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        if(taskIndex\u003c tasks.size()) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            tasks.get(taskIndex).markAsDone();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            System.out.println(\"  [\"+ tasks.get(taskIndex).getStatusIcon() + \"] \" + tasks.get(taskIndex).description);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            System.out.println(\"There is no task No.\"+(taskIndex+1));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private static void printDividingLine() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"------------***------------\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private static void listTasks() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        for(int i\u003d0;i\u003ctasks.size();i++){"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            if(tasks.get(i)\u003d\u003dnull){"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            System.out.println((i+1)+\". \"+tasks.get(i));"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private static void exitMessage() {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        printDividingLine();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        printDividingLine();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private static void welcomeMessage() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        printDividingLine();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Momo\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        printDividingLine();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sliu107": 176,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/excpetions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sliu107"
        },
        "content": "package duke.excpetions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sliu107"
        },
        "content": "public abstract class DukeException extends  Throwable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sliu107"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sliu107": 5
    }
  },
  {
    "path": "src/main/java/duke/excpetions/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sliu107"
        },
        "content": "package duke.excpetions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sliu107"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sliu107"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sliu107": 5
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sliu107"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sliu107"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public Deadline(String description,String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        this.by\u003dby;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        String taskType\u003d\"[D]\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        String detail \u003d taskType + \" [\" + getStatusIcon() + \"] \" + description+\" (by: \"+by+\" )\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        return detail;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sliu107"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sliu107": 17
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sliu107"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sliu107"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    protected String period;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public Event(String description,String period) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        this.period\u003dperiod;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        String taskType\u003d\"[E]\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        String detail \u003d taskType + \" [\" + getStatusIcon() + \"] \" + description+\" (at: \"+period+\")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        return detail;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sliu107"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sliu107": 17
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sliu107"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sliu107"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        this.description\u003ddescription;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        this.isDone\u003dfalse;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public String getStatusIcon(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        this.isDone\u003dtrue;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    abstract public String toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sliu107"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sliu107": 22
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sliu107"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sliu107"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        String taskType\u003d\"[T]\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        String detail \u003d taskType + \" [\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        return detail;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sliu107"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sliu107": 15
    }
  }
]

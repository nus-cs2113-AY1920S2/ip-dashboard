[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sliu107"
        },
        "content": "duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sliu107"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "sliu107": 2,
      "-": 37
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sliu107"
        },
        "content": "# Duke User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sliu107"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Duke is for those who prefer to use a desktop app to manage tasks. "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sliu107"
        },
        "content": "More importantly, Duke is optimized for those who prefer to work with a Command Line Interface (CLI). "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sliu107"
        },
        "content": "It includes features that help with making a list of tasks and searching tasks with keywords."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sliu107"
        },
        "content": "## 2. Quick Start"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Install `Java 11` or above and download most updated version of `Individual_Project.jar` "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sliu107"
        },
        "content": "from [sliu107 GitHub repository](https://github.com/sliu107/duke/releases)  "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sliu107"
        },
        "content": "## 3. Features "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sliu107"
        },
        "content": "### Feature 0 - Command Format"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sliu107"
        },
        "content": "* Words in `UPPER_CASE` are the parameters to be supplied by the user "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sliu107"
        },
        "content": "e.g `todo d/DESCRIPTION` `DESCRIPTION` is a parameter which can be used as `todo d/borrow some books`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sliu107"
        },
        "content": "* The order of the parameters matters. "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sliu107"
        },
        "content": "e.g.If the command specifies `deadline d/DESCRIPTION /b/BY`, `deadline b/BY /d/Description` is not acceptable."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sliu107"
        },
        "content": "### Feature 1 - Help"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Shows help message which includes examples of every kind of command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sliu107"
        },
        "content": "### Feature 2 - Adding a todo task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Adds a new todo task to Duke"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Format: `todo d/DESCRIPTION`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Example: `todo d/borrow some book`  "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Adds a todo task with description _borrow some book_"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sliu107"
        },
        "content": "### Feature 3 - Adding a deadline task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Adds a new deadline task to Duke"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Format: `deadline d/DESCRIPTION /b/BY` where `b/BY` has a format: `by YYYY-MM-DDTHH:MM:SS`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Example: `deadline d/return book /b/by 2020-03-02T11:00:00`  "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Adds a task with description `return book` and deadline `2020/03/02 11:00:00 `"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sliu107"
        },
        "content": "### Feature 4 - Adding an event"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Adds a new event to Duke"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Format: `event d/DESCRIPTION /a/AT` where `a/AT` has a format: `at YYYY-MM-DDTHH:MM:SS`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Example: `event d/group meeting /a/at 2020-03-02T14:00:00`  "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Adds an event with description `group meeting` and start time `2020/03/02 14:00:00`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sliu107"
        },
        "content": "### Feature 5 - Listing all the tasks"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Shows a list of tasks in the Duke."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sliu107"
        },
        "content": "### Feature 6 - Done a task"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Marks an existing task in the Duke as done."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Format: `done i/INDEX`  "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sliu107"
        },
        "content": "* Done the task at the specified INDEX."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sliu107"
        },
        "content": "* The index refers to the index number shown in the displayed task list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sliu107"
        },
        "content": "* The index must be a positive integer 1, 2, 3, …​"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Example: `done 2`  "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Marks the second task in the list as done."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sliu107"
        },
        "content": "### Feature 7 - Finding tasks"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Finds tasks by searching keywords."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Format: `find k/KEYWORDS`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Example: `find k/book`  "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Finds out the task with `book` in its description."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sliu107"
        },
        "content": "### Feature 8 - Printing tasks for a date"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Prints out all the tasks that occurs on a specific date."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Format: `show d/DATA` where `d/DATA` has a format `YYYY-MM-DD`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Example: `show 2020-03-04`  "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Prints out all the tasks that occurs on 2020/03/04."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sliu107"
        },
        "content": "### Feature 9 - Deleting a task"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Deletes an existing task from Duke."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Format: `delete i/INDEX`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sliu107"
        },
        "content": "* Deletes the task at the specified INDEX."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sliu107"
        },
        "content": "* The index refers to the index number shown in the displayed task list."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sliu107"
        },
        "content": "* The index must be a positive integer 1, 2, 3, …​"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Example: `delete 1`  "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Deletes the first task in the Duke."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sliu107"
        },
        "content": "### Feature 10 - Exit the program"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sliu107"
        },
        "content": "### Feature 11 - Saving the data"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Duke will save the data in the hard disk automatically every time before your exit the program."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sliu107"
        },
        "content": "There is no need to save manually."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sliu107"
        },
        "content": "### `help` - Giving help message"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Prints out examples of commands to help user familiar the format of commands."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sliu107"
        },
        "content": "             "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sliu107"
        },
        "content": "help"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sliu107"
        },
        "content": "------------***------------"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sliu107"
        },
        "content": "There are 10 types of commands；todo, deadline, event, list, find, show, done, delete, help and exit"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Followings are examples of commands:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sliu107"
        },
        "content": "todo : todo borrow books"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sliu107"
        },
        "content": "deadline : deadline return books /by 2020-03-02T11:00:00"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sliu107"
        },
        "content": "event : event group meeting /at 2020-03-03T14:00:00"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sliu107"
        },
        "content": "list: list"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sliu107"
        },
        "content": "find: find books"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sliu107"
        },
        "content": "show : show 2020-03-02"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sliu107"
        },
        "content": "done : done 2"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sliu107"
        },
        "content": "delete : delete 1"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sliu107"
        },
        "content": "help : help"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sliu107"
        },
        "content": "exit : bye"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sliu107"
        },
        "content": "------------***------------"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sliu107"
        },
        "content": "### `todo` - Adding a todo task"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Adds a new todo task to Duke"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sliu107"
        },
        "content": "todo borrow some books"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sliu107"
        },
        "content": "------------***------------"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sliu107"
        },
        "content": "[T] [✘]  borrow some books"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sliu107"
        },
        "content": "------------***------------"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sliu107"
        },
        "content": "### `deadline` - Adding a deadline task"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Adds a new deadline task to Duke"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sliu107"
        },
        "content": "deadline return books /by 2020-03-02T11:00:00"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sliu107"
        },
        "content": "------------***------------"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sliu107"
        },
        "content": "[D] [✘]  return books  (by: Mar. 2, 2020, 11:00:00 a.m.)"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sliu107"
        },
        "content": "------------***------------"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sliu107"
        },
        "content": "### `event` - Adding an event task"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Adds a new event task to Duke"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "sliu107"
        },
        "content": "event group meeting /at 2020-03-03T14:00:00"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "sliu107"
        },
        "content": "------------***------------"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "sliu107"
        },
        "content": "[E] [✘]  group meeting  (at: Mar. 3, 2020, 2:00:00 p.m.)"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "sliu107"
        },
        "content": "------------***------------"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "sliu107"
        },
        "content": "### `list` - Listing all the tasks"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Prints out a list of tasks with details."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "sliu107"
        },
        "content": "             "
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "sliu107"
        },
        "content": "list"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "sliu107"
        },
        "content": "------------***------------"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "sliu107"
        },
        "content": "1. [T] [✘]  borrow some book"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "sliu107"
        },
        "content": "2. [D] [✘]  return books  (by: Mar. 2, 2020, 11:00:00 a.m.)"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "sliu107"
        },
        "content": "3. [E] [✘]  group meeting  (at: Mar. 3, 2020, 2:00:00 p.m.)"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "sliu107"
        },
        "content": "------------***------------"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "sliu107"
        },
        "content": "### `done` - Done a task"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Mark a specific task as done."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "sliu107"
        },
        "content": "             "
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "sliu107"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "sliu107"
        },
        "content": "------------***------------"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "sliu107"
        },
        "content": "  [✓]  return books "
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "sliu107"
        },
        "content": "------------***------------"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "sliu107"
        },
        "content": "### `find` - Finding a task"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Searches for tasks with keywords and shows a list of tasks whose description contains the keyword."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "sliu107"
        },
        "content": "             "
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "sliu107"
        },
        "content": "find book"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "sliu107"
        },
        "content": "------------***------------"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "sliu107"
        },
        "content": "1. [T] [✘]  borrow some book"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "sliu107"
        },
        "content": "2. [D] [✓]  return books  (by: Mar. 2, 2020, 11:00:00 a.m.)"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "sliu107"
        },
        "content": "------------***------------"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "sliu107"
        },
        "content": "### `show` -Printing tasks due or occur on a date"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Prints out a list of tasks that due or occur on a specific dates with detailed information."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "sliu107"
        },
        "content": "             "
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "sliu107"
        },
        "content": "show 2020-03-02"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "sliu107"
        },
        "content": "------------***------------"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "sliu107"
        },
        "content": "[D] [✓] return books  (by: Mar. 2, 2020, 11:00:00 a.m.)"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "sliu107"
        },
        "content": "------------***------------"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "sliu107"
        },
        "content": "### `delete` -Deleting a taskDeleting a task"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Deletes an existing task from Duke."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "sliu107"
        },
        "content": "             "
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "sliu107"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "sliu107"
        },
        "content": "------------***------------"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Noted. I\u0027ve removed this task: "
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "sliu107"
        },
        "content": "[D] [✓] return books  (by: Mar. 2, 2020, 11:00:00 a.m.)"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "sliu107"
        },
        "content": "------------***------------"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "sliu107"
        },
        "content": "### `bye` -Exiting the program"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Saves the changes of the task list to local file before exiting the program and shows exit messages."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "sliu107"
        },
        "content": "             "
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "sliu107"
        },
        "content": "bye"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "sliu107"
        },
        "content": "------------***------------"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "sliu107"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "sliu107"
        },
        "content": "------------***------------"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "sliu107"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "sliu107": 249,
      "-": 12
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sliu107"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.excpetions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sliu107"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sliu107"
        },
        "content": " * This is the main class of the software. A duke object is a tool to list and manage tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sliu107"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sliu107"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * A constructor which create a Duke from a file which always keeps track with users tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * If this is the first time using Duke and there is not such a file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * The constructor will create a new one and set an empty task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param filePath the filePath of the file which Duke loads the data from when starts up"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        new Duke(\"data/tasksList.txt\").run();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * The main logic of the software. It will terminate when users type \"bye\", the exit command."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * It will give an error message when the command is not acceptable."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public void run(){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        Ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        while(!isExit){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                Ui.showLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                c.execute(tasks);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                ui.showError();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            }finally{"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public TaskList getTasks() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sliu107": 62,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sliu107"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.command.ManageCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.command.WrongCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.excpetions.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sliu107"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * Returns a command which contains the information extract from the users\u0027 input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * If the command given is meaningless or is not in the right format, then it will return a wrong command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param fullCommand The input given by the users."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @return A command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @throws DukeException If the input gives an unacceptable command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            if (fullCommand.contains(\" \")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                return parseLongCommand(fullCommand);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                return parseShortCommand(fullCommand);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        } catch (DukeException e){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            Ui.showError();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            return new WrongCommand(\"wrong\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * Parse an input given by the users which has only one word."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param fullCommand The input given by the users."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @return A command interprets users\u0027 inputs."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @throws DukeException If the input given is not acceptable by the program."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private static Command parseShortCommand(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        switch(fullCommand){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            return new ManageCommand(fullCommand,-1,null,null);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            return new ExitCommand(\"bye\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            return new ManageCommand(\"help\",-1,null,null);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * Parse an input given by the users which has more than one word."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param fullCommand The input given by the users."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @return A command interprets users\u0027 inputs."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @throws DukeException If the input given is not acceptable by the program."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private static Command parseLongCommand(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        String type \u003d fullCommand.substring(0, fullCommand.indexOf(\" \"));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        case \"show\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            return parseShowCommand(fullCommand);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            return parseDeleteCommand(fullCommand);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            return parseDoneCommand(fullCommand);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            return parseToDoCommand(fullCommand);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            return parseDeadlineCommand(fullCommand);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            return parseEventCommand(fullCommand);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            return parseFindCommand(fullCommand);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * Parse a long input which starts with \"find\"."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param fullCommand  The input given by the users."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @return A command interprets users\u0027 input."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private static Command parseFindCommand(String fullCommand) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        String description \u003d fullCommand.substring(fullCommand.indexOf(\" \")+1);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        return new ManageCommand(\"find\",-1,description,null);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * Parse a long input which starts with \"event\"."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param fullCommand  The input given by the users."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @return A command interprets users\u0027 input."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private static Command parseEventCommand(String fullCommand) throws DukeException{"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        if (fullCommand.contains(\"at\")){"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            String description \u003d fullCommand.substring(fullCommand.indexOf(\" \"),fullCommand.indexOf(\"/\"));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            String period \u003d fullCommand.substring(fullCommand.indexOf(\"/at\")+4);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            return new AddCommand(\"event\",description,period);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            System.out.println(\"Please specify the time period of this task.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            return new WrongCommand(\"wrong\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * Parse a long input which starts with \"deadline\"."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param fullCommand  The input given by the users."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @return A command interprets users\u0027 input."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private static Command parseDeadlineCommand(String fullCommand) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        if (fullCommand.contains(\"by\")){"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            String description \u003d fullCommand.substring(fullCommand.indexOf(\" \"),fullCommand.indexOf(\"/\"));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            String by \u003d fullCommand.substring(fullCommand.indexOf(\"/by\")+4);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            return new AddCommand(\"deadline\",description,by);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            System.out.println(\"Please specify the deadline of this task.\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            return new WrongCommand(\"wrong\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * Parse a long input which starts with \"todo\"."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param fullCommand  The input given by the users."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @return A command interprets users\u0027 input."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private static Command parseToDoCommand(String fullCommand) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        String description\u003dfullCommand.substring(fullCommand.indexOf(\" \"));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        return new AddCommand(\"todo\",description,null);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * Parse a long input which starts with \"done\"."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param fullCommand  The input given by the users."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @return A command interprets users\u0027 input."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private static Command parseDoneCommand(String fullCommand) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        int index \u003d Integer.parseInt(fullCommand.substring(fullCommand.indexOf(\" \")+1));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        return new ManageCommand(\"done\",index,null,null);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * Parse a long input which starts with \"delete\"."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param fullCommand  The input given by the users."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @return A command interprets users\u0027 input."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private static Command parseDeleteCommand(String fullCommand) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        int index \u003d Integer.parseInt(fullCommand.substring(fullCommand.indexOf(\" \")+1));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        return new DeleteCommand(\"delete\",index);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * Parse a long input which starts with \"todo\"."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param fullCommand  The input given by the users."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @return A command interprets users\u0027 input."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private static Command parseShowCommand(String fullCommand) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        String dateInString \u003d fullCommand.substring(fullCommand.indexOf(\" \")+1);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(dateInString);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        return new ManageCommand(\"show\",-1,null,date);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "sliu107"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sliu107": 173
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sliu107"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.excpetions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sliu107"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sliu107"
        },
        "content": " * Storage is a class that deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sliu107"
        },
        "content": " * This means the task list can be saved to the disk and the software can always keep track of it."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sliu107"
        },
        "content": " * The storage corresponds to a relative file path where the tasks\u0027 information stored."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sliu107"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sliu107"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public Storage(String filePath){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * Rewrite the file with current task list when the user gives an exit command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *This keeps the file always updated."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param usersTasks The current task list which is going to be saved into the file"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @throws IOException If the file can not be found or some other problems appears when trying to access the file"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public static void writeFile(TaskList usersTasks) throws IOException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        File filePath \u003d new File(\"data\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        if(!filePath.exists()){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            filePath.mkdir();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        File file \u003d new File(\"data/tasksList.txt\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        if(!file.exists()){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"data/tasksList.txt\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        for (Task task: usersTasks.getTasks()){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            if (task!\u003dnull){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                fw.write(task.toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                fw.write(\"\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * Loads the tasks from the file with given path."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * This rebuilds the task list to the state before the users last logged out"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @return A task list that the users saved last time"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @throws DukeException If the records given is not the correct format of task records."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException{"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            FileReader fr \u003d new FileReader(filePath);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            String nextLine\u003dbr.readLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            while(nextLine !\u003d null){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                loadSingleTask(nextLine,tasks);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                nextLine\u003dbr.readLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            fr.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }catch(FileNotFoundException e){"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            System.out.println(\"There is not a file to load.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            return tasks.getTasks();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }catch(IOException e){"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * This is a helper method of load."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * This method loads a single task to the task list according one line in the file."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param nextLine The records of a single task in the file."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param tasks The task list the new task is added into."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @throws DukeException If the records given is not the correct format of task records."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private void loadSingleTask(String nextLine,ArrayList\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        char taskType \u003dnextLine.charAt(1);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        char status \u003d nextLine.charAt(5);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        case \u0027T\u0027:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            description \u003d nextLine.substring(9);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            ToDo todo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            if(status\u003d\u003d\u0027\\u2713\u0027){"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                todo.markAsDone();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            tasks.add(todo);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        case \u0027D\u0027:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            description \u003d nextLine.substring(9,nextLine.indexOf(\" (\"));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            String byInString \u003d nextLine.substring(nextLine.indexOf(\"by\")+4,nextLine.indexOf(\")\"));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            LocalDateTime by \u003dLocalDateTime.parse(byInString,"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                    DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM,FormatStyle.MEDIUM));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            Deadline deadline \u003d new Deadline(description,by);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            tasks.add(deadline);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        case \u0027E\u0027:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            description \u003d nextLine.substring(9,nextLine.indexOf(\" (\"));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            String atInString \u003d nextLine.substring(nextLine.indexOf(\"at\")+4,nextLine.indexOf(\")\"));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            LocalDateTime at \u003dLocalDateTime.parse(atInString,"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                    DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM,FormatStyle.MEDIUM));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            Event event \u003d new Event(description,at);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            tasks.add(event);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sliu107"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sliu107": 129
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sliu107"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.command.ManageCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sliu107"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sliu107"
        },
        "content": " * TaskList contains the task list and it can handle many operations on tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sliu107"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sliu107"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        this.tasks\u003dtasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * This methods finds out all the deadline tasks or events which are due or holds"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * on the date given by the manage command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param manageCommand A \"show\" manage command which contains a specified date."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public void showOneDayTasks(ManageCommand manageCommand){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        LocalDate date \u003d manageCommand.getDate();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        for(Task task:tasks){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            boolean isDeadline \u003d (task.getCategory().equals(\"deadline\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            boolean isEvent \u003d (task.getCategory().equals(\"event\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            if(isDeadline){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                Deadline d \u003d (Deadline) task;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                LocalDate by \u003d d.getBy().toLocalDate();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                if(date.equals(by)){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                    System.out.println(d);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            if(isEvent){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                Event e \u003d (Event) task;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                LocalDate at \u003d e.getPeriod().toLocalDate();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                if(date.equals(at)){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                    System.out.println(e);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * Deletes a task from the current task list according to the index given by the command."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param deleteCommand A command which specifies the index of the task which is going to be deleted."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public void deleteTask(DeleteCommand deleteCommand) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        int index \u003d deleteCommand.getIndex()-1;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        if(index \u003c tasks.size()){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            System.out.println(tasks.remove(index));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            printNumOfTasks();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            System.out.println(\"There is not a task No.\"+deleteCommand.getIndex());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * The method prints out the number of the tasks in the task list."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public void printNumOfTasks(){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"Now you have \"+ tasks.size()+\" tasks in the list.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * Adds an event to the task list according to the command."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param addCommand A command including the description and time of the event to be added"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public void addEvent(AddCommand addCommand){"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        Event newEvent \u003d new Event(addCommand);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        getTasks().add(newEvent);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(newEvent);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        printNumOfTasks();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * Adds an deadline to the task list according to the command."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param addCommand A command including the description and due date of the deadline to be added"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public void addDeadline(AddCommand addCommand){"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(addCommand);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        getTasks().add(newDeadline);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(newDeadline);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        printNumOfTasks();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * Adds a todo task to the task list according to the command."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param addCommand A command including the description of the new todo task"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public void addToDo  (AddCommand addCommand){"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        ToDo newTodo \u003d new ToDo(addCommand);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        tasks.add(newTodo);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(newTodo);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        printNumOfTasks();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *Finds the specified task and mark it as done."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param manageCommand A command that specifies the index of the task which has been done."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public void doneTask(ManageCommand manageCommand) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        int taskIndex\u003dmanageCommand.getIndex()-1;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        if(taskIndex \u003c tasks.size()) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            getTasks().get(taskIndex).markAsDone();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            System.out.println(\"  [\"+ getTasks().get(taskIndex).getStatusIcon() + \"] \" + getTasks().get(taskIndex).getDescription());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            System.out.println(\"Sorry. There is no task No.\"+manageCommand.getIndex());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * Lists out all the tasks in the list with details."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public void listTasks() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"Here are the task(s) in your list:\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        for(int i \u003d 0; i\u003ctasks.size(); i++){"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            if(getTasks().get(i)\u003d\u003dnull){"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            System.out.println((i+1)+\". \"+ getTasks().get(i));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public void searchTasks(ManageCommand manageCommand){"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"Here are the matching task(s) in your list:\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        String searchTerm \u003d manageCommand.getKeywords();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        for(Task t : tasks){"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            String description \u003d t.getDescription();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            if (description.contains(searchTerm)){"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                System.out.print(index + \". \");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                System.out.println(t);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public void setTasks(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sliu107"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sliu107": 168
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sliu107"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sliu107"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sliu107"
        },
        "content": " *  Ui is a object which is responsible for interacting with the users."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sliu107"
        },
        "content": " *  A Ui object correspondents a scanner which get commands from users."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sliu107"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sliu107"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private Scanner read\u003dnew Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * Shows dividing line to make the output more readable."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public static void showLine() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"------------***------------\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * Shows exit message when users type \"bye\", the exit command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public static void exitMessage() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * Shows welcome message at the beginning and ask for users\u0027 command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public static void showWelcomeMessage() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"If you are a new user. Please type \u0027help\u0027 to view how to give a  correct command.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * Reads a command from user."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @return current command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public String readCommand(){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        command\u003dread.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * Prints out help message to show users the format of all kinds of commands."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public static void showHelpMessage(){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"There are 10 types of commands；todo, deadline, event, \" +"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                \"list, find, show, done, delete, help and exit\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"Followings are examples of commands:\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"todo : todo borrow books\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"deadline : deadline return books /by 2020-03-02T11:00:00\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"event : event group meeting /at 2020-03-03T14:00:00\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"list: list\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"find: find books\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"show : show 2020-03-02\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"done : done 2\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"delete : delete 1\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"help : help\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"exit : bye\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * An error message which will come out when there is some problem in the process of loading."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public void showLoadingError(){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\"There is something wrong during the loading process.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * An error message that reminds the users the command is not acceptable by Duke."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public static void showError() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        System.out.println(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sliu107"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sliu107": 81
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sliu107"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.excpetions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sliu107"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sliu107"
        },
        "content": " * A subtype of command which is used to add a new task to the task list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sliu107"
        },
        "content": " * Every add command includes description and time notes of a task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sliu107"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sliu107"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private String timeNotes;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * A constructor creates a new add command using string of type, description and time notoes."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param type The types of the add commands can be \"todo\", \"deadline\" and \"event\"."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param description A description about the content of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param timeNotes The time notes is null when adding a todo task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *                  The time notes refers to deadline when adding a deadline task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *                  and time period when adding an event."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public AddCommand(String type,String description,String timeNotes) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        super(type);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        this.timeNotes \u003d timeNotes;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *  This methods executes the add command that will add a respective type task to the type list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param tasks The task list where the execution will be done."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @throws DukeException If some command which are not acceptable are sent to execute."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public void execute(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        switch(type){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            tasks.addToDo(this);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            tasks.addDeadline(this);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            tasks.addEvent(this);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public String getTimeNotes() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        return timeNotes;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sliu107"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sliu107": 60
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sliu107"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.excpetions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sliu107"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sliu107"
        },
        "content": " * Command is an extract of users\u0027 inputs with all useful information."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sliu107"
        },
        "content": " * Command has a field \"type\" to mark the category of the command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sliu107"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sliu107"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public Command(String type){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * An abstract method to execute a command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param tasks The task list where the execution will be done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @throws DukeException If some command which are not acceptable are sent to execute."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    abstract public void execute(TaskList tasks) throws DukeException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * Returns a boolean whether the command is an exit command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @return A boolean tells whether the command is an exit command or not."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        return type.equals(\"bye\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sliu107"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sliu107": 38
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sliu107"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sliu107"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sliu107"
        },
        "content": " *  A subtype of command which is used to delete a task from the task list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sliu107"
        },
        "content": " *  Every delete command contains an index specifying the task to be deleted."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sliu107"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sliu107"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * A constructor creates a new delete command with type and index."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param type Mark the category of the delete command as \"delete\"."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param index The index of the task to be deleted."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public DeleteCommand(String type,int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        super(type);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        this.index\u003dindex;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * Deletes the specified task from the task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param tasks The task list where the execution will be done."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public void execute(TaskList tasks) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        tasks.deleteTask(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public int getIndex() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sliu107"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sliu107": 37
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sliu107"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sliu107"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sliu107"
        },
        "content": " *  A subtype of command which is used to exit the software."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sliu107"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sliu107"
        },
        "content": "public class ExitCommand extends Command{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *  A constructor to create a new exit command with type \"bye\"."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param type The type of the exit command, always be \"bye\"."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public ExitCommand(String type) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        super(type);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * Executes an exit command which updates the file saved in the disk with current task list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * and then exit the software."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param tasks The task list where the execution will be done."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public void execute(TaskList tasks){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            Storage.writeFile(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            Ui.exitMessage();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }catch (IOException E){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            System.out.println(\"Something goes wrong.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sliu107"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sliu107": 38
    }
  },
  {
    "path": "src/main/java/duke/command/ManageCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sliu107"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.excpetions.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sliu107"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sliu107"
        },
        "content": " * A subtype of command which is used to manage the tasks already in the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sliu107"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sliu107"
        },
        "content": "public class ManageCommand extends Command{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private String keywords;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * A constructor that creates a manage command with type and index."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param type The type of a management command including : done ,list ,find and show."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param index For \"done\" command, it refers to the index number of the task to be done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *              And the index of any other types of management command should be -1."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param keywords It refers to the keyword the users want to search if the management command is type \"find\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *                 It should be null when the manage command is any other types."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param date It refers to the date of the users wan to search for if the management command is type \"show\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *             It should be null when the manage command is any other types."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public ManageCommand(String type, int index, String keywords, LocalDate date){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        super(type);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        this.keywords \u003d keywords;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * Execute a management command which do some operations on the current tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param tasks The task list where the execution will be done."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @throws DukeException If some command which are not acceptable are sent to execute."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public void execute(TaskList tasks) throws DukeException{"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        switch(type){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            tasks.doneTask(this);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            tasks.listTasks();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            tasks.searchTasks(this);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        case \"show\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            tasks.showOneDayTasks(this);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            Ui.showHelpMessage();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sliu107"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public int getIndex() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public String getKeywords() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        return keywords;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sliu107"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sliu107": 76
    }
  },
  {
    "path": "src/main/java/duke/command/WrongCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sliu107"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sliu107"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sliu107"
        },
        "content": " *  A subtype of command that can be used to store any kind of wrong command given bt the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sliu107"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sliu107"
        },
        "content": "public class WrongCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * A constructor creates a new wrong command with type \"wrong\"."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param type The type of the wrong command, always be \"wrong\"."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public WrongCommand(String type) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        super(type);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public void execute(TaskList tasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sliu107"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sliu107": 22
    }
  },
  {
    "path": "src/main/java/duke/excpetions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sliu107"
        },
        "content": "package duke.excpetions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sliu107"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sliu107"
        },
        "content": " * Represents the unique problems when running the software Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sliu107"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sliu107"
        },
        "content": "public  class DukeException extends  Throwable {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sliu107"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sliu107": 8
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sliu107"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sliu107"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sliu107"
        },
        "content": " * Deadline is a subtype of task which have a deadline."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sliu107"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sliu107"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private LocalDateTime by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * A constructor creates a new deadline with description and a deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param by The deadline of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public Deadline(String description,LocalDateTime by) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        this.category\u003d\"deadline\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        this.by\u003dby;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * A constructor creates a new deadline according to a command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param addCommand A command includes description and a deadline of a task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public Deadline(AddCommand addCommand){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        super(addCommand);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        this.by \u003d LocalDateTime.parse(addCommand.getTimeNotes());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        this.category\u003d\"deadline\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * Returns a string contains all the information of an deadline task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @return A string includes type, status ,description and deadline of the deadline task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        String taskType\u003d\"[D]\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        FormatStyle dateFormat \u003d FormatStyle.MEDIUM;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        FormatStyle timeFormat \u003d FormatStyle.MEDIUM;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        String detail \u003d taskType + \" [\" + getStatusIcon() + \"] \" + getDescription() +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                \" (by: \"+by.format(DateTimeFormatter.ofLocalizedDateTime(dateFormat,timeFormat))+\")\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        return detail;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public LocalDateTime getBy() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sliu107"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sliu107": 55
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sliu107"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sliu107"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sliu107"
        },
        "content": " * Event is a subtype of task with description and period."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sliu107"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sliu107"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private LocalDateTime period;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * A constructor create an event task using description and period."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param description A description of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param period The time period to do the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public Event(String description,LocalDateTime period) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        this.category\u003d\"event\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        this.period\u003dperiod;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * A constructor creates an event from an command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param addCommand An command which contains the description and time period of the task to add."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public Event(AddCommand addCommand){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        super(addCommand);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        this.period \u003d LocalDateTime.parse(addCommand.getTimeNotes());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        this.category\u003d\"event\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * Returns a string contains all the information of an event."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @return A string includes type, status ,description and time period of the event."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        String taskType\u003d\"[E]\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        FormatStyle dateFormat \u003d FormatStyle.MEDIUM;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        FormatStyle timeFormat \u003d FormatStyle.MEDIUM;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        String detail \u003d taskType + \" [\" + getStatusIcon() + \"] \" + getDescription() +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sliu107"
        },
        "content": "                \" (at: \"+period.format(DateTimeFormatter.ofLocalizedDateTime(dateFormat,timeFormat))+\")\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        return detail;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public LocalDateTime getPeriod() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        return period;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sliu107"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sliu107": 55
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sliu107"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sliu107"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sliu107"
        },
        "content": " * Task is an abstract type."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sliu107"
        },
        "content": " * This stipulates that every kind of task should have two basic information:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sliu107"
        },
        "content": " * description about the task and the state of the task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sliu107"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sliu107"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    protected String category;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * A constructor that creates a task with the description."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * And assume the task is not done at the time creating it."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param description A description about the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * Creates a task according to a command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param addCommand A command which includes the description of the task to add."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public Task(AddCommand addCommand){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        this.description \u003d addCommand.getDescription();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * Returns an icon according to the different status of a task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @return An icon represents the status of the task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public String getStatusIcon(){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        this.isDone\u003dtrue;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * Returns a string contains all the information of a todo task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @return A string includes type, status and description of the todo task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    abstract public String toString();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public String getCategory() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        return category;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sliu107"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sliu107": 65
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sliu107"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sliu107"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sliu107"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sliu107"
        },
        "content": " *  ToDo represents a task which is going to do without a specific time or deadline."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sliu107"
        },
        "content": " *  ToDo corresponds to a task which only have a description about it."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sliu107"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sliu107"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * A constructor that create a new todo task with a description."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param description The description about the task to do."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        this.category\u003d\"todo\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * A constructor that create a new todo task according a command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     * @param addCommand A command includes the description of the new todo task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sliu107"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public ToDo(AddCommand addCommand){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        super(addCommand);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        this.category\u003d\"todo\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sliu107"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        String taskType\u003d\"[T]\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        String detail \u003d taskType + \" [\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sliu107"
        },
        "content": "        return detail;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sliu107"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sliu107"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sliu107": 37
    }
  }
]

[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for Duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "andy-aw-why": 2
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    //id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "//checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "//    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "//}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    archiveVersion \u003d \"0.0.1\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    mainClassName \u003d \"Duke.Duke\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "andy-aw-why": 14
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "D | 0 | makesure | at 2018-12-19"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "E | 0 | makesure | by 1996-12-19"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "T | 1 | finally | kek 1915-02-19"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "D | 0 | asdasdsad | at 2020-12-19"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 4
    }
  },
  {
    "path": "src/main/java/Duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import Duke.TaskTypes.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import Duke.TaskTypes.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import Duke.TaskTypes.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import Duke.TaskTypes.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * Represents a command. The call for command execution is done through here too. It calls upon the {@link TaskList}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * class to do the actual executions."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * @see TaskList"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final String FIND \u003d \"find\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private String typeOfCommand;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private String descriptionOfCommand;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private String timeOfCommand;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private String number;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private LocalDate time;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private String[] splitCommand;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Set method to store the array containing the split input, where the input is split by space"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param splitCommand the array containing the input split by space"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void setSplitCommand(String[] splitCommand) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.splitCommand \u003d splitCommand;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Set method to store the type of command this command is, be it \u003ccode\u003eTODO,EVENT,LIST,DEADLINE,DONE,DELETE\u003c/code\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param typeOfCommand the type of command this command is supposed to be"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void setTypeOfCommand(String typeOfCommand) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.typeOfCommand \u003d typeOfCommand;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Set method to store the description for each command. Definition of description differs command by command"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * For \u003ccode\u003eTODO,EVENT,DEADLINE\u003c/code\u003e: the description refers to the action behind the type of command"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * For \u003ccode\u003eDONE,DELETE\u003c/code\u003e: the description refers to the task number of the task involved"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param descriptionOfCommand the description accompanying the command"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void setDescriptionOfCommand(String descriptionOfCommand) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.descriptionOfCommand \u003d descriptionOfCommand;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Set method to store the date of the command itself."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Note that said date should also contain the slash word too"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * For example: \u003ccode\u003e\"todo add things /by 2018-12-01\"\u003c/code\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003ccode\u003etimeOfCommand\u003c/code\u003e \u003d \"by 2018-12-01\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param timeOfCommand the date with the slash word"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void setTimeOfCommand(String timeOfCommand) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.timeOfCommand \u003d timeOfCommand;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Set method to store the entire user input"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param fullCommand the entire user input"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void setFullCommand(String fullCommand) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Set method for storing the task number specified in the command itself"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Only used for DELETE and DONE commands"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param s task number as specified in the command itself"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void setNumber(String s) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.number \u003d s;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Execute the actual user command. Need the list of task to modify the task in the task list (either"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * add/delete/update tasks) and to update the task list after the task is done"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param tasks list of Task"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws NumberFormatException exception only thrown for the DONE and DELETE if task number provided is not an"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *                               integer"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void execute(TaskList tasks) throws NumberFormatException, IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        switch (typeOfCommand.toLowerCase()) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            addToList(tasks);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            displayList(tasks);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            markTaskAsDone(tasks, this.number);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            deleteTask(tasks, this.number);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            findTask(tasks);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Create the task objects to be placed in the task list as specified by \u003ccode\u003etasks\u003c/code\u003e parameter"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param tasks the list of tasks"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Todo"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Deadline"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Event"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private void addToList(TaskList tasks) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        Task newTask \u003d null;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        switch (typeOfCommand.toLowerCase()) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            newTask \u003d new Todo(descriptionOfCommand, timeOfCommand);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            newTask \u003d new Deadline(descriptionOfCommand, timeOfCommand);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            newTask \u003d new Event(descriptionOfCommand, timeOfCommand);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        tasks.addTasks(newTask);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        Ui.displayTaskAdded(newTask);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Display all the tasks present in the tasklist through the {@link TaskList} object. If there is no task in the"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * tasklist, then it will display that there is nothing in it"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param tasks the list of tasks"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Ui"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private void displayList(TaskList tasks) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        int numberOfTasks \u003d tasks.getNumberOfTask();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (numberOfTasks \u003e 0) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            for (int i \u003d 0; i \u003c numberOfTasks; i++) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                Ui.displayEachTask(i, tasks);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } else if (numberOfTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            System.out.println(\"Nothing yet\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * This method marks a {@link Task} object (as chosen by its task number) in the {@link TaskList} list as \"done\". If"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * the task number given is not a number, an exception will be thrown."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Also, if the task number given does not correspond to any task in the tasklist, an error message will be shown"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * stating that the number chosen is out of range"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param tasks      the list of tasks"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param taskNumber the task number of the task to be marked as done"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws NumberFormatException the exception thrown when the task number given is not a number"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see NumberFormatException"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see IndexOutOfBoundsException"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private void markTaskAsDone(TaskList tasks, String taskNumber)"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            throws NumberFormatException, IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            int taskListNumber \u003d Integer.parseInt(taskNumber);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            tasks.markTaskAsDone(taskListNumber - 1);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            Ui.displayTaskMarkedAsDone(tasks, taskListNumber);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            throw new NumberFormatException(\"Done number field is not a number!\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            throw new IndexOutOfBoundsException(\"Task number chosen is out of range!\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Delete the task in the tasklist corresponding to \u003ccode\u003etaskNumber\u003c/code\u003e value given. Throws an exception when"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * the task number do not correspond to any actual task"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Likewise, if the task number chosen do not correspond to any task in the tasklist, an error message will be shown"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * stating that the number chosen is out of range"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param taskList   the list of tasks"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param taskNumber the task number of the task to be deleted"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws NumberFormatException the exception thrown when the task number chosen is not a number"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see NumberFormatException"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see IndexOutOfBoundsException"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private void deleteTask(TaskList taskList, String taskNumber)"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            throws NumberFormatException, IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            int currentNumberOfTasks \u003d taskList.getNumberOfTask();"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            int taskListNumber \u003d Integer.parseInt(taskNumber);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            /* Get name of the task that is going to be removed before it is removed */"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            String removedTask \u003d taskList.getTaskList().get(taskListNumber - 1).toString();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            taskList.removeTask(taskListNumber - 1);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            currentNumberOfTasks \u003d currentNumberOfTasks - 1;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            Ui.displayTaskRemoved(removedTask, currentNumberOfTasks);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            throw new NumberFormatException(\"Delete number field is not a number!\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            throw new IndexOutOfBoundsException(\"Task number chosen is out of range!\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Find a task in the task list given the user\u0027s input. It will display the list of possible tasks based on the"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * user\u0027s search term"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param tasks the list of task"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private void findTask(TaskList tasks) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        ArrayList\u003cTask\u003e findList \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        ArrayList\u003cString\u003e tempResults \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        /* Search each task by each task. If found a possible match, add it to the output list*/"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        for (Task checkTask : findList) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            if (checkTask.toString().contains(this.descriptionOfCommand)) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                tempResults.add(checkTask.toString());"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        /* If there is no task found, output that no task is found. Else, display all the outputs found*/"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (tempResults.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            Ui.displayNoResultReturned();"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            Ui.displayObtainedResults(tempResults);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 275
    }
  },
  {
    "path": "src/main/java/Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import Duke.Exception.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The main class that runs Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Create the respective classes that will be used in duke"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * The actual execution of Duke is summarised in this method. Duke is first entered, then the commands are fed till"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * the exit command is found. Finally, the duke exits"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        enterDuke();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        runDukeTillExit();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        exitDuke();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Display the welcome screen"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003eFollowed by importing the offline saved data into the list of tasks\u003c/p\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Ui"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see TaskList#setTaskList"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Storage#load"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private void enterDuke() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        Ui.displayHello();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        tasks.setTaskList(storage.load());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * The method where Duke reads and executes the user inputs"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003eWill keep running until \"bye\" is seen. Then, it will quit the duke program itself\u003c/p\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Ui#getUserInput()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Parser#parseUserInput"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Command#execute"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private void runDukeTillExit() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String userInput \u003d ui.getUserInput();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        while (parser.isNotBye(userInput)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                command \u003d parser.parseUserInput(userInput);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                command.execute(tasks);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            } catch (InvalidTaskException"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    | MissingDescriptionException"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    | MissingNumberFieldException"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    | MissingTimeFieldException"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    | NumberFormatException"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    | DateTimeException"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    | IndexOutOfBoundsException"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    | MissingSlashWordException m) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                Ui.displayExceptionError(m);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            Ui.displayPrompt();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            userInput \u003d ui.getUserInput();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * The method used to exit Duke. Occurs when the \"bye\" command is issued. It saves the task list and close the"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * scanner before saying goodbye"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Storage#save"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Ui#closeScanner"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Ui#displayGoodbye()"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private void exitDuke() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        storage.save(tasks.getTaskList(), tasks.getNumberOfTask());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        ui.closeScanner();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        Ui.displayGoodbye();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 99,
      "-": 1
    }
  },
  {
    "path": "src/main/java/Duke/Exception/InvalidTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package Duke.Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The custom exception thrown when the task supplied is not a valid task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class InvalidTaskException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public InvalidTaskException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 10
    }
  },
  {
    "path": "src/main/java/Duke/Exception/MissingDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package Duke.Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The custom exception thrown when the task is missing information in the description field"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class MissingDescriptionException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public MissingDescriptionException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 11
    }
  },
  {
    "path": "src/main/java/Duke/Exception/MissingNumberFieldException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package Duke.Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The custom exception thrown when for the \u003ccode\u003eDONE\u003c/code\u003e and \u003ccode\u003eDELETE\u003c/code\u003e task is missing the task number"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class MissingNumberFieldException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public MissingNumberFieldException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 10
    }
  },
  {
    "path": "src/main/java/Duke/Exception/MissingSlashWordException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package Duke.Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The custom exception thrown when no slash word is given despite expecting it"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class MissingSlashWordException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public MissingSlashWordException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 10
    }
  },
  {
    "path": "src/main/java/Duke/Exception/MissingTimeFieldException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package Duke.Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The custom exception thrown when the task is missing the date/time information when it is supposed/expected to have"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * it"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * \u003cp\u003eAs long as there is a \u003ccode\u003e\"/\"\u003c/code\u003e is provided, it is assumed that a date/time will be supplied. If there is"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * no \u003ccode\u003e\"/\"\u003c/code\u003e, then it is assumed the task do not have a date/time\u003c/p\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class MissingTimeFieldException extends Exception {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public MissingTimeFieldException(String s) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 14
    }
  },
  {
    "path": "src/main/java/Duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import Duke.Exception.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * Class used to parse the user input. Helps check for error as well as formatting the input for the {@link Command}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * class to use"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * When an error is found, it will throw the respective errors given"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * \u003c/p\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final int TYPE_OF_COMMAND \u003d 0;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final int TASK_NUMBER \u003d 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final String FIND \u003d \"find\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final int MISSING_SLASH \u003d 3;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final int DESCRIPTION \u003d 0;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final int TIME \u003d 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final int TIME_INCLUDED \u003d 2;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Parse the user input. It formats the user input so that it transform the user input (the task) to becomes a valid"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * executable command. Likewise, if there is any error in the user input, it will throw an exception and explain"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * what the error in the user input is ."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param userInput the raw user input"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return the formatted command stored in a {@link Command} class"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws InvalidTaskException        exception thrown when the task given is not a valid task and hence not a"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *                                     valid command"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws MissingDescriptionException exception thrown when the task given has no description attached to it"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *                                     despite expecting it"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws MissingNumberFieldException exception thrown when the task given lacks a number field. Only used for"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *                                     \u003ccode\u003eDELETE\u003c/code\u003e and \u003ccode\u003eDONE\u003c/code\u003e commands"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws MissingTimeFieldException   exception thrown when no date or time given despite expecting it"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Command"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public Command parseUserInput(String userInput)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            throws InvalidTaskException, MissingDescriptionException, MissingNumberFieldException,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            MissingTimeFieldException, DateTimeParseException, MissingSlashWordException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        Command command \u003d new Command();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        /* Format and split up the user input task so as to be checked by the validateTask method */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] spaceUserInputSplit \u003d splitTheUserInput(userInput);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] partialUserInputSplit \u003d splitTaskDescription(userInput);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        validateTask(spaceUserInputSplit, partialUserInputSplit);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        /* Once validated, format and prepare the command itself to be executed */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        command.setFullCommand(userInput);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        command.setSplitCommand(spaceUserInputSplit);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        command.setTypeOfCommand(spaceUserInputSplit[TYPE_OF_COMMAND]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        command.setDescriptionOfCommand(partialUserInputSplit[DESCRIPTION]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        command.setTimeOfCommand(partialUserInputSplit[TIME]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (spaceUserInputSplit[TYPE_OF_COMMAND].toLowerCase().equals(DONE) ||"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                spaceUserInputSplit[TYPE_OF_COMMAND].toLowerCase().equals(DELETE)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            command.setNumber(spaceUserInputSplit[TASK_NUMBER]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Check to see if the user input obtained does not equal to \"bye\". If it is \"bye\", it means the user wants to exit"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * duke"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Only used during the Ui loop to check if the user wants to exit"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param userInput the raw user input"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return \u003ccode\u003eTRUE\u003c/code\u003e if user wants to exit (user input \"bye\"), else \u003ccode\u003eFALSE\u003c/code\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public boolean isNotBye(String userInput) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return !userInput.equals(\"bye\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Split the array up by spaces."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Only usage is just to get the type of command"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param userInput the raw user input"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return the \u003ccode\u003eString[]\u003c/code\u003e array with the split user input"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private String[] splitTheUserInput(String userInput) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(System.lineSeparator());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return userInput.split(\" \");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Help split up the user input (without the type of command) so as to separate the description and time of the"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * task in the user\u0027s raw input, which makes it easier to use for command creation."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Not only that, the array also contains addition information such as whether if the time or slash word is"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * missing for input that expects them."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param input the user input without the type of command (\u003ccode\u003eTODO,DEADLINE,DONE\u003c/code\u003e etc...) in front of it"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return a \u003ccode\u003eString[]\u003c/code\u003e array which contains the separated user input."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private String[] splitTaskDescription(String input) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] returnSplit \u003d new String[4];"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        /* For the user input task that do not contain time/date */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (!input.contains(\"/\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            String[] obtainedDescription \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            /* Placing the description into the array */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            if (obtainedDescription.length \u003d\u003d 1 || obtainedDescription[1].isBlank()) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                returnSplit[DESCRIPTION] \u003d \"\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                returnSplit[DESCRIPTION] \u003d obtainedDescription[1].trim();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            /* Placing the leftover details into the array */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            returnSplit[TIME] \u003d \"\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            returnSplit[TIME_INCLUDED] \u003d \"\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            returnSplit[MISSING_SLASH] \u003d \"\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            return returnSplit;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        /* For the user input task that supposed to contain time/date */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] obtainedSplit \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] obtainedDescription \u003d obtainedSplit[0].split(\" \", 2);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        /* Placing the description into the array as well as the time */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (obtainedDescription.length \u003d\u003d 1 || obtainedDescription[1].isBlank()) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            returnSplit[DESCRIPTION] \u003d \"\";"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            returnSplit[TIME] \u003d \"\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            returnSplit[DESCRIPTION] \u003d obtainedDescription[1].trim();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            if (obtainedSplit.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                returnSplit[MISSING_SLASH] \u003d \"yes\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                returnSplit[TIME_INCLUDED] \u003d \"yes\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                returnSplit[TIME] \u003d \"\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                return returnSplit;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            } else if (Character.isWhitespace(obtainedSplit[1].charAt(0))) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                returnSplit[MISSING_SLASH] \u003d \"yes\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                returnSplit[MISSING_SLASH] \u003d \"\";"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            returnSplit[TIME] \u003d obtainedSplit[1].trim();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            returnSplit[TIME_INCLUDED] \u003d \"yes\";"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return returnSplit;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * The actual method used to check the task input by the user. If there is any error in the user input, it will"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * throw the respective exception calls"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param spaceUserInputSplit   the \u003ccode\u003eString[]\u003c/code\u003e array which contains the user input split by space (so as"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *                              to"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *                              obtain the type of command)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param partialUserInputSplit the \u003ccode\u003eString[]\u003c/code\u003e array which contains the user input split into its"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *                              description"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *                              and time/date"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws InvalidTaskException        exception thrown when the task given is not a valid task and hence not a"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *                                     valid command"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws MissingDescriptionException exception thrown when the task given has no description attached to it"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *                                     despite expecting it"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws MissingNumberFieldException exception thrown when the task given lacks a number field. Only used for"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *                                     \u003ccode\u003eDELETE\u003c/code\u003e and \u003ccode\u003eDONE\u003c/code\u003e commands"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws MissingTimeFieldException   exception thrown when no date or time given despite expecting it"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws MissingSlashWordException   exception thrown when no slash word is given despite expecting it"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private void validateTask(String[] spaceUserInputSplit, String[] partialUserInputSplit)"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            throws InvalidTaskException, MissingDescriptionException, MissingNumberFieldException,"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            MissingTimeFieldException, DateTimeParseException, MissingSlashWordException {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String nameOfTask \u003d spaceUserInputSplit[0].toLowerCase();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        /* Check if task type is supported by Duke */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (!nameOfTask.equals(TODO)"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                \u0026\u0026 !nameOfTask.equals(EVENT)"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                \u0026\u0026 !nameOfTask.equals(DEADLINE)"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                \u0026\u0026 !nameOfTask.equals(DONE)"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                \u0026\u0026 !nameOfTask.equals(LIST)"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                \u0026\u0026 !nameOfTask.equals(DELETE)"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                \u0026\u0026 !nameOfTask.equals(FIND)) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            throw new InvalidTaskException(\"Input is invalid. No such task\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            /* Check if the task has correct input */"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            if ((nameOfTask.toLowerCase().equals(DONE)"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    || nameOfTask.toLowerCase().equals(DELETE)) \u0026\u0026 spaceUserInputSplit.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                throw new MissingNumberFieldException(nameOfTask.toUpperCase() + \"\u0027s number field is empty!\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            } else if (isDescriptionBlank(partialUserInputSplit) \u0026\u0026 !nameOfTask.equals(LIST)) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                throw new MissingDescriptionException(\"Missing description!\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            } else if (nameOfTask.equals(TODO)"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    || nameOfTask.equals(EVENT)"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    || nameOfTask.toLowerCase().equals(DEADLINE)) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                if (partialUserInputSplit[TIME_INCLUDED].equals(\"yes\")) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    if (partialUserInputSplit[MISSING_SLASH].equals(\"yes\")) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        throw new MissingSlashWordException(\"Missing slash word!\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    String obtainedTime \u003d partialUserInputSplit[1];"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    String[] timeCheck \u003d obtainedTime.split(\" \", 2);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    if (timeCheck.length \u003d\u003d 1 || timeCheck[1].isBlank()) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        throw new MissingTimeFieldException(\"Missing time!\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        LocalDate d1 \u003d LocalDate.parse(timeCheck[1]);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    } catch (DateTimeParseException m) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        throw new DateTimeException("
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                                \"Date cannot be parsed! Make sure the format is correct! Format: yyyy-mm-dd\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Check if the description given the partial input array contains any description"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param partialDescriptionTaskArray the \u003ccode\u003eString[]\u003c/code\u003e array that contains the partial input"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return true if the description is blank. Else false"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private boolean isDescriptionBlank(String[] partialDescriptionTaskArray) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return partialDescriptionTaskArray[0].isBlank();"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 240
    }
  },
  {
    "path": "src/main/java/Duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import Duke.TaskTypes.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import Duke.TaskTypes.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import Duke.TaskTypes.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import Duke.TaskTypes.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The class used to load and store the data from the task list (the {@link TaskList} object\u0027s tasks)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final int SAVED_DESCRIPTION \u003d 2;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final int FIRST_LETTER_OF_TASK_TYPE \u003d 0;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final int IS_TASK_DONE \u003d 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final int SAVED_TIME \u003d 3;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final String ERROR_IN_WRITING_FILE \u003d \": Error in writing file!\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final String FILE_NOT_FOUND \u003d \": File not found!\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final int DESCRIPTION \u003d 2;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final int TIME \u003d 3;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String T \u003d \"T\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String E \u003d \"E\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String D \u003d \"D\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * The actual loading of the data from the saved data before return a task list. If there is no saved data present,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * this will return an empty task list. Else, it will load the tasks found in the task list and return the filled"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * task list"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return an \u003ccode\u003eArrayList\u003cTask\u003e\u003c/code\u003e containing the tasks. Will be empty if there is no saved tasks"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        Path path \u003d getSaveDataPath();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        boolean isFileExists \u003d checkIfDataFileExist(path);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        /* See if file actually exist. If it exist, load the data from the saved data. Else, just return the empty"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        ArrayList\u003cTask\u003e of tasks */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (isFileExists) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            File f \u003d new File(String.valueOf(path));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                Scanner s \u003d initializeFileScanner(f);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                while (s.hasNext()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    String[] obtainedLine \u003d extractData(s);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    String[] splitTaskDescriptionArray \u003d formatDescriptionAndTime(obtainedLine);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    /* Import the tasks into the task list and check if the task is saved as done. If it is so, mark"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    the task as done */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    importToList(taskList, splitTaskDescriptionArray);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                Ui.displayGenericException(e, FILE_NOT_FOUND);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * The actual saving of the tasks in the task list into the saved data file itself. It gets list of tasks from the"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003ccode\u003eArrayList\u003cTask\u003e\u003c/code\u003e of tasks"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param taskList      the \u003ccode\u003eArrayList\u003cTask\u003e\u003c/code\u003e of tasks"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param numberOfTasks the number of tasks in the arraylist. Needed for looping the task list itself. Also used to"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *                      check if the task list is empty or not"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e taskList, int numberOfTasks) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        Path directoryPath \u003d Paths.get(\"data\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        boolean isFileExists \u003d Files.exists(directoryPath);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        /* If there is no previous saved data, create the directory to store the saved data text file first before"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        doing the actual saving of data */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (!isFileExists) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            File directory \u003d new File(\"data\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            directory.mkdir();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        /* The actual writing of the task into the saved file */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        File f \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            FileWriter fw \u003d new FileWriter(f);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            /* If the task list is empty, the saved data will not contain anything in it. Hence, filewriter will just"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "             write a \"\" to the file */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            if (numberOfTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                fw.write(\"\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            /* Loop through the array list and store the tasks into the task list itself */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            for (int i \u003d 0; i \u003c numberOfTasks; i++) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                String[] getTaskInfo \u003d taskList.get(i).getTaskInfo();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                fw.write(getTaskInfo[FIRST_LETTER_OF_TASK_TYPE]"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + \" | \""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + getTaskInfo[IS_TASK_DONE]"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + \" | \""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + getTaskInfo[SAVED_DESCRIPTION]"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + \" | \""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + getTaskInfo[SAVED_TIME]"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + System.lineSeparator());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            Ui.displayGenericException(e, ERROR_IN_WRITING_FILE);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private Path getSaveDataPath() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return Paths.get(\"data\", \"duke.txt\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private boolean checkIfDataFileExist(Path path) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return Files.exists(path);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private Scanner initializeFileScanner(File f) throws FileNotFoundException {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return new Scanner(f);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Split a line of data by the \u003ccode\u003e|\u003c/code\u003e symbol to extract the data in it"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param s the line of data to be parsed"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return a \u003ccode\u003eString[]\u003c/code\u003e array that contains data upon the split"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private String[] extractData(Scanner s) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return s.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Get the type of task, is task done, its description and time (if present) from the line of data"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param obtainedLine the line of data to parsed in \u003ccode\u003eString[]\u003c/code\u003e format"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return a \u003ccode\u003eString[]\u003c/code\u003e array that contains the description and time as different array element"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private String[] formatDescriptionAndTime(String[] obtainedLine) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] splitTaskDescriptionArray \u003d new String[4];"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        splitTaskDescriptionArray[FIRST_LETTER_OF_TASK_TYPE] \u003d obtainedLine[0].trim();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        splitTaskDescriptionArray[IS_TASK_DONE] \u003d obtainedLine[1].trim();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        splitTaskDescriptionArray[DESCRIPTION] \u003d obtainedLine[2].trim();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (obtainedLine.length \u003d\u003d 4 \u0026\u0026 !obtainedLine[3].equals(\" \")) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            splitTaskDescriptionArray[TIME] \u003d obtainedLine[3].trim();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            splitTaskDescriptionArray[TIME] \u003d \"\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return splitTaskDescriptionArray;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * The actual method used to insert a task (from the imported data) into the task list."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param taskList                  the list of task to import the task into"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param splitTaskDescriptionArray the \u003ccode\u003eString[]\u003c/code\u003e array that contains the first letter of task type, is"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *                                  the task done, the description and (if present) time of the task itself"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private void importToList(ArrayList\u003cTask\u003e taskList, String[] splitTaskDescriptionArray) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        switch (splitTaskDescriptionArray[FIRST_LETTER_OF_TASK_TYPE]) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case T:"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            newTask \u003d new Todo(splitTaskDescriptionArray[DESCRIPTION], splitTaskDescriptionArray[TIME]);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            checkIfTaskDone(newTask, splitTaskDescriptionArray[IS_TASK_DONE]);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            taskList.add(newTask);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case E:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            newTask \u003d new Event(splitTaskDescriptionArray[DESCRIPTION], splitTaskDescriptionArray[TIME]);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            checkIfTaskDone(newTask, splitTaskDescriptionArray[IS_TASK_DONE]);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            taskList.add(newTask);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case D:"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            newTask \u003d new Deadline(splitTaskDescriptionArray[DESCRIPTION], splitTaskDescriptionArray[TIME]);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            checkIfTaskDone(newTask, splitTaskDescriptionArray[IS_TASK_DONE]);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            taskList.add(newTask);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            Ui.displayErrorImportingTask(splitTaskDescriptionArray[FIRST_LETTER_OF_TASK_TYPE]);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Check to see if the new imported task is marked as done. If it is so, mark it as done."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param newTask the new task to be checked"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param s       the status of task as obtained from the saved data"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Task#markAsDone"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private void checkIfTaskDone(Task newTask, String s) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (s.equals(\"1\")) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            newTask.markAsDone();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 205
    }
  },
  {
    "path": "src/main/java/Duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import Duke.TaskTypes.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The class to represent the list of tasks itself. This is also where the manipulation of the tasks in the task list is"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * actually done (other classes rely on this class {@link TaskList} to do the actual task list manipulations)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * Not only does it serves to add and view the tasks, it also edit the status of the tasks as well. For example, it"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * can get the number of tasks, mark tasks as done and remove the tasks in the tasklist"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * \u003c/p\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * @see ArrayList"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Get the list of tasks (which is stored as an \u003ccode\u003eArrayList\u003cTask\u003e\u003c/code\u003e)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return list of task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Set method for initializing the list of tasks itself"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param taskList the new list of tasks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void setTaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * To add a task into the task list"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param task the {@link Task} object to add into the task list"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void addTasks(Task task) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Get the number of tasks in the task list"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return the number of tasks present"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public int getNumberOfTask() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Mark the task chosen by the task number to be done"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param i the task number to be marked as done"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void markTaskAsDone(int i) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        taskList.get(i).markAsDone();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Remove the task corresponding to the task number given from the list of tasks"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param i the task number to be removed"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void removeTask(int i) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        taskList.remove(i);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 73
    }
  },
  {
    "path": "src/main/java/Duke/TaskTypes/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package Duke.TaskTypes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The \u003ccode\u003eDEADLINE\u003c/code\u003e type class"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * @see Task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    protected LocalDate actualTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    protected String slashWord;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (!this.by.equals(\"\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            String[] bySplit \u003d by.split(\" \", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            this.slashWord \u003d bySplit[0].trim();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            String tempTime \u003d bySplit[1].trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            this.actualTime \u003d LocalDate.parse(tempTime);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (by.equals(\"\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            return \"[D]\" + super.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] bySplit \u003d by.split(\" \", 2);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return \"[D]\" + super.toString() + \"(\" + this.slashWord + \": \" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                this.actualTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Gets the \u003ccode\u003eDEADLINE\u003c/code\u003e information stored nicely in a \u003ccode\u003eString[]\u003c/code\u003e array"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Used in the {@link Duke.Storage} class for retrieving the \u003ccode\u003eDEADLINE\u003c/code\u003e task\u0027s information to store it as"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * offline saved data"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return a \u003ccode\u003eString[]\u003c/code\u003e array containing the description, the time and whether the event is done"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Duke.Storage#save"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public String[] getTaskInfo() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] taskInfoArray \u003d new String[4];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        taskInfoArray[0] \u003d \"D\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (super.isDone) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            taskInfoArray[1] \u003d \"1\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            taskInfoArray[1] \u003d \"0\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        taskInfoArray[2] \u003d super.description;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        taskInfoArray[3] \u003d by;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return taskInfoArray;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 62
    }
  },
  {
    "path": "src/main/java/Duke/TaskTypes/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package Duke.TaskTypes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The \u003ccode\u003eEVENT\u003c/code\u003e type class"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * @see Task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    protected LocalDate actualTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    protected String slashWord;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public Event(String description, String by) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (!this.by.equals(\"\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            String[] bySplit \u003d by.split(\" \", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            this.slashWord \u003d bySplit[0].trim();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            String tempTime \u003d bySplit[1].trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            this.actualTime \u003d LocalDate.parse(tempTime);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (by.equals(\"\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            return \"[E]\" + super.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return \"[E]\" + super.toString() + \"(\" + this.slashWord + \": \" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                this.actualTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Gets the \u003ccode\u003eEVENT\u003c/code\u003e information stored nicely in a \u003ccode\u003eString[]\u003c/code\u003e array"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Used in the {@link Duke.Storage} class for retrieving the \u003ccode\u003eEVENT\u003c/code\u003e task\u0027s information to store it as"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * offline saved data"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return a \u003ccode\u003eString[]\u003c/code\u003e array containing the description, the time and whether the event is done"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Duke.Storage#save"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public String[] getTaskInfo() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] taskInfoArray \u003d new String[4];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        taskInfoArray[0] \u003d \"E\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (super.isDone) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            taskInfoArray[1] \u003d \"1\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            taskInfoArray[1] \u003d \"0\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        taskInfoArray[2] \u003d super.description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        taskInfoArray[3] \u003d by;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return taskInfoArray;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 61
    }
  },
  {
    "path": "src/main/java/Duke/TaskTypes/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package Duke.TaskTypes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The superclass of all the possible tasks that is stored in duke"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * \u003cp\u003eThis superclass is made abstract so as to prevent any tasks to be made to be just a superclass task. It forces the"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * tasks made to be one of the subclasses of tasks\u003c/p\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * This method gets overridden by its subclass. It returns the task\u0027s information in a nicely packaged"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003ccode\u003eString[]\u003c/code\u003e data structure that can be easily used"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003eUsed by the {@link Duke.Storage} \u003ccode\u003esave()\u003c/code\u003e function to save the task into the offline saved"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * data\u003c/p\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003eSee the respective subclasses for more details\u003c/p\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return the subclass will return its respective task information"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Todo"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Event"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Deadline"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Duke.Storage#save"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public abstract String[] getTaskInfo();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description + \" \";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 50
    }
  },
  {
    "path": "src/main/java/Duke/TaskTypes/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package Duke.TaskTypes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The \u003ccode\u003eTODO\u003c/code\u003e type class"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * @see Task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    protected LocalDate actualTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    protected String slashWord;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public Todo(String description, String by) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (!this.by.equals(\"\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            String[] bySplit \u003d by.split(\" \", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            this.slashWord \u003d bySplit[0].trim();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            String tempTime \u003d bySplit[1].trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            this.actualTime \u003d LocalDate.parse(tempTime);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (by.equals(\"\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return \"[T]\" + super.toString() + \"(\" + this.slashWord + \": \" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                this.actualTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Gets the \u003ccode\u003eTODO\u003c/code\u003e information stored nicely in a \u003ccode\u003eString[]\u003c/code\u003e array"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Used in the {@link Duke.Storage} class for retrieving the \u003ccode\u003eTODO\u003c/code\u003e task\u0027s information to store it as"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * offline saved data"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return a \u003ccode\u003eString[]\u003c/code\u003e array containing the description, the time and whether the event is done"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Duke.Storage#save"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public String[] getTaskInfo() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] taskInfoArray \u003d new String[4];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        taskInfoArray[0] \u003d \"T\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (super.isDone) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            taskInfoArray[1] \u003d \"1\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            taskInfoArray[1] \u003d \"0\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        taskInfoArray[2] \u003d super.description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        taskInfoArray[3] \u003d by;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return taskInfoArray;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 61
    }
  },
  {
    "path": "src/main/java/Duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import Duke.TaskTypes.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * Represent the UI that the user uses to interact with Duke. Contains the display methods and user input methods."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private Scanner myInput;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static void displayGenericException(Exception e, String s) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(\"Exception occurred: \" + e + s);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static void displayErrorImportingTask(String s) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(\"Error in importing this task! Task starts with: \" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                s);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Display the welcome screen"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static void displayHello() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke.Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Display the exit screen. Shown when the user exits"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static void displayGoodbye() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(System.lineSeparator());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon! Maybe next time\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Display to user what the exact task is added into the task list"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param newTask the {@link Task} object of containing the task itself"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Task"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static void displayTaskAdded(Task newTask) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \" + newTask.toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Display task based on the value of \u003ccode\u003ei\u003c/code\u003e, which is the task number"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param i     task number"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param tasks the list of tasks to be seen"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static void displayEachTask(int i, TaskList tasks) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                (i + 1) + \". \" + tasks.getTaskList().get(i).toString());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Confirmation message of task being marked as done"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param tasks          the list of tasks"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param taskListNumber task number that was marked as done"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static void displayTaskMarkedAsDone(TaskList tasks, int taskListNumber) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                \"Nice! I marked this as done: \" + tasks.getTaskList().get(taskListNumber - 1).toString());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Just a confirmation message to show that a task is successfully removed"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param removedTask          name of task removed"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param currentNumberOfTasks number of tasks left in the list upon successful task removal"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static void displayTaskRemoved(String removedTask, int currentNumberOfTasks) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                \"Noted. I removed this task: \""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + System.lineSeparator()"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + removedTask"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + System.lineSeparator()"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + \"Now you have \""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + currentNumberOfTasks"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + \" tasks in the list\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + System.lineSeparator());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * A message to prompt the user to enter the next command"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static void displayPrompt() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(\"What else do you want to do?\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static void displayNoResultReturned() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(\"This word/sentence is not found!\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static void displayObtainedResults(ArrayList\u003cString\u003e tempResults) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(tempResults.size() + \" task found! Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        for (String resultFound : tempResults) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            System.out.println(resultFound);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static void displayExceptionError(Exception m) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(\"Exception occurred: \" + m);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private Scanner initializeScanner() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return new Scanner(System.in);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Ui element to read and return the user input"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return the string containing the user input"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        myInput \u003d initializeScanner();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return myInput.nextLine();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Close the input scanner"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Only used once when Duke ends"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void closeScanner() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        myInput.close();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 142
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Hello! I\u0027m Duke.Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Got it. I\u0027ve added this task: [✘]add friend"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Got it. I\u0027ve added this task: [T][✘]add friend"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Got it. I\u0027ve added this task: [T][✘]funny things (at: 10pm)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Got it. I\u0027ve added this task: [E][✘]going to sleep (by: waaw)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Got it. I\u0027ve added this task: [D][✘]lol"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "1. [✘]add friend"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "2. [T][✘]add friend"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "3. [T][✘]funny things (at: 10pm)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "4. [E][✘]going to sleep (by: waaw)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "5. [D][✘]lol"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Nice! I marked this as done: [T][✓]add friend"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "1. [✘]add friend"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "2. [T][✓]add friend"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "3. [T][✘]funny things (at: 10pm)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "4. [E][✘]going to sleep (by: waaw)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "5. [D][✘]lol"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Bye. Hope to see you again soon! Maybe next time"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 52
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "add friend"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "todo add friend"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "todo funny things /at 10pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "event going to sleep /by waaw"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "deadline lol"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 9
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java ..\\src\\main\\java\\Deadline.java ..\\src\\main\\java\\Event.java ..\\src\\main\\java\\Todo.java ..\\src\\main\\java\\Task.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "java -Dfile.encoding\u003dUTF8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "pause"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 23
    }
  }
]

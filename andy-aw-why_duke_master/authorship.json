[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "[User guide for Duke is found here](https://andy-aw-why.github.io/duke/)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "duke.duke Increment | Tutorial"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "andy-aw-why": 4
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    //id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "//checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "//    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "//}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    archiveVersion \u003d \"0.0.1\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    mainClassName \u003d \"Duke.Duke\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "andy-aw-why": 14
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "T | 1 | make list | "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "D | 1 | english homework | by 2020-11-14"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "T | 1 | go polyclinic | "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "T | 0 | go visit friends | "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "E | 0 | group project | at 2020-09-14"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "E | 0 | sports meeting | on 2019-11-13"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "T | 0 | buy chocolate | "
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 7
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "# User Guide For Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "# Table of content"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "\u003c!-- TOC --\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- [Introduction](#introduction)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- [Features](#features)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    - [Add task](#add-task)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    - [List task](#list-task)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    - [Delete task](#delete-task)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    - [Find task](#find-task)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    - [Mark task as done](#mark-task-as-done)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    - [Exit Duke](#exit-duke)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- [Usage](#usage)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    - [`todo [description]` - Adds a **TODO** task into Duke](#todo-description---adds-a-todo-task-into-duke)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        - [Example of usage:](#example-of-usage)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            - [Expected outcome:](#expected-outcome)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        - [Example of wrong usage (missing description):](#example-of-wrong-usage-missing-description)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            - [Expected error outcome:](#expected-error-outcome)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    - [`event [description] /[slash word] [yyyy-mm-dd]` - Adds an **EVENT** task into Duke](#event-description-slash-word-yyyy-mm-dd---adds-an-event-task-into-duke)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        - [Example of usage:](#example-of-usage-1)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            - [Expected outcome:](#expected-outcome-1)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        - [Example of usage:](#example-of-usage-2)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            - [Expected outcome:](#expected-outcome-2)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        - [Example of wrong usage (missing description):](#example-of-wrong-usage-missing-description-1)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            - [Expected error outcome:](#expected-error-outcome-1)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        - [Example of wrong usage (missing slash word):](#example-of-wrong-usage-missing-slash-word)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            - [Expected error outcome:](#expected-error-outcome-2)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        - [Example of wrong usage (wrong slash word):](#example-of-wrong-usage-wrong-slash-word)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            - [Expected error outcome:](#expected-error-outcome-3)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        - [Example of wrong usage (missing date):](#example-of-wrong-usage-missing-date)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            - [Expected error outcome:](#expected-error-outcome-4)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        - [Example of wrong usage (wrong date format):](#example-of-wrong-usage-wrong-date-format)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            - [Expected error outcome:](#expected-error-outcome-5)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    - [`deadline [description] /[slash word] [yyyy-mm-dd]` - Adds a **DEADLINE** task into Duke](#deadline-description-slash-word-yyyy-mm-dd---adds-a-deadline-task-into-duke)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        - [Example of usage:](#example-of-usage-3)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            - [Expected outcome:](#expected-outcome-3)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        - [Example of wrong usage (missing description):](#example-of-wrong-usage-missing-description-2)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            - [Expected error outcome:](#expected-error-outcome-6)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        - [Example of wrong usage (missing slash word):](#example-of-wrong-usage-missing-slash-word-1)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            - [Expected error outcome:](#expected-error-outcome-7)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        - [Example of wrong usage (wrong slash word):](#example-of-wrong-usage-wrong-slash-word-1)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            - [Expected error outcome:](#expected-error-outcome-8)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        - [Example of wrong usage (missing date):](#example-of-wrong-usage-missing-date-1)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            - [Expected error outcome:](#expected-error-outcome-9)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        - [Example of wrong usage (wrong date format):](#example-of-wrong-usage-wrong-date-format-1)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            - [Expected error outcome:](#expected-error-outcome-10)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    - [`list` - List all the tasks stored by duke](#list---list-all-the-tasks-stored-by-duke)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        - [Example of usage:](#example-of-usage-4)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            - [Expected outcome if there are tasks:](#expected-outcome-if-there-are-tasks)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            - [Expected outcome if there isn\u0027t any tasks:](#expected-outcome-if-there-isnt-any-tasks)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    - [`delete [tasknumber in list]` - Delete a task in duke by the list\u0027s task number](#delete-tasknumber-in-list---delete-a-task-in-duke-by-the-lists-task-number)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        - [Example of usage:](#example-of-usage-5)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            - [Expected outcome:](#expected-outcome-4)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        - [Example of wrong usage (no task number given):](#example-of-wrong-usage-no-task-number-given)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            - [Expected error outcome:](#expected-error-outcome-11)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        - [Example of wrong usage (task number is not a number):](#example-of-wrong-usage-task-number-is-not-a-number)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            - [Expected error outcome:](#expected-error-outcome-12)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        - [Example of wrong usage (task number chosen do not correspond to any task in the list due to being out of range):](#example-of-wrong-usage-task-number-chosen-do-not-correspond-to-any-task-in-the-list-due-to-being-out-of-range)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            - [Expected error outcome:](#expected-error-outcome-13)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    - [`find [keyword or sentence]` - Find a task based on the keyword or the sentence given](#find-keyword-or-sentence---find-a-task-based-on-the-keyword-or-the-sentence-given)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        - [Example of usage:](#example-of-usage-6)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            - [Expected outcome:](#expected-outcome-5)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        - [Example of usage:](#example-of-usage-7)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            - [Example outcome:](#example-outcome)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        - [Example of usage:](#example-of-usage-8)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            - [Expected outcome if keyword/sentence cannot be found:](#expected-outcome-if-keywordsentence-cannot-be-found)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    - [`done [tasknumber in list]` - Mark a task as done in duke by the list\u0027s task number](#done-tasknumber-in-list---mark-a-task-as-done-in-duke-by-the-lists-task-number)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        - [Example of usage:](#example-of-usage-9)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            - [Expected outcome:](#expected-outcome-6)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        - [Example of wrong usage (no task number given):](#example-of-wrong-usage-no-task-number-given-1)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            - [Expected error outcome:](#expected-error-outcome-14)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        - [Example of wrong usage (task number is not a number):](#example-of-wrong-usage-task-number-is-not-a-number-1)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            - [Expected error outcome:](#expected-error-outcome-15)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        - [Example of wrong usage (task number chosen do not correspond to any task in the list due to being out of range):](#example-of-wrong-usage-task-number-chosen-do-not-correspond-to-any-task-in-the-list-due-to-being-out-of-range-1)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            - [Expected error outcome:](#expected-error-outcome-16)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    - [`bye` - exit Duke](#bye---exit-duke)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        - [Example of usage:](#example-of-usage-10)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            - [Expected outcome:](#expected-outcome-7)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "\u003c!-- /TOC --\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "(°▽°)/"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Duke is a personal chatbot that helps the user to store tasks such as todos, events and deadlines. Not only does it store tasks, Duke has the ability to find tasks and also to mark tasks as done. In addition, Duke can delete and remove any task that the user chooses. Duke also has the ability to save the list of tasks offline upon Duke exit and can load back the tasks again when Duke restarts."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "When Duke starts, it loads the list of tasks from `data\\duke.txt` if it exist."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "### Add task "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Adds a **TODO**, **EVENT** or a **DEADLINE** task"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "### List task"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "List all the tasks that Duke supports"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "### Delete task"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Delete a task by its task number "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "### Find task"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Find tasks that corresponds to the keywords used"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "### Mark task as done"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Mark a task as done"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "### Exit Duke"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Exit duke and save the task into an offline data"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "### `todo [description]` - Adds a **TODO** task into Duke"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Duke supports **TODO** tasks. In a **TODO** task, it contains:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "1. the `todo` keyword"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "2. the task (the `description`) of the **TODO** task"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Format: `todo [description]`"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `todo eat noodles`"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "(ﾉ´ヮ`)ﾉ *:ﾟ "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Got it. I\u0027ve added this task: [T][✘] eat noodles "
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Example of wrong usage (missing description): "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `todo`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Expected error outcome:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "(」°ロ°)」"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Exception occurred: duke.exception.MissingDescriptionException: Missing description!"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "### `event [description] /[slash word] [yyyy-mm-dd]` - Adds an **EVENT** task into Duke"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Duke supports **EVENT** tasks. In a **EVENT** task, it contains:"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "1. the `event` keyword"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "2. the task (the `description`) of the **EVENT** task"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "3. the slash word (only accepted slash words are `at` and `on`)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "4. the date (in the `yyyy-mm-dd` format) "
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Format: `event [description] /[slash word] [yyyy-mm-dd]`"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `event meet friends /at 2020-12-12`"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "(ﾉ´ヮ`)ﾉ *:ﾟ "
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Got it. I\u0027ve added this task: [E][✘] meet friends (at: Dec 12 2020)"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `event group project /on 2020-12-13`"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "(ﾉ´ヮ`)ﾉ *:ﾟ "
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Got it. I\u0027ve added this task: [E][✘] group project (on: Dec 13 2020)"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Example of wrong usage (missing description): "
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `event`"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Expected error outcome:"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "(」°ロ°)」"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Exception occurred: duke.exception.MissingDescriptionException: Missing description!"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Example of wrong usage (missing slash word): "
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `event sports meeting`"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `event sports meeting /`"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `event sports meeting / at`"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Expected error outcome:"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "(」°ロ°)」"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Exception occurred: duke.exception.MissingSlashWordException: Missing slash word!"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Example of wrong usage (wrong slash word): "
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `event sports meeting /through`"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Expected error outcome:"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "(」°ロ°)」"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Exception occurred: duke.exception.WrongSlashWordException: Wrong slash word!"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "for EVENT: the slash word can only be \u0027at\u0027 or \u0027on\u0027"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "for DEADLINE: the slash word can only be \u0027by\u0027 "
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Example of wrong usage (missing date): "
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `event sports meeting /on `"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Expected error outcome:"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "(」°ロ°)」"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Exception occurred: duke.exception.MissingTimeFieldException: Missing date!"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Example of wrong usage (wrong date format): "
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `event sports meeting /on 12-12-1990`"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Expected error outcome:"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "(」°ロ°)」"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Exception occurred: java.time.DateTimeException: Date cannot be parsed! Make sure the format is correct! Format: yyyy-mm-dd"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "### `deadline [description] /[slash word] [yyyy-mm-dd]` - Adds a **DEADLINE** task into Duke"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Duke supports **DEADLINE** tasks. In a **DEADLINE** task, it contains:"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "1. the `deadline` keyword"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "2. the task (the `description`) of the **DEADLINE** task"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "3. the slash word (Only accepted slash word is `by`)"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "4. the date (in the `yyyy-mm-dd` format) "
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Format: `deadline [description] /[slash word] [yyyy-mm-dd]`"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "`deadline math homework /by 2020-12-12`"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "(ﾉ´ヮ`)ﾉ *:ﾟ "
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Got it. I\u0027ve added this task: [D][✘] math homework (by: Dec 12 2020)"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Example of wrong usage (missing description): "
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `deadline`"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Expected error outcome:"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "(」°ロ°)」"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Exception occurred: duke.exception.MissingDescriptionException: Missing description!"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Example of wrong usage (missing slash word): "
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `deadline Math homework`"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `deadline Math homework /`"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `deadline Math homework / by`"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Expected error outcome:"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "(」°ロ°)」"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Exception occurred: duke.exception.MissingSlashWordException: Missing slash word!"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Example of wrong usage (wrong slash word): "
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `deadline Math homework /in`"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Expected error outcome:"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "(」°ロ°)」"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Exception occurred: duke.exception.WrongSlashWordException: Wrong slash word!"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "for EVENT: the slash word can only be \u0027at\u0027 or \u0027on\u0027"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "for DEADLINE: the slash word can only be \u0027by\u0027 "
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Example of wrong usage (missing date): "
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `deadline Math homework /by  `"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Expected error outcome:"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "(」°ロ°)」"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Exception occurred: duke.exception.MissingTimeFieldException: Missing date!"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Example of wrong usage (wrong date format): "
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `deadline Math homework /by 12-12-1990`"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Expected error outcome:"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "(」°ロ°)」"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Exception occurred: java.time.DateTimeException: Date cannot be parsed! Make sure the format is correct! Format: yyyy-mm-dd"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "### `list` - List all the tasks stored by duke"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "If there is any task stored in Duke, it will display all of them. However, if there is no tasks present, it will report that there is no tasks present"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `list`"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Expected outcome if there are tasks:"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "(*´▽`*) "
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Here is the list of tasks:"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "1. [T][✓] make list "
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "2. [D][✓] english homework (by: Nov 14 2020)"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "3. [T][✓] go polyclinic "
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "4. [T][✘] go visit friends "
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "5. [E][✘] group project (at: Sep 14 2020)"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "6. [E][✘] sports meeting (on: Nov 13 2019)"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "7. [T][✘] buy chocolate "
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Expected outcome if there isn\u0027t any tasks:"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "(；￣Д￣) "
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Nothing yet"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "### `delete [tasknumber in list]` - Delete a task in duke by the list\u0027s task number"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Duke supports the deletion of tasks by its task number in list. The `delete` command contains:"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "1. the `delete` keyword"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "2. the task number (as seen in the list) of task to be deleted "
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Format: `delete [tasknumber in list]`"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Given this list:"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "1. [T][✓] make list "
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "2. [D][✓] english homework (by: Nov 14 2020)"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "3. [T][✓] go polyclinic "
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "4. [T][✘] go visit friends "
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "5. [E][✘] group project (at: Sep 14 2020)"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "6. [E][✘] sports meeting (on: Nov 13 2019)"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "7. [T][✘] buy chocolate"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `delete 3`"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "＼(￣▽￣)／ "
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Noted. I removed this task: "
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "[T][✓] go polyclinic "
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Now you have 6 tasks in the list"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Example of wrong usage (no task number given): "
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `delete`"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Expected error outcome:"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "(」°ロ°)」"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Exception occurred: duke.exception.MissingNumberFieldException: DELETE\u0027s number field is empty!"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Example of wrong usage (task number is not a number): "
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `delete words`"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `delete 3 dreams`"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Expected error outcome:"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "(」°ロ°)」"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Exception occurred: java.lang.NumberFormatException: DELETE\u0027s number field does not contain a number!"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Example of wrong usage (task number chosen do not correspond to any task in the list due to being out of range): "
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `delete 0`"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `delete 10` (when there is \u003c 10 tasks) "
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `delete -12`"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Expected error outcome:"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "(」°ロ°)」"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Exception occurred: java.lang.IndexOutOfBoundsException: Task number chosen is out of range!"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "### `find [keyword or sentence]` - Find a task based on the keyword or the sentence given"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Duke supports finding tasks by a keyword or a sentence The `find` command contains:"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "1. the `find` keyword"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "2. the keyword or sentence used to search for the task"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Format: `find [keyword or sentence]`"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Given this list:"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "1. [T][✓] make list "
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "2. [D][✓] english homework (by: Nov 14 2020)"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "3. [T][✓] go polyclinic "
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "4. [T][✘] go visit friends "
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "5. [E][✘] group project (at: Sep 14 2020)"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "6. [E][✘] sports meeting (on: Nov 13 2019)"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "7. [T][✘] buy chocolate"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `find go`"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "ヽ(・∀・)ﾉ "
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "2 task found! Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "[T][✓] go polyclinic "
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "[T][✘] go visit friends "
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `find english homework`"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Example outcome:"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "ヽ(・∀・)ﾉ "
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "1 task found! Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "[D][✓] english homework (by: Nov 14 2020)"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `find johnny`"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Expected outcome if keyword/sentence cannot be found:"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "╮(￣ω￣;)╭ "
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "This word/sentence is not found!"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "### `done [tasknumber in list]` - Mark a task as done in duke by the list\u0027s task number"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Duke supports marking of tasks as done by its task number in list. The `done` command contains:"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "1. the `done` keyword"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "2. the task number (as seen in the list) to be marked as done"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Format: `done [tasknumber in list]`"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Given this list:"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "1. [T][✓] make list "
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "2. [D][✓] english homework (by: Nov 14 2020)"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "3. [T][✓] go polyclinic "
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "4. [T][✘] go visit friends "
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "5. [E][✘] group project (at: Sep 14 2020)"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "6. [E][✘] sports meeting (on: Nov 13 2019)"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "7. [T][✘] buy chocolate"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `done 5`"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "ヽ(*・ω・)ﾉ "
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Nice! I marked this as done: [E][✓] group project (at: Sep 14 2020)"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Example of wrong usage (no task number given): "
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `done`"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Expected error outcome:"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "(」°ロ°)」"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Exception occurred: duke.exception.MissingNumberFieldException: DONE\u0027s number field is empty!"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Example of wrong usage (task number is not a number): "
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `done words`"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `done 3 dreams`"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Expected error outcome:"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "(」°ロ°)」"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Exception occurred: java.lang.NumberFormatException: DONE\u0027s number field does not contain a number!"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Example of wrong usage (task number chosen do not correspond to any task in the list due to being out of range): "
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `done 0`"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `done 10` (when there is \u003c 10 tasks) "
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `done -12`"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Expected error outcome:"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "(」°ロ°)」"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Exception occurred: java.lang.IndexOutOfBoundsException: Task number chosen is out of range!"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "### `bye` - exit Duke"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "When the command \u0027bye\u0027 is given, the list of tasks is saved as a txt document at `data\\duke.txt`."
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "- `bye`"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "(x_x)⌒☆"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Bye! Hope to see you again soon! Maybe next time!"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 631,
      "-": 9
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import duke.tasktypes.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import duke.tasktypes.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import duke.tasktypes.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import duke.tasktypes.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * Represents a command. The call for command execution is done through here too. It calls upon the {@link TaskList}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * class to do the actual executions."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * @see TaskList"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final String FIND \u003d \"find\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final String DELETE_UPPERCASE \u003d \"DELETE\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final String DONE_UPPERCASE \u003d \"DONE\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private String typeOfCommand;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private String descriptionOfCommand;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private String timeOfCommand;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private String number;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private LocalDate time;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private String[] splitCommand;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Set method to store the array containing the split input, where the input is split by space"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param splitCommand the array containing the input split by space"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void setSplitCommand(String[] splitCommand) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.splitCommand \u003d splitCommand;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Set method to store the type of command this command is, be it \u003ccode\u003eTODO,EVENT,LIST,DEADLINE,DONE,DELETE\u003c/code\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param typeOfCommand the type of command this command is supposed to be"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void setTypeOfCommand(String typeOfCommand) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.typeOfCommand \u003d typeOfCommand;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Set method to store the description for each command. Definition of description differs command by command"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * For \u003ccode\u003eTODO,EVENT,DEADLINE\u003c/code\u003e: the description refers to the action behind the type of command"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * For \u003ccode\u003eDONE,DELETE\u003c/code\u003e: the description refers to the task number of the task involved"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param descriptionOfCommand the description accompanying the command"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void setDescriptionOfCommand(String descriptionOfCommand) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.descriptionOfCommand \u003d descriptionOfCommand;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Set method to store the date of the command itself."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Note that said date should also contain the slash word too"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * For example: \u003ccode\u003e\"todo add things /by 2018-12-01\"\u003c/code\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003ccode\u003etimeOfCommand\u003c/code\u003e \u003d \"by 2018-12-01\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param timeOfCommand the date with the slash word"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void setTimeOfCommand(String timeOfCommand) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.timeOfCommand \u003d timeOfCommand;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Set method to store the entire user input"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param fullCommand the entire user input"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void setFullCommand(String fullCommand) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Set method for storing the task number specified in the command itself"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Only used for DELETE and DONE commands"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param s task number as specified in the command itself"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void setNumber(String s) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.number \u003d s;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Execute the actual user command. Need the list of task to modify the task in the task list (either"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * add/delete/update tasks) and to update the task list after the task is done"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param tasks list of Task"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws NumberFormatException     exception only thrown for \u003ccode\u003eDONE\u003c/code\u003e and \u003ccode\u003eDELETE\u003c/code\u003e if task"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *                                   number provided is not an integer"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws IndexOutOfBoundsException exception only thrown for \u003ccode\u003eDONE\u003c/code\u003e and \u003ccode\u003eDELETE\u003c/code\u003e if task"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *                                   number chosen is out of range"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void execute(TaskList tasks) throws NumberFormatException, IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        switch (typeOfCommand.toLowerCase()) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            addToList(tasks);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            displayList(tasks);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            markTaskAsDone(tasks, this.number);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            deleteTask(tasks, this.number);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            findTask(tasks);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Create the task objects to be placed in the task list as specified by \u003ccode\u003etasks\u003c/code\u003e parameter"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param tasks the list of tasks"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Todo"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Deadline"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Event"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private void addToList(TaskList tasks) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        Task newTask \u003d null;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        switch (typeOfCommand.toLowerCase()) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            newTask \u003d new Todo(descriptionOfCommand);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            newTask \u003d new Deadline(descriptionOfCommand, timeOfCommand);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            newTask \u003d new Event(descriptionOfCommand, timeOfCommand);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        tasks.addTasks(newTask);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        Ui.displayTaskAdded(newTask);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Display all the tasks present in the tasklist through the {@link TaskList} object. If there is no task in the"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * tasklist, then it will display that there is nothing in it"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param tasks the list of tasks"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Ui"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private void displayList(TaskList tasks) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        int numberOfTasks \u003d tasks.getNumberOfTask();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (numberOfTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            Ui.displayNothingInList();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        Ui.displayStartOfList();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        for (int i \u003d 0; i \u003c numberOfTasks; i++) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            Ui.displayEachTask(i, tasks);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * This method marks a {@link Task} object (as chosen by its task number) in the {@link TaskList} list as \"done\". If"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * the task number given is not a number, an exception will be thrown."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Also, if the task number given does not correspond to any task in the tasklist, an error message will be shown"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * stating that the number chosen is out of range"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param tasks      the list of tasks"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param taskNumber the task number of the task to be marked as done"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws NumberFormatException     the exception thrown when the task number given is not a number"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws IndexOutOfBoundsException the exception thrown when there is no task corresponding to task number"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see NumberFormatException"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see IndexOutOfBoundsException"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private void markTaskAsDone(TaskList tasks, String taskNumber)"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            throws NumberFormatException, IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            int taskListNumber \u003d Integer.parseInt(taskNumber);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            tasks.markTaskAsDone(taskListNumber - 1);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            Ui.displayTaskMarkedAsDone(tasks, taskListNumber);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            throw new NumberFormatException(Ui.displayInputNotANumber(DONE_UPPERCASE));"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            throw new IndexOutOfBoundsException(Ui.displayTaskNumberOutOfRange());"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Delete the task in the tasklist corresponding to \u003ccode\u003etaskNumber\u003c/code\u003e value given. Throws an exception when"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * the task number do not correspond to any actual task"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Likewise, if the task number chosen do not correspond to any task in the tasklist, an error message will be shown"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * stating that the number chosen is out of range"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param taskList   the list of tasks"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param taskNumber the task number of the task to be deleted"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws NumberFormatException     the exception thrown when the task number chosen is not a number"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws IndexOutOfBoundsException the exception thrown when there is no task corresponding to task number"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see NumberFormatException"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see IndexOutOfBoundsException"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private void deleteTask(TaskList taskList, String taskNumber)"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            throws NumberFormatException, IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            int currentNumberOfTasks \u003d taskList.getNumberOfTask();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            int taskListNumber \u003d Integer.parseInt(taskNumber);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            /* Get name of the task that is going to be removed before it is removed */"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            String removedTask \u003d taskList.getTaskList().get(taskListNumber - 1).toString();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            taskList.removeTask(taskListNumber - 1);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            currentNumberOfTasks \u003d currentNumberOfTasks - 1;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            Ui.displayTaskRemoved(removedTask, currentNumberOfTasks);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            throw new NumberFormatException(Ui.displayInputNotANumber(DELETE_UPPERCASE));"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            throw new IndexOutOfBoundsException(Ui.displayTaskNumberOutOfRange());"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Find a task in the task list given the user\u0027s input. It will display the list of possible tasks based on the"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * user\u0027s search term"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param tasks the list of task"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private void findTask(TaskList tasks) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        ArrayList\u003cTask\u003e findList \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        ArrayList\u003cString\u003e tempResults \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        /* Search each task by each task. If found a possible match, add it to the output list*/"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        for (Task checkTask : findList) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            if (checkTask.toString().contains(this.descriptionOfCommand)) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                tempResults.add(checkTask.toString());"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        /* If there is no task found, output that no task is found. Else, display all the outputs found*/"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (tempResults.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            Ui.displayNoResultReturned();"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            Ui.displayObtainedResults(tempResults);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 283
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import duke.exception.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The main class that runs Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Create the respective classes that will be used in duke"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * The actual execution of Duke is summarised in this method. Duke is first entered, then the commands are fed till"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * the exit command is found. Finally, the duke exits"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        enterDuke();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        runDukeTillExit();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        exitDuke();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Display the welcome screen"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003eFollowed by importing the offline saved data into the list of tasks\u003c/p\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Ui"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see TaskList#setTaskList"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Storage#load"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private void enterDuke() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        Ui.displayHello();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        tasks.setTaskList(storage.load());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * The method where Duke reads and executes the user inputs"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003eWill keep running until \"bye\" is seen. Then, it will quit the duke program itself\u003c/p\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Ui#getUserInput()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Parser#parseUserInput"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Command#execute"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private void runDukeTillExit() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String userInput \u003d ui.getUserInput().trim();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        while (parser.checkIsNotBye(userInput)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                command \u003d parser.parseUserInput(userInput);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                command.execute(tasks);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            } catch (InvalidTaskException | MissingDescriptionException | MissingNumberFieldException"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    | MissingTimeFieldException | NumberFormatException | DateTimeException | IndexOutOfBoundsException"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    | MissingSlashWordException | WrongSlashWordException m) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                Ui.displayLineSeparator();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                Ui.displayExceptionError(m);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            Ui.displayPrompt();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            userInput \u003d ui.getUserInput().trim();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * The method used to exit Duke. Occurs when the \"bye\" command is issued. It saves the task list and close the"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * scanner before saying goodbye"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Storage#save"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Ui#closeScanner"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Ui#displayGoodbye()"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private void exitDuke() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        storage.save(tasks.getTaskList(), tasks.getNumberOfTask());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        ui.closeScanner();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        Ui.displayGoodbye();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 95,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import duke.exception.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * Class used to parse the user input. Helps check for error as well as formatting the input for the {@link Command}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * class to use"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * When an error is found, it will throw the respective errors given"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * \u003c/p\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final int TYPE_OF_COMMAND \u003d 0;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final int TASK_NUMBER \u003d 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final String FIND \u003d \"find\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final int MISSING_SLASH \u003d 3;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final String YES \u003d \"yes\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final String EMPTY \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final String WRONG \u003d \"wrong\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final int SLASH_WORD \u003d 4;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final String ON \u003d \"on\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final int DESCRIPTION \u003d 0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final int TIME \u003d 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final int TIME_INCLUDED \u003d 2;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final String BY \u003d \"by\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final String AT \u003d \"at\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Parse the user input. It formats the user input so that it transform the user input (the task) to becomes a valid"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * executable command. Likewise, if there is any error in the user input, it will throw an exception and explain"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * what the error in the user input is ."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param userInput the raw user input"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return the formatted command stored in a {@link Command} class"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws InvalidTaskException        exception thrown when the task given is not a valid task and hence not a"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *                                     valid command"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws MissingDescriptionException exception thrown when the task given has no description attached to it"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *                                     despite expecting it"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws MissingNumberFieldException exception thrown when the task given lacks a number field. Only used for"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *                                     \u003ccode\u003eDELETE\u003c/code\u003e and \u003ccode\u003eDONE\u003c/code\u003e commands"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws MissingTimeFieldException   exception thrown when no date or time given despite expecting it"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws MissingSlashWordException   exception thrown when no slash word is given despite expecting it"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws DateTimeException           exception thrown when the date given cannot be parsed"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws WrongSlashWordException     exception thrown when the slash word provided is not correct. Only used for"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *                                     \u003ccode\u003eEVENT\u003c/code\u003e and \u003ccode\u003eDEADLINE\u003c/code\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Command"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public Command parseUserInput(String userInput)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            throws InvalidTaskException, MissingDescriptionException, MissingNumberFieldException,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            MissingTimeFieldException, DateTimeException, MissingSlashWordException, WrongSlashWordException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        Command command \u003d new Command();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        /* Format and split up the user input task so as to be checked by the validateTask method */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] spaceUserInputSplit \u003d splitInputBySpace(userInput);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] partialUserInputSplit \u003d splitInputIntoTaskDescription(userInput);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        validateTask(spaceUserInputSplit, partialUserInputSplit);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        /* Once validated, format and prepare the command itself to be executed */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        command.setFullCommand(userInput);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        command.setSplitCommand(spaceUserInputSplit);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        command.setTypeOfCommand(spaceUserInputSplit[TYPE_OF_COMMAND]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        command.setDescriptionOfCommand(partialUserInputSplit[DESCRIPTION]);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        command.setTimeOfCommand(partialUserInputSplit[TIME]);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (spaceUserInputSplit[TYPE_OF_COMMAND].toLowerCase().equals(DONE) ||"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                spaceUserInputSplit[TYPE_OF_COMMAND].toLowerCase().equals(DELETE)) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            command.setNumber(partialUserInputSplit[DESCRIPTION]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Check to see if the user input obtained does not equal to \"bye\". If it is \"bye\", it means the user wants to exit"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * duke"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Only used during the Ui loop to check if the user wants to exit"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param userInput the raw user input"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return \u003ccode\u003eTRUE\u003c/code\u003e if user wants to exit (user input \"bye\"), else \u003ccode\u003eFALSE\u003c/code\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public boolean checkIsNotBye(String userInput) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return !userInput.equals(BYE);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Split the array up by spaces."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Only usage is just to get the type of command"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param userInput the raw user input"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return the \u003ccode\u003eString[]\u003c/code\u003e array with the split user input"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private String[] splitInputBySpace(String userInput) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(System.lineSeparator());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return userInput.split(\" \");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Help split up the user input so as to separate the description and time of the task in the user\u0027s raw input,"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * which makes it easier to use for command creation."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Not only that, the array also contains addition information such as whether if the time or slash word is"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * missing for input that expects them. It also checks if the slash word provided is correct."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param input the user input"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return a \u003ccode\u003eString[]\u003c/code\u003e array which contains the separated user input."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private String[] splitInputIntoTaskDescription(String input) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        /* Get the task type */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] obtainedDescription \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String tempTaskType \u003d obtainedDescription[0];"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        /* If an empty string is given */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (tempTaskType.isBlank()) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            return formatEmptyInput();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        /* For the user input task that supposed to contain time/date, format the input and return the array */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (tempTaskType.toLowerCase().equals(\"event\") || tempTaskType.toLowerCase().equals(\"deadline\")) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            return formatInputIntoArray(input);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        /* For the user input task that do not expect to contain time/date, format the input and return the array */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return formatNoDateInputIntoArray(input);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * For the raw input that contains nothing"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return an empty array to denote there is nothing in the input"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private String[] formatEmptyInput() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] returnSplit \u003d new String[5];"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        returnSplit[DESCRIPTION] \u003d EMPTY;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        returnSplit[TIME] \u003d EMPTY;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        returnSplit[TIME_INCLUDED] \u003d EMPTY;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        returnSplit[MISSING_SLASH] \u003d EMPTY;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        returnSplit[SLASH_WORD] \u003d EMPTY;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return returnSplit;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * To split and format the raw input that do not contain any date into an array to be returned."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param input the raw user input"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return a \u003ccode\u003eString[]\u003c/code\u003e array which contains the separated user input."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private String[] formatNoDateInputIntoArray(String input) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        /* The array to be used to store the input and be returned */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] returnSplit \u003d new String[5];"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        /* Split the input into task type and the full description to be checked later */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] obtainedDescription \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        /* Placing the description into the array */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (obtainedDescription.length \u003d\u003d 1 || obtainedDescription[1].isBlank()) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            returnSplit[DESCRIPTION] \u003d EMPTY;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            returnSplit[DESCRIPTION] \u003d obtainedDescription[1].trim();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        /* Placing the leftover details into the array */"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        returnSplit[TIME] \u003d EMPTY;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        returnSplit[TIME_INCLUDED] \u003d EMPTY;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        returnSplit[MISSING_SLASH] \u003d EMPTY;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        returnSplit[SLASH_WORD] \u003d EMPTY;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return returnSplit;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * To split and format the raw input that expects and contains the date into an array to be returned."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param input the raw user input"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return a \u003ccode\u003eString[]\u003c/code\u003e array which contains the separated user input."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private String[] formatInputIntoArray(String input) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        /* The array to be used to store the input and be returned */"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] returnSplit \u003d new String[5];"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        /* Obtain the description based on the input given */"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] obtainedSplit \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] obtainedDescription \u003d obtainedSplit[0].split(\" \", 2);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        /* Placing the description into the array as well as the time */"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (obtainedDescription.length \u003d\u003d 1 || obtainedDescription[1].isBlank()) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            returnSplit[DESCRIPTION] \u003d EMPTY;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            returnSplit[TIME] \u003d EMPTY;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            returnSplit[DESCRIPTION] \u003d obtainedDescription[1].trim();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            /* Check for missing slash word */"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            if (obtainedSplit.length \u003d\u003d 1 || Character.isWhitespace(obtainedSplit[1].charAt(0))) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                returnSplit[MISSING_SLASH] \u003d YES;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                returnSplit[TIME_INCLUDED] \u003d YES;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                returnSplit[TIME] \u003d EMPTY;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                returnSplit[SLASH_WORD] \u003d EMPTY;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                return returnSplit;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            String[] slashWordTimeArray \u003d obtainedSplit[1].trim().split(\" \", 2);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            /* Check for the correctness of slash word */"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            if (obtainedDescription[0].toLowerCase().equals(DEADLINE) \u0026\u0026"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    !slashWordTimeArray[0].toLowerCase().equals(BY)) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                returnSplit[MISSING_SLASH] \u003d WRONG;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            } else if (obtainedDescription[0].toLowerCase().equals(EVENT) \u0026\u0026"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    !(slashWordTimeArray[0].toLowerCase().equals(ON) ||"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                            slashWordTimeArray[0].toLowerCase().equals(AT))) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                returnSplit[MISSING_SLASH] \u003d WRONG;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                returnSplit[MISSING_SLASH] \u003d EMPTY;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            /* Get the time in the input given */"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            returnSplit[TIME] \u003d obtainedSplit[1].trim();"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            returnSplit[TIME_INCLUDED] \u003d YES;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return returnSplit;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * The actual method used to check the task input by the user. If there is any error in the user input, it will"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * throw the respective exception calls"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param spaceUserInputSplit   the \u003ccode\u003eString[]\u003c/code\u003e array which contains the user input split by space (so as"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *                              to"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *                              obtain the type of command)"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param partialUserInputSplit the \u003ccode\u003eString[]\u003c/code\u003e array which contains the user input split into its"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *                              description"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *                              and time/date"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws InvalidTaskException        exception thrown when the task given is not a valid task and hence not a"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *                                     valid command"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws MissingDescriptionException exception thrown when the task given has no description attached to it"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *                                     despite expecting it"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws MissingNumberFieldException exception thrown when the task given lacks a number field. Only used for"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *                                     \u003ccode\u003eDELETE\u003c/code\u003e and \u003ccode\u003eDONE\u003c/code\u003e commands"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws MissingTimeFieldException   exception thrown when no date or time given despite expecting it"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws MissingSlashWordException   exception thrown when no slash word is given despite expecting it"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws DateTimeException           exception thrown when the date given cannot be parsed"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws WrongSlashWordException     exception thrown when the slash word provided is not correct. Only used for"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *                                     \u003ccode\u003eEVENT\u003c/code\u003e and \u003ccode\u003eDEADLINE\u003c/code\u003e"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private void validateTask(String[] spaceUserInputSplit, String[] partialUserInputSplit)"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            throws InvalidTaskException, MissingDescriptionException, MissingNumberFieldException,"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            MissingTimeFieldException, DateTimeException, MissingSlashWordException, WrongSlashWordException {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String nameOfTask \u003d spaceUserInputSplit[TYPE_OF_COMMAND].toLowerCase();"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        /* Check if task type is supported by Duke */"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (!nameOfTask.equals(TODO) \u0026\u0026 !nameOfTask.equals(EVENT) \u0026\u0026 !nameOfTask.equals(DEADLINE) \u0026\u0026"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                !nameOfTask.equals(DONE) \u0026\u0026 !nameOfTask.equals(LIST) \u0026\u0026 !nameOfTask.equals(DELETE) \u0026\u0026"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                !nameOfTask.equals(FIND)) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            /* Task is not a valid/supported task */"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            throw new InvalidTaskException(Ui.displayInputInvalidError());"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } else if ((nameOfTask.toLowerCase().equals(DONE) || nameOfTask.toLowerCase().equals(DELETE)) \u0026\u0026"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                spaceUserInputSplit.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            /* DELETE or DONE is missing the number field */"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            throw new MissingNumberFieldException(Ui.displayMissingNumberFieldError(nameOfTask));"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } else if ((nameOfTask.equals(TODO) || nameOfTask.equals(EVENT) || nameOfTask.equals(DEADLINE) ||"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                nameOfTask.equals(FIND))) {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            if (checkIsDescriptionBlank(partialUserInputSplit)) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                /* The task is missing its description */"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                throw new MissingDescriptionException(Ui.displayMissingDescriptionError());"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            if (partialUserInputSplit[TIME_INCLUDED].equals(YES)) {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                /* Test for the correct slash word */"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                testSlashWord(partialUserInputSplit);"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                String obtainedTime \u003d partialUserInputSplit[1];"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                String[] timeCheck \u003d obtainedTime.split(\" \", 2);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                /* Test if the date is present and if so, if the date is formatted correctly */"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                testParseDate(timeCheck);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Helper method to test and check if the input is missing or have the wrong slash word"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param partialUserInputSplit the \u003ccode\u003eString[]\u003c/code\u003e array which contains the user input split into its"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *                              description and time/date"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws MissingSlashWordException exception thrown when no slash word is given despite expecting it"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws WrongSlashWordException   exception thrown when the slash word given is wrong"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private void testSlashWord(String[] partialUserInputSplit)"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            throws MissingSlashWordException, WrongSlashWordException {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (partialUserInputSplit[MISSING_SLASH].equals(YES)) {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            throw new MissingSlashWordException(Ui.displayMissingSlashWordError());"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (partialUserInputSplit[MISSING_SLASH].equals(WRONG)) {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            throw new WrongSlashWordException(Ui.displayWrongSlashWord());"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Helper method to test and check if the input date is missing (if duke expects it) or is formatted wrongly"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param timeCheck the supposed string that should contain a date itself"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws MissingTimeFieldException exception thrown when no date given despite expecting it"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws DateTimeException         exception thrown when the date given cannot be parsed"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private void testParseDate(String[] timeCheck)"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            throws MissingTimeFieldException, DateTimeException {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (timeCheck.length \u003d\u003d 1 || timeCheck[1].isBlank()) {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            throw new MissingTimeFieldException(Ui.displayMissingTimeError());"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            LocalDate d1 \u003d LocalDate.parse(timeCheck[1].trim());"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } catch (DateTimeParseException m) {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            throw new DateTimeException("
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    Ui.displayDateUnableToBeParsedError());"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Check if the description given the partial input array contains any description"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param partialDescriptionTaskArray the \u003ccode\u003eString[]\u003c/code\u003e array that contains the partial input"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return true if the description is blank. Else false"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private boolean checkIsDescriptionBlank(String[] partialDescriptionTaskArray) {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return partialDescriptionTaskArray[0].isBlank();"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 355
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import duke.tasktypes.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import duke.tasktypes.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import duke.tasktypes.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import duke.tasktypes.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The class used to load and store the data from the task list (the {@link TaskList} object\u0027s tasks)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final int SAVED_DESCRIPTION \u003d 2;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final int FIRST_LETTER_OF_TASK_TYPE \u003d 0;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final int IS_TASK_DONE \u003d 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final int SAVED_TIME \u003d 3;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final String ERROR_IN_WRITING_FILE \u003d \": Error in writing file!\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final String FILE_NOT_FOUND \u003d \": File not found!\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final String SAVED_TXT_PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final String DIRECTORY_NAME \u003d \"data\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final String ONE \u003d \"1\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final String EMPTY \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final int DESCRIPTION \u003d 2;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final int TIME \u003d 3;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String T \u003d \"T\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String E \u003d \"E\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String D \u003d \"D\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * The actual loading of the data from the saved data before return a task list. If there is no saved data present,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * this will return an empty task list. Else, it will load the tasks found in the task list and return the filled"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * task list"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return an \u003ccode\u003eArrayList\u003cTask\u003e\u003c/code\u003e containing the tasks. Will be empty if there is no saved tasks"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        Path path \u003d getSaveDataPath();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        boolean isFileExists \u003d checkIfDataFileExist(path);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        /* See if file actually exist. If it exist, load the data from the saved data. Else, just return the empty"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        ArrayList\u003cTask\u003e of tasks */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (isFileExists) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            File f \u003d new File(String.valueOf(path));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                Scanner s \u003d initializeFileScanner(f);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                while (s.hasNext()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    String[] obtainedLine \u003d extractData(s);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    String[] splitTaskDescriptionArray \u003d formatDescriptionAndTime(obtainedLine);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    /* Import the tasks into the task list and check if the task is saved as done. If it is so, mark"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    the task as done */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    importToList(taskList, splitTaskDescriptionArray);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                Ui.displayGenericException(e, FILE_NOT_FOUND);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * The actual saving of the tasks in the task list into the saved data file itself. It gets list of tasks from the"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003ccode\u003eArrayList\u003cTask\u003e\u003c/code\u003e of tasks"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param taskList      the \u003ccode\u003eArrayList\u003cTask\u003e\u003c/code\u003e of tasks"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param numberOfTasks the number of tasks in the arraylist. Needed for looping the task list itself. Also used to"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *                      check if the task list is empty or not"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e taskList, int numberOfTasks) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        Path directoryPath \u003d Paths.get(DIRECTORY_NAME);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        boolean isFileExists \u003d Files.exists(directoryPath);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        /* If there is no previous saved data, create the directory to store the saved data text file first before"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        doing the actual saving of data */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (!isFileExists) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            File directory \u003d new File(DIRECTORY_NAME);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            directory.mkdir();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        /* The actual writing of the task into the saved file */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        File f \u003d new File(SAVED_TXT_PATH);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            FileWriter fw \u003d new FileWriter(f);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            /* If the task list is empty, the saved data will not contain anything in it. Hence, filewriter will just"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "             write a \"\" to the file */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            if (numberOfTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                fw.write(EMPTY);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            /* Loop through the array list and store the tasks into the task list itself */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            for (int i \u003d 0; i \u003c numberOfTasks; i++) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                String[] getTaskInfo \u003d taskList.get(i).getTaskInfo();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                fw.write(getTaskInfo[FIRST_LETTER_OF_TASK_TYPE]"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + \" | \""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + getTaskInfo[IS_TASK_DONE]"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + \" | \""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + getTaskInfo[SAVED_DESCRIPTION]"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + \" | \""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + getTaskInfo[SAVED_TIME]"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + System.lineSeparator());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            Ui.displayGenericException(e, ERROR_IN_WRITING_FILE);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private Path getSaveDataPath() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return Paths.get(\"data\", \"duke.txt\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private boolean checkIfDataFileExist(Path path) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return Files.exists(path);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private Scanner initializeFileScanner(File f) throws FileNotFoundException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return new Scanner(f);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Split a line of data by the \u003ccode\u003e|\u003c/code\u003e symbol to extract the data in it"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param s the line of data to be parsed"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return a \u003ccode\u003eString[]\u003c/code\u003e array that contains data upon the split"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private String[] extractData(Scanner s) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return s.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Get the type of task, is task done, its description and time (if present) from the line of data"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param obtainedLine the line of data to parsed in \u003ccode\u003eString[]\u003c/code\u003e format"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return a \u003ccode\u003eString[]\u003c/code\u003e array that contains the description and time as different array element"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private String[] formatDescriptionAndTime(String[] obtainedLine) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] splitTaskDescriptionArray \u003d new String[4];"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        splitTaskDescriptionArray[FIRST_LETTER_OF_TASK_TYPE] \u003d obtainedLine[0].trim();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        splitTaskDescriptionArray[IS_TASK_DONE] \u003d obtainedLine[1].trim();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        splitTaskDescriptionArray[DESCRIPTION] \u003d obtainedLine[2].trim();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (obtainedLine.length \u003d\u003d 4 \u0026\u0026 !obtainedLine[3].equals(\" \")) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            splitTaskDescriptionArray[TIME] \u003d obtainedLine[3].trim();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            splitTaskDescriptionArray[TIME] \u003d EMPTY;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return splitTaskDescriptionArray;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * The actual method used to insert a task (from the imported data) into the task list."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param taskList                  the list of task to import the task into"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param splitTaskDescriptionArray the \u003ccode\u003eString[]\u003c/code\u003e array that contains the first letter of task type, is"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *                                  the task done, the description and (if present) time of the task itself"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private void importToList(ArrayList\u003cTask\u003e taskList, String[] splitTaskDescriptionArray) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        switch (splitTaskDescriptionArray[FIRST_LETTER_OF_TASK_TYPE]) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case T:"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            newTask \u003d new Todo(splitTaskDescriptionArray[DESCRIPTION]);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            checkIfTaskDone(newTask, splitTaskDescriptionArray[IS_TASK_DONE]);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            taskList.add(newTask);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case E:"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            newTask \u003d new Event(splitTaskDescriptionArray[DESCRIPTION], splitTaskDescriptionArray[TIME]);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            checkIfTaskDone(newTask, splitTaskDescriptionArray[IS_TASK_DONE]);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            taskList.add(newTask);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case D:"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            newTask \u003d new Deadline(splitTaskDescriptionArray[DESCRIPTION], splitTaskDescriptionArray[TIME]);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            checkIfTaskDone(newTask, splitTaskDescriptionArray[IS_TASK_DONE]);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            taskList.add(newTask);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            String tempMessage \u003d formatTaskToBeDisplayed(splitTaskDescriptionArray);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            Ui.displayErrorImportingTask(tempMessage);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Help to format the task which produced the error"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param splitTaskDescriptionArray the array that contains the split erroneous task"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return the string that can be used by the {@link Ui} class to display error importing task"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Ui#displayErrorImportingTask"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private String formatTaskToBeDisplayed(String[] splitTaskDescriptionArray) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return splitTaskDescriptionArray[FIRST_LETTER_OF_TASK_TYPE] + \" | \" +"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                splitTaskDescriptionArray[DESCRIPTION];"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Check to see if the new imported task is marked as done. If it is so, mark it as done."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param newTask the new task to be checked"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param s       the status of task as obtained from the saved data"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Task#markAsDone"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private void checkIfTaskDone(Task newTask, String s) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (s.equals(ONE)) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            newTask.markAsDone();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 221
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import duke.tasktypes.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The class to represent the list of tasks itself. This is also where the manipulation of the tasks in the task list is"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * actually done (other classes rely on this class {@link TaskList} to do the actual task list manipulations)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * Not only does it serves to add and view the tasks, it also edit the status of the tasks as well. For example, it"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * can get the number of tasks, mark tasks as done and remove the tasks in the tasklist"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * \u003c/p\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * @see ArrayList"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Get the list of tasks (which is stored as an \u003ccode\u003eArrayList\u003cTask\u003e\u003c/code\u003e)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return list of task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Set method for initializing the list of tasks itself"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param taskList the new list of tasks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void setTaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * To add a task into the task list"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param task the {@link Task} object to add into the task list"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void addTasks(Task task) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Get the number of tasks in the task list"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return the number of tasks present"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public int getNumberOfTask() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Mark the task chosen by the task number to be done"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param i the task number to be marked as done"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void markTaskAsDone(int i) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        taskList.get(i).markAsDone();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Remove the task corresponding to the task number given from the list of tasks"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param i the task number to be removed"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void removeTask(int i) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        taskList.remove(i);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 73
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import duke.tasktypes.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * Represent the UI that the user uses to interact with Duke. Contains the display methods and user input methods."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String LINE_SEPARATOR \u003d \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String GREETINGS \u003d \"(°▽°)/\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String GOOD_BYE \u003d \"(x_x)⌒☆\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String ANNOYED \u003d \"(」°ロ°)」\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String PLEASED \u003d \"(ﾉ´ヮ`)ﾉ *:ﾟ \\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String SURPRISED \u003d \"ヽ(・∀・)ﾉ \\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String CONFUSED \u003d \"╮(￣ω￣;)╭ \\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String SAD \u003d \"(；￣Д￣) \\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String HAPPY \u003d \"ヽ(*・ω・)ﾉ \\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String SIGH \u003d \"＼(￣▽￣)／ \\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String SURPRISED_2 \u003d \"(*´▽`*) \\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private Scanner myInput;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Helps to format and display an exception message"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param e the exception to be used"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param s the string to be shown with the exception message"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static void displayGenericException(Exception e, String s) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(LINE_SEPARATOR);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(\"Exception occurred: \" + e + s);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * The exception message shown when a task fails to be imported from saved data"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param s the task that failed to be imported"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static void displayErrorImportingTask(String s) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(\"Error in importing this task! Said task information is: \" + System.lineSeparator() +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                s);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Display the welcome screen"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static void displayHello() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(LINE_SEPARATOR);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(GREETINGS);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(LINE_SEPARATOR);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Display the exit screen. Shown when the user exits"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static void displayGoodbye() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(System.lineSeparator());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(LINE_SEPARATOR);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(GOOD_BYE);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(\"Bye! Hope to see you again soon! Maybe next time!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(LINE_SEPARATOR);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Display to user what the exact task is added into the task list"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param newTask the {@link Task} object of containing the task itself"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Task"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static void displayTaskAdded(Task newTask) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(LINE_SEPARATOR);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(PLEASED);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \" + newTask.toString());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Display task based on the value of \u003ccode\u003ei\u003c/code\u003e, which is the task number"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param i     task number"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param tasks the list of tasks to be seen"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static void displayEachTask(int i, TaskList tasks) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                (i + 1) + \". \" + tasks.getTaskList().get(i).toString());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Confirmation message of task being marked as done"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param tasks          the list of tasks"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param taskListNumber task number that was marked as done"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static void displayTaskMarkedAsDone(TaskList tasks, int taskListNumber) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(LINE_SEPARATOR);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(HAPPY);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                \"Nice! I marked this as done: \" + tasks.getTaskList().get(taskListNumber - 1).toString());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Just a confirmation message to show that a task is successfully removed"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param removedTask          name of task removed"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param currentNumberOfTasks number of tasks left in the list upon successful task removal"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static void displayTaskRemoved(String removedTask, int currentNumberOfTasks) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(LINE_SEPARATOR);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(SIGH);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                \"Noted. I removed this task: \""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + System.lineSeparator()"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + removedTask"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + System.lineSeparator()"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + \"Now you have \""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + currentNumberOfTasks"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + \" tasks in the list\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * A message to prompt the user to enter the next command"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static void displayPrompt() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(LINE_SEPARATOR);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(\"What else do you want to do?\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * A message that shows no tasks corresponds to the message string used to search"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static void displayNoResultReturned() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(LINE_SEPARATOR);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(CONFUSED);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(\"This word/sentence is not found!\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * The method helps to show every task present in duke so far"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param tempResults the \u003ccode\u003eArrayList\u003c/code\u003e of tasks"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static void displayObtainedResults(ArrayList\u003cString\u003e tempResults) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(LINE_SEPARATOR);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(SURPRISED);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(tempResults.size() + \" task found! Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        for (String resultFound : tempResults) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            System.out.println(resultFound);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Another exception message formatter"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param m the exception to be used"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static void displayExceptionError(Exception m) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(ANNOYED);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(\"Exception occurred: \" + m);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Display that there is no tasks present in the list of tasks yet"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static void displayNothingInList() {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(LINE_SEPARATOR);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(SAD);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(\"Nothing yet\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * The message shown for either \u003ccode\u003eDELETE\u003c/code\u003e or \u003ccode\u003eDONE\u003c/code\u003e if there is no number field given"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param nameOfTask the name of the task that was checked"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return the message to indicate the number field is empty"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static String displayMissingNumberFieldError(String nameOfTask) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return nameOfTask.toUpperCase() + \"\u0027s number field is empty!\";"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * The message shown if the date is formatted wrongly"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return the message to indicate the date is formatted wrongly"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static String displayDateUnableToBeParsedError() {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return \"Date cannot be parsed! Make sure the format is correct! Format: yyyy-mm-dd\";"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * The message shown if the date is missing despite duke expecting for it"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return the message to indicate that time is missing"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static String displayMissingTimeError() {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return \"Missing date!\";"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * The message shown if the slash word is missing despite duke expecting for it"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return the message to indicate the lack of slash word"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static String displayMissingSlashWordError() {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return \"Missing slash word!\";"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * The message shown if the input given lacks the description"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return the message to indicate the lack of description"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static String displayMissingDescriptionError() {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return \"Missing description!\";"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * The message shown if the input have a task that duke does not support"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return the message to indicate the input is invalid due to the task type being unsupported"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static String displayInputInvalidError() {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return \"Input is invalid. No such task\";"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * The message show if the slash word given is wrong"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return the message to indicate the task\u0027s slash word is wrong"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static String displayWrongSlashWord() {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return \"Wrong slash word!\" + System.lineSeparator() +"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                \"for EVENT: the slash word can only be \u0027at\u0027 or \u0027on\u0027\" + System.lineSeparator() +"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                \"for DEADLINE: the slash word can only be \u0027by\u0027 \";"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * The message shown if the \u003ccode\u003eDONE\u003c/code\u003e or \u003ccode\u003eDELETE\u003c/code\u003e number is not a number"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param taskType whether if the task checked is a \u003ccode\u003eDONE\u003c/code\u003e or \u003ccode\u003eDELETE\u003c/code\u003e"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return the message to indicate the number give is not a number"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static String displayInputNotANumber(String taskType) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return taskType + \"\u0027s number field does not contain a number!\";"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * The message shown if the \u003ccode\u003eDONE\u003c/code\u003e or \u003ccode\u003eDELETE\u003c/code\u003e number does not correspond to any task"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * number in the task list"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return the message to indicate that the number given is out of the task list range"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static String displayTaskNumberOutOfRange() {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return \"Task number chosen is out of range!\";"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Used by the \u003ccode\u003eLIST\u003c/code\u003e command to show the start of the list"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static void displayStartOfList() {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(LINE_SEPARATOR);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(SURPRISED_2);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(\"Here is the list of tasks:\");"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Just a method to show the ~~~~~ lines"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static void displayLineSeparator() {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(LINE_SEPARATOR);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Creates the scanner to read input"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return the scanner itself"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private Scanner initializeScanner() {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return new Scanner(System.in);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Ui element to read and return the user input"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return the string containing the user input"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        myInput \u003d initializeScanner();"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return myInput.nextLine();"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Close the input scanner"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Only used once when Duke ends"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void closeScanner() {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        myInput.close();"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 301
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The custom exception thrown when the task supplied is not a valid task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class InvalidTaskException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public InvalidTaskException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The custom exception thrown when the task is missing information in the description field"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class MissingDescriptionException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public MissingDescriptionException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 11
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingNumberFieldException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The custom exception thrown when for the \u003ccode\u003eDONE\u003c/code\u003e and \u003ccode\u003eDELETE\u003c/code\u003e task is missing the task number"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class MissingNumberFieldException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public MissingNumberFieldException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingSlashWordException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The custom exception thrown when no slash word is given despite expecting it"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class MissingSlashWordException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public MissingSlashWordException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingTimeFieldException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The custom exception thrown when the task is missing the date/time information when it is supposed/expected to have"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * it"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * \u003cp\u003eAs long as there is a \u003ccode\u003e\"/\"\u003c/code\u003e is provided, it is assumed that a date/time will be supplied. If there is"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * no \u003ccode\u003e\"/\"\u003c/code\u003e, then it is assumed the task do not have a date/time\u003c/p\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class MissingTimeFieldException extends Exception {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public MissingTimeFieldException(String s) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/WrongSlashWordException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The custom exception thrown when for the \u003ccode\u003eEVENT\u003c/code\u003e and \u003ccode\u003eDEADLINE\u003c/code\u003e task the slash word provided"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * is wrong"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class WrongSlashWordException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public WrongSlashWordException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 10
    }
  },
  {
    "path": "src/main/java/duke/tasktypes/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package duke.tasktypes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The \u003ccode\u003eDEADLINE\u003c/code\u003e type class"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * @see Task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    protected LocalDate actualTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    protected String slashWord;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (!this.by.equals(\"\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            String[] bySplit \u003d by.split(\" \", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            this.slashWord \u003d bySplit[0].trim();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            String tempTime \u003d bySplit[1].trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            this.actualTime \u003d LocalDate.parse(tempTime);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (by.equals(\"\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            return \"[D]\" + super.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] bySplit \u003d by.split(\" \", 2);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return \"[D]\" + super.toString() + \"(\" + this.slashWord + \": \" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                this.actualTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Gets the \u003ccode\u003eDEADLINE\u003c/code\u003e information stored nicely in a \u003ccode\u003eString[]\u003c/code\u003e array"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Used in the {@link duke.Storage} class for retrieving the \u003ccode\u003eDEADLINE\u003c/code\u003e task\u0027s information to store it as"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * offline saved data"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return a \u003ccode\u003eString[]\u003c/code\u003e array containing the description, the time and whether the event is done"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see duke.Storage#save"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public String[] getTaskInfo() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] taskInfoArray \u003d new String[4];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        taskInfoArray[0] \u003d \"D\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (super.isDone) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            taskInfoArray[1] \u003d \"1\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            taskInfoArray[1] \u003d \"0\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        taskInfoArray[2] \u003d super.description;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        taskInfoArray[3] \u003d this.slashWord + \" \" +  this.actualTime;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return taskInfoArray;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 62
    }
  },
  {
    "path": "src/main/java/duke/tasktypes/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package duke.tasktypes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The \u003ccode\u003eEVENT\u003c/code\u003e type class"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * @see Task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    protected LocalDate actualTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    protected String slashWord;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public Event(String description, String by) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (!this.by.equals(\"\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            String[] bySplit \u003d by.split(\" \", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            this.slashWord \u003d bySplit[0].trim();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            String tempTime \u003d bySplit[1].trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            this.actualTime \u003d LocalDate.parse(tempTime);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (by.equals(\"\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            return \"[E]\" + super.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return \"[E]\" + super.toString() + \"(\" + this.slashWord + \": \" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                this.actualTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Gets the \u003ccode\u003eEVENT\u003c/code\u003e information stored nicely in a \u003ccode\u003eString[]\u003c/code\u003e array"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Used in the {@link duke.Storage} class for retrieving the \u003ccode\u003eEVENT\u003c/code\u003e task\u0027s information to store it as"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * offline saved data"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return a \u003ccode\u003eString[]\u003c/code\u003e array containing the description, the time and whether the event is done"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see duke.Storage#save"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public String[] getTaskInfo() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] taskInfoArray \u003d new String[4];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        taskInfoArray[0] \u003d \"E\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (super.isDone) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            taskInfoArray[1] \u003d \"1\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            taskInfoArray[1] \u003d \"0\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        taskInfoArray[2] \u003d super.description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        taskInfoArray[3] \u003d this.slashWord + \" \" +  this.actualTime;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return taskInfoArray;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 61
    }
  },
  {
    "path": "src/main/java/duke/tasktypes/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package duke.tasktypes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The superclass of all the possible tasks that is stored in duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * \u003cp\u003eThis superclass is made abstract so as to prevent any tasks to be made to be just a superclass task. It forces the"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * tasks made to be one of the subclasses of tasks\u003c/p\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * This method gets overridden by its subclass. It returns the task\u0027s information in a nicely packaged"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003ccode\u003eString[]\u003c/code\u003e data structure that can be easily used"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003eUsed by the {@link duke.Storage} \u003ccode\u003esave()\u003c/code\u003e function to save the task into the offline saved"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * data\u003c/p\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003eSee the respective subclasses for more details\u003c/p\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return the subclass will return its respective task information"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Todo"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Event"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Deadline"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see duke.Storage#save"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public abstract String[] getTaskInfo();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description + \" \";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 48
    }
  },
  {
    "path": "src/main/java/duke/tasktypes/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package duke.tasktypes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The \u003ccode\u003eTODO\u003c/code\u003e type class"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * @see Task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Gets the \u003ccode\u003eTODO\u003c/code\u003e information stored nicely in a \u003ccode\u003eString[]\u003c/code\u003e array"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Used in the {@link duke.Storage} class for retrieving the \u003ccode\u003eTODO\u003c/code\u003e task\u0027s information to store it as"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * offline saved data"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return a \u003ccode\u003eString[]\u003c/code\u003e array containing the description, the time and whether the event is done"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see duke.Storage#save"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public String[] getTaskInfo() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] taskInfoArray \u003d new String[4];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        taskInfoArray[0] \u003d \"T\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (super.isDone) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            taskInfoArray[1] \u003d \"1\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            taskInfoArray[1] \u003d \"0\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        taskInfoArray[2] \u003d super.description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        taskInfoArray[3] \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return taskInfoArray;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 48
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Hello! I\u0027m duke.duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Got it. I\u0027ve added this task: [✘]add friend"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Got it. I\u0027ve added this task: [T][✘]add friend"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Got it. I\u0027ve added this task: [T][✘]funny things (at: 10pm)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Got it. I\u0027ve added this task: [E][✘]going to sleep (by: waaw)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Got it. I\u0027ve added this task: [D][✘]lol"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "1. [✘]add friend"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "2. [T][✘]add friend"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "3. [T][✘]funny things (at: 10pm)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "4. [E][✘]going to sleep (by: waaw)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "5. [D][✘]lol"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Nice! I marked this as done: [T][✓]add friend"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "1. [✘]add friend"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "2. [T][✓]add friend"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "3. [T][✘]funny things (at: 10pm)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "4. [E][✘]going to sleep (by: waaw)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "5. [D][✘]lol"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Bye. Hope to see you again soon! Maybe next time"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 52
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "add friend"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "todo add friend"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "todo funny things /at 10pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "event going to sleep /by waaw"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "deadline lol"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 9
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java ..\\src\\main\\java\\Deadline.java ..\\src\\main\\java\\Event.java ..\\src\\main\\java\\Todo.java ..\\src\\main\\java\\Task.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "java -Dfile.encoding\u003dUTF8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "pause"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 23
    }
  }
]

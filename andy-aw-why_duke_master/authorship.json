[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for Duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "andy-aw-why": 2
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    //id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "//checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "//    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "//}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    archiveVersion \u003d \"0.0.1\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    mainClassName \u003d \"Duke.Duke\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "andy-aw-why": 14
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "T | 1 | things | at 2018-12-13"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "E | 0 | my show | by 2007-12-01"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 2
    }
  },
  {
    "path": "src/main/java/Duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import Duke.TaskTypes.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import Duke.TaskTypes.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import Duke.TaskTypes.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import Duke.TaskTypes.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * Represents a command. The call for command execution is done through here too. It calls upon the {@link TaskList} class to do the actual executions."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * @see TaskList"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final String FIND \u003d \"find\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private String[] splitCommand;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private String typeOfCommand;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private String descriptionOfCommand;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private String timeOfCommand;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private String number;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private LocalDate time;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Display all the tasks present in the tasklist through the {@link TaskList} object. If there is no task in the tasklist, then it will display that there is nothing in it"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param tasks the list of tasks"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param ui    for displaying Ui elements"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Ui"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static void displayList(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        int numberOfTasks \u003d tasks.getNumberOfTask();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (numberOfTasks \u003e 0) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            for (int i \u003d 0; i \u003c numberOfTasks; i++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                ui.displayEachTask(i, tasks);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } else if (numberOfTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            System.out.println(\"Nothing yet\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * This method marks a {@link Task} object (as chosen by its task number) in the {@link TaskList} list as \"done\". If the task number given is not a number, an exception will be thrown."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Also, if the task number given does not correspond to any task in the tasklist, an error message will be shown stating that the number chosen is out of range"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param tasks      the list of tasks"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param taskNumber the task number of the task to be marked as done"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param ui         for displaying Ui elements"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws NumberFormatException the exception thrown when the task number given is not a number"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see NumberFormatException"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Ui"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static void markTaskAsDone(TaskList tasks, String taskNumber, Ui ui) throws NumberFormatException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            int taskListNumber \u003d Integer.parseInt(taskNumber);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            if (taskListNumber \u003e tasks.getNumberOfTask() || taskListNumber \u003d\u003d 0) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                ui.displayOutOfRange();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                tasks.markTaskAsDone(taskListNumber - 1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                ui.displayTaskMarkedAsDone(tasks, taskListNumber);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            throw new NumberFormatException(\"Done number field is not a number!\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Delete the task in the tasklist corresponding to \u003ccode\u003etaskNumber\u003c/code\u003e value given. Throws an exception when the task number do not correspond to any actual task"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Likewise, if the task number chosen do not correspond to any task in the tasklist, an error message will be shown stating that the number chosen is out of range"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param taskList   the list of tasks"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param taskNumber the task number of the task to be deleted"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param ui         for displaying Ui elements"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws NumberFormatException the exception thrown when the task number chosen is not a number"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see NumberFormatException"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Ui"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static void deleteTask(TaskList taskList, String taskNumber, Ui ui) throws NumberFormatException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            int currentNumberOfTasks \u003d taskList.getNumberOfTask();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            int taskListNumber \u003d Integer.parseInt(taskNumber);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            if (taskListNumber \u003e currentNumberOfTasks || taskListNumber \u003d\u003d 0) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                ui.displayOutOfRange();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                // Get name of the task that is going to be removed before it is removed"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                String removedTask \u003d taskList.getTaskList().get(taskListNumber - 1).toString();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                taskList.removeTask(taskListNumber - 1);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                currentNumberOfTasks \u003d currentNumberOfTasks - 1;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                ui.displayTaskRemoved(removedTask, currentNumberOfTasks);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            throw new NumberFormatException(\"Delete number field is not a number!\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Create the task objects to be placed in the task list as specified by \u003ccode\u003etasks\u003c/code\u003e parameter"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param tasks the list of tasks"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param ui    for the ui elements"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Ui"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Todo"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Deadline"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Event"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private void addToList(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        Task newTask \u003d null;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        switch (typeOfCommand.toLowerCase()) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            newTask \u003d new Todo(descriptionOfCommand, timeOfCommand);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            newTask \u003d new Deadline(descriptionOfCommand, timeOfCommand);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            newTask \u003d new Event(descriptionOfCommand, timeOfCommand);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        tasks.addTasks(newTask);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        ui.displayTaskAdded(newTask);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Set method to store the array containing the split input, where the input is split by space"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param splitCommand the array containing the input split by space"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void setSplitCommand(String[] splitCommand) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.splitCommand \u003d splitCommand;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Set method to store the type of command this command is, be it \u003ccode\u003eTODO,EVENT,LIST,DEADLINE,DONE,DELETE\u003c/code\u003e"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param typeOfCommand the type of command this command is supposed to be"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void setTypeOfCommand(String typeOfCommand) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.typeOfCommand \u003d typeOfCommand;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Set method to store the description for each command. Definition of description differs command by command"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * For \u003ccode\u003eTODO,EVENT,DEADLINE\u003c/code\u003e: the description refers to the action behind the type of command"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * For \u003ccode\u003eDONE,DELETE\u003c/code\u003e: the description refers to the task number of the task involved"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param descriptionOfCommand the description accompanying the command"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void setDescriptionOfCommand(String descriptionOfCommand) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.descriptionOfCommand \u003d descriptionOfCommand;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Set method to store the date of the command itself."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Note that said date should also contain the slash word too"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * For example: \u003ccode\u003e\"todo add things /by 2018-12-01\"\u003c/code\u003e"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003ccode\u003etimeOfCommand\u003c/code\u003e \u003d \"by 2018-12-01\""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param timeOfCommand the date with the slash word"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void setTimeOfCommand(String timeOfCommand) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.timeOfCommand \u003d timeOfCommand;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Set method to store the entire user input"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param fullCommand the entire user input"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void setFullCommand(String fullCommand) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Execute the actual user command. Need the list of task to modify the task in the task list (either add/delete/update tasks) and to update the task list after the task is done"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param tasks list of Task"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws NumberFormatException exception only thrown for the DONE and DELETE if task number provided is not an integer"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void execute(TaskList tasks) throws NumberFormatException {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        switch (typeOfCommand.toLowerCase()) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            addToList(tasks, ui);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            displayList(tasks, ui);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            markTaskAsDone(tasks, this.number, ui);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            deleteTask(tasks, this.number, ui);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            findTask(tasks, ui);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private void findTask(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        ArrayList\u003cTask\u003e findList \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        ArrayList\u003cString\u003e tempResults \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        for (Task checkTask : findList) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            if (checkTask.toString().contains(this.descriptionOfCommand)) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                tempResults.add(checkTask.toString());"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (tempResults.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            ui.displayNoResultReturned();"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            ui.displayObtainedResults(tempResults);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Set method for storing the task number specified in the command itself"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Only used for DELETE and DONE commands"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param s task number as specified in the command itself"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void setNumber(String s) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.number \u003d s;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 277
    }
  },
  {
    "path": "src/main/java/Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import Duke.Exception.InvalidTaskException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import Duke.Exception.MissingDescriptonException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import Duke.Exception.MissingNumberFieldException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import Duke.Exception.MissingTimeFieldException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The main class that first get run"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Create the respective classes that will be used in duke"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            storage \u003d new Storage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            parser \u003d new Parser();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * The actual execution of Duke is summarised in this method. Duke is first entered, then the commands are fed till the exit command is found. Finally, the duke exits"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        enterDuke();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        runDukeTillExit();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        exitDuke();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Display the welcome screen"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003eFollowed by importing the offline saved data into the list of tasks\u003c/p\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Ui"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see TaskList#setTaskList"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Storage#load"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private void enterDuke() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        ui.displayHello();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        tasks.setTaskList(storage.load());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * The method where Duke reads and executes the user inputs"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003eWill keep running until \"bye\" is seen. Then, it will quit the duke program itself\u003c/p\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Ui#getUserInput()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Parser#parseUserInput"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Command#execute"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private void runDukeTillExit() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String userInput \u003d ui.getUserInput();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        while (parser.isNotBye(userInput)){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                command \u003d parser.parseUserInput(userInput);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                command.execute(tasks);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            } catch (InvalidTaskException"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    | MissingDescriptonException"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    | MissingNumberFieldException"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    | MissingTimeFieldException"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    | NumberFormatException"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    | DateTimeException m) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                System.out.println(\"Exception occurred: \" + m);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            ui.displayPrompt();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            userInput \u003d ui.getUserInput();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * The method used to exit Duke. Occurs when the \"bye\" command is issued. It saves the task list and close the scanner before saying goodbye"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Storage#save"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Ui#closeScanner"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Ui#displayGoodbye()"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private void exitDuke() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        storage.save(tasks.getTaskList(), tasks.getNumberOfTask());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        ui.closeScanner();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        ui.displayGoodbye();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 101,
      "-": 1
    }
  },
  {
    "path": "src/main/java/Duke/Exception/InvalidTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package Duke.Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The custom exception thrown when the task supplied is not a valid task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class InvalidTaskException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public InvalidTaskException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 10
    }
  },
  {
    "path": "src/main/java/Duke/Exception/MissingDescriptonException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package Duke.Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The custom exception thrown when the task is missing information in the description field"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class MissingDescriptonException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public MissingDescriptonException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 11
    }
  },
  {
    "path": "src/main/java/Duke/Exception/MissingNumberFieldException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package Duke.Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The custom exception thrown when for the \u003ccode\u003eDONE\u003c/code\u003e and \u003ccode\u003eDELETE\u003c/code\u003e task is missing the task number"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class MissingNumberFieldException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public MissingNumberFieldException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 10
    }
  },
  {
    "path": "src/main/java/Duke/Exception/MissingTimeFieldException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package Duke.Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The custom exception thrown when the task is missing the date/time information when it is supposed/expected to have it"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * \u003cp\u003eAs long as there is a \u003ccode\u003e\"/\"\u003c/code\u003e is provided, it is assumed that a date/time will be supplied. If there is no \u003ccode\u003e\"/\"\u003c/code\u003e, then it is assumed the task do not have a date/time\u003c/p\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class MissingTimeFieldException extends Exception {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public MissingTimeFieldException(String s) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 12
    }
  },
  {
    "path": "src/main/java/Duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import Duke.Exception.InvalidTaskException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import Duke.Exception.MissingDescriptonException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import Duke.Exception.MissingNumberFieldException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import Duke.Exception.MissingTimeFieldException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * Class used to parse the user input. Helps check for error as well as formatting the input for the {@link Command} class to use"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " *     When an error is found, it will throw the respective errors given"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * \u003c/p\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final int DESCRIPTION \u003d 0;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final int TIME \u003d 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final int TIME_INCLUDED \u003d 2;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final int TYPE_OF_COMMAND \u003d 0;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final int TASK_NUMBER \u003d 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final String FIND \u003d \"find\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Split the array up by spaces."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *     Only usage is just to get the type of command"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param userInput the raw user input"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return the \u003ccode\u003eString[]\u003c/code\u003e array with the split user input"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static String[] splitTheUserInput(String userInput) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(System.lineSeparator());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return userInput.split(\" \");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static boolean isDescriptionBlank(String[] strings) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return strings[0].isBlank();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Help split up the user input (without the type of command) so as to separate the different parts of the user input into an array. This makes it easier for the command creation"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param input the user input without the type of command (\u003ccode\u003eTODO,DEADLINE,DONE\u003c/code\u003e etc...) in front of it"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return a \u003ccode\u003eString[]\u003c/code\u003e array which contains the separated user input."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static String[] splitTaskDescription(String input) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] returnSplit \u003d new String[3];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        // For the user input task that do not contain time/date"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (!input.contains(\"/\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            String[] obtainedDescription \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            // Placing the description into the array"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            if (obtainedDescription.length \u003d\u003d 1 || obtainedDescription[1].isBlank()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                returnSplit[DESCRIPTION] \u003d \"\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                returnSplit[DESCRIPTION] \u003d obtainedDescription[1].trim();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            //Placing the leftover details into the array"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            returnSplit[TIME] \u003d \"\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            returnSplit[TIME_INCLUDED] \u003d \"\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            return returnSplit;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        // For the user input task that supposed to contain time/date"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] obtainedSplit \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] obtainedDescription \u003d obtainedSplit[0].split(\" \", 2);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        // Placing the description into the array as well as the time"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (obtainedDescription.length \u003d\u003d 1 || obtainedDescription[1].isBlank()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            returnSplit[DESCRIPTION] \u003d \"\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            returnSplit[TIME] \u003d \"\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            returnSplit[DESCRIPTION] \u003d obtainedDescription[1].trim();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            returnSplit[TIME] \u003d obtainedSplit[1].trim();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            returnSplit[TIME_INCLUDED] \u003d \"yes\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return returnSplit;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * The actual method used to check the task input by the user. If there is any error in the user input, it will throw the respective exception calls"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param splitUserInput the \u003ccode\u003eString[]\u003c/code\u003e array which contains the user input split by space (so as to obtain the type of command)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param fullUserSplit the \u003ccode\u003eString[]\u003c/code\u003e array which contains the user input split into its description and time/date"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws InvalidTaskException exception thrown when the task given is not a valid task and hence not a valid command"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws MissingDescriptonException exception thrown when the task given has no description attached to it despite expecting it"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws MissingNumberFieldException exception thrown when the task given lacks a number field. Only used for \u003ccode\u003eDELETE\u003c/code\u003e and \u003ccode\u003eDONE\u003c/code\u003e commands"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws MissingTimeFieldException exception thrown when no date or time given despite expecting it"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static void validateTask(String[] splitUserInput, String[] fullUserSplit)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            throws InvalidTaskException, MissingDescriptonException, MissingNumberFieldException,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            MissingTimeFieldException, DateTimeParseException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String nameOfTask \u003d splitUserInput[0].toLowerCase();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        // Check if task type is supported by Duke"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (!nameOfTask.equals(TODO)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                \u0026\u0026 !nameOfTask.equals(EVENT)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                \u0026\u0026 !nameOfTask.equals(DEADLINE)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                \u0026\u0026 !nameOfTask.equals(DONE)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                \u0026\u0026 !nameOfTask.equals(LIST)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                \u0026\u0026 !nameOfTask.equals(DELETE)"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                \u0026\u0026 !nameOfTask.equals(FIND)) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            throw new InvalidTaskException(\"Input is invalid. No such task\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            // Check if the task has correct input"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            if ((nameOfTask.toLowerCase().equals(DONE)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    || nameOfTask.toLowerCase().equals(DELETE)) \u0026\u0026 splitUserInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                throw new MissingNumberFieldException(nameOfTask.toUpperCase() + \"\u0027s number field is empty!\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            } else if (isDescriptionBlank(fullUserSplit) \u0026\u0026 !nameOfTask.equals(LIST)) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                throw new MissingDescriptonException(\"Missing description!\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            } else if (nameOfTask.equals(TODO)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    || nameOfTask.equals(EVENT)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    || nameOfTask.toLowerCase().equals(DEADLINE)) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                if (fullUserSplit[2].equals(\"yes\")) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    String obtainedTime \u003d fullUserSplit[1];"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    String[] timeCheck \u003d obtainedTime.split(\" \", 2);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    if (timeCheck.length \u003d\u003d 1 || timeCheck[1].isBlank()) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        throw new MissingTimeFieldException(\"Missing time or missing slash word!\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        LocalDate d1 \u003d LocalDate.parse(timeCheck[1]);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    catch (DateTimeParseException m){"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        throw new DateTimeException(\"Date cannot be parsed! Make sure the format is correct! Format: yyyy-mm-dd\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Parse the user input. It formats the user input so that it transform the user input (the task) to becomes a valid executable command. Likewise, if there is any error in the user input, it will throw an exception and explain what the error in the user input is ."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param userInput the raw user input"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return the formatted command stored in a {@link Command} class"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws InvalidTaskException exception thrown when the task given is not a valid task and hence not a valid command"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws MissingDescriptonException exception thrown when the task given has no description attached to it despite expecting it"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws MissingNumberFieldException exception thrown when the task given lacks a number field. Only used for \u003ccode\u003eDELETE\u003c/code\u003e and \u003ccode\u003eDONE\u003c/code\u003e commands"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @throws MissingTimeFieldException exception thrown when no date or time given despite expecting it"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Command"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public Command parseUserInput(String userInput)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            throws InvalidTaskException, MissingDescriptonException, MissingNumberFieldException,"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            MissingTimeFieldException, DateTimeParseException {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        Command command \u003d new Command();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        //Format and split up the user input task so as to be checked by the validateTask method"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] splitUserInput \u003d splitTheUserInput(userInput);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] fullUserSplit \u003d splitTaskDescription(userInput);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        validateTask(splitUserInput, fullUserSplit);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        // Once validated, format and prepare the command itself to be executed"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        command.setFullCommand(userInput);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        command.setSplitCommand(splitUserInput);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        command.setTypeOfCommand(splitUserInput[TYPE_OF_COMMAND]);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        command.setDescriptionOfCommand(fullUserSplit[DESCRIPTION]);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        command.setTimeOfCommand(fullUserSplit[TIME]);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (splitUserInput[0].toLowerCase().equals(DONE) || splitUserInput[0].toLowerCase().equals(DELETE)) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            command.setNumber(splitUserInput[TASK_NUMBER]);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            command.setNumber(splitUserInput[1]);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Check to see if the user input obtained does not equal to \"bye\". If it is \"bye\", it means the user wants to exit duke"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *     Only used during the Ui loop to check if the user wants to exit"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param userInput the raw user input"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return \u003ccode\u003eTRUE\u003c/code\u003e if user wants to exit (user input \"bye\"), else \u003ccode\u003eFALSE\u003c/code\u003e"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public boolean isNotBye(String userInput) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return !userInput.equals(\"bye\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 206
    }
  },
  {
    "path": "src/main/java/Duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import Duke.TaskTypes.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import Duke.TaskTypes.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import Duke.TaskTypes.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import Duke.TaskTypes.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The class used to load and store the data from the task list (the {@link TaskList} object\u0027s tasks)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final int SAVED_DESCRIPTION \u003d 2;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final int DESCRIPTION \u003d 0;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final int TIME \u003d 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String T \u003d \"T\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String E \u003d \"E\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static final String D \u003d \"D\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final int FIRST_LETTER_OF_TASK_TYPE \u003d 0;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final int IS_TASK_DONE \u003d 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public static final int SAVED_TIME \u003d 3;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static Path getSaveDataPath() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return Paths.get(\"data\", \"duke.txt\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static boolean checkIfDataFileExist(Path path) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return Files.exists(path);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static Scanner initializeFileScanner(File f) throws FileNotFoundException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return new Scanner(f);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Split a line of data by the \u003ccode\u003e|\u003c/code\u003e symbol to extract the data in it"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param s the line of data to be parsed"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return a \u003ccode\u003eString[]\u003c/code\u003e array that contains data upon the split"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static String[] extractData(Scanner s) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return s.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Get the description and time (if present) from the line of data"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param obtainedLine the line of data to parsed"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return a \u003ccode\u003eString[]\u003c/code\u003e array that contains the description and time as different array element"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static String[] getDescriptionAndTime(String[] obtainedLine) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] splitTaskDescriptionArray \u003d new String[2];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        splitTaskDescriptionArray[DESCRIPTION] \u003d obtainedLine[2].trim();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (obtainedLine.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            splitTaskDescriptionArray[TIME] \u003d obtainedLine[3].trim();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            splitTaskDescriptionArray[TIME] \u003d \"\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return splitTaskDescriptionArray;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * The actual method used to insert a task (from the imported data) into the task list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param taskList the list of task to import the task into"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param taskNumber the current task number before the next task is added"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param splitTaskDescriptionArray the \u003ccode\u003eString[]\u003c/code\u003e array that contains the description and (if present) time of the task itself"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param s the \u003ccode\u003eString\u003c/code\u003e containing the type of task. Values are either \u003ccode\u003eTODO, EVENT\u003c/code\u003e or \u003ccode\u003eDEADLINE\u003c/code\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return the number of tasks currently in the list. Will be useful for the private {@link Storage#markImportTaskDone} method to mark that task as done"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static int importToList(ArrayList\u003cTask\u003e taskList, int taskNumber, String[] splitTaskDescriptionArray,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                                    String s) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        int currentTaskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        switch (s.trim()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case T:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            newTask \u003d new Todo(splitTaskDescriptionArray[DESCRIPTION], splitTaskDescriptionArray[TIME]);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            taskList.add(newTask);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            currentTaskNumber \u003d currentTaskNumber + 1;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case E:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            newTask \u003d new Event(splitTaskDescriptionArray[DESCRIPTION], splitTaskDescriptionArray[TIME]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            taskList.add(newTask);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            currentTaskNumber \u003d currentTaskNumber + 1;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        case D:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            newTask \u003d new Deadline(splitTaskDescriptionArray[DESCRIPTION], splitTaskDescriptionArray[TIME]);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            taskList.add(newTask);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            currentTaskNumber \u003d currentTaskNumber + 1;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            System.out.println(\"Error in importing this task! Task starts with: \" + s.trim());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return currentTaskNumber;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Check to see if the task imported into the task list is done. If it is done, mark it as done."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param taskList the task list containing the task"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param taskNumber the task number of the task to be checked"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param obtainedLine the \u003ccode\u003eString[]\u003c/code\u003e array that was obtained from the {@link Storage#extractData} method. The second element tells us if the task is done"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Storage#extractData"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private static void markImportTaskDone(ArrayList\u003cTask\u003e taskList, int taskNumber, String[] obtainedLine) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (obtainedLine[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            taskList.get(taskNumber - 1).markAsDone();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * The actual loading of the data from the saved data before return a task list. If there is no saved data present, this will return an empty task list. Else, it will load the tasks found in the task list and return the filled task list"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return an \u003ccode\u003eArrayList\u003cTask\u003e\u003c/code\u003e containing the tasks. Will be empty if there is no saved tasks"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        Path path \u003d getSaveDataPath();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        boolean isFileExists \u003d checkIfDataFileExist(path);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        // See if file actually exist. If it exist, load the data from the saved data. Else, just return the empty ArrayList\u003cTask\u003e of tasks"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (isFileExists) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            File f \u003d new File(String.valueOf(path));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                Scanner s \u003d initializeFileScanner(f);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                int taskNumber \u003d 0;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                while (s.hasNext()) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    String[] obtainedLine \u003d extractData(s);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    String[] splitTaskDescriptionArray \u003d getDescriptionAndTime(obtainedLine);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    // Import the task into the task list and check if the task is saved as done. If it is so, mark the task as done"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    taskNumber \u003d importToList(taskList, taskNumber, splitTaskDescriptionArray, obtainedLine[0]);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                    markImportTaskDone(taskList, taskNumber, obtainedLine);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                System.out.println(\"Exception occurred: \" + e + \"File not found!\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * The actual saving of the tasks in the task list into the saved data file itself. It gets list of tasks from the \u003ccode\u003eArrayList\u003cTask\u003e\u003c/code\u003e of tasks"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param taskList the \u003ccode\u003eArrayList\u003cTask\u003e\u003c/code\u003e of tasks"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param numberOfTasks the number of tasks in the arraylist. Needed for looping the task list itself. Also used to check if the task list is empty or not"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e taskList, int numberOfTasks) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        Path directoryPath \u003d Paths.get(\"data\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        boolean isFileExists \u003d Files.exists(directoryPath);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        // If there is no previous saved data, create the directory to store the saved data text file first before doing the actual saving of data"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (!isFileExists) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            File directory \u003d new File(\"data\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            directory.mkdir();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        // The actual writing of the task into the saved file"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        File f \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            FileWriter fw \u003d new FileWriter(f);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            // If the task list is empty, the saved data will not contain anything in it. Hence, filewriter will just write a \"\" to the file"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            if (numberOfTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                fw.write(\"\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            // Loop through the array list and store the tasks into the task list itself"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            for (int i \u003d 0; i \u003c numberOfTasks; i++) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                String[] getTaskInfo \u003d taskList.get(i).getTaskInfo();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                fw.write(getTaskInfo[FIRST_LETTER_OF_TASK_TYPE]"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + \" | \""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + getTaskInfo[IS_TASK_DONE]"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + \" | \""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + getTaskInfo[SAVED_DESCRIPTION]"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + \" | \""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + getTaskInfo[SAVED_TIME]"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + System.lineSeparator());"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            System.out.println(\"Exception occurred: \" + e + \": Error in writing file!\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 199
    }
  },
  {
    "path": "src/main/java/Duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import Duke.TaskTypes.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The class to represent the list of tasks itself. This is also where the manipulation of the tasks in the task list is actually done (other classes rely on this class {@link TaskList} to do the actual task list manipulations)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * \u003cp\u003eNot only does it serves to add and view the tasks, it also edit the status of the tasks as well. For example, it can get the number of tasks, mark tasks as done and remove the tasks in the tasklist\u003c/p\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * @see ArrayList"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Get the list of tasks (which is stored as an \u003ccode\u003eArrayList\u003cTask\u003e\u003c/code\u003e)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return list of task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Set method for initializing the list of tasks itself"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param taskList the new list of tasks"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void setTaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * To add a task into the task list"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param task the {@link Task} object to add into the task list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Task"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void addTasks(Task task){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Get the number of tasks in the task list"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return the number of tasks present"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public int getNumberOfTask() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Mark the task chosen by the task number to be done"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param i the task number to be marked as done"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void markTaskAsDone(int i) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        taskList.get(i).markAsDone();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Remove the task corresponding to the task number given from the list of tasks"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param i the task number to be removed"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void removeTask(int i) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        taskList.remove(i);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 69
    }
  },
  {
    "path": "src/main/java/Duke/TaskTypes/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package Duke.TaskTypes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The \u003ccode\u003eDEADLINE\u003c/code\u003e type class"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    protected LocalDate actualTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    protected String slashWord;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] bySplit \u003d by.split(\" \", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.slashWord \u003d bySplit[0].trim();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String tempTime \u003d bySplit[1].trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.actualTime \u003d LocalDate.parse(tempTime);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (by.equals(\"\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            return \"[D]\" + super.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] bySplit \u003d by.split(\" \", 2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return \"[D]\" + super.toString() + \"(\" + this.slashWord + \": \" + this.actualTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Gets the \u003ccode\u003eDEADLINE\u003c/code\u003e information stored nicely in a \u003ccode\u003eString[]\u003c/code\u003e array"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *     Used in the {@link Duke.Storage} class for retrieving the \u003ccode\u003eDEADLINE\u003c/code\u003e task\u0027s information to store it as offline saved data"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return a \u003ccode\u003eString[]\u003c/code\u003e array containing the description, the time and whether the event is done"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Duke.Storage#save"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public String[] getTaskInfo() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] taskInfoArray \u003d new String[4];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        taskInfoArray[0] \u003d \"D\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (super.isDone) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            taskInfoArray[1] \u003d \"1\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            taskInfoArray[1] \u003d \"0\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        taskInfoArray[2] \u003d super.description;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        taskInfoArray[3] \u003d by;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return taskInfoArray;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 58
    }
  },
  {
    "path": "src/main/java/Duke/TaskTypes/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package Duke.TaskTypes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The \u003ccode\u003eEVENT\u003c/code\u003e type class"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    protected LocalDate actualTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    protected String slashWord;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public Event(String description, String by) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] bySplit \u003d by.split(\" \", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.slashWord \u003d bySplit[0].trim();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String tempTime \u003d bySplit[1].trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.actualTime \u003d LocalDate.parse(tempTime);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (by.equals(\"\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            return \"[E]\" + super.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] bySplit \u003d by.split(\" \", 2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return \"[E]\" + super.toString() + \"(\" + this.slashWord + \": \" + this.actualTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Gets the \u003ccode\u003eEVENT\u003c/code\u003e information stored nicely in a \u003ccode\u003eString[]\u003c/code\u003e array"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *     Used in the {@link Duke.Storage} class for retrieving the \u003ccode\u003eEVENT\u003c/code\u003e task\u0027s information to store it as offline saved data"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return a \u003ccode\u003eString[]\u003c/code\u003e array containing the description, the time and whether the event is done"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Duke.Storage#save"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public String[] getTaskInfo() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] taskInfoArray \u003d new String[4];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        taskInfoArray[0] \u003d \"E\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (super.isDone) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            taskInfoArray[1] \u003d \"1\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            taskInfoArray[1] \u003d \"0\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        taskInfoArray[2] \u003d super.description;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        taskInfoArray[3] \u003d by;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return taskInfoArray;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 59
    }
  },
  {
    "path": "src/main/java/Duke/TaskTypes/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package Duke.TaskTypes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The superclass of all the possible tasks that is stored in duke"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * \u003cp\u003eThis superclass is made abstract so as to prevent any tasks to be made to be just a superclass task. It forces the tasks made to be one of the subclasses of tasks\u003c/p\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * This method gets overridden by its subclass. It returns the task\u0027s information in a nicely packaged \u003ccode\u003eString[]\u003c/code\u003e data structure that can be easily used"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003eUsed by the {@link Duke.Storage} \u003ccode\u003esave()\u003c/code\u003e function to save the task into the offline saved data\u003c/p\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003eSee the respective subclasses for more details\u003c/p\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return the subclass will return its respective task information"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Todo"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Event"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Deadline"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Duke.Storage#save"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public abstract String[] getTaskInfo();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description + \" \";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 47
    }
  },
  {
    "path": "src/main/java/Duke/TaskTypes/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package Duke.TaskTypes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * The \u003ccode\u003eTODO\u003c/code\u003e type class"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    protected LocalDate actualTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    protected String slashWord;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public Todo(String description, String by) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] bySplit \u003d by.split(\" \", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (bySplit.length \u003e 1) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            this.slashWord \u003d bySplit[0].trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            String tempTime \u003d bySplit[1].trim();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            this.actualTime \u003d LocalDate.parse(tempTime);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (by.equals(\"\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return \"[T]\" + super.toString() + \"(\" + this.slashWord + \": \" + this.actualTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Gets the \u003ccode\u003eTODO\u003c/code\u003e information stored nicely in a \u003ccode\u003eString[]\u003c/code\u003e array"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     *     Used in the {@link Duke.Storage} class for retrieving the \u003ccode\u003eTODO\u003c/code\u003e task\u0027s information to store it as offline saved data"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return a \u003ccode\u003eString[]\u003c/code\u003e array containing the description, the time and whether the event is done"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Duke.Storage#save"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public String[] getTaskInfo() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String[] taskInfoArray \u003d new String[4];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        taskInfoArray[0] \u003d \"T\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        if (super.isDone) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            taskInfoArray[1] \u003d \"1\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            taskInfoArray[1] \u003d \"0\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        taskInfoArray[2] \u003d super.description;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        taskInfoArray[3] \u003d by;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return taskInfoArray;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 59
    }
  },
  {
    "path": "src/main/java/Duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import Duke.TaskTypes.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " * Represent the UI that the user uses to interact with Duke. Contains the display methods and user input methods."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private Scanner myInput;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private Scanner initializeScanner() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    private String getUserInput(Scanner myInput) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return myInput.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Display the welcome screen"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void displayHello() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke.Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Display the exit screen. Shown when the user exits"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void displayGoodbye() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(System.lineSeparator());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon! Maybe next time\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Display to user what the exact task is added into the task list"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param newTask the {@link Task} object of containing the task itself"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see Task"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void displayTaskAdded(Task newTask) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \" + newTask.toString());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Ui element to read and return the user input"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @return the string containing the user input"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        myInput \u003d initializeScanner();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        return getUserInput(myInput);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Just show a message indicating it is out of range"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Only used tp display a message when the user wants to access a non-existent element"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void displayOutOfRange() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(\"Out of range\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Display task based on the value of \u003ccode\u003ei\u003c/code\u003e, which is the task number"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param i task number"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param tasks the list of tasks to be seen"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void displayEachTask(int i, TaskList tasks) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                Integer.toString(i + 1) + \". \" + tasks.getTaskList().get(i).toString());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Confirmation message of task being marked as done"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param tasks the list of tasks"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param taskListNumber task number that was marked as done"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void displayTaskMarkedAsDone(TaskList tasks, int taskListNumber) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                \"Nice! I marked this as done: \" + tasks.getTaskList().get(taskListNumber - 1).toString());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Just a confirmation message to show that a task is successfully removed"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param removedTask name of task removed"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * @param currentNumberOfTasks number of tasks left in the list upon successful task removal"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void displayTaskRemoved(String removedTask, int currentNumberOfTasks) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                \"Noted. I removed this task: \""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + System.lineSeparator()"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + removedTask"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + System.lineSeparator()"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + \"Now you have \""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + currentNumberOfTasks"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + \" tasks in the list\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "                        + System.lineSeparator());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * A message to prompt the user to enter the next command"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void displayPrompt() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(\"What else do you want to do?\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Close the input scanner"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * Only used once when Duke ends"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void closeScanner() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        myInput.close();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void displayNoResultReturned() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(\"This word/sentence is not found!\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    public void displayObtainedResults(ArrayList\u003cString\u003e tempResults) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        System.out.println(tempResults.size() + \" task found! Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        for (String resultFound : tempResults) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "            System.out.println(resultFound);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 145
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Hello! I\u0027m Duke.Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Got it. I\u0027ve added this task: [✘]add friend"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Got it. I\u0027ve added this task: [T][✘]add friend"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Got it. I\u0027ve added this task: [T][✘]funny things (at: 10pm)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Got it. I\u0027ve added this task: [E][✘]going to sleep (by: waaw)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Got it. I\u0027ve added this task: [D][✘]lol"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "1. [✘]add friend"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "2. [T][✘]add friend"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "3. [T][✘]funny things (at: 10pm)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "4. [E][✘]going to sleep (by: waaw)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "5. [D][✘]lol"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Nice! I marked this as done: [T][✓]add friend"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "1. [✘]add friend"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "2. [T][✓]add friend"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "3. [T][✘]funny things (at: 10pm)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "4. [E][✘]going to sleep (by: waaw)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "5. [D][✘]lol"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "What else do you want to do?"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "Bye. Hope to see you again soon! Maybe next time"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 52
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "add friend"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "todo add friend"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "todo funny things /at 10pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "event going to sleep /by waaw"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "deadline lol"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 9
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java ..\\src\\main\\java\\Deadline.java ..\\src\\main\\java\\Event.java ..\\src\\main\\java\\Todo.java ..\\src\\main\\java\\Task.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "java -Dfile.encoding\u003dUTF8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "andy-aw-why"
        },
        "content": "pause"
      }
    ],
    "authorContributionMap": {
      "andy-aw-why": 23
    }
  }
]

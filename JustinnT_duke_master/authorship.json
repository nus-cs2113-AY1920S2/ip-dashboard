[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "duke.main.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.main.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "JustinnT": 2,
      "-": 37
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "# Table of content"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "\u003c!-- TOC --\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "- [Introduction](#introduction)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "- [Features](#features)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "- [Usage](#usage)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    - [View help: `help`](#help---prints-the-entire-list-of-command)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    - [Exit duke: `bye`](#bye---exits-the-application)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    - [Add todo task: `todo`](#todo---adds-a-todo-command-to-the-list)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    - [Add event task: `event`](#event---adds-a-event-task-to-the-list)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    - [Add deadline task: `deadline`](#deadline---adds-a-deadline-task-to-the-list)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    - [View list: `list`](#list---prints-the-entire-list-of-tasks-added)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    - [Mark as done: `done`](#done---marks-a-task-in-the-list-as-done)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    - [Find specific task: `find`](#find---finds-all-tasks-that-contains-keyword)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    - [Delete specific task: `delete`](#delete---delete-a-task-from-the-list)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "\u003c!-- TOC --\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "Duke is a personal task manager that assist the user to keep track of their schedule. Running on a command line interface,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "duke is designed for users who type fast and prefers a CLI interface as opposed to a GUI. "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "#### View help"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "Duke allows you to view its available commands within the application.  "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "#### Keeps track of your tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "With Duke, you can keep track of various tasks such as Todo, Event and Deadline tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "#### View all your tasks"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "Want to see what tasks you have done (or not yet done)? Duke can show you all your tasks you are currently tracking. "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "#### Mark your task as done"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "Done with a task? Duke allows you to mark a specific task as done. "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "#### Finding a specific task"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "Can\u0027t remember what task you\u0027ve added? Duke allows you to filter tasks by searching for a keyword. "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "#### Auto-saves "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "Duke auto saves after any modifications to your tasks. So you do not have to worry about random "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "[crashes](https://en.wikipedia.org/wiki/Crash_(computing)) anymore!"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "### `help` - Prints the entire list of command."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "List all commands that can be executed on the application"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "`help`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "![](help.PNG) "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "### `bye` - Exits the application."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "Exits the application upon input of this command"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "![](bye.PNG)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "### `todo` - Adds a `todo` command to the list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "Adds a `todo` task to the list. Upon successful addition of task,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "a confirmation message will be printed. "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "An error message will be printed if the supplied format is wrong."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "* Correct format example: `todo homework`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "* Incorrect format example: `todo `"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "* If successful"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    ![](todo_success.PNG)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "* If unsuccessful"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    ![](todo_unsuccessful.PNG)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "### `event` - Adds a `event` task to the list. "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "Adds a `event` task to the list. Upon successful addition of task,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "a confirmation message will be printed. "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "An error message will be printed if the supplied format is wrong"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "* Correct format example: `event team meeting /at NUS 3-4pm`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "* Incorrect format example : `event team meeting at NUS 3-4pm`"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "* If successful"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    ![](event_successful.PNG)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "* If unsuccessful"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    ![](event_unsuccessful.PNG)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "### `deadline` - Adds a `deadline` task to the list."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "Adds a `deadline` task to the list. Upon successful addition of task,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "a confirmation message will be printed. "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "An error message will be printed if the supplied format is wrong"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "* Correct format example : `deadline submit iP /by March 2`"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "* Incorrect format example : `deadline submit iP by March 2`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "* If successful"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    ![](deadline_successful.PNG)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "* If unsuccessful"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    ![](deadline_unsuccessful.PNG)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    "
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "### `list` - Prints the entire list of tasks added."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "Prints the entire list of tasks that was added by User."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "`list\u0027"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "![](list.PNG)"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "### `done` - Marks a task in the list as done."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "Marks a task at the specified index in the list as done."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "Upon successful mark, a confirmation message will be printed."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "An error message will be printed if the task does not exist"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "* Correct format example: `done 1`"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "* Incorrect format example: `done 100000000000`"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "* If successful"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    ![](done_successful.PNG)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "* If unsuccessful"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    ![](done_unsuccessful.PNG)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "### `find` - Finds all tasks that contains keyword"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "Finds all tasks that matches supplied keyword exactly"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "or contains a substring of keyword."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "If there are any tasks which matches the keyword, "
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "a list will be printed out."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "If there are no task that matches a keyword, "
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "no matching tasks will be printed."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "* Matching usage example: `find homework`"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "* No matches usage example: `find homewk`"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "* If matches keyword"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    "
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    ![](find_match.PNG)"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    "
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "* If no matches"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    ![](find_no_match.PNG)"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    "
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "### `delete` - Delete a task from the list"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "Deletes a task at the specified index of the list"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "Upon successful mark, a confirmation message will be printed."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "An error message will be printed if the task does not exist"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "* Correct format example: `delete 1`"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "* Incorrect format example: `delete 100000000000`"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "* If successful: ![](delete_successful.PNG)"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "* If unsuccessful ![](delete_unsuccessful.PNG)"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    "
      }
    ],
    "authorContributionMap": {
      "JustinnT": 188,
      "-": 21
    }
  },
  {
    "path": "src/main/java/duke/commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.printer.Printer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " *  Represents a \"bye\" command that user will input."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " *  A \u003ccode\u003eduke.commands.ByeCommand\u003c/code\u003e object will be executed when the User types in \"bye\" in the UI"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " *  e.g., \u003ccode\u003ebye\u003c/code\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public void execute(Storage myTasks, File saveFile, List\u003cString\u003e commands, String command) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        Printer.printLines();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        Printer.printIndentation();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        Printer.printBye();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        Printer.printLines();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JustinnT": 24
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * A parent class for the various commands to inherit."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static final List\u003cString\u003e COMMAND_LIST \u003d Parser.getCommandList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static final int LIMIT \u003d 2;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static final int LIST_INDEX \u003d 1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static final int TASK_DESCRIPTION \u003d 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static final int TASK_DESCRIPTION_AND_DATE \u003d 1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static final int TASK_DEADLINE \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static final int TASK_EVENT_AT \u003d 0;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static final int DUKE_COMMAND \u003d 0;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * For children class to implement"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param myTasks The list where children command will store Tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param saveFile The place where children command will save Tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param commands The rest of the description that has not been parsed yet. e.g., \"team meeting /at central lib\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param command The actual command for the children. e.g., \"deadline\", \"event\"."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public abstract void execute(Storage myTasks, File saveFile, List\u003cString\u003e commands,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                                 String command);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JustinnT": 32
    }
  },
  {
    "path": "src/main/java/duke/commands/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.exceptions.BlankStringException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.exceptions.DukeExceptionHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.filemanager.FileSaver;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.printer.Printer;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * Represents a \"deadline\" command that user will input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * A \u003ccode\u003eduke.commands.DeadlineCommand\u003c/code\u003e object will be executed when the User types in \"deadline\" in the UI"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * e.g., \u003ccode\u003edeadline\u003c/code\u003e submit iP /by March 2"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Executes the deadline command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * This method will first parse the description and deadline."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Then stores it into the list and save it to the file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * If User supplies the wrong format to the deadline command, error will be printed."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param myTasks The list to store the task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param saveFile The filepath to save the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param commands The remaining descriptions that has not been parsed i.e. \"submit iP /by March 2\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param command The exact command that was supplied for this method i.e. \"deadline\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public void execute(Storage myTasks, File saveFile, List\u003cString\u003e commands, String command) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            String descriptionAndDeadline \u003d commands.get(TASK_DESCRIPTION_AND_DATE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            List\u003cString\u003e separated \u003d Parser.parseDeadlineDate(descriptionAndDeadline);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            String description \u003d separated.get(TASK_DESCRIPTION);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            String deadline \u003d separated.get(TASK_DEADLINE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            description \u003d description.trim();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            deadline \u003d deadline.trim();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            DukeExceptionHandler.isBlank(description);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            DukeExceptionHandler.isBlank(deadline);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            Deadline deadlineTask \u003d new Deadline(description, deadline);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            myTasks.storeTasks(deadlineTask);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            FileSaver.saveFile(command, saveFile, description, deadline);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            Printer.printConfirmationMessage(command, deadlineTask);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        } catch (IndexOutOfBoundsException | BlankStringException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            Printer.printFormatError(command);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            Printer.printHint(command);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JustinnT": 58
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.filemanager.FileSaver;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.printer.Printer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * Represents a \"delete\" command that user will input."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * A \u003ccode\u003eduke.commands.DeleteCommand\u003c/code\u003e object will be executed when the User types in \"delete\" in the UI"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * e.g., \u003ccode\u003edelete\u003c/code\u003e 5"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Executes the delete command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Deletes the task at Index that user specified."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * This method will first parse the index from @param commands."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Then it will delete the task at the index and save the changes to the save file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * If the User specified index is out of bounds index or a non-number, error will be printed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param myTasks The list where children command will store Tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param saveFile The place where children command will save Tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param commands The rest of the description that has not been parsed yet. e.g., \"team meeting /at central lib\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param command The actual command for the children. e.g., \"deadline\", \"event\"."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public void execute(Storage myTasks, File saveFile, List\u003cString\u003e commands, String command) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            String indexAsString \u003d commands.get(LIST_INDEX);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            indexAsString \u003d indexAsString.trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            int index \u003d Integer.parseInt(indexAsString);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            Task taskDelete \u003d myTasks.getTask(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            myTasks.deleteTask(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            FileSaver.deleteSpecificLine(saveFile, index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            Printer.printConfirmationMessage(command, taskDelete);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        } catch (IndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            Printer.printFormatError(command);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            Printer.printHint(command);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JustinnT": 49
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.filemanager.FileSaver;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.printer.Printer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * Represents a \"done\" command that user will input."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * A \u003ccode\u003eduke.commands.DoneCommand\u003c/code\u003e object will be executed when the User types in \"done\" in the UI"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * e.g., \u003ccode\u003edone\u003c/code\u003e 5"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Executes the done command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Marks the task as done at index that User specified."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * This method will first parse the index from @param commands"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Then marks the task at the specified index as done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Then save the changes to file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * If the User specified out of bounds index or a non-number, error will be printed."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param myTasks The list where children command will store Tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param saveFile The place where children command will save Tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param commands The rest of the description that has not been parsed yet. e.g., \"team meeting /at central lib\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param command The actual command for the children. e.g., \"deadline\", \"event\"."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public void execute(Storage myTasks, File saveFile, List\u003cString\u003e commands, String command) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            String indexAsString \u003d commands.get(LIST_INDEX);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            indexAsString \u003d indexAsString.trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            int index \u003d Integer.parseInt(indexAsString);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            Task taskDone \u003d myTasks.getTask(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            taskDone.markAsDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            FileSaver.updateFile(saveFile, index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            Printer.printConfirmationMessage(command, taskDone);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        } catch (IndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            Printer.printFormatError(command);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            Printer.printHint(command);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JustinnT": 50
    }
  },
  {
    "path": "src/main/java/duke/commands/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.exceptions.BlankStringException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.exceptions.DukeExceptionHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.filemanager.FileSaver;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.printer.Printer;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * Represents an \"event\" command that user will input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * A \u003ccode\u003eduke.commands.EventCommand\u003c/code\u003e object will be executed when the User types in \"event\" in the UI"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * e.g., \u003ccode\u003eevent\u003c/code\u003e team meeting /at NUS"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Executes the event command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * The method will first parse the description and place."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Then stores it in a list and the save file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * If User supplies the wrong format to the event command, error will be printed."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param myTasks The list where children command will store Tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param saveFile The place where children command will save Tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param commands The rest of the description that has not been parsed yet. e.g., \"team meeting /at central lib\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param command The actual command for the children. e.g., \"deadline\", \"event\"."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public void execute(Storage myTasks, File saveFile, List\u003cString\u003e commands, String command) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            String descriptionAndEventAt \u003d commands.get(TASK_DESCRIPTION_AND_DATE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            List\u003cString\u003e separated \u003d Parser.parseEventAt(descriptionAndEventAt);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            String description \u003d separated.get(TASK_DESCRIPTION);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            String eventAt \u003d separated.get(TASK_EVENT_AT);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            description \u003d description.trim();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            eventAt \u003d eventAt.trim();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            DukeExceptionHandler.isBlank(description);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            DukeExceptionHandler.isBlank(eventAt);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            Event eventTask \u003d new Event(description, eventAt);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            myTasks.storeTasks(eventTask);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            FileSaver.saveFile(command, saveFile, description, eventAt);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            Printer.printConfirmationMessage(command, eventTask);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        } catch (IndexOutOfBoundsException | BlankStringException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            Printer.printFormatError(command);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            Printer.printHint(command);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JustinnT": 59
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.exceptions.BlankStringException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.exceptions.DukeExceptionHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.printer.Printer;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public void execute(Storage myTasks, File saveFile, List\u003cString\u003e commands, String command) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            String keyword \u003d commands.get(TASK_DESCRIPTION);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            keyword \u003d keyword.trim();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            DukeExceptionHandler.isBlank(keyword);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            List\u003cTask\u003e foundTasks \u003d myTasks.findTasks(keyword);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            Printer.printTasks(command, foundTasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        } catch (BlankStringException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            Printer.printEmptyDescriptionError(command);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            Printer.printHint(command);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JustinnT": 29
    }
  },
  {
    "path": "src/main/java/duke/commands/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.printer.Printer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public void execute(Storage myTasks, File saveFile, List\u003cString\u003e commands, String command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        Printer.printHelp();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JustinnT": 14
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * Represents an \"list\" command that user will input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * A \u003ccode\u003eduke.commands.ListCommand\u003c/code\u003e object will be executed when the User types in \"list\" in the UI"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * e.g., \u003ccode\u003elist\u003c/code\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Executes the list command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Prints the entire list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param myTasks The list where children command will store Tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param saveFile The place where children command will save Tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param commands The rest of the description that has not been parsed yet. e.g., \"team meeting /at central lib\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param command The actual command for the children. e.g., \"deadline\", \"event\"."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public void execute(Storage myTasks, File saveFile, List\u003cString\u003e commands, String command) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        myTasks.displayTasks();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JustinnT": 28
    }
  },
  {
    "path": "src/main/java/duke/commands/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.exceptions.BlankStringException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.exceptions.DukeExceptionHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.filemanager.FileSaver;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.printer.Printer;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " *  Represents a \"to_do\" command that user will input. (note: to_do is written to escape the highlight from todo)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " *  A \u003ccode\u003eto_doCommand\u003c/code\u003e object will be executed when the User types in \"todo\" in the UI"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " *  e.g., \u003ccode\u003etodo\u003c/code\u003e read books"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "public class ToDoCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Executes the to_do command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * This method will first parse the description"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Then stores into list and saves into file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * If the user supplies the wrong format to this command error will be printed."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param myTasks The list where children command will store Tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param saveFile The place where children command will save Tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param commands The rest of the description that has not been parsed yet. e.g., \"team meeting /at central lib\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param command The actual command for the children. e.g., \"deadline\", \"event\"."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public void execute(Storage myTasks, File saveFile, List\u003cString\u003e commands, String command) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            String description \u003d commands.get(TASK_DESCRIPTION);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            description \u003d description.trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            DukeExceptionHandler.isBlank(description);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            ToDo toDoTask \u003d new ToDo(description);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            myTasks.storeTasks(toDoTask);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            FileSaver.saveFile(saveFile, description);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            Printer.printConfirmationMessage(command, toDoTask);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        } catch (IndexOutOfBoundsException | BlankStringException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            Printer.printEmptyDescriptionError(command);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            Printer.printHint(command);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JustinnT": 51
    }
  },
  {
    "path": "src/main/java/duke/constants/ConstantCommands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "package duke.constants;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "public final class ConstantCommands {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static final String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static final String FIND \u003d \"find\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static final String HELP \u003d \"help\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JustinnT": 13
    }
  },
  {
    "path": "src/main/java/duke/exceptions/BlankStringException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "public class BlankStringException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JustinnT": 4
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DeadlineDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "public class DeadlineDateException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JustinnT": 4
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeExceptionHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * Customer handler for errors"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "public class DukeExceptionHandler {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Checks if the User supplied description is blank."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * If it is blank, throws a duke.exceptions.BlankStringException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param description The task description"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @throws BlankStringException Throws exception for caller to catch and print error message"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static void isBlank(String description) throws BlankStringException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            throw new BlankStringException();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Throws a duke.exceptions.UnknownCommandException when User supplied in an unknown command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @throws UnknownCommandException Throws exception for caller to catch and print error message."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static void unknownCommand() throws UnknownCommandException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        throw new UnknownCommandException();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static void isEmpty(boolean empty) throws ListEmptyException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        if (empty) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            throw new ListEmptyException();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JustinnT": 34
    }
  },
  {
    "path": "src/main/java/duke/exceptions/ListEmptyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "public class ListEmptyException extends Throwable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JustinnT": 4
    }
  },
  {
    "path": "src/main/java/duke/exceptions/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "public class UnknownCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JustinnT": 4
    }
  },
  {
    "path": "src/main/java/duke/filemanager/FileLoader.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "package duke.filemanager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.printer.Printer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * Loads from the save file into storage"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "public class FileLoader {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static final int TASK_TYPE_INDEX \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static final int DESCRIPTION_INDEX \u003d 2;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static final int IS_DONE_INDEX \u003d 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static final int DEADLINE_INDEX \u003d 3;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static final int EVENT_AT_INDEX \u003d 3;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Loads and store from the save file to the storage"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param myTasks destination, stores from f into myTasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param f source, reads from f and stores into myTasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static void loadFile(Storage myTasks, File f) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        try  (Scanner s \u003d new Scanner(f)){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                String sentence \u003d s.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                List\u003cString\u003e parsedSentence \u003d Parser.parseFile(sentence);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                String taskType \u003d parsedSentence.get(TASK_TYPE_INDEX);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                String description \u003d parsedSentence.get(DESCRIPTION_INDEX);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                int isDone \u003d Integer.parseInt(parsedSentence.get(IS_DONE_INDEX));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                    ToDo toDoTask \u003d new ToDo(isDone, description);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                    myTasks.storeTasks(toDoTask);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                    String dateline \u003d parsedSentence.get(DEADLINE_INDEX);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                    Deadline deadlineTask \u003d new Deadline(isDone, description, dateline);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                    myTasks.storeTasks(deadlineTask);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                    String EventAt \u003d parsedSentence.get(EVENT_AT_INDEX);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                    Event eventTask \u003d new Event(isDone, description, EventAt);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                    myTasks.storeTasks(eventTask);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                    throw new Exception();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            Printer.printFileCorrupted();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            System.exit(1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JustinnT": 69
    }
  },
  {
    "path": "src/main/java/duke/filemanager/FileSaver.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "package duke.filemanager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.main.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.printer.Printer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * Saves after each command into save file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * Saves in this format:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * [TYPE] | [DONE_STATUS] | [DESCRIPTION] | [SECONDARY PARAMETERS]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * e.g., D | 0 | submit iP | March 2nd"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "public class FileSaver {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Makes a new directory in the current working directory"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * if mkdir returns false, we assume that user is not a new user (because he has existing directory)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static void makeNewDirectory() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        File f \u003d new File(\"data\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        boolean isSuccessful \u003d f.mkdir();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        if (!isSuccessful) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            Duke.isNewUser \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Makes a new save file after ensuring that the directory to file is created."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @return the save file object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static File makeNewSaveFile() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        makeNewDirectory();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        File f \u003d Duke.SAVE_FILE;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        boolean isFileExist \u003d f.exists();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        if (!isFileExist) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                System.out.print(\"Unable to create new file\\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        return f;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Saves file after a todo command."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Prints an error if the save file is not found or there is an IO error"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param f file object to save to."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param description description of the task to save."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static void saveFile(File f, String description) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        try (FileWriter fw \u003d new FileWriter(f, true)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            fw.write(\"T | 0 | \" + description + System.lineSeparator());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            Printer.printFileNotFile();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            Printer.printError();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Saves file after a event or deadline command."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Prints an error if the save file is not found or there is an IO error"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param command the type of command"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param f file object to save to"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param description description of the task to save"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param dateTime the date and time  of the task to save"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static void saveFile(String command, File f, String description, String dateTime) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        try (FileWriter fw \u003d new FileWriter(f, true)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                fw.write(\"D | 0 | \" + description + \" | \" + dateTime + System.lineSeparator());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                fw.write(\"E | 0 | \" + description + \" | \" + dateTime + System.lineSeparator());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            Printer.printFileNotFile();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            Printer.printError();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static void createTempFile(File temp) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            temp.createNewFile();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            Printer.printError();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Returns scanner after moving it by the amount of lines specified by @param index."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * As the scanner moves to the next line, it will append the contents of the line to a temp file"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param f the file to scane"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param index the number of lines scanner should move"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param fw the temp file that scanner will append to."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @return scanner after moving it by amount of lines."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @throws IOException If file no longer exists when trying to write"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static Scanner getScanner(File f, int index, FileWriter fw) throws IOException {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        for (int i \u003d 1; i \u003c index; i +\u003d 1) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            String sentence \u003d s.nextLine();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            fw.append(sentence + System.lineSeparator());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Updates a specific line, changing the task\u0027s [DONE_STATUS] to 1"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Copies the save file content into a temp file until the specific line"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Then at the specific line, change the [DONE_STATUS] and append that into the line"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Continue copying until EOF"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Delete previous save file and rename temp file to the new save file."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param f the save file"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param index the specific line"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static void updateFile(File f, int index) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        File temp \u003d new File(\"data/temp.txt\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        createTempFile(temp);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        try (FileWriter fw \u003d new FileWriter(temp, true)) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            Scanner s \u003d getScanner(f, index, fw);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            String regex \u003d \"\\\\d+\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            String sentence \u003d (s.nextLine()).replaceFirst(regex, \"1\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            fw.append(sentence + System.lineSeparator());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            copyUntilEnd(fw, s);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            s.close();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            f.delete();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            temp.renameTo(f);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Deletes a specific line in the save file."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Copies the save file content into a temp file until the specific line"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Then at the specific line, skip the specific line."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Continue copying until EOF"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Delete previous save file and rename temp file to the new save file."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param saveFile the save file"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param index the specific line"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static void deleteSpecificLine(File saveFile, int index) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        File temp \u003d new File(\"data/temp.txt\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        createTempFile(temp);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        try (FileWriter fw \u003d new FileWriter(temp, true)) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            Scanner s \u003d getScanner(saveFile, index, fw);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            s.nextLine();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            copyUntilEnd(fw, s);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            s.close();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            saveFile.delete();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            temp.renameTo(saveFile);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Copies from save file and appends it to temp file unit EOF."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param fw the writer to temp file"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param s the scanner for save file"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @throws IOException If file no longer exists when trying to write"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static void copyUntilEnd(FileWriter fw, Scanner s) throws IOException {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            String inputSentence \u003d s.nextLine();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            fw.append(inputSentence + System.lineSeparator());"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JustinnT": 211
    }
  },
  {
    "path": "src/main/java/duke/main/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * CS2113T Semester 2 AY19/20"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * Project duke.main.Duke is a educational software project designed to take you through"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * the steps of building a small software incrementally,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * while applying as many Java and SE techniques as possible along the way."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * The project aims to build a product named duke.main.Duke, a Personal Assistant Chatbot that"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * helps a person to keep track of various things. The name duke.main.Duke was chosen as a placeholder name,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * in honor of duke.main.Duke, the Java Mascot. You may give it any other name and personality you wish."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * @author: Tan Zheng Fu Justin"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.exceptions.UnknownCommandException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.filemanager.FileLoader;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.filemanager.FileSaver;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.printer.Printer;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static final int DUKE_COMMAND \u003d 0;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static final File SAVE_FILE \u003d new File (\"data/duke.txt\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static boolean isNewUser;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    private Storage myTasks;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        isNewUser \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        myTasks \u003d new Storage();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        File saveFile \u003d FileSaver.makeNewSaveFile();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        FileLoader.loadFile(myTasks, saveFile);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        Printer.printStart(isNewUser);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Runs the program."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * The supplied param is where the save file will be at."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param saveFile the file object of the save file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    @SuppressWarnings(\"InfiniteLoopStatement\")"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public void run(File saveFile) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            String fullCommand \u003d ui.readFromUser();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            List\u003cString\u003e commands \u003d Parser.parseCommand(fullCommand);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            String command \u003d commands.get(DUKE_COMMAND);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                Command c \u003d Parser.whatCommand(command);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                assert c !\u003d null;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                c.execute(myTasks, saveFile, commands, command);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            } catch (UnknownCommandException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                Printer.printUnknownCommandError(command);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        new Duke().run(SAVE_FILE);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JustinnT": 66,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import static duke.constants.ConstantCommands.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.constants.ConstantCommands;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.exceptions.DukeExceptionHandler;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.exceptions.UnknownCommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.lang.reflect.Field;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static final int LIMIT \u003d 2;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static final String REGEX_SPACE \u003d \" \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static final String REGEX_BY \u003d \" /by \";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static final String REGEX_AT \u003d \" /at \";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static final String REGEX_VERTICAL \u003d \" [|] \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Returns the command that User has input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Index 0 will be the duke.commands.Command that User has input, while index 1 will be everything else."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param description The user input that was scanned as an entire String initially. e.g., \"event meeting /at NUS\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @return An ArrayList that was spilt by \" \", limited by 2."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static List\u003cString\u003e parseCommand(String description) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        return new ArrayList\u003c\u003e(Arrays.asList(description.split(REGEX_SPACE, LIMIT)));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Returns the description and date that User has input."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * The returned List will be reversed, so description will be at index 1 and the date at index 0."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param descriptionAndDate The second half of what User has input after parseCommand. \"submit iP /by Monday\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @return An ArrayList that was split by \" \", reversed, and limited by 2."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static List\u003cString\u003e parseDeadlineDate(String descriptionAndDate) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        List\u003cString\u003e separated \u003d new ArrayList\u003c\u003e(Arrays.asList(descriptionAndDate.split(REGEX_BY, LIMIT)));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        Collections.reverse(separated);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        return separated;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Returns the description and place that User has input."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * The returned List will be reversed, so description will be at index 1 and the place at index 0."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param descriptionAndPlace The second half of what User has input after parseCommand. \"team meeting /at NUS\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @return An ArrayList that was split by \" \", reversed, and limited by 2."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static List\u003cString\u003e parseEventAt(String descriptionAndPlace) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        List\u003cString\u003e separated \u003d new ArrayList\u003c\u003e(Arrays.asList(descriptionAndPlace.split(REGEX_AT, LIMIT)));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        Collections.reverse(separated);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        return separated;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Returns an ArrayList that was split by \" | \"."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param sentence One line from the the save file."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @return An ArrayList separated by \" | \""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static List\u003cString\u003e parseFile(String sentence){"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        return new ArrayList\u003c\u003e(Arrays.asList(sentence.split(REGEX_VERTICAL)));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Returns a specific command object"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Throws an duke.exceptions.UnknownCommandException if the User supplied an UnknownCommand"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param command The specific command in String"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @return the specific command object"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @throws UnknownCommandException If command is Unknown e.g., commands not under this list \"edit\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static Command whatCommand(String command) throws UnknownCommandException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        switch(command) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        case TODO :"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            return new ToDoCommand();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        case EVENT :"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            return new EventCommand();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        case DEADLINE :"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            return new DeadlineCommand();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        case DELETE :"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            return new DeleteCommand();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        case LIST :"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        case DONE :"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            return new DoneCommand();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        case FIND :"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            return new FindCommand();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        case HELP :"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        default :"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            DukeExceptionHandler.unknownCommand();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Gets the constant fields declared in the constant class and returns them as an ArrayList"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @return an ArrayList of commands"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static List\u003cString\u003e getCommandList() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        Field[] constants \u003d ConstantCommands.class.getDeclaredFields();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        ConstantCommands constant \u003d new ConstantCommands();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        List\u003cString\u003e commandList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            for (Field field : constants) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                String command \u003d (String) field.get(constant);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                commandList.add(command);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        } catch (Exception ignored) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        return commandList;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "}"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JustinnT": 128
    }
  },
  {
    "path": "src/main/java/duke/printer/Printer.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "package duke.printer;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "public class Printer {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static void printIndentation() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        System.out.print(\"    \");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static void printStart(boolean isReturnUser) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        Printer.printLines();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        Printer.printGreetings(isReturnUser);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        Printer.printLines();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static void printGreetings(boolean isReturnUser) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        printIndentation();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        if (isReturnUser) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            System.out.println(\"Hello! I\u0027m Duke :\u003e\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            printIndentation();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            printIndentation();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            System.out.println(\"Type help to see what I can do! :\u003e\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            System.out.println(\"Welcome back ! ~ I missed you ;_;\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static void printLines() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        printIndentation();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        System.out.print(\"---------------------------------------\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        System.out.println(\"---------------------------------------\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static void printBye() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        System.out.println(\"Bye ~ Hope to see you again soon! T_T\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static void printTasks(List\u003cTask\u003e myList) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        printLines();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        printIndentation();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        if (myList.isEmpty()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            System.out.println(\"List is empty o.o !\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            printLines();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        System.out.println(\"Here\u0027s your list ;3\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        printList(myList);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        printLines();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static void printTasks(String command, List\u003cTask\u003e myList) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        printLines();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        printIndentation();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        if (myList.isEmpty()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            System.out.println(\"There are no matching tasks in your list :o !\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            printLines();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        System.out.println(\"Here\u0027s what I found :3 ~ \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        printList(myList);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        printLines();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static void printList(List\u003cTask\u003e myList) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        for (int i \u003d 0; i \u003c myList.size(); i++) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            printIndentation();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            Task temp \u003d myList.get(i);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            System.out.printf(\"%d. %s\\n\", i + 1, temp);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static void printConfirmationMessage(String command, Task task) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        printLines();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        printIndentation();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            System.out.printf(\"Nice! I\u0027ve marked this task as done ^-^ :\\n\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            printIndentation();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            System.out.printf(\"  %s\\n\", task);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            System.out.printf(\"Ok! I have deleted this task ^-^ :\\n\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            printIndentation();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            System.out.printf(\"  %s\\n\", task);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            printIndentation();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            System.out.printf(\"Now you have %d tasks in the list\\n\", Storage.getSize());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            System.out.println(\"Got it! I\u0027ve added this task ^-^ :\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            printIndentation();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            System.out.println(\"  \" + task);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            printIndentation();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            System.out.printf(\"Now you have %d tasks in the list\\n\", Storage.getSize());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            System.out.println(\"Oh a deadline huh! Don\u0027t worry, I have added this task ~.~ :\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            printIndentation();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            System.out.println(\"  \" + task);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            printIndentation();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            System.out.printf(\"Now you have %d tasks in the list\\n\", Storage.getSize());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            System.out.println(\"Huuu what a busy guy! I have marked this in your list~ ~.~ :\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            printIndentation();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            System.out.println(\"  \" + task);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            printIndentation();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            System.out.printf(\"Now you have %d tasks in the list\\n\", Storage.getSize());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        printLines();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static void printError() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        printLines();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        printIndentation();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        System.out.println(\"Error.. x.x\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        printLines();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static void printEmptyDescriptionError(String command) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        printLines();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        printIndentation();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        System.out.println(\"The description of \" + command + \" cannot be empty!~ X.X\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static void printFormatError(String command) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        printLines();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        printIndentation();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        System.out.println(\"X.X There seems to be some problem with the format of \" + command + \" !~ X.X \");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static void printHint(String command) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        printIndentation();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        System.out.printf(\"Here\u0027s a hint on how %s works:\\n\\n\", command);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        printIndentation();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        printIndentation();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            System.out.println(command + \"(space)\u003ctask\u003e(space)/at(space)\u003cat\u003e\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            printIndentation();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            printIndentation();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            System.out.println(\"Example: event team meeting /at 2 August 2-4pm\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            System.out.println(command + \"(space)\u003ctask\u003e\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            printIndentation();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            printIndentation();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            System.out.println(\"Example: \" + command + \" read book\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            System.out.println(command + \"(space)\u003ctask\u003e(space)/by(space)\u003cdate\u003e\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            printIndentation();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            printIndentation();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            System.out.println(\"Example: deadline read book /by Sunday\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            System.out.println(\"Please ensure that the index supplied exists in the list @_@\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            printIndentation();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            printIndentation();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            System.out.println(command + \"(space)\u003cindex\u003e\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            printIndentation();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            printIndentation();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            System.out.println(\"Example: \" + command + \" 1\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        default :"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        printLines();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static void printUnknownCommandError(String command) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        printLines();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        printIndentation();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        System.out.printf(\"I\u0027m sorry I don\u0027t understand this command: %s *(\u003e_\u003c)*\\n\", command);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        printLines();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static void printHelp() {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        printLines();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        printIndentation();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        System.out.println(\"Here is what I can do ^-^/\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        for (String command : Command.COMMAND_LIST) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            printIndentation();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            printIndentation();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            System.out.println(\"- \" + command);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        printLines();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static void printFileNotFile() {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static void printFileCorrupted() {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        System.out.print(\"Save file corrupted, please check your file\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JustinnT": 229
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.printer.Printer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    private static List\u003cTask\u003e myTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public void storeTasks(Task task) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        myTasks.add(task);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public void displayTasks() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        Printer.printTasks(myTasks);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Returns the task at index that the User specified."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * User-specified index will need to subtract 1 as we are using 0 indexing."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param index Index that the User specified."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @return duke.tasks.Task at index - 1, if it exists"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        int actualIndex \u003d index - 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        return myTasks.get(actualIndex);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Returns the current size of the tasks storage"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @return current size of storage"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public static int getSize() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        return myTasks.size();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Deletes the task at index that the User specified."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * User-specified index will need to subtract 1 as we are using 0 indexing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param index Index that the User specified."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        myTasks.remove(index - 1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public List\u003cTask\u003e findTasks(String keyword) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        List\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        for (Task t : myTasks) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            t.addIfMatchesKeyword(t, foundTasks, keyword);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        return foundTasks;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JustinnT": 60
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    protected String icon \u003d \"[D]\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    protected String deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Constructor used when loading from the save file."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param isDone integer representing a boolean, where 1 is done and 0 is not done, from save file."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param description string representing task description, from the save file"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param deadline string representing deadline, from the save file"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public Deadline(int isDone, String description, String deadline) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        if (isDone \u003d\u003d 1) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            super.markAsDone();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public Deadline(String description, String deadline){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Overrides the default toString so that duke.tasks.Task gets printed in a specific format"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @return the formatted String to print"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        String toPrint \u003d super.toString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        toPrint \u003d String.format(\"%s%s (by: %s)\", this.icon, toPrint, this.deadline);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        return toPrint;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        return this.deadline;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public void addIfMatchesKeyword(Task t, List\u003cTask\u003e foundTasks, String keyword) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        String description \u003d t.getDescription();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        String deadline \u003d getDeadline();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        if (description.contains(keyword) || deadline.contains(keyword)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            foundTasks.add(t);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JustinnT": 54
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * Represents an event task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    protected String icon \u003d \"[E]\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    protected String eventAt;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Constructor used when loading from the save file"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param isDone integer representing a boolean, where 1 is done and 0 is not done, from save file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param description string representing task description, from the save file"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param evenAt string representing event location, from the save file"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public Event(int isDone, String description, String evenAt) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        this.eventAt \u003d evenAt;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        if (isDone \u003d\u003d 1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            super.markAsDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public Event(String description, String eventAt){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        this.eventAt \u003d eventAt;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Overrides the default toString so that duke.tasks.Task gets printed in a specific format"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @return the formatted String to print"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        String toPrint \u003d super.toString();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        toPrint \u003d String.format(\"%s%s (at: %s)\", this.icon, toPrint, this.eventAt);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        return toPrint;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public String getEventAt() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        return this.eventAt;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public void addIfMatchesKeyword(Task t, List\u003cTask\u003e foundTasks, String keyword) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        String description \u003d t.getDescription();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        String eventAt \u003d getEventAt();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        if (description.contains(keyword) || eventAt.contains(keyword)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            foundTasks.add(t);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JustinnT": 57
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        String description \u003d this.description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        return (isDone ? \"O\" : \"X\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Overrides the default toString so that duke.tasks.Task gets printed in a specific format"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @return the formatted String to print"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        String symbol \u003d getStatusIcon();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        String toPrint \u003d String.format(\"[%s] %s\", symbol, this.description );"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        return toPrint;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public abstract void addIfMatchesKeyword(Task t, List\u003cTask\u003e foundTasks, String keyword);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JustinnT": 39
    }
  },
  {
    "path": "src/main/java/duke/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    protected String icon \u003d \"[T]\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Constructor used when loading from the save file"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param isDone integer representing a boolean, where 1 is done and 0 is not done, from save file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param description string read from the save file"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public ToDo(int isDone, String description ) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        if (isDone \u003d\u003d 1) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            super.markAsDone();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Constructor used for everything else"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @param description the description of the task supplied by User"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Overrides the default toString so that duke.tasks.Task gets printed in a specific format"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @return the formatted String to print"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        String toPrint \u003d super.toString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        toPrint \u003d String.format(\"%s%s\", this.icon, toPrint);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        return toPrint;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public void addIfMatchesKeyword(Task t, List\u003cTask\u003e foundTasks, String keyword) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        String description \u003d t.getDescription();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        if (description.contains(keyword)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "            foundTasks.add(t);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JustinnT": 49
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " * Represents the user interface that interacts with user"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JustinnT"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JustinnT"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * Returns a string that captures the entire user input"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     * @return entire user input"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    public String readFromUser() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JustinnT"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JustinnT": 19
    }
  }
]

[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "T|0|buy present"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "D|0|ip |2020-02-02T12:00"
      }
    ],
    "authorContributionMap": {
      "alexlim510": 2
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "### List Tasks "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "  List the tasks currently stored in the application."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "  "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "### Add Task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "  Adds a task into the application."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "  A task can be of different types:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "  1. Todo (Contains task description only)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "  2. Deadline (Contains task description and deadline)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "  3. Event (Contains task description and date of event)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "  "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "### Mark task as done"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "  When a task is completed, the user can mark the task as done.\u003cbr/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "  If the task is done, it is marked as [Done].\u003cbr/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "  If the task is not done, it is marked as [Not Done]."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "### Find Task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "  The user can input a keyword. The application searches the task descriptions \u003cbr/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "  in the list and displays the tasks that contain the keyword."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "  "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "### Delete Task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "  Deletes a task from the application."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "  "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "### Exit"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "  Exits the application."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "### `Keyword` - Describe action"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "Describe action and its outcome."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "`keyword (optional arguments)`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "`outcome`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "### `todo` - Adds a todo task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "Format: `todo TASK_DESCRIPTION`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "Example of usage | Expected outcome"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "------------ | -------------"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "`todo Buy Present`|`New task added:` \u003cbr/\u003e`[T][Not Done]  Buy present` \u003cbr/\u003e`Now you have 1 tasks in the list.`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "### `deadline` - Adds a deadline task"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "Format: `deadline TASK_DESCRIPTION /by DEADLINE`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "Example of usage | Expected outcome"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "------------ | -------------"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "`deadline Finish iP /by 2/3/2020 1200`|`New task added:` \u003cbr/\u003e`[D][Not Done]  Finish iP  (by: Mar 2 2020 12:00)` \u003cbr/\u003e`Now you have 2 tasks in the list.`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "### `event` - Adds an event task"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "Format: `event TASK_DESCRIPTION /by DATE`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "Example of usage | Expected outcome"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "------------ | -------------"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "`event John\u0027s birthday /at 22/3/2020 1300`|`New task added:` \u003cbr/\u003e`[E][Not Done]  John\u0027s birthday  (at: Mar 22 2020 01:00)` \u003cbr/\u003e`Now you have 3 tasks in the list.`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "### `list` - Lists the tasks in the application"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "Example of usage | Expected outcome"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "------------ | -------------"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "`list`|`Here are your tasks:` \u003cbr/\u003e`1. [T][Not Done]  Buy present` \u003cbr/\u003e`2. [D][Not Done]  Finish iP  (by: Mar 2 2020 12:00)` \u003cbr/\u003e `3. [E][Not Done]  John\u0027s birthday  (at: Mar 22 2020 01:00)`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "### `done` - Marks a task as done"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "Format: `done INDEX`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "Example of usage | Expected outcome"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "------------ | -------------"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "`done 1`|`Nice! I\u0027ve marked this task as done:` \u003cbr/\u003e`[T][Done]  Buy present`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "### `delete` - Deletes a task from the list"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "Format: `delete INDEX`"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "Example of usage | Expected outcome"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "------------ | -------------"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "`delete 3`|`Noted. I\u0027ve removed this task:` \u003cbr/\u003e`[E][Not Done]  John\u0027s birthday  (at: Mar 22 2020 01:00)` \u003cbr/\u003e `Now you have 2 tasks in the list.`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "### `find` - Finds the tasks that contains the keyword in their description"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "Format: `find INDEX`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "Example of usage | Expected outcome"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "------------ | -------------"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "`find ip`|`Here are the matching tasks in your list:` \u003cbr/\u003e`1. [D][Not Done]  Finish iP  (by: Mar 2 2020 12:00)`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "### `bye` - Exits the application"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "Example of usage | Expected outcome"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "------------ | -------------"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "`bye`|`Bye. Hope to see you soon!`"
      }
    ],
    "authorContributionMap": {
      "alexlim510": 80,
      "-": 18
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "T|1|Buy present"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "D|0|Finish iP |2020-03-02T12:00"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "alexlim510": 3
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " * Entry point of the Duke application."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " * Initializes the application and interacts with the user"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * Initializes the user interface and loads data into the application"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * @param dataPath path of the data file"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private Duke(String dataPath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        storage \u003d new Storage(dataPath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * Reads the user\u0027s commands and executes them until the user issues the exit command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                ui.showError(e);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * Starts the application"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alexlim510": 56,
      "-": 4
    }
  },
  {
    "path": "src/main/java/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " * Parent command class for the Add commands."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    AddCommand() {}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * Executes the Add Command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        throw new DukeException(\"This method is to be implemented by child AddCommand classes\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alexlim510": 22
    }
  },
  {
    "path": "src/main/java/commands/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " * Command class for the AddDeadline command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "public class AddDeadlineCommand extends AddCommand {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private LocalDateTime deadline;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public AddDeadlineCommand(String taskDescription, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        Deadline deadlineTask \u003d new Deadline(this.taskDescription, this.deadline);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        tasks.addTask(deadlineTask);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        ui.printNewTask(tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alexlim510": 36
    }
  },
  {
    "path": "src/main/java/commands/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " * Command class for the AddEvent command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "public class AddEventCommand extends AddCommand {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private LocalDateTime dateAndTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"event\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public AddEventCommand(String taskDescription, LocalDateTime dateAndTime) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        this.dateAndTime \u003d dateAndTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        Event eventTask \u003d new Event(this.taskDescription, this.dateAndTime);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        tasks.addTask(eventTask);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        ui.printNewTask(tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alexlim510": 36
    }
  },
  {
    "path": "src/main/java/commands/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " * Command class for the AddTodo command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "public class AddTodoCommand extends AddCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"todo\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public AddTodoCommand(String taskDescription) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        Todo todoTask \u003d new Todo(this.taskDescription);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        tasks.addTask(todoTask);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        ui.printNewTask(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alexlim510": 32
    }
  },
  {
    "path": "src/main/java/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " * Parent command class for the other commands."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /** Executes the command. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        throw new DukeException(\"This method is to be implemented by child classes\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /** Check if it is an exit command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * @return true or false depending on whether it is an exit command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alexlim510": 24
    }
  },
  {
    "path": "src/main/java/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " * Command class for the Delete command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public DeleteCommand(int taskNumber) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        ui.displayDeleteTask(tasks, taskNumber);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        tasks.deleteTask(taskNumber);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alexlim510": 32
    }
  },
  {
    "path": "src/main/java/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " * Command class for the Done command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public DoneCommand(int taskNumber) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        tasks.doneTask(taskNumber);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        ui.displayDoneTask(tasks, taskNumber);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alexlim510": 29
    }
  },
  {
    "path": "src/main/java/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " * Command class for the Exit command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        ui.displayExit();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alexlim510": 25
    }
  },
  {
    "path": "src/main/java/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " * Command class for the Find command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private String keyWord;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public FindCommand(String keyWord) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        this.keyWord \u003d keyWord.toLowerCase();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        ui.listFoundTasks(tasks.findTasks(this.keyWord));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alexlim510": 27
    }
  },
  {
    "path": "src/main/java/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " * Command class for the List command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public ListCommand () {}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        ui.listTasks(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alexlim510": 24
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " * The exception class used within the duke application."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alexlim510": 11
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import commands.AddEventCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import commands.AddTodoCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import commands.AddDeadlineCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import commands.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import commands.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import commands.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import commands.ExitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import commands.FindCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " * Contains methods to parse user inputs into sensible commands."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * Parses the user input into commands."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * @return The command issued by the user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * @throws DukeException An exception is issued if the command issued by the user is invalid."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public static Command parse(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        String[] arguments \u003d userInput.split(\" \",2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        switch (arguments[0]){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        case AddTodoCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            return prepareAddTodo(arguments);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        case AddDeadlineCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            return prepareAddDeadline(arguments);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        case AddEventCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            return prepareAddEvent(arguments);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            return prepareListTasks(arguments);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            return prepareDeleteTask(arguments);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        case DoneCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            return prepareDoneTask(arguments);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        case FindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            return prepareFindTask(arguments);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"Invalid Command.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * Parses the user input into arguments for the AddTodo command."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * @return AddTodo Command."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private static Command prepareAddTodo(String[] arguments) throws DukeException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        if (arguments.length \u003c 2) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        if (arguments[1] \u003d\u003d null || arguments[1].isEmpty()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        return new AddTodoCommand(arguments[1]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * Parses the user input into arguments for the AddDeadline command."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * @return AddDeadline Command."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private static Command prepareAddDeadline(String[] arguments) throws DukeException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        if (arguments.length \u003c 2) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"Missing description or deadline.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        String[] details \u003d arguments[1].split(\"/by \");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        if (details[0] \u003d\u003d null || details[0].isEmpty()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        if (details.length !\u003d 2) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"Incorrect format.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        LocalDateTime dateTime \u003d parseUserInputToLocalDateTime(details[1]);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        return new AddDeadlineCommand(details[0], dateTime);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * Parses the user input into arguments for the AddEvent command."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * @return AddEvent Command."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private static Command prepareAddEvent(String[] arguments) throws DukeException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        if (arguments.length \u003c 2) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"Missing description or date and time.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        String[] details \u003d arguments[1].split(\"/at \");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        if (details[0] \u003d\u003d null || details[0].isEmpty()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        if (details.length !\u003d 2) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"Incorrect format.\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        LocalDateTime dateTime \u003d parseUserInputToLocalDateTime(details[1]);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        return new AddEventCommand(details[0], dateTime);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * Check if the user input is valid for the Add command."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * @return List Command."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private static Command prepareListTasks(String[] arguments) throws DukeException {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        if (arguments.length \u003e 1) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"Incorrect format.\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        return new ListCommand();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * Parses the user input into arguments for the Delete command."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * @return Delete Command."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private static Command prepareDeleteTask(String[] arguments) throws DukeException {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        if (arguments.length \u003c 2) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"The task item has to be indicated.\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            int itemNumber\u003d Integer.parseInt(arguments[1]);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            return new DeleteCommand(itemNumber-1);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        } catch (NumberFormatException  e) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"The task item has to be an integer.\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * Parses the user input into arguments for the Done command."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * @return Done Command."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private static Command prepareDoneTask(String[] arguments) throws DukeException {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        if (arguments.length \u003c 2) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"The task item has to be indicated.\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            int itemNumber\u003d Integer.parseInt(arguments[1]);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            return new DoneCommand(itemNumber-1);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        } catch (NumberFormatException  e) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"The task item has to be an integer.\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /** Parses user inputted date and time into LocalDateTime"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     *"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * @param dateAndTimeString User inputted date and time string"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * @return LocalDateTime object"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * @throws DukeException If user inputted date and time are in the wrong format"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public static LocalDateTime parseUserInputToLocalDateTime(String dateAndTimeString) throws DukeException {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        String[] dateAndTimeStrings \u003d dateAndTimeString.split(\" \");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        if (dateAndTimeStrings[1].length() !\u003d 4) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"Incorrect time format.\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        } else if (dateAndTimeStrings.length !\u003d 2) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"Incorrect date and time format.\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            LocalDateTime dateTime \u003d LocalDateTime.parse(dateAndTimeString, formatter);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            return dateTime;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"Incorrect date format.\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * Parses the user input into arguments for the Find command."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * @return Find Command."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     */"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private static Command prepareFindTask(String[] arguments) throws DukeException {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        if (arguments.length \u003c 2) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"The keyword has to be indicated.\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        return new FindCommand(arguments[1]);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alexlim510": 207
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " * Contains methods to manage storage of the task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private final String dataPath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public Storage(String dataPath){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        this.dataPath \u003d dataPath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * Loads the data into the application."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * @return The list of tasks loaded."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        File f \u003d new File(dataPath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            f.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            f.createNewFile();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                String taskString \u003d s.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                String[] details \u003d taskString.split(\"\\\\|\", -1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                boolean isDone \u003d Integer.parseInt(details[1]) \u003d\u003d 1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                String taskType \u003d details[0];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                switch (taskType){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                    tasks.add(new Todo(details[2], isDone));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                    tasks.add(new Deadline(details[2], parseToDateAndTime(details[3]), isDone));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                    tasks.add(new Event(details[2], parseToDateAndTime(details[3]), isDone));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! Problem loading data.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"File not found.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"File not found.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private LocalDateTime parseToDateAndTime(String dateAndTime) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        return LocalDateTime.parse(dateAndTime);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /** Saves the updated task list into the application. */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public void saveTasks(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            FileWriter fw \u003d new FileWriter(dataPath);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            StringBuilder textToAdd \u003d new StringBuilder();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            ArrayList\u003cTask\u003e tasksToSave \u003d tasks.getTasks();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            for (Task t : tasksToSave) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                textToAdd.append(t.convertToData()).append(\"\\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            fw.write(textToAdd.toString());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"Problem saving task.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alexlim510": 88
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " * Entity class for the Deadline task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public Deadline(String description, LocalDateTime by, boolean isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        String dateTimeString \u003d by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dateTimeString + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public String convertToData() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        int isDoneAsInt \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        return String.format(\"D|\" + isDoneAsInt + \"|\" + this.description + \"|\" + this.by);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alexlim510": 34
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " * Entity class for the Event task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public Event(String description, LocalDateTime at) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public Event(String description, LocalDateTime at, boolean isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        String dateTimeString \u003d at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + dateTimeString + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public String convertToData() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        int isDoneAsInt \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        return String.format(\"E|\" + isDoneAsInt + \"|\" + this.description + \"|\" + this.at);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alexlim510": 34
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " * Parent entity class for tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        this.description \u003d \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * Returns Done or Not Done status"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * @return status"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        return (isDone ? \"Done\" : \"Not Done\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * Updates task as done"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        return String.format(\"[\" + getStatus() + \"]  \" + this.description);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /** Converts task to data format. */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public String convertToData() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        int isDoneAsInt \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        return String.format(isDoneAsInt + \"|\" + this.description);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alexlim510": 51
    }
  },
  {
    "path": "src/main/java/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " * Entity class for the task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " * Contains methods to manage the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /** Initializes the task list. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /** Returns the size of the task list. */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /** Returns the task at a given index. */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public Task getTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            return tasks.get(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"The task item does not exist.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /** Returns the tasks currently stored in the application. */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /** Deletes the task at a given index. */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public void deleteTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            tasks.remove(index);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"The task item does not exist.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /** Gets the latest task added. */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public Task getLatestTask() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        return tasks.get(tasks.size() - 1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /** Adds a task into the application. */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /** Sets a task at the given index as done. */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public void doneTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        this.getTask(index).markAsDone();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public ArrayList\u003cTask\u003e findTasks(String keyWord) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            if (t.description.toLowerCase().contains(keyWord)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                foundTasks.add(t);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        return foundTasks;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alexlim510": 76
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " * Entity class for the Todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public String convertToData() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        int isDoneAsInt \u003d this.isDone ? 1 : 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        return String.format(\"T|\" + isDoneAsInt + \"|\" + this.description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alexlim510": 26
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " * Boundary class to manage inputs and outputs of the application."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alexlim510"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private static final String LS \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private static final String LINE_PREFIX \u003d \"|| \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private static final String DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private final Scanner in \u003d new Scanner(System.in);;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private static final String ERROR_MESSAGE_START \u003d \"☹ OOPS!!! \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * Displays the welcome message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        String logo \u003d \"***TASK MANAGER***\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        System.out.println(LINE_PREFIX + \"Hello! I am \" + logo);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        System.out.println(LINE_PREFIX + \"What would you like to do?\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * Displays the exit message."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public void displayExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        System.out.println(LINE_PREFIX + \"Bye. Hope to see you soon!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * Reads the command to be issued by the user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * @return user input"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        System.out.println(LINE_PREFIX + \"Enter command: \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        String userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        System.out.println(\"[Command entered: \" + userInput + \"]\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /** Displays the new task added by the user. */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public void printNewTask(TaskList tasks) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        System.out.println(LINE_PREFIX + \"New task added: \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        System.out.println(LINE_PREFIX + \" \" + tasks.getLatestTask());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        System.out.println(LINE_PREFIX + \"Now you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /** Displays the list of tasks currently in the application. */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public void listTasks(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        System.out.println(LINE_PREFIX + \"Here are your tasks:\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        for (int j \u003d 0; j \u003c tasks.getSize(); j++) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            System.out.println(LINE_PREFIX + (j+1) + \". \" + tasks.getTask(j));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public void listFoundTasks(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            System.out.println(LINE_PREFIX + \"There is no matching task with the given keyword.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        System.out.println(LINE_PREFIX + \"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        for (int j \u003d 0; j \u003c tasks.size(); j++) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            System.out.println(LINE_PREFIX + (j+1) + \". \" + tasks.get(j));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public void showError(DukeException error) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        System.out.println(LINE_PREFIX + ERROR_MESSAGE_START + error.getMessage());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /** Displays error loading message.*/"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public void showLoadingError(){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        System.out.println(LINE_PREFIX + ERROR_MESSAGE_START + \"Error loading page.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /** Displays a divider line. */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /** Display the task deleted by the user*/"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public void displayDeleteTask(TaskList tasks, int taskNumber) throws DukeException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        System.out.println(LINE_PREFIX + \"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        System.out.println(LINE_PREFIX + \" \" + tasks.getTask(taskNumber));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        System.out.println(LINE_PREFIX + \"Now you have \" + (tasks.getSize() - 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /** Display the task done by the user. */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public void displayDoneTask(TaskList tasks, int taskNumber) throws DukeException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        System.out.println(LINE_PREFIX + \"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        System.out.println(LINE_PREFIX + \" \" + tasks.getTask(taskNumber));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alexlim510": 100
    }
  }
]

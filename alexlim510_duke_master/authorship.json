[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private static final int TASKLIST_SIZE \u003d 100;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private static int numberOfTasks \u003d 0;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private static final Task[] tasks \u003d new Task[TASKLIST_SIZE];"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        String logo \u003d \"***John***\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        displayWelcome(logo);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        startDuke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        displayExit();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private static void displayWelcome(String logo) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        System.out.println(\"Hello! I am \" + logo);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        System.out.println(\"What would you like to do?\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private static void displayExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        System.out.println(\"Bye. Hope to see you soon!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private static void startDuke() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        String userInput \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            userInput \u003d in.next();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                if (userInput.equals(\"bye\")){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                } else if (userInput.equals(\"list\")){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                    listTasks();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                } else if (userInput.startsWith(\"done\")){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                    markTaskAsDone(in);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                } else if (userInput.startsWith(\"todo\")){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                    addTodoTask(in);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                } else if (userInput.startsWith(\"deadline\")){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                    addDeadlineTask(in);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                } else if (userInput.startsWith(\"event\")){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                    addEventTask(in);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                    throw new DukeException(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private static void addTodoTask(Scanner in) throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        String todoTask \u003d in.nextLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        if (todoTask \u003d\u003d null || todoTask.isEmpty()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        tasks[numberOfTasks] \u003d new Todo(todoTask);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        numberOfTasks++;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        printNewTask();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private static void addDeadlineTask(Scanner in) throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        String deadlineTask \u003d in.nextLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        if (deadlineTask \u003d\u003d null || deadlineTask.isEmpty()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        if (!deadlineTask.contains(\"/by\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The task has to be typed in this format (deadline {task description\" +"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                    \"} /by {date}).\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        String[] details \u003d deadlineTask.split(\"/by \");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        if (details.length \u003c 2) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Make sure to include both the description and the deadline.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        if (details.length \u003e 2) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Make sure that only 1 /by character is inputted.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        String deadlineTaskDescription \u003d details[0];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        String date \u003d details[1];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        tasks[numberOfTasks] \u003d new Deadline(deadlineTaskDescription, date);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        numberOfTasks++;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        printNewTask();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private static void addEventTask(Scanner in) throws DukeException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        String eventTask \u003d in.nextLine();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        if (eventTask \u003d\u003d null || eventTask.isEmpty()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        if (!eventTask.contains(\"/at\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The task has to be typed in this format (event {task description\" +"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                    \"} /at {date and time}).\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        String[] details \u003d eventTask.split(\"/at \");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        if (details.length \u003c 2) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Make sure to include both the description and the deadline.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        if (details.length \u003e 2) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Make sure that only 1 /by character is inputted.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        String eventTaskDescription \u003d details[0];"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        String date \u003d details[1];"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        tasks[numberOfTasks] \u003d new Event(eventTaskDescription, date);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        numberOfTasks++;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        printNewTask();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private static void markTaskAsDone(Scanner in) throws DukeException{"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        if (!in.hasNextInt()) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The task item has to be an integer.\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        int itemNumber \u003d in.nextInt();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        if (itemNumber\u003c\u003d0 || itemNumber\u003enumberOfTasks){"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The task item does not exist. Type \\\"list\\\" to see the task item \" +"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "                    \"number.\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        tasks[itemNumber-1].markAsDone();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        System.out.println(\"  \" + tasks[itemNumber-1]);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private static void printNewTask() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        System.out.println(\"New task added: \");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        System.out.println(\" \" + tasks[numberOfTasks-1]);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        System.out.println(\"Now you have \" + numberOfTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    private static void listTasks() {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        System.out.println(\"Here are your tasks:\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        for (int j \u003d 0; j \u003c numberOfTasks; j++) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "            System.out.println(j+1 + \". \" + tasks[j]);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alexlim510": 147,
      "-": 5
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alexlim510": 7
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alexlim510": 16
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alexlim510": 16
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        this.description \u003d \"\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * Returns tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     * @return symbol"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        return String.format(\"[\" + getStatusIcon() + \"]  \" + this.description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alexlim510": 34
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alexlim510"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alexlim510"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alexlim510": 13
    }
  }
]

[
  {
    "path": "data/taskList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "D__0__track house__02/04/2020__12:00PM"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "E__0__down to earth__06/12/2096__08:01AM"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "D__0__complete task__24/02/2020__06:00PM"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "E__0__fix bugs__26/02/2020__08:30AM"
      }
    ],
    "authorContributionMap": {
      "iceclementi": 4
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.commands.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.commands.ExitCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.exception.CorruptedFileException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.format.DateTimeFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.ui.Messages.WELCOME_MESSAGE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.ui.Messages.LOAD_MESSAGE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.ui.Messages.READY_MESSAGE;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.ui.Messages.CREATE_NEW_FILE_MESSAGE;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.ui.Messages.CREATE_CONFIRMATION_MESSAGE;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.ui.Messages.PROMPT_VALID_CREATE_CONFIRMATION_MESSAGE;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.ui.Messages.ABORT_CREATE_NEW_FILE_MESSAGE;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.ui.Messages.EXIT_MESSAGE;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.exception.ExceptionMessages.EMPTY_INPUT_MESSAGE;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.exception.ExceptionMessages.INPUT_LENGTH_EXCEEDED_MESSAGE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.exception.ExceptionMessages.INVALID_ACTION_MESSAGE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.exception.ExceptionMessages.FILE_NOT_FOUND_MESSAGE;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.exception.ExceptionMessages.CORRUPTED_FILE_MESSAGE;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.exception.ExceptionMessages.IO_ERROR_MESSAGE;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        Duke chatBot \u003d new Duke();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        chatBot.runChat();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private void runChat() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        this.storage \u003d new Storage();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        ui.showSystemMessage(WELCOME_MESSAGE);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        // Initialise task list"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        boolean canInitialise \u003d false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            canInitialise \u003d initialiseChat();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            ui.showSystemMessage(IO_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        if (canInitialise) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            ui.showSystemMessage(READY_MESSAGE);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            readInputUntilExit();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        ui.showSystemMessage(EXIT_MESSAGE);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private boolean initialiseChat() throws IOException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        ui.showSystemMessage(LOAD_MESSAGE);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            storage.loadTaskList();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            ui.showSystemMessage(FILE_NOT_FOUND_MESSAGE);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            storage.createTaskListFile(); // Create new task list file"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } catch (CorruptedFileException | IndexOutOfBoundsException |"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                DateTimeFormat.InvalidTimeException | DateTimeFormat.InvalidDateException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            ui.showSystemMessage(CORRUPTED_FILE_MESSAGE);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            boolean canCreateNewFile \u003d"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                    ui.getConfirmation(CREATE_CONFIRMATION_MESSAGE, PROMPT_VALID_CREATE_CONFIRMATION_MESSAGE);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            if (canCreateNewFile) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                storage.createTaskListFile();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                ui.showSystemMessage(CREATE_NEW_FILE_MESSAGE);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                ui.showSystemMessage(ABORT_CREATE_NEW_FILE_MESSAGE);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private void readInputUntilExit() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        Command command \u003d null;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            String input \u003d ui.getInput();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                command \u003d new Parser().parseInput(input);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                CommandResult result \u003d command.execute();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                ui.showResult(result);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            } catch (Parser.InputLengthExceededException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                System.out.println(INPUT_LENGTH_EXCEEDED_MESSAGE);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            } catch (Parser.EmptyInputException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                System.out.println(EMPTY_INPUT_MESSAGE);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            } catch (Parser.InvalidCommandException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                System.out.println(INVALID_ACTION_MESSAGE);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } while (!ExitCommand.isExit(command));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iceclementi": 102,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/commands/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.format.DateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.ui.Messages.addTaskMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String FORMAT \u003d \"deadline \u003ctask description\u003e /at \u003cdate\u003e \u003ctime\u003e\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private final String task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private final DateTime deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public AddDeadlineCommand(String task, DateTime deadline) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        TaskList.add(new Deadline(task, deadline));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return new CommandResult(addTaskMessage());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iceclementi": 26
    }
  },
  {
    "path": "src/main/java/duke/commands/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.format.DateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.ui.Messages.addTaskMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"event\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String FORMAT \u003d \"event \u003ctask description\u003e /at \u003cdate\u003e \u003ctime\u003e\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private final String task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private final DateTime dateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public AddEventCommand(String task, DateTime dateTime) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        TaskList.add(new Event(task, dateTime));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return new CommandResult(addTaskMessage());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iceclementi": 26
    }
  },
  {
    "path": "src/main/java/duke/commands/AddToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.ui.Messages.addTaskMessage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "public class AddToDoCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"todo\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String FORMAT \u003d \"todo \u003ctask description\u003e\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private final String task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public AddToDoCommand(String task) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        TaskList.add(new ToDo(task));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return new CommandResult(addTaskMessage());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iceclementi": 23
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public abstract CommandResult execute();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iceclementi": 5
    }
  },
  {
    "path": "src/main/java/duke/commands/CommandResult.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private final String message;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private final boolean isPrintList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private ArrayList\u003cInteger\u003e printListIndices;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public CommandResult(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        isPrintList \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        printListIndices \u003d null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public CommandResult(String message, boolean isPrint) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        isPrintList \u003d isPrint;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        printListIndices \u003d null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public CommandResult(String message, boolean isPrint, ArrayList\u003cInteger\u003e list) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        isPrintList \u003d isPrint;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        printListIndices \u003d list;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public boolean getPrintStatus() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return isPrintList;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public ArrayList\u003cInteger\u003e getPrintListIndices() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return printListIndices;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iceclementi": 39
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.exception.ExceptionMessages.INVALID_LIST_NUMBER_MESSAGE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.ui.Messages.ABORT_DELETE_MESSAGE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.ui.Messages.DELETE_TASK_CONFIRMATION_MESSAGE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.ui.Messages.PROMPT_VALID_DELETE_CONFIRMATION_MESSAGE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.ui.Messages.deleteTaskMessage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String FORMAT \u003d \"delete \u003clist number\u003e\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            String taskToDelete \u003d TaskList.get(index).getTaskStatus();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            boolean canDelete \u003d new Ui().getConfirmation(DELETE_TASK_CONFIRMATION_MESSAGE(taskToDelete),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                    PROMPT_VALID_DELETE_CONFIRMATION_MESSAGE);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            if (canDelete) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                TaskList.delete(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                return new CommandResult(deleteTaskMessage(taskToDelete));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                return new CommandResult(ABORT_DELETE_MESSAGE);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new CommandResult(INVALID_LIST_NUMBER_MESSAGE, true);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iceclementi": 40
    }
  },
  {
    "path": "src/main/java/duke/commands/DoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.ui.Messages.completeTaskMessage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.ui.Messages.alreadyCompletedTaskMessage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.exception.ExceptionMessages.INVALID_LIST_NUMBER_MESSAGE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "public class DoCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String FORMAT \u003d \"done \u003clist number\u003e\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public DoCommand(int index) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            // Checks if task has not been previously done before"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            boolean isDoing \u003d TaskList.doTask(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            if (isDoing) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                return new CommandResult(completeTaskMessage(index));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                return new CommandResult(alreadyCompletedTaskMessage(index));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new CommandResult(INVALID_LIST_NUMBER_MESSAGE, true);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iceclementi": 34
    }
  },
  {
    "path": "src/main/java/duke/commands/DueCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.data.TaskList.filterDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.data.TaskList.filterDateAfter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.data.TaskList.filterDateBefore;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.ui.Messages.FIND_MESSAGE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.ui.Messages.UNKNOWN_TIME_SPECIFIER_MESSAGE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "public class DueCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"due\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String FORMAT \u003d \"due (before/after/on) \u003cdate/time-term\u003e\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private LocalDate searchDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private String timeSpecifier;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public DueCommand(LocalDate date, String specifier) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        searchDate \u003d date;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        timeSpecifier \u003d specifier;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public DueCommand(LocalDate date) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        searchDate \u003d date;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        timeSpecifier \u003d \"on\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        ArrayList\u003cInteger\u003e searchedTaskIndices;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        switch (timeSpecifier) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        case \"on\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            searchedTaskIndices \u003d filterDate(searchDate);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new CommandResult(FIND_MESSAGE, true, searchedTaskIndices);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        case \"before\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            searchedTaskIndices \u003d filterDateBefore(searchDate);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new CommandResult(FIND_MESSAGE, true, searchedTaskIndices);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        case \"after\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            searchedTaskIndices \u003d filterDateAfter(searchDate);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new CommandResult(FIND_MESSAGE, true, searchedTaskIndices);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new CommandResult(UNKNOWN_TIME_SPECIFIER_MESSAGE);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iceclementi": 49
    }
  },
  {
    "path": "src/main/java/duke/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.ui.Messages.GOODBYE_MESSAGE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.ui.Messages.SUCCESSFUL_SAVE_MESSAGE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.exception.ExceptionMessages.FILE_SAVE_ERROR_MESSAGE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.ui.Messages.PROMPT_VALID_EXIT_CONFIRMATION_MESSAGE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.ui.Messages.UNSUCCESSFUL_SAVE_MESSAGE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.ui.Messages.ABORT_EXIT_MESSAGE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String FORMAT \u003d \"bye\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private static boolean isExit;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            new Storage().saveTaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            isExit \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new CommandResult(SUCCESSFUL_SAVE_MESSAGE + GOODBYE_MESSAGE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            boolean canExit \u003d"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                    new Ui().getConfirmation(FILE_SAVE_ERROR_MESSAGE, PROMPT_VALID_EXIT_CONFIRMATION_MESSAGE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            if (canExit) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                isExit \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                return new CommandResult(UNSUCCESSFUL_SAVE_MESSAGE + GOODBYE_MESSAGE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                return new CommandResult(ABORT_EXIT_MESSAGE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static boolean isExit (Command command) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return isExit; // Returns true if command is exit command"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iceclementi": 45
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.ui.Messages.FIND_MESSAGE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String FORMAT \u003d \"find \u003csearch word(s)\u003e\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private String searchWord;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public FindCommand(String searchWord) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        this.searchWord \u003d searchWord;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        ArrayList\u003cInteger\u003e searchedTaskIndices \u003d TaskList.filter(searchWord);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return new CommandResult(FIND_MESSAGE, true, searchedTaskIndices);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iceclementi": 24
    }
  },
  {
    "path": "src/main/java/duke/commands/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "public class HelpCommand {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"help\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String FORMAT \u003d \"help\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iceclementi": 6
    }
  },
  {
    "path": "src/main/java/duke/commands/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private final String message;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public InvalidCommand(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return new CommandResult(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iceclementi": 15
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.ui.Messages.LIST_MESSAGE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String FORMAT \u003d \"list\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return new CommandResult(LIST_MESSAGE, true);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iceclementi": 13
    }
  },
  {
    "path": "src/main/java/duke/data/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.format.DateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static Task get(int index) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static int size() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static void add(Task task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static void delete(int index)  {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static boolean doTask(int index) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        if (!taskList.get(index).getIsDone()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            taskList.get(index).setIsDone(true);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static ArrayList\u003cInteger\u003e filter(String searchWord) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        ArrayList\u003cInteger\u003e indexList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); ++i) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            String task \u003d taskList.get(i).getTask();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            if (task.contains(searchWord)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                indexList.add(i);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return indexList;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static ArrayList\u003cInteger\u003e filterDate(LocalDate date) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        ArrayList\u003cInteger\u003e indexList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); ++i) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            DateTime dateTime \u003d taskList.get(i).getDateTime();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            if (dateTime !\u003d null \u0026\u0026 dateTime.isOn(date)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                indexList.add(i);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return indexList;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static ArrayList\u003cInteger\u003e filterDateBefore(LocalDate date) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        ArrayList\u003cInteger\u003e indexList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); ++i) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            DateTime dateTime \u003d taskList.get(i).getDateTime();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            if (dateTime !\u003d null \u0026\u0026 dateTime.isBefore(date)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                indexList.add(i);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return indexList;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static ArrayList\u003cInteger\u003e filterDateAfter(LocalDate date) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        ArrayList\u003cInteger\u003e indexList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); ++i) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            DateTime dateTime \u003d taskList.get(i).getDateTime();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            if (dateTime !\u003d null \u0026\u0026 dateTime.isAfter(date)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                indexList.add(i);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return indexList;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iceclementi": 87
    }
  },
  {
    "path": "src/main/java/duke/exception/CorruptedFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "public class CorruptedFileException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iceclementi": 4
    }
  },
  {
    "path": "src/main/java/duke/exception/ExceptionMessages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.commands.AddDeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.commands.AddEventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.commands.AddToDoCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.commands.DoCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.commands.DueCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.format.DateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.format.TextFormatter.ANGRY_FACE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.format.TextFormatter.SHOCK_FACE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.format.TextFormatter.THINKING_FACE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.format.TextFormatter.createSpaces;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.format.TextFormatter.toBold;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.format.TextFormatter.toBoldAndItalic;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.format.TextFormatter.toItalic;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "public class ExceptionMessages {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private static final String TAB \u003d createSpaces(4);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String IO_ERROR_MESSAGE \u003d"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            \"An unexpected \" + toBold(\"error\") + \" has occurred when creating a new task list file!!\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String FILE_NOT_FOUND_MESSAGE \u003d"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            \"No existing task list found! Starting a new empty task list...\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String CORRUPTED_FILE_MESSAGE \u003d"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            \"The task list file appears to be \" + toBold(\"corrupted\") + \"\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String FILE_SAVE_ERROR_MESSAGE \u003d"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            SHOCK_FACE + \"Arh!! Lumi cannot seem to save your list!!\\n\" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            \"Do you still want to leave \" + toBold(\"without\") + \" saving?\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public final static String INPUT_LENGTH_EXCEEDED_MESSAGE \u003d"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            SHOCK_FACE + \"Aye!! Lumi only lets you enter \" +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            toBold(\"less than 50 characters\") + \"!\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public final static String EMPTY_INPUT_MESSAGE \u003d"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            ANGRY_FACE + \"Hey!! Lumi needs you to type \" + toBold(\"something\") + \"!\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public final static String INVALID_ACTION_MESSAGE \u003d"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            SHOCK_FACE + \"Oh no!! Lumi has trouble understanding these words... Please try again!\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public final static String INVALID_DONE_FORMAT_MESSAGE \u003d"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            SHOCK_FACE + \"Oops!! Lumi cannot understand this \" + toItalic(\"DONE\")  + \" command...\\n\" +"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            \"Lumi needs you to follow this format:\\n\" + TAB + toBoldAndItalic(\"done \u003clist number\u003e\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public final static String MISSING_LIST_NUMBER_MESSAGE \u003d"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            THINKING_FACE + \"Hmm... Lumi needs you to put in a \" + toBold(\"list number\") + \" too!\\n\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public final static String INVALID_LIST_NUMBER_MESSAGE \u003d"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            SHOCK_FACE + \"Whoops!! Lumi\u0027s list does not seem to have that number!\\n\" +"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            \"Lumi shall print the list for you to check again...\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public final static String ILLEGAL_LIST_NUMBER_MESSAGE \u003d"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            ANGRY_FACE + \"Hey!! Lumi\u0027s list numbers are \" + toBold(\"NUMBERS\") + \"!!\\n\" +"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            \"Lumi needs you to follow this format:\\n\" + TAB +"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            toBoldAndItalic(DoCommand.FORMAT) + \"\\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public final static String INVALID_TODO_FORMAT_MESSAGE \u003d"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            SHOCK_FACE + \"Oops!! Lumi cannot understand this \" + toItalic(\"TODO\")  + \" command...\\n\" +"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            \"Lumi needs you to follow this format:\\n\" + TAB +"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            toBoldAndItalic(AddToDoCommand.FORMAT) + \"\\n\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public final static String MISSING_TODO_DESCRIPTION_MESSAGE \u003d"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            THINKING_FACE + \"Hmm... Lumi needs you to put in a \" +"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            toBold(\"task description\") + \" too!\\n\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public final static String INVALID_DEADLINE_FORMAT_MESSAGE \u003d"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            SHOCK_FACE + \"Oops!! Lumi cannot understand this \" + toItalic(\"DEADLINE\")  + \" command...\\n\" +"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            \"Lumi needs you to follow this format:\\n\" + TAB +"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            toBoldAndItalic(AddDeadlineCommand.FORMAT) + \"\\n\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public final static String MISSING_DEADLINE_INFORMATION_MESSAGE \u003d"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            THINKING_FACE + \"Hmm... Lumi senses missing information...\\n\" +"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            \"Lumi needs you to put in either a \" + toBold(\"task description\") + \" or a \" +"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            toBold(\"deadline\") + \"!\\n\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public final static String INVALID_EVENT_FORMAT_MESSAGE \u003d"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            SHOCK_FACE + \"Oops!! Lumi cannot understand this \" + toItalic(\"EVENT\")  + \" command...\\n\" +"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            \"Lumi needs you to follow this format:\\n\" + TAB +"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            toBoldAndItalic(AddEventCommand.FORMAT) + \"\\n\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public final static String MISSING_EVENT_INFORMATION_MESSAGE \u003d"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            THINKING_FACE + \"Hmm... Lumi senses missing information...\\n\" +"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            \"Lumi needs you to put in either a \" + toBold(\"task description\") + \" or a \" +"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            toBold(\"duration\") + \"!\\n\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public final static String MISSING_SEARCH_WORD_MESSAGE \u003d"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            THINKING_FACE + \"Hmm... Lumi needs you to put in a \" +"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            toBold(\"search word\") + \" too!\\n\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public final static String MISSING_DATE_FILTER_MESSAGE \u003d"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            THINKING_FACE + \"Hmm... Lumi senses missing information...\\n\" +"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            \"Lumi needs you to follow this format:\\n\" + TAB +"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            toBoldAndItalic(DueCommand.FORMAT) + \"\\n\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public final static String INVALID_DUE_FORMAT_MESSAGE \u003d"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            SHOCK_FACE + \"Oops!! Lumi cannot understand this \" + toItalic(\"DUE\")  + \" command...\\n\" +"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            \"Lumi needs you to follow this format:\\n\" + TAB +"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            toBoldAndItalic(DueCommand.FORMAT) + \"\\n\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public final static String INVALID_DATETIME_FORMAT_MESSAGE \u003d"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            SHOCK_FACE + \"Em... Lumi cannot understand this \" + toBold(\"datetime\")  + \" given...\\n\" +"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            \"Lumi needs you to follow this datetime format:\\n\" + TAB +"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            toBoldAndItalic(DateTime.FORMAT) + \"\\n\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public final static String INVALID_DATE_FORMAT_MESSAGE \u003d"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            SHOCK_FACE + \"Em... Lumi cannot understand this \" + toBold(\"date\")  + \" given...\\n\" +"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            \"Lumi needs you to follow this datetime format:\\n\" + TAB +"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            toBoldAndItalic(DateTime.FORMAT) + \"\\n\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public final static String INVALID_TIME_FORMAT_MESSAGE \u003d"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            SHOCK_FACE + \"Em... Lumi cannot understand this \" + toBold(\"time\")  + \" given...\\n\" +"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            \"Lumi needs you to follow this datetime format:\\n\" + TAB +"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            toBoldAndItalic(DateTime.FORMAT) + \"\\n\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public final static String INVALID_DELETE_FORMAT_MESSAGE \u003d"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            SHOCK_FACE + \"Oops!! Lumi cannot understand this \" + toItalic(\"DELETE\")  + \" command...\\n\" +"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            \"Lumi needs you to follow this format:\\n\" + TAB +"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            toBoldAndItalic(DeleteCommand.FORMAT) + \"\\n\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iceclementi": 123
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "public abstract class InvalidFormatException extends Exception {}"
      }
    ],
    "authorContributionMap": {
      "iceclementi": 3
    }
  },
  {
    "path": "src/main/java/duke/format/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "package duke.format;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.format.DateTimeFormat.stringToDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.format.DateTimeFormat.stringToTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String FORMAT \u003d \"\u003cdate dd/mm/yyyy\u003e \u003ctime hh:mm\u003e\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private static final String DATE_FORMAT \u003d \"dd/MM/yyyy\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private static final String TIME_FORMAT \u003d \"hh:mma\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private LocalTime time;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public DateTime(LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public void setDate(String date) throws DateTimeFormat.InvalidDateException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        this.date \u003d stringToDate(date);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public void setTime(String time) throws DateTimeFormat.InvalidTimeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        this.time \u003d stringToTime(time);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return date.format(DateTimeFormatter.ofPattern(DATE_FORMAT));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return time.format(DateTimeFormatter.ofPattern(TIME_FORMAT));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public boolean isOn(LocalDate date) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return this.date.isEqual(date);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public boolean isBefore(LocalDate date) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return this.date.isBefore(date);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public boolean isAfter(LocalDate date) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return this.date.isAfter(date);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private boolean hasTime() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return time !\u003d null;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private boolean isToday() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return this.date.isEqual(LocalDate.now());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private boolean isTomorrow() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return this.date.minusDays(1).isEqual(LocalDate.now());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private boolean isDue() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return this.date.isBefore(LocalDate.now()) ||"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                (hasTime() \u0026\u0026 isToday() \u0026\u0026 this.time.isBefore(LocalTime.now()));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private String dateToString() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        if (isToday()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return \"today\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } else if (isTomorrow()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return \"tomorrow\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return getDate();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private String timeToString() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return hasTime() ? getTime() : \"\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        String toShow \u003d dateToString() + \" \" + timeToString();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return (isDue()) ? toShow + \" [OVERDUE!!]\" : toShow;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iceclementi": 87
    }
  },
  {
    "path": "src/main/java/duke/format/DateTimeFormat.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "package duke.format;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.exception.InvalidFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "public class DateTimeFormat {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private final static String[] ALL_DATE_FORMATS \u003d {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            \"dd/MM/yyyy\", \"d/MM/yyyy\", \"dd/M/yyyy\", \"d/M/yyyy\", \"dd/MM/yy\", \"d/MM/yy\", \"dd/M/yy\", \"d/M/yy\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            \"dd-MM-yyyy\", \"d-MM-yyyy\", \"dd-M-yyyy\", \"d-M-yyyy\", \"dd-MM-yy\", \"d-MM-yy\", \"dd-M-yy\", \"d-M-yy\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    };"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private final static String[] ALL_TIME_FORMATS \u003d {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            \"hh:mma\", \"h:mma\", \"HH:mma\", \"HH:mm\", \"H:mm\", \"hh.mma\", \"h.mma\", \"HH.mma\", \"HH.mm\", \"H.mm\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            \"HHmm\", \"Hmm\", \"Hmma\", \"hha\", \"ha\", \"HHa\", \"Ha\", \"H\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    };"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static DateTime stringToDateTime(String string)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            throws InvalidDateTimeException, InvalidDateException, InvalidTimeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        String[] dateTimeData \u003d string.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        if (dateTimeData.length !\u003d 2) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            throw new InvalidDateTimeException();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        String date \u003d dateTimeData[0].trim();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        String time \u003d dateTimeData[1].trim().toUpperCase();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return new DateTime(stringToDate(date), stringToTime(time));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static LocalDate stringToDate(String date) throws InvalidDateException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return LocalDate.now();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        switch (date) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        case \"today\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        case \"tdy\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return LocalDate.now();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        case \"yesterday\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        case \"yst\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return LocalDate.now().minusDays(1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        case \"tomorrow\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        case \"tmr\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return LocalDate.now().plusDays(1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            for (String format : ALL_DATE_FORMATS) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                    return LocalDate.parse(date, DateTimeFormatter.ofPattern(format));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                } catch (DateTimeParseException e) {}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            throw new InvalidDateException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static LocalTime stringToTime(String time) throws InvalidTimeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        if (time \u003d\u003d null) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        for (String format : ALL_TIME_FORMATS) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                return LocalTime.parse(time, DateTimeFormatter.ofPattern(format));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            } catch (DateTimeParseException e) {}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        throw new InvalidTimeException();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static class InvalidDateTimeException extends InvalidFormatException {}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static class InvalidDateException extends InvalidFormatException {}"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static class InvalidTimeException extends InvalidFormatException {}"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iceclementi": 82
    }
  },
  {
    "path": "src/main/java/duke/format/TextFormatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "package duke.format;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "public class TextFormatter {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public final static String HAPPY_FACE \u003d \"  \\u0298\\u15dc\\u0298 \"; // ʘᗜʘ"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public final static String SHOCK_FACE \u003d \"  \\u0298\\u15e9\\u0298\\\" \"; // ʘᗩʘ\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public final static String ANGRY_FACE \u003d \"  \\u0ca0~\\u0ca0 \"; // ಠ~ಠ"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public final static String THINKING_FACE \u003d \"  \\u0298o\\u0298? \"; // ʘoʘ?"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public final static String SAD_FACE \u003d \"\\u0ca5-\\u0ca5 \"; // ಥ-ಥ"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static String toBold(String string) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return \"\\033[1m\" + string + \"\\033[0m\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static String toItalic(String string) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return \"\\033[3m\" + string + \"\\033[0m\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static String toBoldAndItalic(String string) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return \"\\033[1m\\033[3m\" + string + \"\\033[0m\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static String createSpaces(int numberOfSpaces) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return \" \".repeat(numberOfSpaces);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iceclementi": 30
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.commands.AddDeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.commands.AddEventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.commands.AddToDoCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.commands.DoCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.commands.DueCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.commands.ExitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.commands.FindCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.commands.InvalidCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.commands.ListCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.exception.InvalidFormatException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.format.DateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.format.DateTimeFormat;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.exception.ExceptionMessages.ILLEGAL_LIST_NUMBER_MESSAGE;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.exception.ExceptionMessages.INVALID_DATETIME_FORMAT_MESSAGE;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.exception.ExceptionMessages.INVALID_DATE_FORMAT_MESSAGE;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.exception.ExceptionMessages.INVALID_DEADLINE_FORMAT_MESSAGE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.exception.ExceptionMessages.INVALID_DELETE_FORMAT_MESSAGE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.exception.ExceptionMessages.INVALID_DONE_FORMAT_MESSAGE;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.exception.ExceptionMessages.INVALID_DUE_FORMAT_MESSAGE;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.exception.ExceptionMessages.INVALID_EVENT_FORMAT_MESSAGE;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.exception.ExceptionMessages.INVALID_TIME_FORMAT_MESSAGE;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.exception.ExceptionMessages.MISSING_DATE_FILTER_MESSAGE;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.exception.ExceptionMessages.MISSING_DEADLINE_INFORMATION_MESSAGE;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.exception.ExceptionMessages.MISSING_EVENT_INFORMATION_MESSAGE;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.exception.ExceptionMessages.MISSING_LIST_NUMBER_MESSAGE;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.exception.ExceptionMessages.MISSING_SEARCH_WORD_MESSAGE;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.exception.ExceptionMessages.MISSING_TODO_DESCRIPTION_MESSAGE;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.format.DateTimeFormat.stringToDate;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.format.DateTimeFormat.stringToDateTime;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    final int MAX_INPUT_LENGTH \u003d 50;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    final String DEADLINE_PREFIX \u003d \"/by\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    final String EVENT_PREFIX \u003d \"/at\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public Command parseInput(String input)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            throws EmptyInputException, InputLengthExceededException, InvalidCommandException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        if (input.isEmpty()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            throw new EmptyInputException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        if (input.length() \u003e MAX_INPUT_LENGTH) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            throw new InputLengthExceededException();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        // Splits user input into command word and rest of parameters (if any)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        String[] separatedInput \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        String commandWord \u003d separatedInput[0].toLowerCase();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        String parameters \u003d (separatedInput.length \u003d\u003d 2) ? separatedInput[1].trim() : \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        case DoCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return createDoCommand(parameters);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        case AddToDoCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return createToDoCommand(parameters);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        case AddDeadlineCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return createDeadlineCommand(parameters);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        case AddEventCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return createEventCommand(parameters);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return createDeleteCommand(parameters);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        case FindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return createFindCommand(parameters);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        case DueCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return createDueCommand(parameters);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private Command createDoCommand(String parameters) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            int index \u003d extractIndex(parameters);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new DoCommand(index);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } catch (MissingListNumberException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new InvalidCommand(MISSING_LIST_NUMBER_MESSAGE);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } catch (ExcessParameterException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new InvalidCommand(INVALID_DONE_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new InvalidCommand(ILLEGAL_LIST_NUMBER_MESSAGE);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private Command createToDoCommand(String parameters) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            String task \u003d extractDetails(parameters, null)[0];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new AddToDoCommand(task);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } catch (MissingParameterException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new InvalidCommand(MISSING_TODO_DESCRIPTION_MESSAGE);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private Command createDeadlineCommand(String parameters) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            String[] taskDetails \u003d extractDetails(parameters, DEADLINE_PREFIX);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            String task \u003d taskDetails[0];"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            DateTime deadline \u003d stringToDateTime(taskDetails[1]);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new AddDeadlineCommand(task, deadline);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } catch (MissingParameterException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new InvalidCommand(MISSING_DEADLINE_INFORMATION_MESSAGE);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new InvalidCommand(INVALID_DEADLINE_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } catch (DateTimeFormat.InvalidDateTimeException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new InvalidCommand(INVALID_DATETIME_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } catch (DateTimeFormat.InvalidDateException e) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new InvalidCommand(INVALID_DATE_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } catch (DateTimeFormat.InvalidTimeException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new InvalidCommand(INVALID_TIME_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private Command createEventCommand(String parameters) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            String[] taskDetails \u003d extractDetails(parameters, EVENT_PREFIX);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            String task \u003d taskDetails[0];"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            DateTime dateTime \u003d stringToDateTime(taskDetails[1]);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new AddEventCommand(task, dateTime);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } catch (MissingParameterException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new InvalidCommand(MISSING_EVENT_INFORMATION_MESSAGE);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new InvalidCommand(INVALID_EVENT_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } catch (DateTimeFormat.InvalidDateTimeException e) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new InvalidCommand(INVALID_DATETIME_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } catch (DateTimeFormat.InvalidDateException e) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new InvalidCommand(INVALID_DATE_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } catch (DateTimeFormat.InvalidTimeException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new InvalidCommand(INVALID_TIME_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private Command createDeleteCommand(String parameters) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            int index \u003d extractIndex(parameters);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new DeleteCommand(index);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } catch (MissingListNumberException e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new InvalidCommand(MISSING_LIST_NUMBER_MESSAGE);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } catch (ExcessParameterException e) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new InvalidCommand(INVALID_DELETE_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new InvalidCommand(ILLEGAL_LIST_NUMBER_MESSAGE);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private Command createFindCommand(String parameters) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            String searchWord \u003d extractDetails(parameters, null)[0];"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new FindCommand(searchWord);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } catch (MissingParameterException e) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new InvalidCommand(MISSING_SEARCH_WORD_MESSAGE);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private Command createDueCommand(String parameters) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            String dateFilter \u003d extractDetails(parameters, null)[0];"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return processDateFilter(dateFilter);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } catch (MissingParameterException e) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new InvalidCommand(MISSING_DATE_FILTER_MESSAGE);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } catch (ExcessParameterException e) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new InvalidCommand(INVALID_DUE_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } catch (DateTimeFormat.InvalidDateException e) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new InvalidCommand(INVALID_DATETIME_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private Command processDateFilter(String dateFilter) throws ExcessParameterException, DateTimeFormat.InvalidDateException {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        String[] dateFilterData \u003d dateFilter.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        if (dateFilterData.length \u003e 2) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            throw new ExcessParameterException();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        if (dateFilterData.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new DueCommand(stringToDate(dateFilterData[1]), dateFilterData[0]);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new DueCommand(stringToDate(dateFilterData[0]));"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private int extractIndex(String parameters) throws MissingListNumberException, ExcessParameterException {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        if (parameters.isEmpty()) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            throw new MissingListNumberException();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        if (parameters.contains(\" \")) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            throw new ExcessParameterException();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return Integer.parseInt(parameters) - 1; // 0-based indexing"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private String[] extractDetails(String parameters, String prefix) throws MissingParameterException {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        if (parameters.isEmpty()) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            throw new MissingParameterException();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        if (prefix \u003d\u003d null) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new String[]{parameters};"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            int endIndexOfTask \u003d parameters.toLowerCase().indexOf(prefix);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            int indexOfDateTimeDetail \u003d endIndexOfTask + prefix.length(); // Index of deadline / duration info"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            String task \u003d parameters.substring(0, endIndexOfTask).trim();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            String additionalDetail \u003d parameters.substring(indexOfDateTimeDetail).trim(); // Deadline / duration info"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            if (task.length() \u003d\u003d 0 || additionalDetail.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                throw new MissingParameterException();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return new String[]{task, additionalDetail};"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static class EmptyInputException extends InvalidFormatException {}"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static class InputLengthExceededException extends InvalidFormatException {}"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static class InvalidCommandException extends InvalidFormatException {}"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static class MissingListNumberException extends InvalidFormatException {}"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static class ExcessParameterException extends InvalidFormatException {}"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static class MissingParameterException extends InvalidFormatException {}"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iceclementi": 244
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.format.DateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.format.DateTimeFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.exception.CorruptedFileException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.format.DateTimeFormat.stringToDate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.format.DateTimeFormat.stringToTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private static final String TASK_LIST_PATH \u003d \"./data/taskList.txt\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public void loadTaskList()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            throws FileNotFoundException, CorruptedFileException,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            DateTimeFormat.InvalidTimeException, DateTimeFormat.InvalidDateException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        File taskListFile \u003d new File(TASK_LIST_PATH);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        ArrayList\u003cTask\u003e decodedList \u003d decode(taskListFile);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        for (Task task : decodedList) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            TaskList.add(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public void saveTaskList() throws IOException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        File taskListFile \u003d new File(TASK_LIST_PATH);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        // Ensure task list file exists"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        if (!taskListFile.exists()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            createTaskListFile();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        FileWriter writer \u003d new FileWriter(TASK_LIST_PATH);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        for (int i \u003d 0; i \u003c TaskList.size(); ++i) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            Task task \u003d TaskList.get(i);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            String taskData \u003d encode(task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            writer.write(taskData + System.lineSeparator());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public void createTaskListFile() throws IOException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        File taskListFile \u003d new File(TASK_LIST_PATH);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        taskListFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        if (taskListFile.exists()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            new FileWriter(TASK_LIST_PATH).close(); // Overwrite file with a new file"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            taskListFile.createNewFile();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private ArrayList\u003cTask\u003e decode(File filePath)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            throws CorruptedFileException, FileNotFoundException,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            DateTimeFormat.InvalidDateException, DateTimeFormat.InvalidTimeException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        Scanner fileScanner \u003d new Scanner(filePath);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        while (fileScanner.hasNextLine()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            String line \u003d fileScanner.nextLine().trim();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            if (line.isEmpty()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            String[] taskData \u003d line.split(\"__\", 5);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            String taskType \u003d taskData[0];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            String doneStatus \u003d taskData[1];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            String taskDescription \u003d taskData[2];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            String dateString \u003d taskData[3];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            String timeString \u003d taskData[4];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            if (!doneStatus.equals(\"1\") \u0026\u0026 !doneStatus.equals(\"0\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                throw new CorruptedFileException();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                ToDo newToDoTask \u003d new ToDo(taskDescription);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                newToDoTask.setIsDone(doneStatus.equals(\"1\"));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                list.add(newToDoTask);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                Deadline newDeadlineTask \u003d"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                        new Deadline(taskDescription, new DateTime(stringToDate(dateString), stringToTime(timeString)));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                newDeadlineTask.setIsDone(doneStatus.equals(\"1\"));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                list.add(newDeadlineTask);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                Event newEventTask \u003d"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                        new Event(taskDescription, new DateTime(stringToDate(dateString), stringToTime(timeString)));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                newEventTask.setIsDone(doneStatus.equals(\"1\"));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                list.add(newEventTask);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                throw new CorruptedFileException();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        fileScanner.close();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private String encode(Task task) throws IOException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        String taskType \u003d getTaskType(task);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        String doneStatus \u003d task.getIsDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        String taskDescription \u003d task.getTask();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        String taskDate \u003d (task.getDateTime() !\u003d null) ? task.getDateTime().getDate() : null;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        String taskTime \u003d (task.getDateTime() !\u003d null) ? task.getDateTime().getTime() : null;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return String.join(\"__\", new String[]{taskType, doneStatus, taskDescription, taskDate, taskTime});"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private String getTaskType(Task task) throws IOException{"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        if (task instanceof ToDo) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return \"T\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return \"D\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return \"E\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        } else throw new IOException();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iceclementi": 137
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.format.DateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    protected DateTime deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public Deadline(String task, DateTime deadline) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public DateTime getDateTime() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public String getTaskStatus() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return \"[D]\" + super.getTaskStatus() + \" (by: \" + deadline + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iceclementi": 22
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.format.DateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    protected DateTime duration;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public Event(String task, DateTime duration) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public DateTime getDateTime() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return duration;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public String getTaskStatus() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return \"[E]\" + super.getTaskStatus() + \" (at: \" + duration + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iceclementi": 22
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.format.DateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    protected String task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public Task(String task) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public abstract DateTime getDateTime();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public void setIsDone(boolean status) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        isDone \u003d status;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public String getTaskStatus() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        String statusIcon \u003d isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return (\"[\" + statusIcon + \"] \" + task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iceclementi": 32
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.format.DateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public ToDo(String task) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public DateTime getDateTime() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public String getTaskStatus() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return \"[T]\" + super.getTaskStatus();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iceclementi": 19
    }
  },
  {
    "path": "src/main/java/duke/ui/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.commands.DueCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.format.TextFormatter.ANGRY_FACE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.format.TextFormatter.HAPPY_FACE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.format.TextFormatter.SAD_FACE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.format.TextFormatter.SHOCK_FACE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.format.TextFormatter.THINKING_FACE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.format.TextFormatter.createSpaces;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.format.TextFormatter.toBold;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.format.TextFormatter.toBoldAndItalic;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private static final String TAB \u003d createSpaces(4);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private static final String VERSION \u003d \"v5.6.1.2\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private static final String LOGO \u003d"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            \"  __       _______  _______  ________  _______  _______  _______  ________\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            \" |\\\\_\\\\     |\\\\___\\\\__\\\\|\\\\ __\\\\__\\\\|\\\\ ______\\\\|\\\\______\\\\|\\\\___\\\\__\\\\|\\\\______\\\\|\\\\ ______\\\\\\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            \" | | |    | |  |  || |  |  | \\\\|__   _|| |  ___|| |  |  || |     | \\\\|__   _|\\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            \" | | |    | |  |  || |  |  |   | | |  | | |    | |  |  || |  |  |   | | |\\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            \" | | |__  | |  |  || |     | __| | |_ | | |___ | |     || |     |   | | |\\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            \" | | |__\\\\ | |     || | | | ||\\\\__\\\\| |_\\\\| | |___\\\\| |  |  || |  |  |   | | |\\n\" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            \"  \\\\|_____| \\\\|_____| \\\\|_|_|_| \\\\|______| \\\\|_____| \\\\|__|__| \\\\|__|__|    \\\\|_|\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    /* System Messages */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String WELCOME_MESSAGE \u003d \"Welcome to\\n\" + LOGO;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String LOAD_MESSAGE \u003d \"Initializing LumiChat \" + VERSION + \"...\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String EXIT_MESSAGE \u003d \"Aborting LumiChat program...\\nLumiChat program has ended.\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String READY_MESSAGE \u003d"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            \"LumiChat is now ready.\\n\" + HAPPY_FACE + \"Hey I\u0027m Lumi!\\n  How may Lumi assist you today?\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String GOODBYE_MESSAGE \u003d SAD_FACE + \"Goodbye! Lumi will miss you!\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    /* Storage Messages */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String CREATE_NEW_FILE_MESSAGE \u003d \"New empty task list file created.\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String ABORT_CREATE_NEW_FILE_MESSAGE \u003d \"New task list is not created.\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String CREATE_CONFIRMATION_MESSAGE \u003d"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            \"Do you want to overwrite the corrupted task list with a new \" +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                    toBold(\"empty\") + \" task list?\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String PROMPT_VALID_CREATE_CONFIRMATION_MESSAGE \u003d"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            \"Please enter either \" + toBoldAndItalic(\"YES\") + \" to confirm creating a new task list or \" +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                    toBoldAndItalic(\"NO\") + \" to abort the LumiChat program.\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String SUCCESSFUL_SAVE_MESSAGE \u003d HAPPY_FACE + \"Lumi saves your task list successfully!\\n\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String UNSUCCESSFUL_SAVE_MESSAGE \u003d SHOCK_FACE + \"Lumi is not able to save your task list!\\n\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    /* Add task messages */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static String addTaskMessage() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        int latestTaskIndex \u003d TaskList.size() - 1; // 0-based indexing"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return HAPPY_FACE + \"Alright, Lumi has added: \" + TaskList.get(latestTaskIndex).getTask() + \"!\\n\" +"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                TAB + TaskList.get(latestTaskIndex).getTaskStatus() +"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                \"\\nYou now have \" + TaskList.size() + ((TaskList.size() \u003d\u003d 1) ? \" task\" : \" tasks\") +"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                \" in Lumi\u0027s list!\\n\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    /* Do task messages */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static String completeTaskMessage(int index) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return HAPPY_FACE + \"Well done! Lumi marks this task as completed!\\n\" +"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                TAB + TaskList.get(index).getTaskStatus() +\"\\n\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static String alreadyCompletedTaskMessage(int index) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return ANGRY_FACE + \"Hey!! Lumi already marked \u003c\" + TaskList.get(index).getTask() +"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                \"\u003e as completed!\\n\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    /* List messages */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String LIST_MESSAGE \u003d HAPPY_FACE + \"Sure! Lumi prints your list!\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    /* Delete task messages */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static String DELETE_TASK_CONFIRMATION_MESSAGE(String task) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return THINKING_FACE + \"Umm... Lumi needs you to confirm to delete this task:\\n\" +"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                createSpaces(8) + task + \"\\n\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String PROMPT_VALID_DELETE_CONFIRMATION_MESSAGE \u003d"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        THINKING_FACE + \"Uh... Lumi needs you to enter either \" +"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        toBoldAndItalic(\"YES\") + \" to confirm deletion or \" +"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        toBoldAndItalic(\"NO\") + \" to cancel...\\n\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static String deleteTaskMessage(String taskToDelete) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        int listSize \u003d TaskList.size();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return HAPPY_FACE + \"Bleep, Lumi says bye-bye to:\\n\" +"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                TAB + taskToDelete +"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                \"\\nYou now have \" + listSize + ((listSize \u003d\u003d 1) ? \" task\" : \" tasks\") +"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                \" in Lumi\u0027s list!\\n\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String ABORT_DELETE_MESSAGE \u003d HAPPY_FACE + \"OK, Lumi continues without deleting!\\n\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    /* Find messages */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String FIND_MESSAGE \u003d HAPPY_FACE + \"Sure! Lumi searches your list...\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String NO_MATCHES_MESSAGE \u003d THINKING_FACE + \"Huh? Lumi is not able to find anything...\\n\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String UNKNOWN_TIME_SPECIFIER_MESSAGE \u003d"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            SHOCK_FACE + \"Yikes! Lumi does not recognise that \" + toBold(\"time specifier\") + \"...\\n\" +"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            \"Lumi needs you to follow this format:\\n\" + TAB +"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            toBoldAndItalic(DueCommand.FORMAT) + \"\\n\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    /* Exit messages */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String PROMPT_VALID_EXIT_CONFIRMATION_MESSAGE \u003d"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            THINKING_FACE + \"Uh... Lumi needs you to enter either \" +"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            toBoldAndItalic(\"YES\") + \" to confirm to leave \" + toBold(\"without\") + \" saving or \" +"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            toBoldAndItalic(\"NO\") + \" to stay...\\n\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public static final String ABORT_EXIT_MESSAGE \u003d HAPPY_FACE + \"Woohoo! Lumi continues to be with you!\\n\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iceclementi": 128
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import duke.commands.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.format.TextFormatter.createSpaces;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "import static duke.ui.Messages.NO_MATCHES_MESSAGE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private static final String LS \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private static final String INDENT \u003d createSpaces(2);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        PrintStream selectedOut;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        selectedOut \u003d new PrintStream(System.out, true, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        out \u003d selectedOut;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return in.nextLine().trim();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public void showResult(CommandResult result) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        out.println(result.getMessage().replace(\"\\n\", LS + INDENT));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        if (result.getPrintStatus()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            ArrayList\u003cInteger\u003e searchedTaskIndices \u003d result.getPrintListIndices();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            if (searchedTaskIndices \u003d\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                out.println(createList().replace(\"\\n\", LS));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                out.println(createFoundList(searchedTaskIndices).replace(\"\\n\", LS));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public void showSystemMessage(String message) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        out.println(message.replace(\"\\n\", LS));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    public boolean getConfirmation(String confirmationMessage, String validConfirmationMessage) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        showSystemMessage(confirmationMessage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            String input \u003d in.nextLine().trim().toLowerCase();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            if (input.equals(\"yes\") || input.equals(\"y\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            } else if (input.equals(\"no\") || input.equals(\"n\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                showSystemMessage(validConfirmationMessage);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private String createList() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        final String LIST_TOP \u003d"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                \"    +---------+\\n\" +"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                        \"+---| L I S T |----------------------------------------------------------+\\n\" +"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                        \"|   +---------+                                                          |\\n\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        final String LIST_LEFT \u003d \"| \";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        final String LIST_RIGHT \u003d \" |\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        final String LIST_BOTTOM \u003d \"+------------------------------------------------------------------------+\\n\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        final int LIST_LENGTH \u003d 70;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        StringBuilder list \u003d new StringBuilder(LIST_TOP);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        // Append list items"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        for (int i \u003d 0; i \u003c TaskList.size(); i++) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            String listItem \u003d formatListItem(i);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            String spaces \u003d createSpaces(LIST_LENGTH-listItem.length()-1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            list.append(String.format(\"%s%s%s%s\\n\", LIST_LEFT, listItem, spaces, LIST_RIGHT));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        list.append(LIST_BOTTOM);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        // Append task count"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        String totalTaskString \u003d \"Total: \" + TaskList.size() + (TaskList.size() \u003d\u003d 1 ? \" task\" : \" tasks\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        String spaces \u003d createSpaces(LIST_LENGTH-totalTaskString.length());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        list.append(String.format(\"%s%s%s%s\\n%s\", LIST_LEFT, totalTaskString, spaces, LIST_RIGHT, LIST_BOTTOM));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return list.toString();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private String formatListItem(int index) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        int listNumber \u003d index + 1; // 0-indexing"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return listNumber + \". \" + TaskList.get(index).getTaskStatus();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    private String createFoundList(ArrayList\u003cInteger\u003e searchedTaskIndices) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        if (searchedTaskIndices.isEmpty()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            return NO_MATCHES_MESSAGE;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        final String LIST_TOP \u003d"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                \"    +-----------------------+\\n\" +"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                \"+---| S E A R C H   L I S T |--------------------------------------------+\\n\" +"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                \"|   +-----------------------+                                            |\\n\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        final String LIST_LEFT \u003d \"| \";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        final String LIST_RIGHT \u003d \" |\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        final String LIST_BOTTOM \u003d \"+------------------------------------------------------------------------+\\n\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        final int LIST_LENGTH \u003d 70;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        StringBuilder list \u003d new StringBuilder(LIST_TOP);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        // Append list items"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        for (Integer index : searchedTaskIndices) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            String listItem \u003d formatListItem(index);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            String spaces \u003d createSpaces(LIST_LENGTH-listItem.length()-1);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "            list.append(String.format(\"%s%s%s%s\\n\", LIST_LEFT, listItem, spaces, LIST_RIGHT));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        list.append(LIST_BOTTOM);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        // Append task count"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        String totalTaskString \u003d \"Search Total: \" +"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "                searchedTaskIndices.size() + (searchedTaskIndices.size() \u003d\u003d 1 ? \" task\" : \" tasks\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        String spaces \u003d createSpaces(LIST_LENGTH-totalTaskString.length());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        list.append(String.format(\"%s%s%s%s\\n%s\", LIST_LEFT, totalTaskString, spaces, LIST_RIGHT, LIST_BOTTOM));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "        return list.toString();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iceclementi": 130
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "deadline review code /by tomorrow"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "event visit friend /at friend\u0027s house"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "iceclementi": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\format\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iceclementi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iceclementi"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "iceclementi": 21
    }
  }
]

[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jichngan"
        },
        "content": "duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jichngan"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "jichngan": 2
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "# Duke User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "---"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": "Duke is a command line interface program capable of handling tasks such as Todo, Events and Deadlines."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": "This User Guide will demonstrate the capabilities of Duke. "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": "---"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": "## Running duke Duke "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": "1. Download the latest version of Java 11"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": "2. Navigate to path of `Duke.jar` file"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": "3. Run `java -jar Duke.jar` "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": "4. Duke will automatically save any tasks added into an `output.txt` file"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": "5. On start up, Duke will also load existing tasks from `output.txt` file"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": "6. To exit Duke, input `bye` command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jichngan"
        },
        "content": "---"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jichngan"
        },
        "content": "## Duke Task Types"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jichngan"
        },
        "content": "* Todo "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jichngan"
        },
        "content": "* Event "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jichngan"
        },
        "content": "* Deadline"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jichngan"
        },
        "content": "---"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jichngan"
        },
        "content": "## Main Features"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jichngan"
        },
        "content": "1. Add different types of tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jichngan"
        },
        "content": "2. List all tasks "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jichngan"
        },
        "content": "3. Mark task as done"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jichngan"
        },
        "content": "4. Find tasks from list "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jichngan"
        },
        "content": "5. Delete a task from list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jichngan"
        },
        "content": "---"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jichngan"
        },
        "content": "## Feature List"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jichngan"
        },
        "content": "### 1.1. Add Todo task "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jichngan"
        },
        "content": "Users are able to add todo tasks into Duke."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jichngan"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jichngan"
        },
        "content": "`todo \u003cdescription of todo task\u003e`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jichngan"
        },
        "content": "* Adds a single todo task into task list"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jichngan"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jichngan"
        },
        "content": "`todo buy bread`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jichngan"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jichngan"
        },
        "content": "\\_________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jichngan"
        },
        "content": "Got it! You\u0027ve added a todo task: "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jichngan"
        },
        "content": "\\[T][\u0026#10008;] buy bread"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jichngan"
        },
        "content": "You now have 1 task in the list"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jichngan"
        },
        "content": "\\_________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jichngan"
        },
        "content": "---"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jichngan"
        },
        "content": "### 1.2. Add Event task"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jichngan"
        },
        "content": "Users are able to add events into Duke. "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jichngan"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jichngan"
        },
        "content": "`event \u003cdescription of event\u003e /at \u003cdate and time of event\u003e`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jichngan"
        },
        "content": "* Adds an event into task list"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jichngan"
        },
        "content": "#### Example of usage:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jichngan"
        },
        "content": "`event project meeting /at Monday 2pm`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jichngan"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jichngan"
        },
        "content": "\\_________________________________________________"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jichngan"
        },
        "content": "Got it! You\u0027ve added an event task: "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jichngan"
        },
        "content": "\\[E][\u0026#10008;] project meeting (at: Monday 2pm)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jichngan"
        },
        "content": "You now have 2 tasks in the list"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jichngan"
        },
        "content": "\\_________________________________________________"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jichngan"
        },
        "content": "---"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jichngan"
        },
        "content": "### 1.3. Add Deadline task"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jichngan"
        },
        "content": "Users are able to add deadline into Duke"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jichngan"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jichngan"
        },
        "content": "`deadline \u003cdescription of deadline\u003e /by \u003cdate and time of deadline\u003e`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jichngan"
        },
        "content": "* Adds a deadline into task list"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jichngan"
        },
        "content": "#### Example of usage:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jichngan"
        },
        "content": "`deadline CS2113T assignment /by Monday 12pm`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jichngan"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jichngan"
        },
        "content": "\\_________________________________________________"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jichngan"
        },
        "content": "Got it! You\u0027ve added a deadline task: "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jichngan"
        },
        "content": "\\[D][\u0026#10008;] CS2113T assignment (by: Monday 12pm)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jichngan"
        },
        "content": " "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jichngan"
        },
        "content": " You now have 3 tasks in the list"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jichngan"
        },
        "content": " "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jichngan"
        },
        "content": "\\_________________________________________________"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jichngan"
        },
        "content": "---"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jichngan"
        },
        "content": "### 2. List all tasks"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jichngan"
        },
        "content": "Users are able to view all tasks in their list"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jichngan"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jichngan"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jichngan"
        },
        "content": "* Lists all tasks in task list"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jichngan"
        },
        "content": "#### Example of usage:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jichngan"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jichngan"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jichngan"
        },
        "content": "\\_________________________________________________"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jichngan"
        },
        "content": "Here are the tasks in your list: "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jichngan"
        },
        "content": "1. \\[T][\u0026#10008;] buy bread"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jichngan"
        },
        "content": "2. \\[E][\u0026#10008;] project meeting (at: Monday 2pm)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jichngan"
        },
        "content": "3. \\[D][\u0026#10008;] CS2113T assignment (by: Monday 12pm)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jichngan"
        },
        "content": "\\_________________________________________________"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jichngan"
        },
        "content": "---"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jichngan"
        },
        "content": "### 3. Mark task as done"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jichngan"
        },
        "content": "Users are able to mark a task in the list as done "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jichngan"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jichngan"
        },
        "content": "`done \u003cindex of task on list\u003e`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jichngan"
        },
        "content": "* Marks a single task as done"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jichngan"
        },
        "content": "#### Example of usage:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jichngan"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jichngan"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jichngan"
        },
        "content": "\\________________________________________________"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jichngan"
        },
        "content": "Awesome! I\u0027ve marked the following task as done:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jichngan"
        },
        "content": "\\[T][\u0026#10003;] buy bread"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jichngan"
        },
        "content": "\\_________________________________________________"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jichngan"
        },
        "content": "---"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jichngan"
        },
        "content": "### 4. Find tasks "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jichngan"
        },
        "content": "Users are able to find tasks in task list based on keywords."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jichngan"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jichngan"
        },
        "content": "`find \u003ckeywords to search for\u003e`"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jichngan"
        },
        "content": "* Finds all tasks that contains keywords"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jichngan"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jichngan"
        },
        "content": "`find bread`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jichngan"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jichngan"
        },
        "content": "\\_________________________________________________"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jichngan"
        },
        "content": "I\u0027ve found the following tasks matching your search: "
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jichngan"
        },
        "content": "1. \\[T][\u0026#10003;] buy bread"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jichngan"
        },
        "content": "\\_________________________________________________"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jichngan"
        },
        "content": "---"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jichngan"
        },
        "content": "### 5. Delete task"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jichngan"
        },
        "content": "Users are able to delete tasks in task list"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jichngan"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jichngan"
        },
        "content": "`delete \u003cindex of task to be deleted\u003e`"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jichngan"
        },
        "content": "* Deletes a single task from the task list"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jichngan"
        },
        "content": "#### Example of Usage:"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jichngan"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jichngan"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jichngan"
        },
        "content": "\\_________________________________________________"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jichngan"
        },
        "content": "Got it! I\u0027ve removed this task:"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jichngan"
        },
        "content": "\\[T][\u0026#10003;] buy bread"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jichngan"
        },
        "content": "You now have 2 tasks in the list"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jichngan"
        },
        "content": "\\_________________________________________________"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jichngan": 171,
      "-": 9
    }
  },
  {
    "path": "output.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "[E][✓] proj meeting (at: 2pm)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": "[D][✘] this proj (by: Monday)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "[T][✘] buy bread"
      }
    ],
    "authorContributionMap": {
      "jichngan": 3
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": " * Duke is a command based task manager capable of handling:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": " * Todos, Events and Deadlines"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Constructor for instantiation of Ui, Storage and TaskList classes."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        storage \u003d new Storage(\"output.txt\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } catch (FileNotFoundException err) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            ui.displayErrorMessage(err.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Starts duke and listens to incoming inputs from User."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        ui.startMessage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                String userInput \u003d ui.readCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                ui.displayDividerLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                Command command \u003d Parser.parse(userInput);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                command.execute(tasks, storage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            } catch (DukeException err) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                ui.displayErrorMessage(err.toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                ui.displayDividerLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Invokes the run method."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param args Not used."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 58,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.exception.UnknownInputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": " * Parser class for parsing user inputs."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    private static final String DONE_COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    private static final String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    private static final String TODO_COMMAND \u003d \"todo\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    private static final String EVENT_COMMAND \u003d \"event\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    private static final String DEADLINE_COMMAND \u003d \"deadline\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    private static final String DELETE_COMMAND \u003d \"delete\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    private static final String END_COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    private static final String FIND_COMMAND \u003d \"find\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Processes user inputs."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param userInput Full command that is given by the user"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @return Command object that corresponds to the input given by the user"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @throws UnknownInputException If command does not match commands supported by Duke"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public static Command parse(String userInput) throws UnknownInputException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        String[] words \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        if (words[0].equals(TODO_COMMAND)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            return new TodoCommand(userInput);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } else if (words[0].equals(EVENT_COMMAND)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            return new EventCommand(userInput);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } else if (words[0].equals(DEADLINE_COMMAND)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            return new DeadlineCommand(userInput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } else if (words[0].equals(LIST_COMMAND)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } else if (words[0].equals(DELETE_COMMAND)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            return new DeleteCommand(userInput);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } else if (words[0].equals(DONE_COMMAND)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            return new DoneCommand(userInput);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } else if (words[0].equals(END_COMMAND)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } else if (words[0].equals(FIND_COMMAND)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            return new FindCommand(userInput);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            throw new UnknownInputException(\"There is no such input!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 48
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jichngan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jichngan"
        },
        "content": " * Storage class for loading and saving data."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jichngan"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Constructor for Storage class"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param filePath String containing input of filepath for storing data"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Loads the save data from txt file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @return ArrayList containing data from saved txt file"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @throws FileNotFoundException If file indicated by file path is not found"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            String data \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            char task \u003d data.charAt(1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            char isDone \u003d data.charAt(4);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            if (task \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                String todoTask \u003d data.substring(7);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                Task todo \u003d new Todo(todoTask);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                if (isDone \u003d\u003d \u0027\\u2713\u0027) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                    todo.markAsDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                tasks.add(todo);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            } else if (task \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                String details \u003d data.substring(7);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                String[] eventDetailsArray \u003d details.split(\" \\\\(at: \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                String eventDate \u003d eventDetailsArray[1].substring(0, eventDetailsArray[1].length() - 1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                Task event \u003d new Event(eventDetailsArray[0], eventDate);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                if (isDone \u003d\u003d \u0027\\u2713\u0027) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                    event.markAsDone();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                tasks.add(event);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            } else if (task \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                String details \u003d data.substring(7);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                String[] deadlineDetailsArray \u003d details.split(\" \\\\(by: \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                String deadlineDate \u003d deadlineDetailsArray[1].substring(0, deadlineDetailsArray[1].length() - 1);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                Task deadline \u003d new Deadline(deadlineDetailsArray[0], deadlineDate);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                if (isDone \u003d\u003d \u0027\\u2713\u0027) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                    deadline.markAsDone();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                tasks.add(deadline);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Saves the tasks in ArrayList into a txt file."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param tasks TaskList object of the current tasks"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public void save(TaskList tasks) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"output.txt\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            for (Task task : tasks.getTaskArray()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                fw.write(task.toString() + System.lineSeparator());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } catch (IOException err) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            err.printStackTrace();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jichngan": 97
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.exception.EmptyListException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": " * TaskList class for managing all operations related to list of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Default constructor for TaskList class. Instantiate a new ArrayList Object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Constructor for existing task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param tasks ArrayList containing existing tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Returns string indicating the whether task is in Singular or Plural form."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param numTasks Number of tasks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @return String containing task if singular or tasks if plural"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public String taskValidator(int numTasks) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        String totalTasks \u003d Integer.toString(numTasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        if (numTasks \u003c\u003d 1) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            return \"You now have \" + totalTasks + \" task in the list\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            return \"You now have \" + totalTasks + \" tasks in the list\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Getter for size of ArrayList"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @return ArrayList size"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public int getListSize() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Getter for ArrayList of tasks"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @return ArrayList of tasks"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskArray() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Adds a Todo into tasks ArrayList."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param todoTask String of Todo task"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public void addTodo(String todoTask) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        Todo todo \u003d new Todo(todoTask);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        tasks.add(todo);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        System.out.println(\"Got it! You\u0027ve added a todo task: \");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        System.out.println(todo.toString());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        System.out.println(taskValidator(tasks.size()));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Adds an Event into tasks ArrayList."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param eventTask String of Event task"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param at String of Date and Time of where event will happen"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public void addEvent(String eventTask, String at) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        Event event \u003d new Event(eventTask, at);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        tasks.add(event);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        System.out.println(\"Got it! You\u0027ve added an event task: \");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        System.out.println(event.toString());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        System.out.println(taskValidator(tasks.size()));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Adds a Deadline into tasks ArrayList"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param deadlineTask String of Deadline Task"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param by String of Date and Time task is due"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public void addDeadline(String deadlineTask, String by) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        Deadline deadline \u003d new Deadline(deadlineTask, by);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        tasks.add(deadline);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        System.out.println(\"Got it! You\u0027ve added a deadline task: \");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        System.out.println(deadline.toString());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        System.out.println(taskValidator(tasks.size()));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Lists tasks in tasks ArrayList"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @throws EmptyListException If tasks ArrayList is empty"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public void listTasks() throws EmptyListException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        int sizeofArray \u003d tasks.size();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        if (sizeofArray !\u003d 0) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            System.out.println(\"Here are the tasks on your list: \");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            for (int i \u003d 1; i \u003c sizeofArray + 1; i++) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                String taskNum \u003d Integer.toString(i);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                System.out.println(taskNum + \".\" + tasks.get(i - 1));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            throw new EmptyListException(\"There are no tasks in the list! Please add some tasks!\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Deletes tasks from ArrayList using index number of tasks."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param taskNum Index number of task to be deleted"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public void deleteTask(int taskNum) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        System.out.println(\"Got it! I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        System.out.println(tasks.get(taskNum - 1).toString());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        tasks.remove(taskNum - 1);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        System.out.println(taskValidator(tasks.size()));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Marks tasks from ArrayList as done."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Indicated using index number of tasks."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param taskNum Index number of task to be marked as done"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public void markDone(int taskNum) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        tasks.get(taskNum - 1).markAsDone();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        System.out.println(\"Awesome! I\u0027ve marked the following task as done:\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        System.out.println(tasks.get(taskNum - 1).toString());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Finds tasks from tasks ArrayList based on key words supplied."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param findString String in task description that is to be searched"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public void findTask(String findString) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        ArrayList\u003cInteger\u003e matchList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            if (tasks.get(i-1).toString().contains(findString)) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                matchList.add(i);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        if (matchList.size() \u003e 0) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            System.out.println(\"I\u0027ve found the following tasks matching your search: \");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            for (int i \u003d 0; i \u003c matchList.size(); i++) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                String index \u003d matchList.get(i).toString();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                System.out.println(index + \".\" + tasks.get(matchList.get(i) - 1));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            System.out.println(\"Sorry! I could not find any tasks matching your searches!\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 165
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": " * Ui class for managing input and output of Duke"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    Scanner sc;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Constructor for Ui."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Instantiate new Scanner object for reading in inputs."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Displays the start up logo of Duke."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public void startMessage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        String logo \u003d \".______     ______   .______   \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                + \"|   _  \\\\   /  __  \\\\  |   _  \\\\  \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                + \"|  |_)  | |  |  |  | |  |_)  | \\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                + \"|   _  \u003c  |  |  |  | |   _  \u003c  \\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                + \"|  |_)  | |  `--\u0027  | |  |_)  | \\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                + \"|______/   \\\\______/  |______/  \\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        String welcomeMessage \u003d \"Hello human! I am Bob.\\n\" + \"What can I do for you?\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        System.out.println(\"Bob the chatbot\\n\" + logo);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        System.out.println(welcomeMessage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        System.out.println(\"____________________________________________________________________\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Reads input from user."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @return String containing full input from User"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        return (sc.nextLine());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Prints error messages"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param err String containing error message"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public void displayErrorMessage(String err) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        System.out.println(err);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Prints divider line for Duke."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public void displayDividerLine() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        System.out.println(\"____________________________________________________________________\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 61
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": " * Command to terminate Duke program."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Constructor which sets the exit condition of Duke to true."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Prints out Duke\u0027s exit message."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param tasks TaskList class object which handles operation involving ArrayList of Tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param storage Storage class object which manages storing and loading of data"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        System.out.println(\"Bob thanks you for coming! See you again soon!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 28
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": " * Abstract class representing the commands recognised by Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    protected String userInput;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Executes commands based on input to Duke."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param tasks TaskList class object which handles operation involving ArrayList of Tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param storage Storage class object which manages storing and loading of data"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @throws DukeException If there are errors with the input or errors when executing the command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    abstract public void execute(TaskList tasks, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Returns the exit signal of the program."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @return True if exit command is given"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 32
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.exception.MissingTaskException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.exception.MissingDeadlineDateException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": " * Command to add Deadline task into Duke."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    private final String DEADLINE_COMMAND \u003d \"deadline\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Default constructor for Deadline Command"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param userInput String of full input given by user"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public DeadlineCommand(String userInput) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Processes the input and adds deadline task into TaskList object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Saves existing TaskList object into file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param tasks TaskList class object which handles operation involving ArrayList of Tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param storage Storage class object which manages storing and loading of data"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @throws MissingTaskException If deadline task description is not supplied"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @throws MissingDeadlineDateException If deadline tasks due date is not supplied"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) throws MissingTaskException, MissingDeadlineDateException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        if (!userInput.trim().equals(DEADLINE_COMMAND)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            int indexOfBy \u003d userInput.indexOf(\"/by\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            if (indexOfBy \u003d\u003d -1) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                throw new MissingDeadlineDateException(\"Please specify a deadline using \\\u0027/by\\\u0027!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            String deadlineTask \u003d userInput.substring(DEADLINE_COMMAND.length() + 1, indexOfBy - 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            String byDate \u003d userInput.substring(indexOfBy + \"/by\".length() + 1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            tasks.addDeadline(deadlineTask, byDate);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            throw new MissingTaskException(\"Deadline tasks cannot be empty!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 50
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.exception.MissingTaskNumberDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.exception.MissingTaskNumberException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": " * Command that deletes task from existing tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    private final String DELETE_COMMAND \u003d \"delete\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Default constructor for Delete Command class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param userInput String containing full input from User"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public DeleteCommand(String userInput) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Processes the input and deletes tasks in the TaskList object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Saves the TaskList object into file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param tasks TaskList class object which handles operation involving ArrayList of Tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param storage Storage class object which manages storing and loading of data"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @throws MissingTaskNumberException If specified task number does not exist on the list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @throws MissingTaskNumberDescriptionException If task number to be deleted is not specified"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) throws MissingTaskNumberException, MissingTaskNumberDescriptionException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        if (!userInput.trim().equals(DELETE_COMMAND)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            String[] words \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            int taskNum \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            if(taskNum \u003c\u003d tasks.getListSize()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                tasks.deleteTask(taskNum);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                storage.save(tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                throw new MissingTaskNumberException(\"This task number does not exist on the list!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            throw new MissingTaskNumberDescriptionException(\"Please add a task number to \\\u0027delete\\\u0027 to delete a task!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 47
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.exception.MissingTaskNumberDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.exception.MissingTaskNumberException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": " * Command to mark tasks as done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    private final String DONE_COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Default constructor for Done Command class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param userInput String containing full input from User."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public DoneCommand(String userInput) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Processes the input and marks tasks on TaskList object as done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Saves the current TaskList object into a file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param tasks TaskList class object which handles operation involving ArrayList of Tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param storage Storage class object which manages storing and loading of data"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @throws MissingTaskNumberException If specified task number does not exist on the list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @throws MissingTaskNumberDescriptionException If task number to be marked as done is not specified"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) throws MissingTaskNumberException, MissingTaskNumberDescriptionException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        if (!userInput.trim().equals(DONE_COMMAND)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            String[] words \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            int taskNum \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            int sizeOfArray \u003d tasks.getListSize();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            if (taskNum \u003c\u003d sizeOfArray) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                tasks.markDone(taskNum);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                storage.save(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                throw new MissingTaskNumberException(\"This task number does not exist on the list!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            throw new MissingTaskNumberDescriptionException(\"Please add a task number to \\\u0027done\\\u0027 to mark task as done!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 51
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.exception.MissingTaskException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.exception.MissingEventDateException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": " * Command to add Event tasks into Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    private final String EVENT_COMMAND \u003d \"event\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Default constructor for Event Command class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param userInput String containing full input from User"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public EventCommand(String userInput) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Processes input and adds Event task into TaskList object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Saves current TaskList object into a file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param tasks TaskList class object which handles operation involving ArrayList of Tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param storage Storage class object which manages storing and loading of data"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @throws MissingTaskException If task description is not specified"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @throws MissingEventDateException If specified task does not have a date/time of occurring"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) throws MissingTaskException, MissingEventDateException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        if (!userInput.trim().equals(EVENT_COMMAND)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            int indexOfAt \u003d userInput.indexOf(\"/at\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            if (indexOfAt \u003d\u003d -1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                throw new MissingEventDateException(\"Please specify the date for event using \\\u0027at\\\u0027!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            String eventTask \u003d userInput.substring(EVENT_COMMAND.length() + 1, indexOfAt - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            String atDate \u003d userInput.substring(indexOfAt + \"/at\".length() + 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            tasks.addEvent(eventTask, atDate);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            throw new MissingTaskException(\"Event tasks cannot be empty!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 47
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.exception.MissingTaskException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": " * Command for finding tasks in Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    private final String FIND_COMMAND \u003d \"find\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Default constructor for Find Command class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param userInput String containing full input from User."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public FindCommand(String userInput) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Processes input and finds the tasks in TaskList object based on input."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param tasks TaskList class object which handles operation involving ArrayList of Tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param storage Storage class object which manages storing and loading of data"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @throws MissingTaskException If there is no keyword supplied by user to search for"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) throws MissingTaskException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        if (!userInput.trim().equals(FIND_COMMAND)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            tasks.findTask(userInput.substring(FIND_COMMAND.length() + 1));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            throw new MissingTaskException(\"Please specify a word or phrase to search for!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 40
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.exception.EmptyListException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": " * Command to list all tasks in Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Lists all tasks in TaskList."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param tasks TaskList class object which handles operation involving ArrayList of Tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param storage Storage class object which manages storing and loading of data"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @throws EmptyListException If list command is supplied to an empty list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public void execute(TaskList tasks, Storage storage ) throws EmptyListException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        tasks.listTasks();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 22
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.exception.MissingTaskException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": " * Command to add Todo tasks into Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    private final String TODO_COMMAND \u003d \"todo\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Default constructor for Todo Command class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param userInput String containing full input from User"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public TodoCommand(String userInput) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Processes input and adds Todo task into TaskList object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Saves current TaskList into a file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param tasks TaskList class object which handles operation involving ArrayList of Tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param storage Storage class object which manages storing and loading of data"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @throws MissingTaskException If description of Todo task is not supplied by User"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) throws MissingTaskException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        if (!userInput.trim().equals(TODO_COMMAND)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            String todoTask \u003d userInput.substring(TODO_COMMAND.length() + 1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            tasks.addTodo(todoTask);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            throw new MissingTaskException(\"Todo tasks cannot be empty!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 45
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": " * Parent class of exceptions thrown in Duke program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": " * Exception thrown when \"list\" command is supplied but task list is empty."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class EmptyListException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    private String errorMsg;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Default constructor of EmptyListException class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param errorMsg String containing error message"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public EmptyListException(String errorMsg) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.errorMsg \u003d errorMsg;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Formats error message."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @return String containing the error message to be displayed"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        return String.format(\"Sorry! %s\", this.errorMsg);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 26
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingDeadlineDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": " * Exception thrown when \"/by\" date and time is not specified."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class MissingDeadlineDateException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    private String errorMsg;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Default constructor for MissingDeadlineDateException class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param errorMsg String containing error message"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public MissingDeadlineDateException(String errorMsg) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.errorMsg \u003d errorMsg;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Formats error message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @return String containing error message to be displayed"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        return String.format(\"Sorry! %s\", this.errorMsg);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 26
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingEventDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": " * Exception thrown when \"/at\" date and time is not specified in Event task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class MissingEventDateException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    private String errorMsg;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Default constructor for MissingEventDateException class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param errorMsg String containing error message"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public MissingEventDateException(String errorMsg) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.errorMsg \u003d errorMsg;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Formats the error message."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @return String containing the error message to be displayed"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        return String.format(\"Sorry! %s\", this.errorMsg);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 26
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": " * Exception thrown when task description is not supplied."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class MissingTaskException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    private String errorMsg;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Default constructor for MissingTaskException class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param errorMsg String containing error message"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public MissingTaskException(String errorMsg) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.errorMsg \u003d errorMsg;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Formats error message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @return String containing error message to be displayed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        return String.format(\"Sorry! %s\", this.errorMsg);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 28
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingTaskNumberDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": " * Exception thrown when task number is not specified to \"done\", \"delete\" or \"find\" command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class MissingTaskNumberDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    private String errorMsg;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Default constructor for MissingTaskNumberDescriptionException class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param errorMsg String containing error message"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public MissingTaskNumberDescriptionException(String errorMsg) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.errorMsg \u003d errorMsg;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Formats error message."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @return String containing the error message to be displayed"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        return String.format(\"Sorry! %s\", this.errorMsg);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 26
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingTaskNumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": " * Exception thrown when no task number is supplied to \"Find\", \"Delete\" and \"Done\" command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class MissingTaskNumberException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    private String errorMsg;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Default constructor for MissingTaskNumberException class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param errorMsg String containing error message"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public MissingTaskNumberException(String errorMsg) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.errorMsg \u003d errorMsg;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Formats error message."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @return String containing the error message to be displayed"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        return String.format(\"Sorry! %s\", this.errorMsg);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 26
    }
  },
  {
    "path": "src/main/java/duke/exception/UnknownInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": " * Exception thrown when an unknown input is given to Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class UnknownInputException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    private String errorMsg;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Default constructor for UnknownInputException."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param errorMsg String containing error message"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public UnknownInputException(String errorMsg) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.errorMsg \u003d errorMsg;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Formats error message."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @return String containing the error message to be displayed"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        return String.format(\"Sorry! %s\", this.errorMsg);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 26
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": " * Class representing Deadline task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Default constructor for Deadline class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param description String containing the description of deadline task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param by String containing date and time when deadline task is due"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Formats deadline task into a string."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @return String indicating deadline task, description of deadline task and date/time of deadline"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 31
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": " * Class representing Event task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Default constructor for event class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param description String containing description of event task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param at String containing date and time when event will occur"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Formats event task into a string."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @return String containing an indication of Event task, description of event task and date/time of event"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 32
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": " * Abstract class representing Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Default constructor for abstract class Task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param description String containing the description of task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Returns a unicode symbol depending on whether task is done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @return Tick mark if it is done. Cross if it is not done"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            return (\"[\" + \"\\u2713\" + \"] \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            return (\"[\" + \"\\u2718\" + \"] \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Formats tasks into a string."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @return String containing the status of task and description of task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        return getStatusIcon() + description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Marks task as done by setting isDone variable to true."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 51
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": " * Class representing a todo object."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Default constructor for todo class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @param description Description of todo task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * Formats todo task into a string."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     * @return String containing an indication of todo task and description of todo"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jichngan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 25
    }
  }
]

[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jichngan"
        },
        "content": "duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jichngan"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "jichngan": 2
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.command.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.command.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.command.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.command.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import duke.exception.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public static final String DIVIDER \u003d \"_________________________________________________\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public static final String DONE_COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public static final String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public static final String TODO_COMMAND \u003d \"todo\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public static final String EVENT_COMMAND \u003d \"event\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public static final String DEADLINE_COMMAND \u003d \"deadline\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public static final String END_COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public static final String END_MESSAGE \u003d \"Bob thanks you for coming! See you again soon!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public static void printIndividualTask(Task[] tasks, int taskNum) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        if (tasks[taskNum - 1].getTaskDescription().equals(TODO_COMMAND)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            System.out.println(\"Got it! You\u0027ve added a todo task: \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            System.out.println(tasks[taskNum - 1]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            System.out.println(taskValidator(taskNum));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } else if (tasks[taskNum - 1].getTaskDescription().equals(DEADLINE_COMMAND)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            System.out.println(\"Got it! You\u0027ve added a deadline task: \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            System.out.println(tasks[taskNum - 1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            System.out.println(taskValidator(taskNum));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } else if (tasks[taskNum - 1].getTaskDescription().equals(EVENT_COMMAND)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            System.out.println(\"Got it! You\u0027ve added an event task: \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            System.out.println(tasks[taskNum - 1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            System.out.println(taskValidator(taskNum));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public static void printTaskList(Task[] tasks) throws EmptyListException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        int sizeofArray \u003d getArraySize(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        if (sizeofArray !\u003d 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            System.out.println(\"Here are the tasks on your list: \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            for (int i \u003d 1; i \u003c sizeofArray + 1; i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                String taskNum \u003d Integer.toString(i);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                System.out.println(taskNum + \".\" + tasks[i - 1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            throw new EmptyListException(\"There are no tasks in the list! Please add some tasks!\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public static int getArraySize(Task[] tasks) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        int sizeOfArray \u003d 0;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.length; i++) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            if (tasks[i] !\u003d null) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                sizeOfArray++;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                return sizeOfArray;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        return sizeOfArray;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public static void executeDoneTask(Task[] tasks, String userInput) throws MissingTaskNumberException, MissingTaskNumberDescriptionException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        if (!userInput.trim().equals(DONE_COMMAND)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            String[] words \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            int taskNum \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            int sizeOfArray \u003d getArraySize(tasks);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            if (taskNum \u003c\u003d sizeOfArray) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                tasks[taskNum - 1].markAsDone();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                System.out.println(\"Awesome! I\u0027ve marked the following task as done:\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                System.out.println(tasks[taskNum - 1]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                throw new MissingTaskNumberException(\"This task number does not exist on the list!\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            throw new MissingTaskNumberDescriptionException(\"Please add a task number to \\\u0027done\\\u0027 to mark task as done!\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public static String taskValidator(int numTasks) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        String totalTasks \u003d Integer.toString(numTasks);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        if (numTasks \u003c\u003d 1) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            return \"You now have \" + totalTasks + \" task in the list!\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            return \"You now have \" + totalTasks+ \" tasks in the list!\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public static void executeToDo(Task[] tasks, String userInput) throws MissingTaskException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        if (!userInput.trim().equals(TODO_COMMAND)) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            String todoTask \u003d userInput.substring(TODO_COMMAND.length() + 1);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            Task todo \u003d new Todo(todoTask);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            tasks[todo.getTotalTasks()-1] \u003d todo;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            printIndividualTask(tasks,todo.getTotalTasks());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            throw new MissingTaskException(\"Todo tasks cannot be empty!\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public static void executeEvent(Task[] tasks, String userInput) throws MissingTaskException, MissingEventDateException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        if (!userInput.trim().equals(EVENT_COMMAND)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            int indexOfAt \u003d userInput.indexOf(\"/at\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            if (indexOfAt \u003d\u003d -1) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                throw new MissingEventDateException(\"Please specify the date for event using \\\u0027at\\\u0027!\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            String eventTask \u003d userInput.substring(EVENT_COMMAND.length() + 1, indexOfAt - 1);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            String atDate \u003d userInput.substring(indexOfAt + \"/at\".length() + 1);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            Task event \u003d new Event(eventTask, atDate);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            tasks[event.getTotalTasks()-1] \u003d event;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            printIndividualTask(tasks,event.getTotalTasks());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            throw new MissingTaskException(\"Event tasks cannot be empty!\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public static void executeDeadline(Task[] tasks, String userInput) throws MissingTaskException, MissingDeadlineDateException {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        if (!userInput.trim().equals(DEADLINE_COMMAND)) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            int indexOfBy \u003d userInput.indexOf(\"/by\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            if (indexOfBy \u003d\u003d -1) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                throw new MissingDeadlineDateException(\"Please specify a deadline using \\\u0027/by\\\u0027!\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            String deadlineTask \u003d userInput.substring(DEADLINE_COMMAND.length() + 1, indexOfBy - 1);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            String byDate \u003d userInput.substring(indexOfBy + \"/by\".length() + 1);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            Task deadline \u003d new Deadline(deadlineTask, byDate);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            tasks[deadline.getTotalTasks()-1] \u003d deadline;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            printIndividualTask(tasks,deadline.getTotalTasks());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            throw new MissingTaskException(\"Deadline tasks cannot be empty!\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public static void getExecuteCommand(Task[] tasks, String userInput) throws UnknownInputException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        String[] words \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        if (words[0].equals(TODO_COMMAND)) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                executeToDo(tasks, userInput);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            } catch (DukeException err) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                System.out.println(err.toString());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } else if (words[0].equals(DEADLINE_COMMAND)) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                executeDeadline(tasks, userInput);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            } catch (DukeException err) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                System.out.println(err.toString());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } else if (words[0].equals(EVENT_COMMAND)) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                executeEvent(tasks, userInput);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            } catch (DukeException err) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                System.out.println(err.toString());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } else if (words[0].equals(DONE_COMMAND)) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                executeDoneTask(tasks, userInput);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            } catch (DukeException err) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                System.out.println(err.toString());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } else if (words[0].equals(LIST_COMMAND)) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                printTaskList(tasks);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            } catch (DukeException err) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                System.out.println(err.toString());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            throw new UnknownInputException(\"There is no such input!\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public static void initialisation() {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        String logo \u003d \".______     ______   .______   \\n\""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                + \"|   _  \\\\   /  __  \\\\  |   _  \\\\  \\n\""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                + \"|  |_)  | |  |  |  | |  |_)  | \\n\""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                + \"|   _  \u003c  |  |  |  | |   _  \u003c  \\n\""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                + \"|  |_)  | |  `--\u0027  | |  |_)  | \\n\""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                + \"|______/   \\\\______/  |______/  \\n\";"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        String welcomeMessage \u003d \"Hello human! I am Bob.\\n\" + \"What can I do for you?\";"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        System.out.println(\"Bob the chatbot\\n\" + logo);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        System.out.println(welcomeMessage);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        initialisation();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        Scanner command \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        Task[] tasks \u003d new Task[100];"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            String userInput \u003d command.nextLine();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            if (userInput.equals(END_COMMAND)) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                System.out.println(END_MESSAGE);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                    getExecuteCommand(tasks, userInput);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                } catch (DukeException err) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                    System.out.println(err.toString());"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jichngan"
        },
        "content": "                System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 209,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/command/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.taskDescription \u003d \"deadline\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 17
    }
  },
  {
    "path": "src/main/java/duke/command/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.taskDescription \u003d \"event\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 19
    }
  },
  {
    "path": "src/main/java/duke/command/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    protected static int totalTasks \u003d 0;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    protected String taskDescription;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        taskDescription \u003d \"task\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        totalTasks++;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            return (\"[\" + \"\\u2713\" + \"] \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jichngan"
        },
        "content": "            return (\"[\" + \"\\u2718\" + \"] \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        return getStatusIcon() + description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public int getTotalTasks() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        return totalTasks;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public String getTaskDescription() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        return taskDescription;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 43
    }
  },
  {
    "path": "src/main/java/duke/command/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.taskDescription \u003d \"todo\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 15
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 5
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class EmptyListException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    private String errorMsg;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public EmptyListException(String errorMsg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.errorMsg \u003d errorMsg;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        return String.format(\"Sorry! %s\", this.errorMsg);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingDeadlineDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class MissingDeadlineDateException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    private String errorMsg;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public MissingDeadlineDateException(String errorMsg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.errorMsg \u003d errorMsg;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        return String.format(\"Sorry! %s\", this.errorMsg);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingEventDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class MissingEventDateException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    private String errorMsg;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public MissingEventDateException(String errorMsg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.errorMsg \u003d errorMsg;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        return String.format(\"Sorry! %s\", this.errorMsg);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class MissingTaskException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    private String errorMsg;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public MissingTaskException(String errorMsg) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.errorMsg \u003d errorMsg;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        return String.format(\"Sorry! %s\", this.errorMsg);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 17
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingTaskNumberDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class MissingTaskNumberDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    private String errorMsg;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public MissingTaskNumberDescriptionException(String errorMsg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.errorMsg \u003d errorMsg;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        return String.format(\"Sorry! %s\", this.errorMsg);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingTaskNumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class MissingTaskNumberException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    private String errorMsg;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public MissingTaskNumberException(String errorMsg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.errorMsg \u003d errorMsg;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        return String.format(\"Sorry! %s\", this.errorMsg);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/UnknownInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jichngan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jichngan"
        },
        "content": "public class UnknownInputException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    private String errorMsg;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public UnknownInputException(String errorMsg) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        this.errorMsg \u003d errorMsg;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jichngan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jichngan"
        },
        "content": "        return String.format(\"Sorry! %s\", this.errorMsg);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jichngan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jichngan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jichngan": 15
    }
  }
]

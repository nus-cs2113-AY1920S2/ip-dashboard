[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "# [Project Hiroshi](https://github.com/alaukiknpant/duke) - User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "By: `Alaukik Nath Pant`      Since: `Feb 2020`      Licence: `MIT`      Course: `CS2113`"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Hiroshi Nagai Task Tracker(HNTT) is for those who *prefer to use a desktop app for managing their tasks*."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "It is worth noting that HNTT is *optimized for those who prefer to work with a Command Line Interface* (CLI)."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "It helps you save todos, events and deadlines."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "*  Ensure you have Java `11` or above installed in your Computer."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "*  Download the latest `hiroshi.jar` [latest reslease here!](https://github.com/alaukiknpant/duke/releases/tag/v0.2)."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "*  Copy the file to the folder you want to use as the home folder for your Task tracker."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "*  Go to the directory where the Jar file is stored and type: `java -jar Hiroshi.jar`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* When the application executes, all possible commands that can help you manage your tasks are shown."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "*Some example commands you can try:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    * **`list`** : lists all tasks that have been added and saved. until now"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    * **`todo`**`finish all your Computer Science homework` : adds a todo task with the corresponding description to the Task List."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    * **`delete`**`1` : deletes the 1st item in your current task list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    * **`bye`** : exits the app"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "### Command Format"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* The words in `UPPER_CASE` are to be supplied by the user e.g. in `todo TASK`, `TASK` is a parameter which can be used to add a task `todo Go Running`."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* The date for tasks of type `deadline` and `event` are labelled as `DATE`, which is of the format `YYYY-MM-DD`: `deadline TASK \\by DATE`, `event TASK \\at DATE`."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* The `TASK_NUMBER` is the interger index of a task in the tasklist and is of the format `delete TASKNUMBER`, `done TASK_NUMBER`."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* The `KEY_WORD` is the string that you are searching for in the task list.`find food`, `find homework`."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* The `TASK_NUMBER` refers to the index number shown in the displayed task list. Remember that the index *must be a positive integer* 1, 2, 3, ..."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "#### Adding a todo task : `todo`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Adds a todo task to the tasklist "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Format: `todo TASK`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "A todo task just needs to be a string but cannot be empty."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    todo eat"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    Got it. I have added this task: "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    [T] [âœ˜] eat"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    Now you have 2 item/s in the list`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "****"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "#### Adding a deadline task: `deadline `"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Adds a dedline to the tasklist "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Format: `deadline TASK /by DATE`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "A deadline task must necessarily have a date mentioned."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    deadline eat /by 2019-01-02"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Expected Outcome"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    Got it. I have added this task: "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    [D] [âœ˜] eat (by: Jan 2 2019)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    Now you have 3 item/s in the list"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "****"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "#### Adding an `event` task: `event `"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Adds a event to the tasklist"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Format: `event TASK /at DATE`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "A event task must necessarily have a date mentioned."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    event eat /at 2019-01-05"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    Got it. I have added this task: "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    [E] [âœ˜] eat (at: Jan 5 2019)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    Now you have 3 item/s in the list "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "****"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "#### Deleting a task : `delete`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Deletes the task at the specified `TASK_NUMBER`. "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* When a task is deleted, all subsequest tasks in the task list will have their index reduced by 1."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Format: `delete TASK_NUMBER`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     delete 2"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Expected Outcome"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    Cool, we will remove the following task:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    [D] [âœ˜] eat (by: Jan 2 2019)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    Now you have 2 items in your list"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "****"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "#### Listing all tasks in the tasklist : `list`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Shows a list of all tasks in tasklist."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Format: `list`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    list"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    1. [T] [âœ˜] eat"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    2. [E] [âœ˜] eat (at: Jan 5 2019)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "****"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "#### Marking a task as done : `done`"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Marks the task at the specified `TASK_NUMBER` as done. The task number refers to the index number shown in the displayed task list. Remember that the index *must be a positive integer* 1, 2, 3, ..."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* If a task is already marked as done, the app remarks it as done again."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Format: `done TASK_NUMBER`"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    done 2"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    2. [E][âœ“] eat (at: Jan 5 2019)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    Done! We have checked 2!"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "****"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "#### Locating a task by key word: `find`"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Finds tasks whose description contains a specified keyword. The search is case sensitive. e.g `run` will not match `Run`"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Format: `find KEYWORD`"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    find eat "
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    1. [T] [âœ˜] eat"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    2. [E] [âœ“] eat (at: Jan 5 2019)"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    "
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    There were 2 tasks with the \"eat\" keyword"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "****"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "#### Clearing the task list : `clear`"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Clears all the tasks in task list. "
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Format: `clear`"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    clear"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Expected Ourcome:"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    TaskList is now Empty"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "****"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "#### Exiting the program : `bye`"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Exits the program. "
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* Format: `bye`"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* `bye` "
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Expected Ourcome:"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    "
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    ****--****--****--****--****--****--****--****--****--****--****--****--****--***"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "****"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "*Q*: How do I transfer my data to another Computer? +"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "*A*: Copy the text file called \"files\" that has saved your task list into the directory from which you will run the application in your new computer. You are then set to go!"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* *Todo*  : `todo TASK`; "
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "e.g. `todo Run beside Clementi Park.`"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* *Deadline* : `deadline TASK /by DATE`;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "eg. `deadline Problem Set 2 \\by 2020-01-02`"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* *Event* : `event TASK /at DATE`;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "eg. `event Marathon \\at 2020-01-01`"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* *List* : `list`"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* *Done* : `done TASK_NUMBER`;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "eg. `done 2`"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* *Delete* : `delete TASK_NUMBER`;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "e.g. `delete 3`"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* *Find* : `find KEYWORD`;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "e.g. `find eat`"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* *Clear* : `clear`"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "* *Exit* : `bye`"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "## Acknowledgement"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "My UserGuide has been heavily inspired by the superb format of the AddressBook user guide that we were given access to for this course."
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 218,
      "-": 10
    }
  },
  {
    "path": "files/TaskList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "[D] | âœ˜ | eat (by: Jan 1 2010) | 2010-01-01"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "[T] | âœ˜ | run"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 2
    }
  },
  {
    "path": "src/main/java/hiroshi/Hiroshi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package hiroshi;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.commands.Commands;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.commands.RunCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.parser.Parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " * \u003ch1\u003eHiroshi Nagai Task Tracker Chatbot\u003c/h1\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " * Entry point of the \"Hiroshi Nagai\" Task Tracker application."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " * Initializes the application and starts the interaction with the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " * \u003cb\u003eNote:\u003c/b\u003e This application is written for CS2113 at the NUS School of computing."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " * @author  Alaukik Nath Pant"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " * @since   2020-02-24"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class Hiroshi {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Version info of the program. */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static final String VERSION \u003d \"Hiroshi Nagai - Version 2.0\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Constructor that runs the program."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param filePath String that represents the relative path to the file that stores all the tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public Hiroshi(String filePath ) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        this.run(TaskList.taskList, filePath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Gets the program started by creating a tasklist with the tasks given in the file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Reads the user command and executes it, until the user issues the exit(\"bye\") command."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskList List that stores the tasks mentioned until now."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param filePath String that represents the relative path to the file that stores all the tasks."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public void run(ArrayList\u003cTask\u003e taskList, String filePath) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        while (!isExit){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String command \u003d Ui.readCommand();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            RunCommand c \u003d new RunCommand(command, taskList, filePath);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            c.execute(Commands.finalCommand, taskList, filePath);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            isExit \u003d c.isExit(Commands.finalCommand);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Ui.printStraightLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Ui.showByeMessage();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String filePath \u003d Parser.returnFilePath(\"files/TaskList.txt\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        new Hiroshi(filePath);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "       }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 64
    }
  },
  {
    "path": "src/main/java/hiroshi/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package hiroshi.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasklist.AddTasks;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Represents command that is used to call a method to add tasks to taskList. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class AddCommand extends Commands {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public AddCommand(String command, ArrayList\u003cTask\u003e taskList, String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super(command, taskList,filePath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Calls a method to add tasks to taskList and prints the revalent message about the task that has been added."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskList List that stores the tasks mentioned until now."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param ogString Original command that was fed to the user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskType The type of the task to be added, eg: Todo, Event, Deadline."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(ArrayList\u003cTask\u003e taskList, String ogString, String taskType) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                AddTasks.execute(taskList, ogString, taskType);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Ui.printAddedStatement(taskList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            } catch (java.time.format.DateTimeParseException ex) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Ui.markDateTimeException();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Ui.markAsIncorrectFormat();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 35
    }
  },
  {
    "path": "src/main/java/hiroshi/commands/ClearCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package hiroshi.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasklist.ClearTasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Represents command that is used to call a method to clear all tasks from taskList. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class ClearCommand extends Commands{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public ClearCommand(String command, ArrayList\u003cTask\u003e taskList, String taskType) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super(command, taskList,taskType);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Calls a method to clear all tasks from a taskList."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskList List that stores the tasks mentioned until now."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param ogString Original command that was fed to the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(ArrayList\u003cTask\u003e taskList, String ogString) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (Parser.isClearStatementCorrect(ogString)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            ClearTasks.execute(taskList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            System.out.println(\"TaskList is now Empty\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Ui.printStraightLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 30
    }
  },
  {
    "path": "src/main/java/hiroshi/commands/Commands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package hiroshi.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.storage.Storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Represents a command, the taskList associated with the program and the path of the file that the command will"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " * eventually influence,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public abstract class Commands {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static String finalCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Initializes the class variables."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param command Command inputted by the user"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskList List that stores the tasks mentioned until now."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param filePath String that represents the relative path to the file that stores all the tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public Commands(String command, ArrayList\u003cTask\u003e taskList, String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        finalCommand \u003d command.trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public Boolean isExit(String command) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String ogString \u003d command.trim();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Boolean yesExit \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (ogString.toUpperCase().equals(\"BYE\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            yesExit \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Storage.saveTaskList(filePath, taskList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return yesExit;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public void execute(String command, ArrayList\u003cTask\u003e taskList, String filePath){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 40
    }
  },
  {
    "path": "src/main/java/hiroshi/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package hiroshi.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasklist.DeleteTasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class DeleteCommand extends Commands {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Represents command that is used to call a method to delete tasks to taskList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param command Command that user inputs."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskList Tasklist of all available tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskType Type of task, eg event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public DeleteCommand(String command, ArrayList\u003cTask\u003e taskList, String taskType) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super(command, taskList,taskType);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Calls a method to delete a task from the taskList."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskList List that stores the tasks mentioned until now."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param ogString Original command that was fed to the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(ArrayList\u003cTask\u003e taskList, String ogString) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (Parser.isDeleteStatementCorrect(ogString, taskList)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Ui.printStraightLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            DeleteTasks.execute(taskList, ogString);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Ui.printStraightLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 35
    }
  },
  {
    "path": "src/main/java/hiroshi/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package hiroshi.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasklist.MarkTaskAsDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " * Represents a class that calls a method to mark a given task as done."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class DoneCommand extends Commands {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public DoneCommand(String command, ArrayList\u003cTask\u003e taskList, String taskType) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super(command, taskList,taskType);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Calls a method to add tasks to check if the format of the done command is correct and marks a given task as done."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskList List that stores the tasks mentioned until now."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param ogString Original command that was fed to the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(ArrayList\u003cTask\u003e taskList, String ogString) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (Parser.isDoneStatementCorrect(ogString, taskList)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            MarkTaskAsDone.execute(taskList, ogString);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Ui.printStraightLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 31
    }
  },
  {
    "path": "src/main/java/hiroshi/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package hiroshi.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasklist.FindTaskFromTaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Represents command that is used to find a method in a taskList. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class FindCommand extends Commands {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public FindCommand(String command, ArrayList\u003cTask\u003e taskList, String taskType) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super(command, taskList,taskType);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(ArrayList\u003cTask\u003e taskList, String ogString) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (Parser.isFindStatementCorrect(ogString)) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            FindTaskFromTaskList.execute(taskList, ogString);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 21
    }
  },
  {
    "path": "src/main/java/hiroshi/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package hiroshi.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasklist.PrintTaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Represents command that is used to call a method to print tasks from the taskList. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class ListCommand extends Commands {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public ListCommand(String command, ArrayList\u003cTask\u003e taskList, String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super(command, taskList,filePath);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Calls a method to print tasks from the taskList."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskList List that stores the tasks mentioned until now."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param ogString Original command that was fed to the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(ArrayList\u003cTask\u003e taskList, String ogString) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (Parser.isListStatementCorrect(ogString)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            PrintTaskList.execute(taskList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Ui.printStraightLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 29
    }
  },
  {
    "path": "src/main/java/hiroshi/commands/RunCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package hiroshi.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.common.Utils;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Represents a subclass of Command, RunCommand, that can execute the program based on the command of the user */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class RunCommand extends Commands {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public RunCommand(String command, ArrayList\u003cTask\u003e taskList, String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super(command, taskList,filePath);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Reads what type of task if given and calls the required method accordingly."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param command  Line that represents the task that is supposed to marked as done."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskList Tasklist of  all available tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public void execute(String command, ArrayList\u003cTask\u003e taskList, String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String taskType \u003d Parser.returnTaskType(finalCommand);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (!Utils.checkIfValidTask(taskType)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Ui.markAsIncorrectFormat();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            executeCommands(taskList, command, taskType);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Calls different methods to do the required tasks"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskList TaskList of all available tasks."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param ogString Original string that is inputted by the user using the command line."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskType event Type, meaning the nature of the command (eg. LIST, DEADLINE)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void executeCommands(ArrayList\u003cTask\u003e taskList, String ogString, String taskType) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            DoneCommand.execute(taskList, ogString);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            ListCommand.execute(taskList, ogString);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            DeleteCommand.execute(taskList, ogString);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        case \"clear\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            ClearCommand.execute(taskList, ogString);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            FindCommand.execute(taskList, ogString);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            AddCommand.execute(taskList, ogString, taskType);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 63
    }
  },
  {
    "path": "src/main/java/hiroshi/common/Utils.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package hiroshi.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Utility methods that are used in the Command Line Application*/"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class Utils {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Checks if the given task is valid"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param type Type of task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @return Boolean that checks if the task type is valid"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static Boolean checkIfValidTask(String type) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String LISTE \u003d \"list\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String CLEAR \u003d \"clear\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String FIND \u003d \"find\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (type.equals(DONE) || type.equals(TODO) || type.equals(DEADLINE) || type.equals(FIND)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                || type.equals(EVENT) || type.equals(LISTE) || type.equals(DELETE) || type.equals(BYE) || type.equals(CLEAR)){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 28
    }
  },
  {
    "path": "src/main/java/hiroshi/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package hiroshi.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " * Parses user input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Retutns the type of task, eg. event or deadline, given the user command"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param line Original command that was fed to the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static String returnTaskType(String line){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String[] words \u003d line.split(\" \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String taskType \u003d words[0].trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static Boolean isFindStatementCorrect (String ogString){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String[] wordss \u003d ogString.split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        int LENG_DONE_STATEMENT \u003d wordss.length;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (LENG_DONE_STATEMENT !\u003d 2) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Ui.markIncorrectFindStatement();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Checks if Clear Statement is correct"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param ogString Original command that was fed to the user."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @return isClear Returns if clear command is in correct format."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static Boolean isClearStatementCorrect (String ogString){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Boolean isClear;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String[] wordss \u003d ogString.split(\" \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        int LENG_DONE_STATEMENT \u003d wordss.length;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (LENG_DONE_STATEMENT !\u003d 1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Ui.markIncorrectClearStatement();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            isClear \u003d false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            isClear \u003d true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return isClear;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Checks if List Statement is correct"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param ogString Original command that was fed to the user."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @return Returns a true value if the List statement is correct."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static Boolean isListStatementCorrect (String ogString){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String[] wordss \u003d ogString.split(\" \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        int LENG_DONE_STATEMENT \u003d wordss.length;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (LENG_DONE_STATEMENT !\u003d 1) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Ui.markIncorrectListStatement();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static String findKeyWord(String ogString){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String[] wordss \u003d ogString.split(\" \");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String KEY_WORD \u003d wordss[1].trim();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return KEY_WORD;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Checks if delete Statement is correct"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param ogString Original command that was fed to the user."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskList List that stores the tasks mentioned until now."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @return Returns a true value if the Delete statement is correct."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static Boolean isDeleteStatementCorrect(String ogString, ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String[] words \u003d ogString.split(\" \");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        int LENG_DELETE_STATEMENT \u003d words.length;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Boolean isCorrect \u003d false;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (LENG_DELETE_STATEMENT !\u003d 2) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Ui.markIncorrectDeleteStatement();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            isCorrect \u003d false;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            return isCorrect;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                int IDX_WORDS \u003d Integer.parseInt(words[1]) - 1;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                if (IDX_WORDS \u003c 0 || IDX_WORDS \u003e taskList.size() - 1) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    Ui.markDeleteStatementOutOfBounds();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    isCorrect \u003d false;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    return isCorrect;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    isCorrect \u003d true;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    return isCorrect;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Ui.markDeleteStatementAsNonInt();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return isCorrect;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Returns a boolean if a given task is marked as done"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param ogString  Line that represents the task that is supposed to marked as done."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskList TaskList of all available tasks."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @return isDone Is the task marked as Done."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static Boolean isDoneStatementCorrect(String ogString, ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String[] words \u003d ogString.split(\" \");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        int LENG_DONE_STATEMENT \u003d words.length;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Boolean isCorrect \u003d false;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (LENG_DONE_STATEMENT !\u003d 2) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Ui.markIncorrectDoneStatement();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            isCorrect \u003d false;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            return isCorrect;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                int IDX_WORDS \u003d Integer.parseInt(words[1]) - 1;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                if (IDX_WORDS \u003c 0 || IDX_WORDS \u003e taskList.size() - 1) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    Ui.markDoneStatementOutOfBounds();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    isCorrect \u003d false;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    return isCorrect;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    isCorrect \u003d true;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    return isCorrect;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Ui.markDoneStatementAsNonInt();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return isCorrect;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Returns the description of the task in the required format"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param line Line that represents the task that is supposed to marked as done."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param type  Type of subclass of task."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @return description Description of the task in the required format."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static String[] returnStringToAdd(String line, String type) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String[] arrOfStr \u003d line.trim().split(type);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            return arrOfStr;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String preposition;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String splitter;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                preposition \u003d \"by: \";"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                splitter \u003d \"/by\";"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                preposition \u003d \"at: \";"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                splitter \u003d \"/at\";"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String[] arrOfStr \u003d line.split(splitter);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String[] toReturn \u003d new String[2];"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String[] todo \u003d arrOfStr[0].split(type);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String taskDescritpion \u003d (todo[1].substring(1, todo[1].length()));       // task"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String date \u003d arrOfStr[1].substring(1, arrOfStr[1].length()); // date"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            LocalDate d1 \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String dateFormatted \u003d d1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            taskDescritpion \u003d taskDescritpion + \"(\" + preposition + dateFormatted + \")\";"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            toReturn[0] \u003d taskDescritpion;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            toReturn[1] \u003d date;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            return toReturn;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Returns the desctipton of a given task that is to be added to the Tasklist."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param t Task that is taken into consideration."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param description Description og task."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param typeIcon Icon of the Task t."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param statusIcon Status Icon representing if the task is done."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @return stringToAdd String that is added to the description of the Task in the TaskList"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static String returnDescription(Task t, String description, String typeIcon, String statusIcon) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String stringToAdd;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (typeIcon.equals(\"[T]\")){"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            stringToAdd \u003d typeIcon + \" | \" + statusIcon + \" | \" + description;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } else if(typeIcon.equals(\"[D]\")) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Deadline d \u003d (Deadline) t;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String date \u003d d.returnDate().toString();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            stringToAdd \u003d typeIcon + \" | \" + statusIcon + \" | \" + description + \" | \" + date;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Event d \u003d (Event) t;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String date \u003d d.returnDate().toString();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            stringToAdd \u003d typeIcon + \" | \" + statusIcon + \" | \" + description + \" | \" + date;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return stringToAdd;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static String returnFilePath(String defaultFilePath){"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String curFilePath \u003d defaultFilePath;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        File curDir \u003d new File(curFilePath);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        boolean exists \u003d curDir.exists();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (!exists){"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            final String NEW_FILE_PATH \u003d System.getProperty(\"user.dir\") + \"/files\";"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            curFilePath \u003d NEW_FILE_PATH;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return curFilePath;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 210
    }
  },
  {
    "path": "src/main/java/hiroshi/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package hiroshi.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasklist.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasks.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.parser.Parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Represents the file used to store TaskList data."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param filePath String that represents the relative path to the file that stores all the tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public Storage(String filePath){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        createTaskList(filePath, TaskList.taskList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Given the checked or crossed Icon, returns a Bool value */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static Boolean convertMarkToBool(String mark){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (mark.equals(\"\\u2713\")){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Creates a taskList at the begenning og the program */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static ArrayList\u003cTask\u003e createTaskList(String filepathe, ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            File f \u003d new File(filepathe);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                String ogString \u003d s.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                String[] words \u003d ogString.split(\" \\\\| \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                String taskType \u003d words[0];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                String mark \u003d words[1];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                String description \u003d words[2];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Boolean isTaskDone \u003d convertMarkToBool(mark);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                if (taskType.equals(\"[T]\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    Todo t \u003d new Todo(description);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    t.isDone \u003d isTaskDone;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    taskList.add(t);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    if (taskType.equals(\"[E]\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                        String date \u003d words[3].trim();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                        LocalDate AT \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                        Event t \u003d new Event(description, AT);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                        t.isDone \u003d isTaskDone;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                        taskList.add(t);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                        String date \u003d words[3].trim();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                        LocalDate BY \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                        Deadline t \u003d new Deadline(description, BY);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                        t.isDone \u003d isTaskDone;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                        taskList.add(t);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } catch(Exception e){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            taskList.clear();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Ui.markLoadingError();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Saves the taskList at the termination of the the program"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param filePath String that represents the relative path to the file that stores all the tasks."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskList List of all tasks saved."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void saveTaskList(String filePath, ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Task t \u003d taskList.get(i);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                String description \u003d t.getDescription();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                String typeIcon \u003d t.getTypeIcon();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                String statusIcon \u003d t.getStatusIcon();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                String stringToAdd \u003d Parser.returnDescription(t, description, typeIcon, statusIcon);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                if (i \u003d\u003d 0){"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    fw.write(stringToAdd);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    fw.write(\"\\n\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    fw.close();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    fw.write(stringToAdd);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    fw.write(\"\\n\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    fw.close();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        catch(IOException e){"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            //We do not need tp fill this part because we hardcode the known relative path  of the file where the data is saved"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 107
    }
  },
  {
    "path": "src/main/java/hiroshi/tasklist/AddTasks.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package hiroshi.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.parser.Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " * Represents a class that adds a task to the taskList."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class AddTasks extends TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public AddTasks() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Method used to add tasks to taskList."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskList List that stores the tasks mentioned until now."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param ogString Original command that was fed to the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskType The type of the task to be added, eg: Todo, Event, Deadline."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(ArrayList\u003cTask\u003e taskList, String ogString, String taskType) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String[] taskDetails \u003d Parser.returnStringToAdd(ogString, taskType);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (taskType.equals(\"todo\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String description \u003d taskDetails[1];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Todo e \u003d new Todo(description.trim());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            taskList.add(e);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String description \u003d taskDetails[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String date \u003d taskDetails[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            LocalDate dateTask \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            if (taskType.equals(\"event\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Event t \u003d new Event(description, dateTask);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                taskList.add(t);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Deadline t \u003d new Deadline(description, dateTask);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                taskList.add(t);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 45
    }
  },
  {
    "path": "src/main/java/hiroshi/tasklist/ClearTasks.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package hiroshi.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " * Represents a class that clears all tasks from the taskList."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class ClearTasks extends TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public ClearTasks(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Method used to clear tasks from taskList."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskList List that stores the tasks mentioned until now."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(ArrayList\u003cTask\u003e taskList){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        taskList.clear();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 23
    }
  },
  {
    "path": "src/main/java/hiroshi/tasklist/DeleteTasks.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package hiroshi.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Represents command that is used to call a method to delete tasks to taskList. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class DeleteTasks extends TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public DeleteTasks(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Deletes the task at index taskNumber from the tasklist"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskList List that stores the tasks mentioned until now."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param ogString Original command that was fed to the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(ArrayList\u003cTask\u003e taskList, String ogString) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String[] words \u003d ogString.split(\" \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(words[1].trim()) - 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Task task \u003d taskList.get(taskNumber);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String description \u003d task.getDescription();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String statusIcon \u003d task.getStatusIcon();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String typeIcon \u003d task.getTypeIcon();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Cool, we will remove the following task:\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(typeIcon + \" [\" + statusIcon + \"] \" + description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        taskList.remove(taskNumber);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Now you have \" + Integer.toString(taskList.size()) + \" items in your list\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 32
    }
  },
  {
    "path": "src/main/java/hiroshi/tasklist/FindTaskFromTaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package hiroshi.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class FindTaskFromTaskList extends TaskList{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public FindTaskFromTaskList(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Print all available tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskList Tasklist of all available tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param ogString Original command that was fed to the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(ArrayList\u003cTask\u003e taskList, String ogString) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String KEY_WORD \u003d Parser.findKeyWord(ogString);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        int taskNoCounter \u003d 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String description \u003d task.getDescription();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String statusIcon \u003d task.getStatusIcon();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String typeIcon \u003d task.getTypeIcon();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            if (description.contains(KEY_WORD)){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.println(taskNoCounter + \". \" + typeIcon + \" [\" + statusIcon + \"] \" + description);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                taskNoCounter +\u003d 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String TASK_COUNTER \u003d String.format(\"\\n There were %s tasks with the \\\"%s\\\" keyword\",taskNoCounter - 1, KEY_WORD);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(TASK_COUNTER);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Ui.printStraightLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 37
    }
  },
  {
    "path": "src/main/java/hiroshi/tasklist/MarkTaskAsDone.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package hiroshi.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " * Represents a class that marks a task as done."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class MarkTaskAsDone extends TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public MarkTaskAsDone(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            super();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskList List that stores the tasks mentioned until now."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param ogString Original command that was fed to the user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(ArrayList\u003cTask\u003e taskList, String ogString) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String[] words \u003d ogString.split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        taskList.get(Integer.parseInt(words[1]) - 1).markIt();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String statusIcon \u003d taskList.get(Integer.parseInt(words[1]) - 1).getStatusIcon();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String typeIcon \u003d taskList.get(Integer.parseInt(words[1]) - 1).getTypeIcon();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String description \u003d taskList.get(Integer.parseInt(words[1]) - 1).getDescription();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println((Integer.parseInt(words[1])) + \". \" + typeIcon + \"[\" + statusIcon + \"]\" + \" \" + description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Done! We have checked \" + words[1] + \"!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 31
    }
  },
  {
    "path": "src/main/java/hiroshi/tasklist/PrintTaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package hiroshi.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class PrintTaskList extends TaskList{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public PrintTaskList(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Prints all available tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskList List that stores the tasks mentioned until now."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        int taskCounter \u003d 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String description \u003d task.getDescription();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String statusIcon \u003d task.getStatusIcon();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String typeIcon \u003d task.getTypeIcon();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            System.out.println(taskCounter + \". \" + typeIcon + \" [\" + statusIcon + \"] \" + description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            taskCounter +\u003d 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 27
    }
  },
  {
    "path": "src/main/java/hiroshi/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package hiroshi.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Represents the data structure, i.e a list of Tasks, that stores the tasks.*/"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Initializes a new taskList.  */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 16
    }
  },
  {
    "path": "src/main/java/hiroshi/tasks/DatedEvents.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package hiroshi.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " * Interface class for subclasses that have a date component."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public interface  DatedEvents{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** This method returns a date associated with a Task.*/"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    LocalDate returnDate();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 11
    }
  },
  {
    "path": "src/main/java/hiroshi/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package hiroshi.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class Deadline extends Task implements DatedEvents {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Initializes an instance of the Event class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param description Descripton of what the task is and any date associated with it."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param by Date the deadline is in."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        this.date \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Returns the date associated with the task.  */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public LocalDate returnDate(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Represents the icon that represents the task, i.e. [D] for deadline.  */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String getTypeIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return (\"[D]\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 30
    }
  },
  {
    "path": "src/main/java/hiroshi/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package hiroshi.tasks;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Represents a suclass of task that represents an event that will happen \"at\" a certain date.  */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class Event extends Task implements DatedEvents {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Constructor that initializes the an instance of the Event class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param description Descripton of what the task is and any date associated with it."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param at Date the event is in."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        this.date \u003d at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Returns the date associated with the task.  */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public LocalDate returnDate(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Represents the icon that represents the task, i.e. [E] for event.  */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String getTypeIcon() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return (\"[E]\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 32
    }
  },
  {
    "path": "src/main/java/hiroshi/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package hiroshi.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " * Represents an absract class Task that has subclass tasks associaed with"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " * deadlines, events and todos."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *  Returns the description associated with a task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @return description Descripton of what the task is and any date associated with it."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Constructor that helps initialize a task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param description Descripton of what the task is and any date associated with it."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Marks a task as done.*/"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public void markIt() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Returns the Status Icon, check mark or cross mark, representing of the task is done.  */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        //return tick or X symbols"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Represents the icon that represents the task, eg. [T], [E], [D].  */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String getTypeIcon() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 46
    }
  },
  {
    "path": "src/main/java/hiroshi/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package hiroshi.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/** Represents task represents something that has to be done without a date associated with it.  */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Returns [T], a string representing this subclass of Task. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String getTypeIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return (\"[T]\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 15
    }
  },
  {
    "path": "src/main/java/hiroshi/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package hiroshi.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import hiroshi.tasks.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " * Text UI of the application."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Prints Logo.  */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public void printLogo() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        int rows \u003d 5;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        for (int i\u003d1; i\u003c\u003d rows ; i++) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            for (int j \u003d rows; j \u003e i ; j--) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.print(\"       \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            System.out.print(\"           -*-\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            for (int k \u003d 1; k \u003c 2*(i -1) ;k++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.print(\"*-\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            if( i\u003d\u003d1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.println(\"--**--\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.println(\"*-*-*-\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        for (int i\u003drows-1; i\u003e\u003d 1 ; i--) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            for (int j \u003d rows; j \u003e i ; j--) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.print(\"       \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            System.out.print(\"-*-*-\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            for (int k \u003d 1; k \u003c 2*(i -1) ;k++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.print(\"-*-\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            if( i\u003d\u003d1)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.println(\" \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            else"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.println(\"--**--\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Prints a straight line.  */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void printStraightLine() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"_________________________________________________________________________________\\n\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Prints a fancy line.  */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void printFancyLine() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"****--****--****--****--****--****--****--****--****--****--****--****--****--***\\n\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Prints message that is shown at the begenning of the program.  */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public Ui(){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printLogo();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printFancyLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Hiroshi\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Lets plan your day buddy! Things are looking good.\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printStraightLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Your inputs can only be of the following forms: \\n 1. todo {task description} \\n 2.\" +"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                \" deadline {task description} /by {YYYY-MM-DD} \\n 3. event {event description} \" +"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                \"/at {YYYY-MM-DD} \\n 4. delete {taskNumber} \\n 5. list \\n 6. done {task number}\" +"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                \"\\n 7. find {keyword} \\n 8. clear\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printFancyLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Prints a statement about the item when the item has been added to the task list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskList List that stores the tasks mentioned until now."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void printAddedStatement(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Task t \u003d taskList.get(taskList.size() - 1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String description \u003d t.getDescription();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String statusIcon \u003d t.getStatusIcon();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String typeIcon \u003d t.getTypeIcon();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Got it. I have added this task: \\n\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(typeIcon + \" [\" + statusIcon + \"] \" + description + \"\\n\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" item/s in the list \\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Ui.printStraightLine();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Reads the command inputted by the user and returns it."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @return line Line inputted by the user."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static String readCommand() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Enter what you would like to do:\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"\\n\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (line.toUpperCase().equals(\"BYE\")){"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            scanner.close();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return line;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /** Prints a bye message when the user exits the program.  */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void showByeMessage(){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Ui.printFancyLine();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void markLoadingError(){"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"File does not have the correct data format or file does not exist. We cannot read the data, we will create a fresh task list and/or file for you!\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Ui.printStraightLine();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void markAsIncorrectFormat() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Your inputs can only be of the following forms: \\n 1. todo {task description} \\n 2.\" +"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                \" deadline {task description} /by {YYYY-MM-DD} \\n 3. event {event description} \" +"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                \"/at {YYYY-MM-DD} \\n 4. delete {taskNumber} \\n 5. list \\n 6. done {task number}\" +"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                \"\\n 7. find {keyword} \\n 8. clear\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Try again!\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printStraightLine();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void markIncorrectFindStatement(){"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"OOPS! Please specify (eg: find 2)\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printStraightLine();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void markIncorrectListStatement(){"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"OOPS! Please just write \\\"list\\\" with the correct index number\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printStraightLine();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void markIncorrectClearStatement(){"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"OOPS! Please just write clear\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printStraightLine();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void markIncorrectDoneStatement(){"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"OOPS! Please specify (eg: done 2)\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printStraightLine();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void markDoneStatementOutOfBounds(){"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"That task number isn\u0027t in our task list, please try again making a valid task!\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printStraightLine();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void markDoneStatementAsNonInt(){"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"The output format should be of the format \\\"done 2\\\", not \\\"done + {string}\\\".\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printStraightLine();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void markIncorrectDeleteStatement(){"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"OOPS! Please specify (eg: delete 2)\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printStraightLine();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void markDeleteStatementOutOfBounds(){"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"That task number isn\u0027t in our task list, please try deleting with a task that exists!\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printStraightLine();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void markDeleteStatementAsNonInt(){"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"The output format should be of the format \\\"delete 2\\\", not \\\"delete + {string}\\\".\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printStraightLine();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void markDateTimeException(){"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"The date should be of the format \\\"YYYY-MM-DD\\\"\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printStraightLine();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 170
    }
  }
]

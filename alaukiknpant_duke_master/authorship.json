[
  {
    "path": "files/TaskList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "[D] | ✓ | duck (by: tom)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "[T] | ✓ | eaer"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "[T] | ✘ | eat"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "[T] | ✘ | add"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 4
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.commands.Commands;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.commands.RunCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Keeps track of Class variable taskList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public TaskList taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public Duke(String filePath ) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        this.run(TaskList.taskList, filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Gets the program statted by adding an initial task or taking the initial command"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public void run(ArrayList\u003cTask\u003e taskList, String filePath) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        while (!isExit){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String command \u003d Ui.readCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            RunCommand c \u003d new RunCommand(command, taskList, filePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            c.execute(Commands.finalCommand, taskList, filePath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            isExit \u003d c.isExit(Commands.finalCommand);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Ui.printStraightLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Ui.showByeMessage();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Main method"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        new Duke(\"files/TaskList.txt\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "       }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 52,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasklist.addTasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class AddCommand extends Commands {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public AddCommand(String command, ArrayList\u003cTask\u003e taskList, String filePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super(command, taskList,filePath);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(ArrayList\u003cTask\u003e taskList, String ogString, String taskType) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Ui.printStraightLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            addTasks.execute(taskList, ogString, taskType);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Ui.printAddedStatement(taskList);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            DukeException.markAsIncorrectFormat();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Ui.printStraightLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 25
    }
  },
  {
    "path": "src/main/java/duke/commands/ClearCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasklist.clearTasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class ClearCommand extends Commands{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public ClearCommand(String command, ArrayList\u003cTask\u003e taskList, String filePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super(command, taskList,filePath);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(ArrayList\u003cTask\u003e taskList, String ogString) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (Parser.isClearStatementCorrect(ogString)) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            clearTasks.execute(taskList);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            System.out.println(\"TaskList is now Empty\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Ui.printStraightLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 21
    }
  },
  {
    "path": "src/main/java/duke/commands/Commands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public abstract class Commands {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static String finalCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String filePath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public Commands(String command, ArrayList\u003cTask\u003e taskList, String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        finalCommand \u003d command.trim();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public Boolean isExit(String command) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String ogString \u003d command.trim();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Boolean yesExit \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (ogString.toUpperCase().equals(\"BYE\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            yesExit \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Storage.saveTaskList(filePath, taskList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return yesExit;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public void execute(String command, ArrayList\u003cTask\u003e taskList, String filePath){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    };"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 31
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasklist.deleteTasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class DeleteCommand extends Commands {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public DeleteCommand(String command, ArrayList\u003cTask\u003e taskList, String filePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super(command, taskList,filePath);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(ArrayList\u003cTask\u003e taskList, String ogString) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (Parser.isDeleteStatementCorrect(ogString, taskList)) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Ui.printStraightLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            deleteTasks.execute(taskList, ogString);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Ui.printStraightLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 21
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasklist.markTaskAsDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class DoneCommand extends Commands {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public DoneCommand(String command, ArrayList\u003cTask\u003e taskList, String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super(command, taskList,filePath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(ArrayList\u003cTask\u003e taskList, String ogString) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (Parser.isDoneStatementCorrect(ogString, taskList)) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Ui.printStraightLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            markTaskAsDone.execute(taskList, ogString);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Ui.printStraightLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 24
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasklist.printTaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class ListCommand extends Commands {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public ListCommand(String command, ArrayList\u003cTask\u003e taskList, String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super(command, taskList,filePath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(ArrayList\u003cTask\u003e taskList, String ogString) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (Parser.isListStatementCorrect(ogString)) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Ui.printStraightLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            printTaskList.execute(taskList);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Ui.printStraightLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 23
    }
  },
  {
    "path": "src/main/java/duke/commands/RunCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.common.Utils;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class RunCommand extends Commands {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public RunCommand(String command, ArrayList\u003cTask\u003e taskList, String filePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super(command, taskList,filePath);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Reads what type of task if given and calls the required method accordingly."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param command  Line that represents the task that is supposed to marked as done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskList Tasklist of  all available tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public void execute(String command, ArrayList\u003cTask\u003e taskList, String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String taskType \u003d Parser.returnTaskType(finalCommand);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (!Utils.checkIfValidTask(taskType)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            DukeException.markAsIncorrectFormat();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            executeCommands(taskList, command, taskType);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Calls different methods to do the required tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskList TaskList of all available tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param ogString Original string that is inputted by the user using the command line."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskType event Type, meaning the nature of the command (eg. LIST, DEADLINE)."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void executeCommands(ArrayList\u003cTask\u003e taskList, String ogString, String taskType) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            DoneCommand.execute(taskList, ogString);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            ListCommand.execute(taskList, ogString);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            DeleteCommand.execute(taskList, ogString);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        case \"clear\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            ClearCommand.execute(taskList, ogString);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            AddCommand.execute(taskList, ogString, taskType);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 60
    }
  },
  {
    "path": "src/main/java/duke/common/Utils.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class Utils {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Checks if the given task is valid"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param type Type of task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @return Checks if the task type is valid"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static Boolean checkIfValidTask(String type){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String LISTE \u003d \"list\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String CLEAR \u003d \"clear\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (type.equals(DONE) || type.equals(TODO) || type.equals(DEADLINE)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                || type.equals(EVENT) || type.equals(LISTE) || type.equals(DELETE) || type.equals(BYE) || type.equals(CLEAR)){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 24
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class DukeException extends Exception  {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void markAsIncorrectFormat() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Your inputs can only be of the following forms: \\n 1. todo {task description} \\n 2.\" +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                \" deadline {task description} /by {dedline eg. 6 PM} \\n 3. event {event description} \" +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                \"/at {event date\\\\time eg. 6 PM} \\n 4. delete {taskNumber} \\n 5. list \\n 6. done {task number}\" );"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Try again!\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void markIncorrectDoneStatement(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"OOPS! Please specify (eg: done 2)\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void markDoneStatementOutOfBounds(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"That task number isn\u0027t in our task list, please try again making a valid task!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void markDoneStatementAsNonInt(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"The output format should be of the format \\\"done 2\\\", not \\\"done + {string}\\\".\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void markIncorrectDeleteStatement(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"OOPS! Please specify (eg: delete 2)\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void markDeleteStatementOutOfBounds(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"That task number isn\u0027t in our task list, please try deleting with a task that exists!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void markDeleteStatementAsNonInt(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"The output format should be of the format \\\"delete 2\\\", not \\\"delete + {string}\\\".\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 37
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static String returnTaskType(String line){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String[] words \u003d line.split(\" \");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String taskType \u003d words[0].trim();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static Boolean isClearStatementCorrect (String ogString){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String[] wordss \u003d ogString.split(\" \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        int LENG_DONE_STATEMENT \u003d wordss.length;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (LENG_DONE_STATEMENT !\u003d 1) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static Boolean isListStatementCorrect (String ogString){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String[] wordss \u003d ogString.split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        int LENG_DONE_STATEMENT \u003d wordss.length;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (LENG_DONE_STATEMENT !\u003d 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static Boolean isDeleteStatementCorrect(String ogString, ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String[] words \u003d ogString.split(\" \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        int LENG_DELETE_STATEMENT \u003d words.length;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Boolean isCorrect \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (LENG_DELETE_STATEMENT !\u003d 2) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            DukeException.markIncorrectDeleteStatement();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            isCorrect \u003d false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            return isCorrect;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                int IDX_WORDS \u003d Integer.parseInt(words[1]) - 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                if (IDX_WORDS \u003c 0 || IDX_WORDS \u003e taskList.size() - 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    DukeException.markDeleteStatementOutOfBounds();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    isCorrect \u003d false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    return isCorrect;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    isCorrect \u003d true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    return isCorrect;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                DukeException.markDeleteStatementAsNonInt();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return isCorrect;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Returns a boolean if a given task is marked as done"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param ogString  Line that represents the task that is supposed to marked as done."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskList TaskList of all available tasks."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @return isDone Is the task marked as Done."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static Boolean isDoneStatementCorrect(String ogString, ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String[] words \u003d ogString.split(\" \");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        int LENG_DONE_STATEMENT \u003d words.length;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Boolean isCorrect \u003d false;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (LENG_DONE_STATEMENT !\u003d 2) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            DukeException.markIncorrectDoneStatement();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            isCorrect \u003d false;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            return isCorrect;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                int IDX_WORDS \u003d Integer.parseInt(words[1]) - 1;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                if (IDX_WORDS \u003c 0 || IDX_WORDS \u003e taskList.size() - 1) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    DukeException.markDoneStatementOutOfBounds();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    isCorrect \u003d false;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    return isCorrect;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    isCorrect \u003d true;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    return isCorrect;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                DukeException.markDoneStatementAsNonInt();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return isCorrect;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Returns the description of the task in the required format"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param line Line that represents the task that is supposed to marked as done."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param type  Type of subclass of task."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @return description Description of the task in the required format."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static String[] returnStringToAdd(String line, String type) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String[] arrOfStr \u003d line.split(type);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "//            toReturn[0] \u003d arrOfStr[1].trim();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            return arrOfStr;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String preposition;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String splitter;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                preposition \u003d \"by: \";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                splitter \u003d \"/by\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                preposition \u003d \"at: \";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                splitter \u003d \"/at\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String[] arrOfStr \u003d line.split(splitter);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String[] toReturn \u003d new String[2];"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String[] todo \u003d arrOfStr[0].split(type);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            toReturn[0] \u003d (todo[1].substring(1, todo[1].length()));       // task"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            toReturn[1] \u003d arrOfStr[1].substring(1, arrOfStr[1].length()); // date"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String description \u003d toReturn[0] + \"(\" + preposition + toReturn[1] + \")\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            toReturn[0] \u003d description;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            return toReturn;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 131
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public Storage(String filePath){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        createTaskList(filePath, TaskList.taskList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static Boolean convertMarkToBool(String mark){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (mark.equals(\"\\u2713\")){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static ArrayList\u003cTask\u003e createTaskList(String filepathe, ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            File f \u003d new File(filepathe);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                String ogString \u003d s.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                String[] words \u003d ogString.split(\" \\\\| \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                String taskType \u003d words[0];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                String mark \u003d words[1];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                String description \u003d words[2];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Boolean isTaskDone \u003d convertMarkToBool(mark);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                if (taskType.equals(\"[T]\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    Todo t \u003d new Todo(description);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    t.isDone \u003d isTaskDone;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    taskList.add(t);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    if (taskType.equals(\"[E]\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                        String[] descriptionAndDate \u003d description.split(\"at:\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                        String AT \u003d descriptionAndDate[1].trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                        Event t \u003d new Event(description, AT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                        t.isDone \u003d isTaskDone;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                        taskList.add(t);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                        String[] descriptionAndDate \u003d description.split(\"by:\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                        String BY \u003d descriptionAndDate[1].trim();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                        Deadline t \u003d new Deadline(description, BY);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                        t.isDone \u003d isTaskDone;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                        taskList.add(t);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } catch(FileNotFoundException e){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            //Dont need to return anything as we hardcode the name of the file"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void saveTaskList(String filePath, ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Task t \u003d taskList.get(i);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                String description \u003d t.getDescription();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                String typeIcon \u003d t.getTypeIcon();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                String statusIcon \u003d t.getStatusIcon();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                String stringToAdd \u003d typeIcon + \" | \" + statusIcon + \" | \" + description;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                if (i \u003d\u003d 0){"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    fw.write(stringToAdd);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    fw.write(\"\\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    fw.close();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    fw.write(stringToAdd);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    fw.write(\"\\n\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    fw.close();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        catch(IOException e){"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 94
    }
  },
  {
    "path": "src/main/java/duke/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public void execute(String command, ArrayList\u003cTask\u003e taskList, String taskType){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    };"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 31
    }
  },
  {
    "path": "src/main/java/duke/tasklist/addTasks.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class addTasks extends TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public addTasks(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(ArrayList\u003cTask\u003e taskList, String ogString, String taskType) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String[] todoOrDeadlineOrEvent \u003d Parser.returnStringToAdd(ogString, taskType);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (taskType.equals(\"event\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Event t \u003d new Event(todoOrDeadlineOrEvent[0], todoOrDeadlineOrEvent[1]);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            taskList.add(t);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } else if (taskType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Deadline t \u003d new Deadline(todoOrDeadlineOrEvent[0], todoOrDeadlineOrEvent[1]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            taskList.add(t);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Todo e \u003d new Todo(todoOrDeadlineOrEvent[1].trim());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            taskList.add(e);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 28
    }
  },
  {
    "path": "src/main/java/duke/tasklist/clearTasks.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class clearTasks extends TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public clearTasks(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(ArrayList\u003cTask\u003e taskList){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        taskList.clear();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 15
    }
  },
  {
    "path": "src/main/java/duke/tasklist/deleteTasks.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class deleteTasks extends TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public deleteTasks(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Deletes the task at index taskNumber from the tasklist"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskList Tasklist of all available tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param ogString The index of the task we are trying delete"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(ArrayList\u003cTask\u003e taskList, String ogString) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String[] words \u003d ogString.split(\" \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(words[1].trim()) - 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Task task \u003d taskList.get(taskNumber);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String description \u003d task.getDescription();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String statusIcon \u003d task.getStatusIcon();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String typeIcon \u003d task.getTypeIcon();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Cool, we will remove the following task:\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(typeIcon + \" [\" + statusIcon + \"] \" + description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        taskList.remove(taskNumber);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Now you have \" + Integer.toString(taskList.size()) + \" items in your list\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 29
    }
  },
  {
    "path": "src/main/java/duke/tasklist/markTaskAsDone.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class markTaskAsDone extends TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public markTaskAsDone(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Returns a boolean that marks a task as done if it exists"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Marks a task as done"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskList TaskList containg all tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param ogString Inputted command by the user that is fed as a string"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(ArrayList\u003cTask\u003e taskList, String ogString) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String[] words \u003d ogString.split(\" \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        taskList.get(Integer.parseInt(words[1]) - 1).markIt();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String statusIcon \u003d taskList.get(Integer.parseInt(words[1]) - 1).getStatusIcon();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String typeIcon \u003d taskList.get(Integer.parseInt(words[1]) - 1).getTypeIcon();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String description \u003d taskList.get(Integer.parseInt(words[1]) - 1).getDescription();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println((Integer.parseInt(words[1])) + \". \" + typeIcon + \"[\" + statusIcon + \"]\" + \" \" + description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Done! We have checked \" + words[1] + \"!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 28
    }
  },
  {
    "path": "src/main/java/duke/tasklist/printTaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class printTaskList extends TaskList{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public printTaskList(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Print all available tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskList Tasklist of all available tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void execute(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        int taskCounter \u003d 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String description \u003d task.getDescription();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String statusIcon \u003d task.getStatusIcon();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String typeIcon \u003d task.getTypeIcon();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            System.out.println(taskCounter + \". \" + typeIcon + \" [\" + statusIcon + \"] \" + description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            taskCounter +\u003d 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 27
    }
  },
  {
    "path": "src/main/java/duke/tasks/DatedEvents.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public interface  DatedEvents{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    String returnDate();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 5
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class Deadline extends Task implements DatedEvents {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        this.date \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String returnDate(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String getTypeIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return (\"[D]\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 21
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class Event extends Task implements DatedEvents {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        this.date \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String returnDate(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String getTypeIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return (\"[E]\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 21
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public void markIt() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        //return tick or X symbols"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String getTypeIcon() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 30
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String getTypeIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return (\"[T]\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 17
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Generates Logo."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public void printLogo() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        int rows \u003d 5;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        for (int i\u003d1; i\u003c\u003d rows ; i++) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            for (int j \u003d rows; j \u003e i ; j--) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.print(\"       \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            System.out.print(\"           **\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            for (int k \u003d 1; k \u003c 2*(i -1) ;k++) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.print(\"HI\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            if( i\u003d\u003d1) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.println(\"RORO\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.println(\"RORO**\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        for (int i\u003drows-1; i\u003e\u003d 1 ; i--) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            for (int j \u003d rows; j \u003e i ; j--) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.print(\"       \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            System.out.print(\"**SHI\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            for (int k \u003d 1; k \u003c 2*(i -1) ;k++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.print(\"RO\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            if( i\u003d\u003d1)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.println(\" \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.println(\"SHI**\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void printStraightLine() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"_________________________________________________________________________________\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void printFancyLine() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"****--****--****--****--****--****--****--****--****--****--****--****--****--***\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public Ui(){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printLogo();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printFancyLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Hiroshi\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Lets plan your day buddy! Things are looking good.\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printFancyLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void printAddedStatement(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Task t \u003d taskList.get(taskList.size() - 1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String description \u003d t.getDescription();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String statusIcon \u003d t.getStatusIcon();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String typeIcon \u003d t.getTypeIcon();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Got it. I have added this task: \\n\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(typeIcon + \" [\" + statusIcon + \"] \" + description + \"\\n\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" item/s in the list \\n\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Ui.printStraightLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static String readCommand() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Enter what you would like to do:\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"\\n\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (line.toUpperCase().equals(\"BYE\")){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            scanner.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return line;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void showByeMessage(){"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Ui.printFancyLine();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 86
    }
  },
  {
    "path": "text-ui-test/expected.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "*     **     **     **     **     **     **     **     **     **     **     **     *"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "**     ****     ****     ****     ****     ****     ****     ****     ****     ****     ****     ****     **"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "***     ******     ******     ******     ******     ******     ******     ******     ******     ******     ******     ******     ***"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "****     ********     ********     ********     ********     ********     ********     ********     ********     ********     ********     ********     ****"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "*****     **********     **********     **********     **********     **********     **********     **********     **********     **********     **********     **********     *****"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Hello! I\u0027m Hiroshi"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Lets plan your day buddy! Things are looking good."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "todo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Got it. I have added this task: "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "eat"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "[T] [✘] eat"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Now you have 1 items in the list "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "todo"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Got it. I have added this task: "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "sleep"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "[T] [✘] sleep"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Now you have 2 items in the list "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Got it. I have added this task: "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "sleep (by: tomorrow)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "[D] [✘] sleep (by: tomorrow)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Now you have 3 items in the list "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "event"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Got it. I have added this task: "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "eat (at: Cendana)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "[E] [✘] eat (at: Cendana)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Now you have 4 items in the list "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "list"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "1. [T] [✘] eat"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "2. [T] [✘] sleep"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "3. [D] [✘] sleep (by: tomorrow)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "4. [E] [✘] eat (at: Cendana)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "done"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "1. [T][✓] eat"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Done! We have checked 1!"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "list"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "1. [T] [✓] eat"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "2. [T] [✘] sleep"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "3. [D] [✘] sleep (by: tomorrow)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "4. [E] [✘] eat (at: Cendana)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 83
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "todo eat"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "todo sleep"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "deadline sleep /by tomorrow"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "event eat /at Cendana"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 8
    }
  },
  {
    "path": "text-ui-test/output.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "*     **     **     **     **     **     **     **     **     **     **     **     *"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "**     ****     ****     ****     ****     ****     ****     ****     ****     ****     ****     ****     **"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "***     ******     ******     ******     ******     ******     ******     ******     ******     ******     ******     ******     ***"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "****     ********     ********     ********     ********     ********     ********     ********     ********     ********     ********     ********     ****"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "*****     **********     **********     **********     **********     **********     **********     **********     **********     **********     **********     **********     *****"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Hello! I\u0027m Hiroshi"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Lets plan your day buddy! Things are looking good."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "todo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Got it. I have added this task: "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "eat"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "[T] [✘] eat"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Now you have 1 items in the list "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "todo"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Got it. I have added this task: "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "sleep"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "[T] [✘] sleep"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Now you have 2 items in the list "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Got it. I have added this task: "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "sleep (by: tomorrow)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "[D] [✘] sleep (by: tomorrow)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Now you have 3 items in the list "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "event"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Got it. I have added this task: "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "eat (at: Cendana)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "[E] [✘] eat (at: Cendana)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Now you have 4 items in the list "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "list"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "1. [T] [✘] eat"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "2. [T] [✘] sleep"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "3. [D] [✘] sleep (by: tomorrow)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "4. [E] [✘] eat (at: Cendana)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "done"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "1. [T][✓] eat"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Done! We have checked 1!"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "list"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "1. [T] [✓] eat"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "2. [T] [✘] sleep"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "3. [D] [✘] sleep (by: tomorrow)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "4. [E] [✘] eat (at: Cendana)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 83
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "fi"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 35
    }
  }
]

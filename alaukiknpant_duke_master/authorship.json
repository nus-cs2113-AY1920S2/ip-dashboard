[
  {
    "path": "files/TaskList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "[T] | ✓ | slap"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "[T] | ✓ | eat again"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "[T] | ✘ | eat"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 3
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public Deadline(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String getTypeIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return (\"[D]\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 15
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Keeps track of Class variable taskList."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        this.taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public void printStraightLine() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"___________________________________________________________________________\\n\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static String filePath \u003d \"files/TaskList.txt\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    //we will not use this methid in this branch, but it be useful in the next branch for testing purposes"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    private static void printFileContents(String filePath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        File f \u003d new File(filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            System.out.println(s.nextLine());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static Boolean convertMarkToBool(String mark){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (mark.equals(\"\\u2713\")){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void createTaskList(String filepathe, ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                String ogString \u003d s.nextLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                String[] words \u003d ogString.split(\" \\\\| \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                String taskType \u003d words[0];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                String mark \u003d words[1];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                String description \u003d words[2];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Boolean isTaskDone \u003d convertMarkToBool(mark);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                if (taskType.equals(\"[T]\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    Todo t \u003d new Todo(description);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    t.isDone \u003d isTaskDone;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    taskList.add(t);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                } else if (taskType.equals(\"[E]\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    Event t \u003d new Event(description);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    t.isDone \u003d isTaskDone;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    taskList.add(t);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    Deadline t \u003d new Deadline(description);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    t.isDone \u003d isTaskDone;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    taskList.add(t);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } catch(FileNotFoundException e){"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            //Dont need to return anything as we hardcode the name of the file"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void saveTaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++){"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Task t \u003d taskList.get(i);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                String description \u003d t.getDescription();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                String typeIcon \u003d t.getTypeIcon();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                String statusIcon \u003d t.getStatusIcon();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                String stringToAdd \u003d typeIcon + \" | \" + statusIcon + \" | \" + description;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                if (i \u003d\u003d 0){"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    fw.write(stringToAdd);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    fw.write(\"\\n\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    fw.close();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    fw.write(stringToAdd);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    fw.write(\"\\n\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    fw.close();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        catch(IOException e){"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "         * Generates Logo."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "         */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public void printLogo() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        for (int i \u003d 0; i \u003c 5; i++) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String addOne \u003d \"*\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String addTwo \u003d \"     *\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String addThree \u003d \"*\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String addFour \u003d \"     *\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String addFive \u003d \"*\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String addSix \u003d \"     *\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            for (int j \u003d 0; j \u003c i; j++) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                addOne +\u003d \"*\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                addTwo +\u003d \"*\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                addThree +\u003d \"*\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                addFour +\u003d \"*\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                addFive +\u003d \"*\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                addSix +\u003d \"*\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            System.out.println(addOne + addTwo + addThree + addFour + addFive + addSix +"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    addOne + addTwo + addThree + addFour + addFive + addSix +"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    addOne + addTwo + addThree + addFour + addFive + addSix +"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    addOne + addTwo + addThree + addFour + addFive + addSix);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Print all available tasks."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskList Tasklist of all available tasks"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public void printTaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        int taskCounter \u003d 1;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String description \u003d task.getDescription();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String statusIcon \u003d task.getStatusIcon();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String typeIcon \u003d task.getTypeIcon();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            System.out.println(taskCounter + \". \" + typeIcon + \" [\" + statusIcon + \"] \" + description);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            taskCounter +\u003d 1;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Returns true if taskType is Delete. If it is indeed delete, then it also calls another method to delete"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param ogString Original String that is inputted by the user into the command line"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskList Tasklist of all available tasks"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @return isTaskTypeDelete Returns true if the type of the task is delete"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public Boolean isTaskTypeDelete(String ogString, ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String[] words \u003d ogString.split(\" \");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Boolean isTaskTypeDelete \u003d false;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String taskType \u003d words[0].toUpperCase();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (taskType.equals(\"DELETE\")) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(words[1]) - 1;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                if (taskNumber \u003c 0 || taskNumber \u003e taskList.size() -1) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    System.out.println(\"That task number isn\u0027t in our task list or your input is not in the\" +"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                            \" correct format (eg: delete 1), please try again!\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    deleteTask(taskList, taskNumber);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    isTaskTypeDelete \u003d true;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            } catch (IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.println(\"Please also specify task number, i.e. delete 3\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return isTaskTypeDelete;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Deletes the task at index taskNumber from the tasklist"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskList Tasklist of all available tasks"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskNumber The index of the task we are trying delete"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public void deleteTask(ArrayList\u003cTask\u003e taskList, int taskNumber) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Task task \u003d taskList.get(taskNumber);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String description \u003d task.getDescription();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String statusIcon \u003d task.getStatusIcon();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String typeIcon \u003d task.getTypeIcon();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Cool, we will remove the following task:\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(typeIcon +  \" [\" +  statusIcon + \"] \" +  description);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        taskList.remove(taskNumber);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Now you have \" + Integer.toString(taskList.size()) + \" items in your list\" );"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Checks if the given task is valid"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param type Type of task"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @return Checks if the task type is valid"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "      */"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public Boolean checkIfValidTask(String type){"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String LISTE \u003d \"list\";"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (type.equals(DONE) || type.equals(TODO) || type.equals(DEADLINE)"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                || type.equals(EVENT) || type.equals(LISTE) || type.equals(DELETE) ){"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "             return true;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Returns a boolean if a given task is marked as done"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param line     Line that represents the task that is supposed to marked as done."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskList TaskList of all available tasks."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @return isDone Is the task marked as Done."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public Boolean isTaskTypeDone(String line, ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String[] words \u003d line.split(\" \");"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        int LENG_LIST \u003d words.length;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Boolean isDone \u003d false;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String taskType \u003d words[0].toUpperCase();"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (taskType.equals(\"DONE\")){"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            if (LENG_LIST \u003d\u003d 1) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    System.out.println(\"Please specify (eg: done 2) or just add a new one\");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    isDone \u003d true;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    return isDone;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                         int IDX_WORDS \u003d Integer.parseInt(words[1]) - 1;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                         if (IDX_WORDS \u003c 0 || IDX_WORDS \u003e taskList.size() - 1) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                             System.out.println(\"That task number isn\u0027t in our task list, please try again!\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                             return true;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                             markTaskAsDone(taskList, words);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                             isDone \u003d true;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                             return isDone;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                         }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Returns a boolean that marks a task as done if it exists"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Marks a task as done"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskList TaskList containg all tasks"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param words Inputted command by the user that is turned into a string array"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public void markTaskAsDone(ArrayList\u003cTask\u003e taskList, String[] words ) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            taskList.get(Integer.parseInt(words[1]) - 1).markIt();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String statusIcon \u003d taskList.get(Integer.parseInt(words[1]) - 1).getStatusIcon();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String typeIcon \u003d taskList.get(Integer.parseInt(words[1]) - 1).getTypeIcon();"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String description \u003d taskList.get(Integer.parseInt(words[1]) - 1).getDescription();"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            System.out.println((Integer.parseInt(words[1])) + \". \" + typeIcon + \"[\" + statusIcon + \"]\" + \" \" + description);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            System.out.println(\"Done! We have checked \" + words[1] + \"!\");"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Returns the description of the task in the required format"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param line Line that represents the task that is supposed to marked as done."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param type  Type of subclass of task."
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @return description Description of the task in the required format."
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String returnStringToAdd(String line, String type) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String[] arrOfStr \u003d line.split(type);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String toReturn \u003d arrOfStr[1].trim();"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            return toReturn;"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String preposition;"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String splitter;"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                preposition \u003d \"by: \";"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                splitter \u003d \"/by\";"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                preposition \u003d \"at: \";"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                splitter \u003d \"/at\";"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String[] arrOfStr \u003d line.split(splitter);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String[] toReturn \u003d new String[2];"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String[] todo \u003d arrOfStr[0].split(type);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            toReturn[0] \u003d (todo[1].substring(1, todo[1].length()));       // task"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            toReturn[1] \u003d arrOfStr[1].substring(1, arrOfStr[1].length()); // date"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String description \u003d toReturn[0] + \"(\" + preposition + toReturn[1] + \")\";"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            return description;"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Reads what type of task if given and calls the required method accordingly."
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param line     Line that represents the task that is supposed to marked as done."
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskList Tasklist of all available tasks."
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public void readCommands(String line, ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String ogString \u003d line;"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        while (!ogString.toUpperCase().equals(\"BYE\")) {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String[] words \u003d ogString.split(\" \");"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            String eventType \u003d words[0];"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            if (!checkIfValidTask(eventType)) {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.println(\"Please specify the task type more clearly (eg: done, todo, deadline, list, event)\");"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                performTasks(taskList, ogString, eventType);"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            ogString \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        saveTaskList(taskList);"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printStraightLine();"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Performs the requested task"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     *"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param taskList  TaskList of all available tasks."
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param ogString  Original string that is inputted by the user using the command line."
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * @param eventType event Type, meaning the nature of the command (eg. LIST, DEADLINE)."
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public void performTasks(ArrayList\u003cTask\u003e taskList, String ogString, String eventType) {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        if (isTaskTypeDone(ogString, taskList)){"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            printStraightLine();"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } else if (ogString.toUpperCase().equals(\"LIST\")) {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            printStraightLine();"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            this.printTaskList(taskList);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            printStraightLine();"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } else if (isTaskTypeDelete(ogString, taskList)){"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            printStraightLine();"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                printStraightLine();"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                String todoOrDeadlineOrEvent \u003d returnStringToAdd(ogString, eventType);"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                if (eventType.equals(\"event\") || eventType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    if (eventType.equals(\"event\")) {"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                        Event t \u003d new Event(todoOrDeadlineOrEvent);"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                        taskList.add(t);"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                        Deadline t \u003d new Deadline(todoOrDeadlineOrEvent);"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                        taskList.add(t);"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    Todo e \u003d new Todo(todoOrDeadlineOrEvent);"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                    taskList.add(e);"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                }"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                Task t \u003d taskList.get(taskList.size() - 1);"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                String description \u003d t.getDescription();"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                String statusIcon \u003d t.getStatusIcon();"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                String typeIcon \u003d t.getTypeIcon();"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.println(\"Got it. I have added this task: \\n\");"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.println(typeIcon + \" [\" + statusIcon + \"] \" + description + \"\\n\");"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.println(\"Now you have \" + taskList.size() + \" item/s in the list \\n\");"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "//                String stringToAdd \u003d typeIcon + \" | \" + statusIcon + \" | \" + description;"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "//                writeToFile(filePath, stringToAdd);"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                printStraightLine();"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            } catch (IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.println(\"Your inputs can only be of the following forms: \\n 1. todo {task description} \\n 2.\" +"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                        \" deadline {task description} \\\\by {dedline eg. 6 PM} \\n 3. event {event description} \" +"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                        \"\\\\at {event date\\\\time eg. 6 PM} 4. delete {taskNumber}\");"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                System.out.println(\"Try again!\");"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "                printStraightLine();"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "            }"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        }"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     * Gets the program statted by adding an initial task or taking the initial command"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "     */"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public void startThingsOff() {"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printLogo();"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        createTaskList(filePath, taskList);"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printStraightLine();"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Hiroshi\");"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        System.out.println(\"Lets plan your day buddy! Things are looking good.\\n\");"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        printStraightLine();"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        readCommands(line, taskList);"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        Duke hiroshiNagai \u003d new Duke();"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        hiroshiNagai.startThingsOff();"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "//            printFileContents(filePath);"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "//        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "//            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 411,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class DukeException extends Exception  {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 4
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public Event(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String getTypeIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return (\"[E]\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 21
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public void markIt() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        //return tick or X symbols"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String getTypeIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 32
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    public String getTypeIcon() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "        return (\"[T]\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 19
    }
  },
  {
    "path": "text-ui-test/expected.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "*     **     **     **     **     **     **     **     **     **     **     **     *"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "**     ****     ****     ****     ****     ****     ****     ****     ****     ****     ****     ****     **"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "***     ******     ******     ******     ******     ******     ******     ******     ******     ******     ******     ******     ***"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "****     ********     ********     ********     ********     ********     ********     ********     ********     ********     ********     ********     ****"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "*****     **********     **********     **********     **********     **********     **********     **********     **********     **********     **********     **********     *****"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Hello! I\u0027m Hiroshi"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Lets plan your day buddy! Things are looking good."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "todo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Got it. I have added this task: "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "eat"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "[T] [✘] eat"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Now you have 1 items in the list "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "todo"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Got it. I have added this task: "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "sleep"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "[T] [✘] sleep"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Now you have 2 items in the list "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Got it. I have added this task: "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "sleep (by: tomorrow)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "[D] [✘] sleep (by: tomorrow)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Now you have 3 items in the list "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "event"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Got it. I have added this task: "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "eat (at: Cendana)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "[E] [✘] eat (at: Cendana)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Now you have 4 items in the list "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "list"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "1. [T] [✘] eat"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "2. [T] [✘] sleep"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "3. [D] [✘] sleep (by: tomorrow)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "4. [E] [✘] eat (at: Cendana)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "done"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "1. [T][✓] eat"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Done! We have checked 1!"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "list"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "1. [T] [✓] eat"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "2. [T] [✘] sleep"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "3. [D] [✘] sleep (by: tomorrow)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "4. [E] [✘] eat (at: Cendana)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 83
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "todo eat"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "todo sleep"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "deadline sleep /by tomorrow"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "event eat /at Cendana"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 8
    }
  },
  {
    "path": "text-ui-test/output.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "*     **     **     **     **     **     **     **     **     **     **     **     *"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "**     ****     ****     ****     ****     ****     ****     ****     ****     ****     ****     ****     **"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "***     ******     ******     ******     ******     ******     ******     ******     ******     ******     ******     ******     ***"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "****     ********     ********     ********     ********     ********     ********     ********     ********     ********     ********     ********     ****"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "*****     **********     **********     **********     **********     **********     **********     **********     **********     **********     **********     **********     *****"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Hello! I\u0027m Hiroshi"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Lets plan your day buddy! Things are looking good."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "todo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Got it. I have added this task: "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "eat"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "[T] [✘] eat"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Now you have 1 items in the list "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "todo"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Got it. I have added this task: "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "sleep"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "[T] [✘] sleep"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Now you have 2 items in the list "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Got it. I have added this task: "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "sleep (by: tomorrow)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "[D] [✘] sleep (by: tomorrow)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Now you have 3 items in the list "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "event"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Got it. I have added this task: "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "eat (at: Cendana)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "[E] [✘] eat (at: Cendana)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Now you have 4 items in the list "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "list"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "1. [T] [✘] eat"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "2. [T] [✘] sleep"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "3. [D] [✘] sleep (by: tomorrow)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "4. [E] [✘] eat (at: Cendana)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "done"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "1. [T][✓] eat"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Done! We have checked 1!"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "list"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "1. [T] [✓] eat"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "2. [T] [✘] sleep"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "3. [D] [✘] sleep (by: tomorrow)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "4. [E] [✘] eat (at: Cendana)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "___________________________________________________________________________"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 83
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": "fi"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alaukiknpant"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "alaukiknpant": 35
    }
  }
]

[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "Duke is a command-line interface task manager. You can manage your tasks, set deadlines and view upcoming tasks. The list is then saved automatically when you exit."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "1. Managing tasks "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "  * Your tasks can be added using `todo`, `deadline` and `event` Commands or deleted with the `delete` Command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "2. Marking your tasks as completed"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "  * Track the completion status of your tasks by using the `done` Command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "3. Display all your tasks "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "  * To view the tasks you have so far, use the `list` Command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "  * If you would like to find a specific task using a keyword, use the `find` Command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "4. Saving your data"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "  * Your tasks and information are stored automatically when you add a task into the program. Upon closing and reopening of Duke, your data is retained. "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "### Adding Tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "There are 3 ways you can add tasks to your task list, namely - todo, deadline or event. More details can be found below."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "### `todo` - Creates a Todo task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "This commands adds a todo task to your current list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "`todo \u003cdescription\u003e`"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "* `\u003cdescription\u003e` is the description of the todo"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "`todo code for CS2113T`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "```"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "____________________________________________________________ "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "  [T][✘] study for CS2113T"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "Now you have 1 task in the list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "```"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "\u003e**Notice:**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "\u003eIf created successfully, it appears as a `[T]` beside the description to represent a todo task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "\u003e`[✘]` represents an incomplete task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "### `deadline` - Creates a Deadline task"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "This command is created with a description with a deadline date and time. "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "Format: "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "`deadline \u003cdescription\u003e\u003cspace\u003e\u003c/by\u003e\u003cdate\u003e\u003cspace\u003e\u003ctime\u003e`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "* `\u003cdescription\u003e` is the description of the task with a deadline"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "* `\u003cspace\u003e` represents a white space"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "* `\u003c/by\u003e` is a **required** parameter"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "* `\u003cdate\u003e` must follow the dd/mm/yyyy format"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "* `\u003ctime\u003e` must follow the hhmm format"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "`deadline study /by 22/05/2020 1530`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "```"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yukilite"
        },
        "content": " [D][✘] study (by:Fri 22 May 2020 03:30 pm)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "Now you have 2 task in the list"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "```"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "\u003e**Notice:**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "\u003eIf created successfully, it appears as a `[D]` beside the description to represent a deadline task."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "\u003e`[✘]` represents an incomplete task."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "### `event` - Creates a Event task"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "Similar to deadline feature, an event task is created with both the description parameter and a deadline date and time."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "Format: "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "`event \u003cevent\u003e\u003cspace\u003e\u003c/at\u003e\u003cdate\u003e\u003cspace\u003e\u003ctime\u003e`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "* `\u003cevent\u003e` is the description of the task"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "* `\u003cspace\u003e` represents a white space"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "* `\u003c/at\u003e` is a **required** parameter"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "* `\u003cdate\u003e` must follow the dd/mm/yyyy format"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "* `\u003ctime\u003e` must follow the hhmm format"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "`event party /at 23/05/2020 0030`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "```"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "____________________________________________________________ "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "   [E][✘] party (at:Sat 23 May 2020 12:30 am)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "Now you have 3 task in the list"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "```"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "\u003e**Notice:**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "\u003eIf created successfully, it appears as a `[E]` beside the description to represent an Event task."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "\u003e`[✘]` represents an incomplete task."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "### `done` - Marks a task as completed"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "This command marks an existing task as Done."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "Format: "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "`done \u003ctask number\u003e`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "* `\u003ctask number\u003e` represents a index of the task in the current task list"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "`done 2`"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "```"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "  [E][✓] study (by:Fri 22 May 2020 03:30 pm)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "```"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "\u003e**Notice:**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "\u003eIf created successfully, a `✓` appears beside the task."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "### `list` - Displays a list of current tasks"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "This command shows you the existing list of tasks."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "Format: `\u003clist\u003e`"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "```"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "1.[T][✘] study for CS2113T"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "2.[D][✓] study (by:Fri 22 May 2020 03:30 pm)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "3.[E][✘] party (at:Sat 23 May 2020 12:30 am)"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "```"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "### `delete` - Deletes a task from the list"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "This command allows the tasks to be deleted from the task list."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "Format: `delete \u003cTask Number\u003e`"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "* `\u003ctask number\u003e` represents a index of the task in the current task list"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "`delete 2`"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "```"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Yukilite"
        },
        "content": " Noted. I\u0027ve removed this task: "
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "  [D][✘] study (by:Fri 22 May 2020 03:30 pm)"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "Now you have 4 task in the list"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "```"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "### `find` - Finds a task with matching keyword"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "This command finds a task in the existing task list with the same keyword."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "Format: `find \u003cKeyword\u003e`"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "* `\u003cKeyword\u003e` represents the name of the task you wish to look for in the current task list."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "`find party`"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "```"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Yukilite"
        },
        "content": " Here are the matching tasks in your lists:"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "1.[E][✘] party (at:Sat 23 May 2020 12:30 am)"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "```"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "### `bye` - Exits the program"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Yukilite"
        },
        "content": " "
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "Upon exit, this command automatically saves the existing list of tasks in a file."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "Format: `\u003cbye\u003e`"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "```"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "Yukilite": 197,
      "-": 20
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import static duke.constants.Messages.*;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yukilite"
        },
        "content": " * Welcome to the Duke, your Task Manager that can help you"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yukilite"
        },
        "content": " * with storing tasks as a todo, deadline, or event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yukilite"
        },
        "content": " *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yukilite"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "     * This method initializes variables."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "     * @param filename The name of the file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public Duke (String filename) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        storage \u003d new Storage(filename);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            tasks \u003d new TaskList(storage.readFile());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "     * This method runs the program by scanning in user"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "     * input. It looks out for keywords to add, delete, mark as"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "     * done, list or find tasks before it exits"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                String input \u003d ui.readInput();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                Command command \u003d parser.parseCommand(input);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                System.out.println(MESSAGE_ENTER_TASK);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                System.out.println(MESSAGE_REENTER_DATE);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                System.out.println(MESSAGE_REENTER_TASK_NUMBER);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                System.out.println(MESSAGE_NO_TASK_NUMBER_EXISTS);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "     * This is the main method of the program"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "     * @param args The main argument of this program"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            new File(DUKE_FILE_PATH).createNewFile();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        new Duke(DUKE_FILE_PATH).run();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yukilite": 83,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "     * The method executes the command provided by the user"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "     * @param taskList The list of tasks provided by the user"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "     * @param uiInput The user interface"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "     * @throws ParseException"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public abstract void execute(TaskList taskList, Ui uiInput, Storage storage) throws DukeException, ParseException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yukilite": 25
    }
  },
  {
    "path": "src/main/java/duke/commands/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.converter.timeConverter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.task.Tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import static duke.constants.Messages.MESSAGE_DEADLINE_DESCRIPTION_CANNOT_BE_EMPTY;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import static duke.constants.Messages.MESSAGE_TIME_DEADLINE_CANNOT_BE_EMPTY;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public DeadlineCommand (String command) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public void execute(TaskList taskList, Ui uiInput, Storage storage) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        String[] words \u003d command.split(\" \",2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        if (words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            throw new DukeException(MESSAGE_DEADLINE_DESCRIPTION_CANNOT_BE_EMPTY);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        String[] wordSplitter \u003d words[1].split(\"/by\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        String[] dateTime \u003d wordSplitter[1].trim().split(\" \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        if (dateTime.length \u003e 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            Tasks task \u003d new Deadline(wordSplitter[0].trim(), timeConverter.dateTime(wordSplitter[1].trim()));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            taskList.addTasks(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            storage.writeFile(taskList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            throw new DukeException(MESSAGE_TIME_DEADLINE_CANNOT_BE_EMPTY);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yukilite": 43
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import static duke.constants.Messages.MESSAGE_DELETE_DESCRIPTION_CANNOT_BE_EMPTY;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public DeleteCommand (String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public void execute(TaskList taskList, Ui uiInput, Storage storage) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        String[] words \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        if (words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            throw new DukeException(MESSAGE_DELETE_DESCRIPTION_CANNOT_BE_EMPTY);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            int check \u003d Integer.parseInt(words[1].trim()) - 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            taskList.deleteTask(check);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            storage.writeFile(taskList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yukilite": 31
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import static duke.constants.Messages.MESSAGE_NO_TASK_TO_MARK_DONE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public DoneCommand(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public void execute(TaskList taskList, Ui uiInput, Storage storage) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        String[] words \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        if (words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            throw new DukeException(MESSAGE_NO_TASK_TO_MARK_DONE);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            int check \u003d Integer.parseInt(words[1].trim()) - 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            taskList.completeTask(check);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            storage.writeFile(taskList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yukilite": 31
    }
  },
  {
    "path": "src/main/java/duke/commands/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.task.Tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.converter.timeConverter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import static duke.constants.Messages.MESSAGE_EVENT_DESCRIPTION_CANNOT_BE_EMPTY;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import static duke.constants.Messages.MESSAGE_TIME_EVENT_CANNOT_BE_EMPTY;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public EventCommand(String command) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public void execute(TaskList taskList, Ui uiInput, Storage storage) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        String[] words \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        if (words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            throw new DukeException(MESSAGE_EVENT_DESCRIPTION_CANNOT_BE_EMPTY);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        String[] wordSplitter \u003d words[1].split(\"/at\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        String[] dateTime \u003d wordSplitter[1].trim().split(\" \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        if (dateTime.length \u003e 1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            Tasks task \u003d new Event(wordSplitter[0].trim(), timeConverter.dateTime(wordSplitter[1].trim()));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            taskList.addTasks(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            storage.writeFile(taskList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            throw new DukeException(MESSAGE_TIME_EVENT_CANNOT_BE_EMPTY);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yukilite": 40
    }
  },
  {
    "path": "src/main/java/duke/commands/ExitProgram.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "public class ExitProgram extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public ExitProgram() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public void execute(TaskList taskList, Ui uiInput, Storage storage) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        uiInput.exit();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yukilite": 21
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import static duke.constants.Messages.MESSAGE_NO_APPROPRIATE_KEYWORD;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public FindCommand(String command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public void execute(TaskList taskList, Ui uiInput, Storage storage) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        String[] words \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        if (words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            throw new DukeException(MESSAGE_NO_APPROPRIATE_KEYWORD);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        taskList.find(words[1].trim());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yukilite": 28
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public void execute(TaskList taskList, Ui uiInput, Storage storage) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        taskList.listTask();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yukilite": 21
    }
  },
  {
    "path": "src/main/java/duke/commands/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.task.Tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import static duke.constants.Messages.MESSAGE_TODO_DESCRIPTION_CANNOT_BE_EMPTY;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public TodoCommand(String command) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public void execute(TaskList taskList, Ui uiInput, Storage storage) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        String[] words \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        if (words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            throw new DukeException(MESSAGE_TODO_DESCRIPTION_CANNOT_BE_EMPTY);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        Tasks task \u003d new Todo(words[1].trim());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        taskList.addTasks(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        storage.writeFile(taskList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yukilite": 32
    }
  },
  {
    "path": "src/main/java/duke/constants/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "package duke.constants;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static final String DUKE_FILE_PATH \u003d \"tasks.txt\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static final String COMMAND_LIST_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static final String COMMAND_DONE_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static final String COMMAND_EVENT_WORD \u003d \"event\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static final String COMMAND_DEADLINE_WORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static final String COMMAND_TODO_WORD \u003d \"todo\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static final String COMMAND_DELETE_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static final String COMMAND_BYE_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static final String MESSAGE_LIST_TASKS \u003d \" Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static final String MESSAGE_ADD_TASK \u003d \" Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static final String MESSAGE_LOADINGERROR \u003d \" Sorry. This file does not exist.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static final String MESSAGE_MARK_DONE \u003d \" Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static final String MESSAGE_MATCHING_TASKS \u003d \" Here are the matching tasks in your lists:\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static final String MESSAGE_GOODBYE \u003d \" Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static final String MESSAGE_REMOVED_TASKS \u003d \" Noted. I\u0027ve removed this task: \";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static final String MESSAGE_LIST_START \u003d \"Now you have \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static final String MESSAGE_LIST_END \u003d \" task in the list\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static final String MESSAGE_DEADLINE_DESCRIPTION_CANNOT_BE_EMPTY \u003d \"☹ OOPS!!! The description of a deadline cannot be empty.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static final String MESSAGE_TIME_DEADLINE_CANNOT_BE_EMPTY \u003d \"☹ OOPS!!! The time for a deadline cannot be empty.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static final String MESSAGE_TIME_EVENT_CANNOT_BE_EMPTY \u003d \"☹ OOPS!!! The time for an event cannot be empty.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static final String MESSAGE_NO_APPROPRIATE_KEYWORD \u003d \"☹ OOPS!!! You did not fill in an appropriate keyword.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static final String MESSAGE_EVENT_DESCRIPTION_CANNOT_BE_EMPTY \u003d \"☹ OOPS!!! The description of an event cannot be empty.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static final String MESSAGE_DELETE_DESCRIPTION_CANNOT_BE_EMPTY \u003d \"☹ OOPS!!! The description of a delete cannot be empty.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static final String MESSAGE_TODO_DESCRIPTION_CANNOT_BE_EMPTY \u003d \"☹ OOPS!!! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static final String MESSAGE_NO_TASK_TO_MARK_DONE \u003d \"☹ OOPS!!! You did not provide a task to mark as done.\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static final String MESSAGE_NO_COMMAND_EXISTS \u003d \"☹ OOPS!!! No such command exists! Try again?\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static final String MESSAGE_ENTER_TASK\u003d \"Please enter a task.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static final String MESSAGE_REENTER_DATE\u003d\"Please enter date in the correct format dd/mm/yyyy hhmm\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static final String MESSAGE_REENTER_TASK_NUMBER \u003d \"Please provide a task number to delete.\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static final String MESSAGE_NO_TASK_NUMBER_EXISTS \u003d \"The task number you entered does not exist.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static final String divider \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static final String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static final String lvlzero \u003d \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            + \" Hello! I\u0027m Duke \\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            + \" What can I do for you?\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            + \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static void printLogoMessage(String lvlzero) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        System.out.println(lvlzero);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yukilite": 53
    }
  },
  {
    "path": "src/main/java/duke/converter/timeConverter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "package duke.converter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "public class timeConverter {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static String dateTime (String dateTime) throws ParseException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        SimpleDateFormat simpleDateFormat1 \u003d new SimpleDateFormat(\"d/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        Date date \u003d simpleDateFormat1.parse(dateTime);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        SimpleDateFormat simpleDateFormat2 \u003d new SimpleDateFormat(\"EEE dd MMMM yyyy hh:mm a\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        return simpleDateFormat2.format(date);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yukilite": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public DukeException(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yukilite": 9
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import static duke.constants.Messages.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static Command parseCommand(String input) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        String[] words \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        String commandWord \u003d words[0];"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        Command newCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        switch (commandWord.toLowerCase()) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        case (COMMAND_BYE_WORD):"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            return new ExitProgram();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        case (COMMAND_LIST_WORD):"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        case (COMMAND_DONE_WORD):"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            return new DoneCommand(input);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        case (COMMAND_DEADLINE_WORD):"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            return new DeadlineCommand(input);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        case (COMMAND_EVENT_WORD):"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            return new EventCommand(input);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        case (COMMAND_DELETE_WORD):"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            return new DeleteCommand(input);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        case (COMMAND_TODO_WORD):"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            return new TodoCommand(input);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            throw new DukeException(MESSAGE_NO_COMMAND_EXISTS);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yukilite": 32
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.task.Tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    private static String filename;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public Storage(String filename) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        this.filename \u003d filename;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static void writeFile(TaskList list) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            BufferedWriter bufferWriter \u003d new BufferedWriter(new FileWriter(filename));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            for (int i \u003d 0; i \u003c list.getTaskCount(); i++) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                bufferWriter.write(list.getTaskList(i) + \"\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            bufferWriter.close();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public ArrayList\u003cTasks\u003e readFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        ArrayList\u003cTasks\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            BufferedReader bufferReader \u003d new BufferedReader(new FileReader(filename));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            String input \u003d bufferReader.readLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            int count \u003d 0;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            String status;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            while (input !\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                status \u003d input.substring(3, 6);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                if (input.startsWith(\"[T]\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    input \u003d input.substring(7).trim();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    Tasks task \u003d new Todo(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    if (status.equals(\"[\\u2713]\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                        list.get(count).markAsDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    count +\u003d 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                } else if (input.startsWith(\"[D]\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    input \u003d input.substring(7);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    String[] splitter \u003d input.split(\"\\\\(by:\", 2);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    String remove_bracket \u003d splitter[1].substring(0, splitter[1].length() - 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    Tasks task \u003d new Deadline(splitter[0].trim(), remove_bracket.trim());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    if (status.equals(\"[\\u2713]\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                        list.get(count).markAsDone();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    count +\u003d 1;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                } else if (input.startsWith(\"[E]\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    input \u003d input.substring(7);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    String[] splitter \u003d input.split(\"\\\\(at:\", 2);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    String remove_bracket \u003d splitter[1].substring(0, splitter[1].length() - 1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    Tasks task \u003d new Event(splitter[0].trim(), remove_bracket.trim());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    if (status.equals(\"[\\u2713]\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                        list.get(count).markAsDone();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    count +\u003d 1;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                input \u003d bufferReader.readLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            bufferReader.close();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            System.out.println(\"There\u0027s no file\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yukilite": 80
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "public class Deadline extends Tasks {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        super(description, \"D\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public void setBy(String by) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        return super.toString() + \" (by:\" + by + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public String getFileContents() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        return String.format(\"D|%s|%s|%s\", this.isDone, this.description, this.by);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Yukilite": 27
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "public class Event extends Tasks {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public Event (String description, String date) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        super(description, \"E\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public void setDate (String data) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        return super.toString() + \" (at:\" + date + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public String getFileContents() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        return String.format(\"E|%s|%s|%s\", this.isDone, this.description, this.date);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Yukilite": 22
    }
  },
  {
    "path": "src/main/java/duke/task/Tasks.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "public abstract class Tasks {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    protected int number;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    private static int currTaskNumber \u003d 1;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public Tasks(String description, String type) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        this.number \u003d currTaskNumber;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        currTaskNumber +\u003d 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public Tasks(String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public void markAsDone () {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public int getTaskNumber() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        return number;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public void setTaskNumber() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        this.number \u003d number;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public abstract String getFileContents();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        return \"[\" + type + \"]\" + \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yukilite": 46
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "public class Todo extends Tasks {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public Todo (String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        super(description, \"T\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public String getFileContents() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        return \"[T][\" + super.getStatusIcon() + \"] \" + super.description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yukilite": 15
    }
  },
  {
    "path": "src/main/java/duke/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.task.Tasks;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import duke.constants.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    private static ArrayList\u003cTasks\u003e list;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public TaskList(ArrayList\u003cTasks\u003e list) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public int getTaskCount() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public Tasks getTaskList(int i) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        return list.get(i);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static void completeTask(int i) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        list.get(i).markAsDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        System.out.println(Messages.divider + \"\\n\" + Messages.MESSAGE_MARK_DONE+ \"\\n\" + \"  \" + list.get(i).toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        System.out.println(Messages.divider);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static void deleteTask(int i) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        System.out.println(Messages.divider+ \"\\n\" + Messages.MESSAGE_REMOVED_TASKS + \"\\n\" + \"  \"+ list.get(i).toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        list.remove(i);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        System.out.println(Messages.MESSAGE_LIST_START + list.size() + Messages.MESSAGE_LIST_END);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        System.out.println(Messages.divider);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static void addTasks(Tasks t) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        list.add(t);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        if (list.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            System.out.println(Messages.divider + \"\\n\" + Messages.MESSAGE_ADD_TASK +\"\\n\" +  \"   \" + t.toString() + \"\\n\" + Messages.MESSAGE_LIST_START + list.size() + Messages.MESSAGE_LIST_END);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            System.out.println(Messages.divider);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            System.out.println( Messages.divider + \"\\n\" + Messages.MESSAGE_ADD_TASK+\"\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    + \"   \" + t.toString() + \"\\n\" + Messages.MESSAGE_LIST_START + list.size() + Messages.MESSAGE_LIST_END);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            System.out.println(Messages.divider);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static void listTask () {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        System.out.println(Messages.divider);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        System.out.println(Messages.MESSAGE_LIST_TASKS);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            System.out.println(i+1 + \".\" + list.get(i).toString());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        System.out.println(Messages.divider);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static void find(String match) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        System.out.println(Messages.MESSAGE_MATCHING_TASKS);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            if (list.get(i).description.contains(match)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                System.out.println(count+1 + \".\" + list.get(i).toString());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Yukilite": 72
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import static duke.constants.Messages.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public String readInput() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        System.out.println(lvlzero);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        System.out.println(MESSAGE_GOODBYE);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        System.out.println(MESSAGE_LOADINGERROR);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yukilite": 24
    }
  }
]

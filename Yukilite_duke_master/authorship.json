[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "public class Deadline extends Tasks {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        super(description, \"D\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public void setBy(String by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        return super.toString() + \" (by:\" + by + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public String getFileContents() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        return String.format(\"D|%s|%s|%s\", this.isDone, this.description, this.by);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Yukilite": 25
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    private static String filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    //private static final String DUKE_FILE_PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    private static final String COMMAND_LIST_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    private static final String COMMAND_DONE_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    private static final String COMMAND_EVENT_WORD \u003d \"event\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    private static final String COMMAND_DEADLINE_WORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    private static final String COMMAND_TODO_WORD \u003d \"todo\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    private static final String COMMAND_DELETE_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    private static final String COMMAND_BYE_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    private static final String MESSAGE_LIST_TASKS \u003d \" Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    private static final String MESSAGE_ADD_TASK \u003d \" Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    private static final String MESSAGE_MARK_DONE \u003d \" Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    private static final String MESSAGE_GOODBYE \u003d \" Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    private static String divider \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    private static String description \u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    private static String deleteIndex \u003d null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    String by;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    String date;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    private static int totalTasks \u003d 0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public static void main(String[] args) throws DukeException, IOException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        String lvlzero \u003d \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                + \" Hello! I\u0027m Duke \\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                + \" What can I do for you?\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                + \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        System.out.println(lvlzero);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        ArrayList\u003cTasks\u003e listOfTasks \u003d new ArrayList\u003cTasks\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        //Tasks[] listOfTasks \u003d new Tasks[100];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        //readDataFromFile(listOfTasks);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                String firstCommandType \u003d null;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                String secondCommandType \u003d null;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                String inputLine \u003d in.nextLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                String[] commandType \u003d inputLine.split(\" \", 2);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                if (commandType.length \u003e 1) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    firstCommandType \u003d commandType[0];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    secondCommandType \u003d commandType[1];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    firstCommandType \u003d commandType[0];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    secondCommandType \u003d \"\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                switch (firstCommandType) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                case COMMAND_LIST_WORD:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    printMessage(MESSAGE_LIST_TASKS, divider);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    for (int i \u003d 0; i \u003c totalTasks; ++i) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                        int index \u003d i + 1;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                        System.out.print(\"  \" + index + \". \" + listOfTasks.get(i) + \"\\n\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                //    System.out.println(divider);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                case COMMAND_BYE_WORD:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                        saveDataToFile(listOfTasks);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                        printMessage(MESSAGE_GOODBYE, divider);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                        //  System.out.println(divider);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    } catch (IOException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                        System.out.println(\"Faced an error - File cannot be saved.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                case COMMAND_DONE_WORD:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    int ID \u003d Integer.parseInt(secondCommandType);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    ID -\u003d 1;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    listOfTasks.get(ID).markAsDone(true);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    printMessage(MESSAGE_MARK_DONE, divider);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    printMessage(divider, \"\\t\\t\" + listOfTasks.get(ID).toString());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                case COMMAND_EVENT_WORD:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    String[] events \u003d secondCommandType.split(\"/at\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    if (events[0] \u003d\u003d \"\") {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    Event newEvent \u003d new Event(events[0], events[1]);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    printMessage(MESSAGE_ADD_TASK + \"\\n\" + \"  \" + newEvent, divider);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    totalTasks +\u003d 1;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    printTaskCount();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "               //     System.out.println(divider);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    listOfTasks.add(newEvent);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                case COMMAND_DEADLINE_WORD:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    String[] deadlines \u003d secondCommandType.split(\"/by\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    if (deadlines[0] \u003d\u003d \"\") {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    Deadline newDeadLine \u003d new Deadline(deadlines[0], deadlines[1]);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    printMessage(MESSAGE_ADD_TASK + \"\\n\" + \"  \" + newDeadLine, divider);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    totalTasks +\u003d 1;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    printTaskCount();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                //    System.out.println(divider);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    listOfTasks.add(newDeadLine);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                case COMMAND_TODO_WORD:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    description \u003d secondCommandType;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    if (description \u003d\u003d \"\") {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    Todo newToDo \u003d new Todo(description, \"T\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    printMessage(MESSAGE_ADD_TASK + \"\\n\" + \"  \" + newToDo, divider);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    totalTasks +\u003d 1;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    printTaskCount();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                //    System.out.println(divider);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    listOfTasks.add(newToDo);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                case COMMAND_DELETE_WORD:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    deleteIndex \u003d secondCommandType;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    if (deleteIndex \u003d\u003d \"\") {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of a delete cannot be empty.\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    int intDeleteIndex \u003d Integer.parseInt(deleteIndex) - 1;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    printDeleteMsg(listOfTasks.get(intDeleteIndex));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    listOfTasks.remove(intDeleteIndex);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    //printMessage(MESSAGE_DELETE_TASK +\"\\n\" + \" \" + newDelete, divider);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    //printTaskCount();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                System.out.println(divider);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "            System.out.println(divider);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    private static void printMessage(String msg, String divider) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        System.out.println(divider);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    private static void printTaskCount() {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        System.out.println(\" Now you have \" + totalTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    private static void printDeleteMsg(Tasks task) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        System.out.println(\" Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        System.out.println(\" \" + task);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        totalTasks -\u003d 1;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        System.out.println(\" Now you have \" + totalTasks + \" task(s) in the list. \");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "//    private static void readDataFromFile(ArrayList\u003cTasks\u003e listOfTasks) throws IOException {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "//        FileReader fileReader \u003d new FileReader(\"data/duke.txt\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "//        BufferedReader bufferedReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "//        String line \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "//        while (line!\u003d null) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "//            line \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    // private static void saveDataToFile(ArrayList\u003cTasks\u003e listOfTasks) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    //     try {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    //         FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    //         for (Tasks tasks: listOfTasks) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    //             fileWriter.write(tasks.getFileString() + \"\\n\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    //         }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    //         fileWriter.close();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    //         System.out.println(\"The tasks have been saved to disk.\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    //     } catch (IOException e) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    //         System.out.println(\"An error occurred when saving data to file.\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    //     }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    // }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "//    private static void saveDataToFile(ArrayList\u003cTasks\u003e listOfTasks) throws IOException {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "//            File file \u003d new File (\"data/duke.txt\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "//            file.createNewFile();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "//            FileWriter fileWriter \u003d new FileWriter(\"data/duke.txt\", false);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "//            for (Tasks tasks: listOfTasks) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "//                fileWriter.write(tasks.getFileContents());"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "//                fileWriter.write(System.lineSeparator());"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "//            fileWriter.close();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "//            System.out.println(\"The tasks have been saved to disk.\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "//        } catch (IOException e) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "//            System.out.println(\"An error occurred when saving data to file.\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yukilite": 202,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "package duke; "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public DukeException(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yukilite": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "package duke; "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "public class Event extends Tasks {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public Event (String description, String date) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        super(description, \"E\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public void setDate (String data) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        return super.toString() + \" (at:\" + date + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public String getFileContents() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        return String.format(\"E|%s|%s|%s\", this.isDone, this.description, this.date);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Yukilite": 24
    }
  },
  {
    "path": "src/main/java/Tasks.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "public abstract class Tasks {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    protected int number;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    private static int currTaskNumber \u003d 1;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public Tasks(String description, String type) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        this.number \u003d currTaskNumber;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        currTaskNumber +\u003d 1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public Tasks(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public void markAsDone (boolean isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public int getTaskNumber() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        return number;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public void setTaskNumber() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        this.number \u003d number;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        return \"[\" + type + \"]\" + \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    abstract public String getFileContents();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yukilite": 44
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "package duke; "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "public class Todo extends Tasks {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public Todo (String description, String type) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        super(description, type);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yukilite"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    public String getFileContents() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "        return String.format(\"T|%s|%s\", this.isDone, this.description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yukilite"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yukilite": 15
    }
  }
]

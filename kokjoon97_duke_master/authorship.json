[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 2,
      "-": 37
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features    "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "### Feature 1 - List"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Allows the user to see all the current tasks in the list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "### Feature 2 - Add tasks"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "The user is able to add tasks of 3 different types, namely todo, events and deadlines."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "### Feature 3 - Mark as done"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "The user is able to mark tasks as done once he is finished with them, allowing for easy tracking of their statuses."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "### Feature 4 - Delete"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "The user can delete any task he wants, in order to avoid cluttering up the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "### Feature 5 - Clear"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "The user can easily clear the list and start all over again."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "### Feature 6 - Find"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "In case the user has a very large list, there is a find function to filter the list based on keywords specified by the user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "### `help`- Display all available commands with their formats and usage."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Example of usage: **help**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "**help"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "-Displays all commands and their input format**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "**list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "-Shows all tasks in the list currently**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "**done (index)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "-Marks task at specified index as done**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "**delete (index)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "-Deletes the task at the specified index**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "**clear"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "-Clears all tasks in the list**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "**bye"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "-Exits the application**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "**todo (item)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "-Adds a todo item to the list**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "**event (item) /at (date or time)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "-Adds an event to the list**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "**deadline (item) /by (date or time)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "-Adds a deadline to the list**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "**find (string)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "-Returns all tasks with the keyword (string) in their description**  "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "### `todo (event)`- Adds a todo item to the list.  "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Example of usage: **todo finishIP**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Example outcome:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "**Got it. I\u0027ve added this task:**  "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "**[T][Not complete] finishIP** "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "**Now you have 1 tasks in the list**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "### `deadline (item) /by (date or time)`- Adds a deadline to the list."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Example of usage: **deadline launch /by March**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Example outcome:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "**Got it. I\u0027ve added this task:**  "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "**[D][Not complete] launch (by: March)** "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "**Now you have 1 tasks in the list**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "### `event (item) /at (date or time)`- Adds an event to the list."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Example of usage: **event avengersConference /at 1800h**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Example outcome:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "**Got it. I\u0027ve added this task:**  "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "**[E][Not complete] avengersConference (at: 1800h)** "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "**Now you have 1 tasks in the list**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "### `list`- Lists all the tasks."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Example of usage: **list**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Example outcome:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "**Here are the tasks in your list:**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "**1.[T][Not complete] writeReadme**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "**2.[E][Not complete] sleep (at: 12 am)**  "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "### `done (index)`- Marks the task at the specified index as done."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Example of usage: **done 1**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Example outcome:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "**Nice! I\u0027ve marked this task as done:**  "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "**[T][Complete] writeReadme**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "### `delete (index)`- Deletes the task at the specified index."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Example of usage: **delete 1**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Example outcome:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "**Noted. I\u0027ve removed this task:**  "
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "**[T][Complete] writeReadme**  "
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "**Now you have 1 tasks in the list.**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "### `clear`- Clears all the tasks."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Example of usage: **clear**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Example outcome:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "**All tasks removed successfully!**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " "
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "### `find (keyword)`- Filters the list according to the keyword. Returns the full list if no keyword is specified."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Example of usage: **find sleep**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Example outcome:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "**Here are the matching tasks in your list:**  "
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "**1.[E][Not complete] sleep (at: 12 am)**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "### `bye`- Closes the application"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Example of usage: **bye**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Example outcome:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "**Bye. Hope to see you again soon!**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 152,
      "-": 12
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.commands.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.exception.FormatErrorException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.exception.IncompleteInputException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.exception.InvalidInputException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.exception.OutOfBoundsException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import static duke.common.Messages.WELCOME_MESSAGE;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import static duke.common.Messages.COMMAND_FAIL;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import static duke.common.Messages.INVALID_MESSAGE;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import static duke.common.Messages.INCOMPLETE_MESSAGE;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import static duke.common.Messages.INDEX_PROBLEM_MESSAGE;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import static duke.common.Messages.FILE_ERROR_MESSAGE;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import static duke.common.Messages.FORMAT_PROBLEM_MESSAGE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " * Entry point of the Duke application."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " * Manages interactions between storage, UI and the list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Storage object that loads tasks from file and saves tasks to file */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** List of tasks */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static TaskList tasks;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** UI that interacts with the user */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Flag that indicates whether an exit command has been encountered */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static boolean isExit;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Runs the application."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param args Not significant in this case."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        initialiseDuke();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            storage.initialiseList(tasks);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            ui.showMessage(FILE_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        } catch (InvalidInputException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            ui.showMessage(INVALID_MESSAGE);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        ui.showMessage(WELCOME_MESSAGE);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                String command \u003d ui.readInput();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                Command newCommand \u003d Parser.parseCommand(command,tasks);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                CommandResult result \u003d newCommand.execute(tasks,ui,storage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                ui.showResult(result);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                isExit \u003d newCommand.isExit;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            } catch (InvalidInputException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                ui.showMessage(INVALID_MESSAGE);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            } catch (IncompleteInputException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                ui.showMessage(INCOMPLETE_MESSAGE);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                ui.showMessage(INDEX_PROBLEM_MESSAGE);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            } catch (OutOfBoundsException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                ui.showMessage(INDEX_PROBLEM_MESSAGE);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            } catch (FormatErrorException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                ui.showMessage(FORMAT_PROBLEM_MESSAGE);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                ui.showMessage(COMMAND_FAIL);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Initialises the application, including all required resources."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static void initialiseDuke() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 88,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/commands/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import static duke.common.Messages.ADD_MESSAGE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " * Adds a deadline to the list of tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Description of the task */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Time by which the task has to be finished */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static String by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Format of the command */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static String COMMAND_PHRASE \u003d \"deadline (item) /by (date or time)\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Usage of the command */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static String COMMAND_USAGE \u003d COMMAND_PHRASE + System.lineSeparator() +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            \"-Adds a deadline to the list\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public AddDeadlineCommand(String description, String by) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Returns a \u003ccode\u003eCommandResult\u003c/code\u003e with feedback to the user initialised"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e object that the command will execute on."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param textUi \u003ccode\u003eUi\u003c/code\u003e object that is being used to display output to the user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param storage \u003ccode\u003eStorage\u003c/code\u003e object that is able to access tasks saved in memory."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @return \u003ccode\u003eCommandResult\u003c/code\u003e."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public CommandResult execute(TaskList tasks, Ui textUi, Storage storage) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(description,by);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        String feedback \u003d ADD_MESSAGE + System.lineSeparator()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                + newDeadline.toString() + System.lineSeparator() + \"Now you have \" + (tasks.getSize()+1) + \" tasks in the list\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        tasks.add(newDeadline);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        storage.writeDeadline(textUi,description,by);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        return new CommandResult(feedback);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 51
    }
  },
  {
    "path": "src/main/java/duke/commands/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import static duke.common.Messages.ADD_MESSAGE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " * Adds an event to the list of tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Description of the task */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Time at which the task takes place */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static String duration;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Format of the command */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static String COMMAND_PHRASE \u003d \"event (item) /at (date or time)\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Usage of the command */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static String COMMAND_USAGE \u003d COMMAND_PHRASE + System.lineSeparator() +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            \"-Adds an event to the list\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public AddEventCommand(String description, String duration) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Returns a \u003ccode\u003eCommandResult\u003c/code\u003e with feedback to the user initialised."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e object that the command will execute on."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param textUi \u003ccode\u003eUi\u003c/code\u003e object that is being used to display output to the user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param storage \u003ccode\u003eStorage\u003c/code\u003e object that is able to access tasks saved in memory."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @return \u003ccode\u003eCommandResult\u003c/code\u003e."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public CommandResult execute(TaskList tasks, Ui textUi, Storage storage) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        Event newEvent \u003d new Event(description,duration);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        String feedback \u003d ADD_MESSAGE + System.lineSeparator()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                + newEvent.toString() + System.lineSeparator() + \"Now you have \" + (tasks.getSize()+1) + \" tasks in the list\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        tasks.add(newEvent);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        storage.writeEvent(textUi,description,duration);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        return new CommandResult(feedback);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 51
    }
  },
  {
    "path": "src/main/java/duke/commands/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import static duke.common.Messages.ADD_MESSAGE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " * Adds a to-do to the list of tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "public class AddTodoCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Description of the task */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Format of the command */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static String COMMAND_PHRASE \u003d \"todo (item)\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Usage of the command */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static String COMMAND_USAGE \u003d COMMAND_PHRASE + System.lineSeparator() +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            \"-Adds a todo item to the list\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public AddTodoCommand(String description) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Returns a \u003ccode\u003eCommandResult\u003c/code\u003e with feedback to the user initialised."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e object that the command will execute on."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param textUi \u003ccode\u003eUi\u003c/code\u003e object that is being used to display output to the user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param storage \u003ccode\u003eStorage\u003c/code\u003e object that is able to access tasks saved in memory."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @return \u003ccode\u003eCommandResult\u003c/code\u003e."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public CommandResult execute(TaskList tasks, Ui textUi, Storage storage) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        Todo newTodo \u003d new Todo(description);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        String feedback \u003d ADD_MESSAGE + System.lineSeparator()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                + newTodo.toString() + System.lineSeparator() + \"Now you have \" + (tasks.getSize()+1) + \" tasks in the list\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        tasks.add(newTodo);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        storage.writeTodo(textUi,description);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        return new CommandResult(feedback);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 47
    }
  },
  {
    "path": "src/main/java/duke/commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import static duke.common.Messages.BYE_MESSAGE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " * Displays the bye message to the user before closing the application."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Format of the command */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String COMMAND_PHRASE \u003d \"bye\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Usage of the command */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String COMMAND_USAGE \u003d COMMAND_PHRASE"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            + System.lineSeparator() + \"-Exits the application\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Returns a \u003ccode\u003eCommandResult\u003c/code\u003e with feedback to the user initialised."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e object that the command will execute on."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param textUi \u003ccode\u003eUi\u003c/code\u003e object that is being used to display output to the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param storage \u003ccode\u003eStorage\u003c/code\u003e object that is able to access tasks saved in memory."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @return \u003ccode\u003eCommandResult\u003c/code\u003e."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public CommandResult execute(TaskList tasks, Ui textUi, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        return new CommandResult(BYE_MESSAGE);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 33
    }
  },
  {
    "path": "src/main/java/duke/commands/ClearCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import static duke.common.Messages.CLEAR_MESSAGE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " * Clears the list of tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Format of the command */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String COMMAND_PHRASE \u003d \"clear\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Usage of the command */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String COMMAND_USAGE \u003d COMMAND_PHRASE"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            + System.lineSeparator() + \"-Clears all tasks in the list\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Returns a \u003ccode\u003eCommandResult\u003c/code\u003e with feedback to the user initialised."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e object that the command will execute on."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param textUi \u003ccode\u003eUi\u003c/code\u003e object that is being used to display output to the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param storage \u003ccode\u003eStorage\u003c/code\u003e object that is able to access tasks saved in memory."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @return \u003ccode\u003eCommandResult\u003c/code\u003e."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public CommandResult execute(TaskList tasks, Ui textUi, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        String feedback \u003d CLEAR_MESSAGE;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        tasks.clearList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        storage.performCleanup(textUi);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        return new CommandResult(feedback);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 35
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " * Represents an executable command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Flag that will be set to true if \"bye\" command is encountered */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public boolean isExit \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Throws an exception if invoked because this function can only be invoked for child classes."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e object that the command will execute on."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param textUi \u003ccode\u003eUi\u003c/code\u003e object that is being used to display output to the user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param storage \u003ccode\u003eStorage\u003c/code\u003e object that is able to access tasks saved in memory."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @return \u003ccode\u003eCommandResult\u003c/code\u003e."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @throws InvalidCommandException If this function is invoked for this class."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public CommandResult execute(TaskList tasks, Ui textUi, Storage storage) throws InvalidCommandException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        throw new InvalidCommandException();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 29
    }
  },
  {
    "path": "src/main/java/duke/commands/CommandResult.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " * Represents the result of a command execution"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Output displayed to user */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public final String feedback;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** List of tasks to store results requested by user */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public CommandResult(String feedback) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        this.feedback \u003d feedback;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        tasks \u003d null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public CommandResult(String feedback,ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        this.feedback \u003d feedback;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 27
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import static duke.common.Messages.DELETE_MESSAGE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " * Deletes a task at the specified index."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Index of the task to be removed */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Format of the command */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String COMMAND_PHRASE \u003d \"delete (index)\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Usage of the command */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String COMMAND_USAGE \u003d COMMAND_PHRASE"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            + System.lineSeparator() + \"-Deletes the task at the specified index\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Returns a \u003ccode\u003eCommandResult\u003c/code\u003e with feedback to the user initialised."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e object that the command will execute on."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param textUi \u003ccode\u003eUi\u003c/code\u003e object that is being used to display output to the user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param storage \u003ccode\u003eStorage\u003c/code\u003e object that is able to access tasks saved in memory."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @return \u003ccode\u003eCommandResult\u003c/code\u003e."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public CommandResult execute(TaskList tasks, Ui textUi, Storage storage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        index -\u003d 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        String feedback \u003d DELETE_MESSAGE + System.lineSeparator() + tasks.getIndex(index)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                + System.lineSeparator() + \"Now you have \" + (tasks.getSize()-1) + \" tasks in the list.\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        tasks.removeTask(index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        storage.saveChange(textUi,tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        return new CommandResult(feedback);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 45
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import static duke.common.Messages.COMPLETE_MESSAGE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " * Marks task at specified index as done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Index of task to be marked as done */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Format of the command */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String COMMAND_PHRASE \u003d \"done (index)\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Usage of the command */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String COMMAND_USAGE \u003d COMMAND_PHRASE"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            + System.lineSeparator() + \"-Marks task at specified index as done\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Returns a \u003ccode\u003eCommandResult\u003c/code\u003e with feedback to the user initialised."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e object that the command will execute on."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param textUi \u003ccode\u003eUi\u003c/code\u003e object that is being used to display output to the user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param storage \u003ccode\u003eStorage\u003c/code\u003e object that is able to access tasks saved in memory."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @return \u003ccode\u003eCommandResult\u003c/code\u003e."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public CommandResult execute(TaskList tasks, Ui textUi, Storage storage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        index -\u003d 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        tasks.markTask(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        String feedback \u003d COMPLETE_MESSAGE + System.lineSeparator() + tasks.getIndex(index).toString();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        storage.saveChange(textUi,tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        return new CommandResult(feedback);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 44
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import static duke.common.Messages.FILTER_MESSAGE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import static duke.common.Messages.NO_RESULTS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " * Filters the list based on a specified keyword."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Keyword specified by user */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static String keyword;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Format of the command */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static String COMMAND_PHRASE \u003d \"find (string)\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Usage of the command */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static String COMMAND_USAGE \u003d COMMAND_PHRASE + System.lineSeparator()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            + \"-Returns all tasks with the keyword (string) in their description\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Returns a \u003ccode\u003eCommandResult\u003c/code\u003e with feedback to the user and filtered list of tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e object that the command will execute on."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param textUi \u003ccode\u003eUi\u003c/code\u003e object that is being used to display output to the user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param storage \u003ccode\u003eStorage\u003c/code\u003e object that is able to access tasks saved in memory."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @return \u003ccode\u003eCommandResult\u003c/code\u003e."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public CommandResult execute(TaskList tasks, Ui textUi, Storage storage) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        ArrayList\u003cTask\u003e filteredList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        int size \u003d tasks.getSize();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            Task unfilteredTask \u003d tasks.getIndex(i);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            if (unfilteredTask.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                filteredList.add(unfilteredTask);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        if (filteredList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            String feedback \u003d NO_RESULTS;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            return new CommandResult(feedback);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            String feedback \u003d FILTER_MESSAGE;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            return new CommandResult(feedback,filteredList);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 56
    }
  },
  {
    "path": "src/main/java/duke/commands/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " * Displays all available commands with their format and usage."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "public class HelpCommand extends Command{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Format of the command */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String COMMAND_PHRASE \u003d \"help\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Usage of the command */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String COMMAND_USAGE \u003d COMMAND_PHRASE + System.lineSeparator()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            + \"-Displays all commands and their input format\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Returns a \u003ccode\u003eCommandResult\u003c/code\u003e with feedback to the user initialised."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e object that the \u003ccode\u003eCommand\u003c/code\u003e will execute on."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param textUi \u003ccode\u003eUi\u003c/code\u003e object that is being used to display output to the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param storage \u003ccode\u003eStorage\u003c/code\u003e object that is able to access tasks saved in memory."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @return \u003ccode\u003eCommandResult\u003c/code\u003e."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public CommandResult execute(TaskList tasks, Ui textUi, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        String feedback \u003d HelpCommand.COMMAND_USAGE + \"\\n\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                + ListCommand.COMMAND_USAGE + \"\\n\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                + DoneCommand.COMMAND_USAGE + \"\\n\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                + DeleteCommand.COMMAND_USAGE + \"\\n\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                + ClearCommand.COMMAND_USAGE + \"\\n\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                + ByeCommand.COMMAND_USAGE + \"\\n\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                + AddTodoCommand.COMMAND_USAGE + \"\\n\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                + AddEventCommand.COMMAND_USAGE + \"\\n\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                + AddDeadlineCommand.COMMAND_USAGE + \"\\n\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                + FindCommand.COMMAND_USAGE + \"\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        return new CommandResult(feedback);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 41
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import static duke.common.Messages.LIST_MESSAGE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import static duke.common.Messages.NO_TASK_MESSAGE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " * Lists all the tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Format of the command */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String COMMAND_PHRASE \u003d \"list\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Usage of the command */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String COMMAND_USAGE \u003d COMMAND_PHRASE"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            + System.lineSeparator() + \"-Shows all tasks in the list currently\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Returns a \u003ccode\u003eCommandResult\u003c/code\u003e with feedback to the user and the list of all tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e object that the \u003ccode\u003eCommand\u003c/code\u003e will execute on."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param textUi \u003ccode\u003eUi\u003c/code\u003e object that is being used to display output to the user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param storage \u003ccode\u003eStorage\u003c/code\u003e object that is able to access tasks saved in memory."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @return \u003ccode\u003eCommandResult\u003c/code\u003e."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public CommandResult execute(TaskList tasks, Ui textUi, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        String feedback;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        if (tasks.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            feedback \u003d NO_TASK_MESSAGE;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            return new CommandResult(feedback);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            feedback \u003d LIST_MESSAGE;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            ArrayList\u003cTask\u003e instructions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                instructions.add(tasks.getIndex(i));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            return new CommandResult(feedback,instructions);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 47
    }
  },
  {
    "path": "src/main/java/duke/common/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "package duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " * Container for all user visible messages."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String WELCOME_MESSAGE \u003d \"Hello! I\u0027m KJ\\nHow can I help you today?\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String NO_RESULTS \u003d \"Sorry, I could not find any matching tasks!\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String FILTER_MESSAGE \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String COMMAND_FAIL \u003d \"This command can only be executed by child classes\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String ADD_MESSAGE \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String COMPLETE_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String DELETE_MESSAGE \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String BYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String LIST_MESSAGE \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String CLEAR_MESSAGE \u003d \"All tasks removed successfully!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String NO_TASK_MESSAGE \u003d \"There are no tasks in your list currently.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String INVALID_MESSAGE \u003d \"Oops, I\u0027m sorry but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String INCOMPLETE_MESSAGE \u003d \"Uh-oh, I need more information to process that request :-(\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String INDEX_PROBLEM_MESSAGE \u003d \"It appears you have entered an invalid index :O\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String FILE_ERROR_MESSAGE \u003d \"Error: Could not create save file\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String WRITE_ERROR_MESSAGE \u003d \"Error: Could not save data to file\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String FORMAT_PROBLEM_MESSAGE \u003d \"The format of your command is incorrect, please use:\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            + \"deadline (item) /by (time)\\n\" + \"event (item) /at (time)\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 42
    }
  },
  {
    "path": "src/main/java/duke/exception/FormatErrorException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " * Signals an error that occurs if user does not use /by or /at for deadline and event inputs."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "public class FormatErrorException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/IncompleteInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " * Signals an error that occurs if user did not provide a keyword or index as expected."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "public class IncompleteInputException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " * Signals an error that occurs when execute method is called on a \u003ccode\u003eCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " * Signals an error that occurs when user enters an unrecognised command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "public class InvalidInputException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/OutOfBoundsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " * Signals an error that occurs when index entered by user is invalid."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "public class OutOfBoundsException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 8
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.commands.AddDeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.commands.AddEventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.commands.AddTodoCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.commands.ByeCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.commands.ClearCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.commands.DoneCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.commands.FindCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.commands.HelpCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.commands.ListCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.exception.FormatErrorException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.exception.IncompleteInputException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.exception.InvalidInputException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.exception.OutOfBoundsException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " * Parses user input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Resulting command after parsing */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static Command newCommand;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Individual strings of the command after it is split by spaces */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static String[] phrases;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** First word in the command string */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static String commandWord;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Index supplied by user if any */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static int index;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Parses the user command supplied for execution."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param command Command supplied by user."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param tasks Current task list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @return \u003ccode\u003eCommand\u003c/code\u003e object obtained after parsing."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @throws InvalidInputException If command is not recognised."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @throws IncompleteInputException If user did not supply index or keyword."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @throws FormatErrorException If user did not use /by or /at."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @throws OutOfBoundsException If user supplied an index that was out of bounds."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static Command parseCommand(String command, TaskList tasks) throws InvalidInputException,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            IncompleteInputException, FormatErrorException, OutOfBoundsException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        prepareCommand(command);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        switch(commandWord) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            createByeCommand();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            createListCommand();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            checkCompleteInput();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            checkWithinBounds(tasks);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            createDoneCommand();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            checkCompleteInput();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            createDeadlineCommand(command);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            checkCompleteInput();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            createEventCommand(command);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            checkCompleteInput();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            createTodoCommand(command);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            checkCompleteInput();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            checkWithinBounds(tasks);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            createDeleteCommand();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        case \"clear\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            createClearCommand();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            createHelpCommand();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            createFindCommand();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            throw new InvalidInputException();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        return newCommand;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Initialises the FindCommand."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static void createFindCommand() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        if (phrases.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            newCommand \u003d new ListCommand();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            newCommand \u003d new FindCommand(phrases[1]);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Initialises the HelpCommand."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static void createHelpCommand() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        newCommand \u003d new HelpCommand();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Initialises the ClearCommand."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static void createClearCommand() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        newCommand \u003d new ClearCommand();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Initialises the DeleteCommand."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static void createDeleteCommand() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        newCommand \u003d new DeleteCommand(index);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Initialises the AddTodoCommand."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param command Command supplied by the user."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static void createTodoCommand(String command) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        String description \u003d command.substring(phrases[0].length()+1);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        newCommand \u003d new AddTodoCommand(description);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Initialises the AddEventCommand."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param command Command supplied by the user."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @throws FormatErrorException If user did not use /at in command."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static void createEventCommand(String command) throws FormatErrorException {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        int pos \u003d command.indexOf(\"/at\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        if (pos \u003d\u003d -1) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            throw new FormatErrorException();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        String description \u003d command.substring(phrases[0].length()+1,pos-1);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        String duration \u003d command.substring(pos+4);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        newCommand \u003d new AddEventCommand(description,duration);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Initialises the AddDeadlineCommand."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param command Command supplied by the user."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @throws FormatErrorException If user did not use /by in command."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static void createDeadlineCommand(String command) throws FormatErrorException {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        int position \u003d command.indexOf(\"/by\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        if (position \u003d\u003d -1) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            throw new FormatErrorException();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        String description \u003d command.substring(phrases[0].length()+1,position-1);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        String by \u003d command.substring(position+4);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        newCommand \u003d new AddDeadlineCommand(description,by);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Initialises the DoneCommand with the user-specified index."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static void createDoneCommand() {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        newCommand \u003d new DoneCommand(index);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Checks if index supplied by user is within bounds."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param tasks Current list of tasks."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @throws OutOfBoundsException If user supplied an index that is out of bounds."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static void checkWithinBounds(TaskList tasks) throws OutOfBoundsException {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        index \u003d Integer.parseInt(phrases[1]);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        if ((index \u003e tasks.getSize()) || (index \u003c 1)) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            throw new OutOfBoundsException();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Checks if user supplied the index if it is required by the command."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @throws IncompleteInputException If user did not supply an index or keyword that was required."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static void checkCompleteInput() throws IncompleteInputException {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        if (phrases.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            throw new IncompleteInputException();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Initialises the ListCommand."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static void createListCommand() {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        newCommand \u003d new ListCommand();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Initialises the ByeCommand."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static void createByeCommand() {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        newCommand \u003d new ByeCommand();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Extracts the command word from the user supplied command."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param command Command supplied by the user."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @throws InvalidInputException If user entered no command or command has more arguments than required."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static void prepareCommand(String command) throws InvalidInputException {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        phrases \u003d command.split(\" \");"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        if (phrases.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            throw new InvalidInputException();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            commandWord \u003d phrases[0];"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            String[] keywords \u003d {\"bye\",\"clear\",\"help\",\"list\"};"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            if (phrases.length !\u003d 1) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                for (String t : keywords) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                    if (commandWord.equals(t)) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                        throw new InvalidInputException();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 236
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.exception.InvalidInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import static duke.common.Messages.WRITE_ERROR_MESSAGE;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " * Loads tasks from file and saves tasks to file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static int savedType \u003d 0;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static int savedStatus \u003d 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static int savedDescription \u003d 2;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static int savedBy \u003d 3;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static final String DEFAULT_FILEPATH \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    File savedData \u003d new File(DEFAULT_FILEPATH);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    Scanner loader;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Writes to the file whenever a task has been deleted or marked as done."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param textUi \u003ccode\u003eUi\u003c/code\u003e object that interacts with the user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e object that contains all the tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public void saveChange(Ui textUi, TaskList tasks) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            FileWriter textAdder \u003d new FileWriter(DEFAULT_FILEPATH);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            int size \u003d tasks.getSize();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            for (int i \u003d 0; i \u003c size; i +\u003d 1) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                Task newVersion \u003d tasks.getIndex(i);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                if (newVersion instanceof Todo) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                    textAdder.write(\"T|\" + newVersion.getStatus() + \"|\" + newVersion.getDescription() + \"\\n\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                } else if (newVersion instanceof Event) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                    textAdder.write(\"E|\" + newVersion.getStatus() + \"|\" + newVersion.getDescription() + \"|\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                            + ((Event) newVersion).getDuration() + \"\\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                    textAdder.write(\"D|\" + newVersion.getStatus() + \"|\" + newVersion.getDescription() + \"|\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                            + ((Deadline) newVersion).getBy() + \"\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            textAdder.close();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            textUi.showMessage(WRITE_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Erases all saved tasks from file."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param textUi \u003ccode\u003eUi\u003c/code\u003e object that interacts with the user."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public void performCleanup(Ui textUi) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            FileWriter overrider \u003d new FileWriter(DEFAULT_FILEPATH);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            overrider.close();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            textUi.showMessage(WRITE_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Loads tasks from file."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e object that will store all the tasks."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @throws IOException If new file could not be created to store tasks."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @throws InvalidInputException If the data stored on file is invalid."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public void initialiseList (TaskList tasks) throws IOException,InvalidInputException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        if (!savedData.exists()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            savedData.createNewFile();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        loader \u003d new Scanner(savedData);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        while (loader.hasNext()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            String command \u003d loader.nextLine();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            String[] phrases \u003d command.split(\"\\\\|\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            switch(phrases[savedType]) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                Todo newTodo \u003d new Todo(phrases[savedDescription]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                if (phrases[savedStatus].equals(\"Complete\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                    newTodo.markAsDone();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                tasks.add(newTodo);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                Deadline newDeadline \u003d new Deadline(phrases[savedDescription],phrases[savedBy]);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                if (phrases[savedStatus].equals(\"Complete\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                    newDeadline.markAsDone();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                tasks.add(newDeadline);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                Event newEvent \u003d new Event(phrases[savedDescription],phrases[savedBy]);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                if (phrases[savedStatus].equals(\"Complete\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                    newEvent.markAsDone();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                tasks.add(newEvent);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                throw new InvalidInputException();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Writes a new to-do task to file."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param textUi \u003ccode\u003eUi\u003c/code\u003e object that interacts with the user."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param description Description of the to-do task."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public void writeTodo(Ui textUi,String description) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            FileWriter textAdder \u003d new FileWriter(DEFAULT_FILEPATH, true);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            textAdder.write(\"T|\" + \"Not complete\" + \"|\" + description + \"\\n\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            textAdder.close();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            textUi.showMessage(WRITE_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Writes a new deadline to file."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param textUi \u003ccode\u003eUi\u003c/code\u003e object that interacts with the user."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param description Description of the deadline."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param by Time by which the task has to be finished."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public void writeDeadline(Ui textUi,String description,String by) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            FileWriter textAdder \u003d new FileWriter(DEFAULT_FILEPATH,true);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            textAdder.write(\"D|\" + \"Not complete\" + \"|\" + description + \"|\" + by + \"\\n\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            textAdder.close();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            textUi.showMessage(WRITE_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Writes a new event to file."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param textUi \u003ccode\u003eUi\u003c/code\u003e object that interacts with the user."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param description Description of the event."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param duration Duration of the event."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public void writeEvent(Ui textUi,String description,String duration) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            FileWriter textAdder \u003d new FileWriter(DEFAULT_FILEPATH, true);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            textAdder.write(\"E|\" + \"Not complete\" + \"|\" + description + \"|\" + duration + \"\\n\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            textAdder.close();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            textUi.showMessage(WRITE_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 169
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " * Represents a deadline."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Timing by which the task has to be finished */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public Deadline(String description,String by) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Obtains the timing by which the task has to be finished."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @return Timing by which the task has to be finished."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Defines the string format of \u003ccode\u003eDeadline\u003c/code\u003e object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @return String format of the \u003ccode\u003eDeadline\u003c/code\u003e object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 34
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " * Represents an event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Duration of the event */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    protected String duration;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public Event(String description,String duration) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Obtains the duration of the event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @return Duration of the event."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public String getDuration() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        return duration;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Defines the string format of \u003ccode\u003eEvent\u003c/code\u003e object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @return String format of \u003ccode\u003eEvent\u003c/code\u003e object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + duration + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 34
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Description of the task */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** Completion status of the task */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    protected boolean isCompleted;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        isCompleted \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Gets the status of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @return Status of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        if (isCompleted) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            return \"Complete\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            return \"Not complete\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Gets the description of the task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @return Description of the task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        isCompleted \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Defines the string format of \u003ccode\u003eTask\u003c/code\u003e object."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @return String format of \u003ccode\u003eTask\u003c/code\u003e object."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        return \"[\" + getStatus() + \"] \" + description;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 57
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " * Represents the list of tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /** The underlying data structure to store the tasks */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Returns the task at the specified index."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param index Index of the task requested."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @return Task at the specified index."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static Task getIndex(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Returns the size of the task list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @return Size of the task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static int getSize() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Clears the list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static void clearList() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        tasks.clear();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Marks the task at the specified index as done."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param index Index of the task to be marked as done."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static void markTask(int index) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        Task completedTask \u003d tasks.get(index);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        completedTask.markAsDone();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Adds a new task to the list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param newItem Task to be added."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static void add(Task newItem) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        tasks.add(newItem);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Removes a task at the specified index."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @param index Index of the task to be removed."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static void removeTask(int index) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        Task unwantedTask \u003d tasks.get(index);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        tasks.remove(unwantedTask);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 67
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " * Represents a to-do item."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * Defines the string format of to-do object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     * @return String format of to-do object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 21
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.commands.CommandResult;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static String command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static String readInput() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        command \u003d input.nextLine();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static void showMessage(String message) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    private static void confirmTask(Task addedTask, TaskList tasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + addedTask + \"\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                + \"Now you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    public static void showResult(CommandResult result) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        System.out.println(result.feedback);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        if (result.tasks !\u003d null) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            if (result.tasks.size() !\u003d 0) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                for (int i \u003d 0; i \u003c result.tasks.size(); i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                    System.out.println((i + 1) + \".\" + result.tasks.get(i));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 40
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Hello! I\u0027m KJ"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "How can I help you today?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "There are no tasks in your list currently."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "  [T][Not complete] borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "  [D][Not complete] return book (by: Sunday)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "  [E][Not complete] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "1.[T][Not complete] borrow book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "2.[D][Not complete] return book (by: Sunday)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "3.[E][Not complete] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "  [E][Complete] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "1.[T][Not complete] borrow book"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "2.[D][Not complete] return book (by: Sunday)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "3.[E][Complete] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "It appears you have entered an invalid index :O"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "The format of your command is incorrect, please use:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "deadline (item) /by (time)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "event (item) /at (time)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Uh-oh, I need more information to process that request :-("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Oops, I\u0027m sorry but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "It appears you have entered an invalid index :O"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "  [E][Complete] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "1.[T][Not complete] borrow book"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "2.[D][Not complete] return book (by: Sunday)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "  [T][Not complete] borrow book"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "1.[D][Not complete] return book (by: Sunday)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 41
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "event project meeting"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "done"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "bla"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "done liao"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 17
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\task\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "java -Dfile.encoding\u003dUTF8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kokjoon97"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "kokjoon97": 21
    }
  }
]

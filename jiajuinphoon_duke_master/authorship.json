[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "T | 1 | borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "E | 0 | project meeting|Mon 2-4pm"
      }
    ],
    "authorContributionMap": {
      "jiajuinphoon": 2
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "# User Guide for Application SHEENA"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "### 1. Add a todo task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Users are able to add one specific task every time they type \"todo\" command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "A capital letter \"T\" will shown when you successfully added the task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "A tick or cross will shown besides the capital letter \"E\" to indicate whether the task is done by the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "\"todo\" - to indicate the system that this is a todo task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "\"description\" - describe the task "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Format: todo description"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Eg: todo Love Sheena."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "IMPORTANT: User must provide a description."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Outcome:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "[T].[tick / cross] todo Love Sheena "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "### 2. Add an Event task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Users are able to add one specific event task every time they type \"event\" command"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "We will use /at to differentiate the time  "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "A capital letter \"E\" will shown when you successfully added the event."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "A tick or cross will shown besides the capital letter \"E\" to indicate whether the event is done by the user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "\"event\" - to indicate the system that this is a todo task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "\"/at\" - to indicate the system that the time is behind the /at "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "\"description\" - describe the event"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "\"time\" - describe the details for time (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Format: event (description) /at (time)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Eg: event Love Coco /at Mon 2-4pm"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "IMPORTANT: User must provide a description and time."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Outcome:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "[E][tick / cross] event Love Coco (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "### 3. Add a Deadline task"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Users are able to add one specific deadline task every time they type \"event\" command"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "We will use /by to differentiate the day  "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "A capital letter \"D\" will shown when you successfully added the deadline."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "A tick or cross will shown besides the capital letter \"E\" to indicate whether the task is done by the user."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "\"event\" - to indicate the system that this is a todo task"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "\"/by\" - to indicate the system that the day is behind the /by "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "\"description\" - describe the event"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "\"day\" - describe the details for day (Eg: Sunday)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Format: event (description) /by (day)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Eg: deadline I love you Sheena /by Sunday"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "IMPORTANT: User must provide a description and day."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Outcome:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "[D][tick / cross] event I love you Sheena (by: Sunday)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "### 4. List Down the task List"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Users are able to retrieve the task that they had saved.  "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "\"list\" - to list down the task."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Format: list"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Eg: list"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Outcome:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Sheena: Yay! Now you have these ~"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "----------------------------"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Sheena: Well, you have these items in your list: "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": " 1. [T][✓]buy food"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": " 2. [T][✓]miss Sheena"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": " 3. [T][✘]love Sheena forever"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": " 4. [T][✘]I love you Coco"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "----------------------------"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Sheena: Yay! 4 tasks listed!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "### 5. Delete A Task."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Users are able to delete one specific event task every time they type \"delete\" command"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "\"delete\" - to indicate the system that this is a delete function"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "\"taskNumber\" - indicate the index number for the specific task (eg: 5)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Format: delete taskNumber"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Eg: delete 5"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "IMPORTANT: User must provide a description and time."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Outcome:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Sheena: YAY! You deleted task: [T][✘]buy books !"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Now you have (taskNumber-1) tasks in your list ~"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "### 6. Find a task"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Users are able to add one specific event task every time they type \"find\" command"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "\"find\" - to indicate the system that this is a todo task "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "\"description\" - describe the thing you want to find"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Format: find (description)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Eg: find Sheena"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "IMPORTANT: User must provide a description and time."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Outcome:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Sheena: Yay! Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "----------------------------"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Sheena: Well, you have these items in your list: "
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": " 1. [T][✓]miss Sheena"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": " 2. [T][✘]love Sheena forever"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "----------------------------"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Sheena: Yay! 2 tasks listed!"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "### 7. Clear the list "
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Users are able to clear the task list"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "\"clear\" - to indicate the system that user is clearing the task"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Format: clear"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Eg: clear"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Outcome:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Sheena: So sad but yeah the list has been cleared.."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "### 8. Exit the program"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Users are able to exit program. The task will be saved in a text file (eg: duke.txt)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "\"bye\" - to indicate the system that user is going to exit the program"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Format: bye"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Eg: bye"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Outcome:"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Sheena: Let me save down everything ^^"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": " "
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "Sheena: I will miss you! Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "jiajuinphoon": 163,
      "-": 10
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "T | 1 | buy food"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "T | 1 | miss Sheena"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "T | 0 | love Sheena forever"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "T | 0 | I love you Coco"
      }
    ],
    "authorContributionMap": {
      "jiajuinphoon": 4
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.command.CommandOption;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.command.CommandBye;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.taskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.storage.Storage.StorageFilePathException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.Ui.TextUi;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": " * The main program should keep it short"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": " * Exits when command \"bye\" stated"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    private TextUi ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    private TaskList list;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static void main(String... launchArgs) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        new Duke().runTheProgram(launchArgs);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public void runTheProgram(String[] launchArgs) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        start(launchArgs);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        runCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    private void start(String[] launchArgs) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            this.ui \u003d new TextUi();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            this.storage \u003d initializeStorage(launchArgs);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            this.list \u003d storage.load();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            ui.welcomeMessage(storage.getPath());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            ui.storedList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        } catch (Storage.StorageOperationException | StorageFilePathException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            ui.failed();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            throw new RuntimeException(e);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    private void exit(){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            ui.goodbye();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    /** run the program until the user type \"bye\" */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    private void runCommand(){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            Command command;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            do {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                String userCommand \u003d ui.getUserCommand();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                command \u003d new Parser().parseCommand(userCommand);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                CommandOption result \u003d executeCommand(command);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                ui.printResult(result);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            } while (!CommandBye.isExit(command));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    private CommandOption executeCommand(Command command) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                command.setData(list);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                storage.save(list);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                return command.execute();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                ui.PresentMessages(e.getMessage());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                throw new RuntimeException(e);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    private Storage initializeStorage(String[] launchArgs) throws StorageFilePathException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            boolean isStorageFileSpecified \u003d launchArgs.length \u003e 0;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            return !isStorageFileSpecified ? new Storage() : new Storage(launchArgs[0]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiajuinphoon": 75,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Ui/TextUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "package duke.Ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.command.CommandOption;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.taskList.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "public class TextUi {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public TextUi() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public TextUi(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public String getUserCommand() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        out.print(\"Sheena: Please enter your command ~ \\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        String Input \u003d in.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        PresentMessages(\"Sheena: Yay! This is your input (\" + Input + \") !\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return Input;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public void welcomeMessage(String storageFile) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        String Info \u003d String.format(USING_STORAGE, storageFile);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        PresentMessages(WELCOME, Info);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public void goodbye() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        PresentMessages(GOODBYE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public void failed() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        PresentMessages(FAILED);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "     * Shows message(s) to the user"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public void PresentMessages(String... message) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        for (String a : message) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            out.println(a);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public void printResult(CommandOption result) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        PresentMessages(result.feedback);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public void storedList() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        if (TaskList.size() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            System.out.println(\"\\nSheena: Hmm nothing here.\\nSheena: It\u0027s okay! Let me create a new one!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            System.out.println(\"---------------------------------------------------------\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            System.out.println(\"Sheena: Yay! I successfully retreat your previous list!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            TaskList.storedTaskList();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            System.out.println(\"---------------------------------------------------------\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static final String GOODBYE \u003d \"Sheena: I will miss you! Hope to see you again soon!\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static final String FAILED \u003d \"Sheena: Erm can\u0027t run now. Gonna Exit first.\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static final String WELCOME \u003d \"Hello! I\u0027m Sheena ^^ \\nWhat can I do for you ?\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static final String USING_STORAGE \u003d \"Sheena: using storage file ( %1$s )\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiajuinphoon": 71
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.taskList.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    private String nameOfCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    private String Argument;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    protected TaskList taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static final String MESSAGE_TASKS_LISTED_OVERVIEW \u003d \"Sheena: Yay! %1$d tasks listed!\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static String getMessageForTaskListShownSummary(ArrayList\u003cTask\u003e tasksDisplayed) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return String.format(MESSAGE_TASKS_LISTED_OVERVIEW, tasksDisplayed.size());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public CommandOption execute() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        throw new UnsupportedOperationException(\"This method must be implemented by child classes\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public void setData(TaskList taskList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public String getCommandName() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return nameOfCommand;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public void setCommandName(String commandName) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        nameOfCommand \u003d commandName;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public String getArgs() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return Argument;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public void setArgs(String args) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        Argument \u003d args;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiajuinphoon": 42
    }
  },
  {
    "path": "src/main/java/duke/command/CommandBye.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "public class CommandBye extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static final String EXIT \u003d \"Sheena: Let me save down everything ^^\\n \";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public CommandOption execute() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return new CommandOption(EXIT);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static boolean isExit(Command command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return command instanceof CommandBye; // instanceof returns false if it is null"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiajuinphoon": 15
    }
  },
  {
    "path": "src/main/java/duke/command/CommandClear.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.taskList.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "public class CommandClear extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static final String SUCCESS \u003d \"Sheena: So sad but yeah the list has been cleared..\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public CommandClear() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public CommandOption execute() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        TaskList.clear();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return new CommandOption(SUCCESS);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiajuinphoon": 17
    }
  },
  {
    "path": "src/main/java/duke/command/CommandDeadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.taskList.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.task.Deadlines;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "public class CommandDeadline extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static final String SUCCESS \u003d \"Sheena: YAY! This task is added: \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            +\"\\n%s.\\n Sheena: Now you have %d tasks in your list ~ \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static final String DUPLICATE \u003d \"Sheena: Erm. This task is already in the list...\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    private Deadlines Add;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public CommandDeadline(Deadlines Add){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        this.Add \u003d Add;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public CommandDeadline(String desc,String dueDate) throws StringIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        if (desc.isEmpty() || dueDate.isEmpty()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            throw new StringIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        this.Add \u003d new Deadlines(desc,dueDate);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public CommandOption execute() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            TaskList.add(Add);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            return new CommandOption(String.format(SUCCESS, Add.toString(),TaskList.size()));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        } catch (TaskList.DuplicateTaskException dpe) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            return new CommandOption(DUPLICATE);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiajuinphoon": 34
    }
  },
  {
    "path": "src/main/java/duke/command/CommandDelete.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.taskList.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "public class CommandDelete extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    int deleteIndex;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public CommandDelete(int targetIndex) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        this.deleteIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static final String INVALID_TASK \u003d \"Sheena: I can\u0027t delete, you have not added task %s yet..\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static final String DELETE \u003d \"Sheena: YAY! You deleted task: %1$s !\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public CommandOption execute() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            Task t \u003d TaskList.retrieve(deleteIndex-1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            TaskList.remove(deleteIndex-1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            return new CommandOption(String.format(DELETE,t.toString())"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                    + \"\\nNow you have \" + TaskList.size() + \" tasks in your list ~\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        } catch (IndexOutOfBoundsException | TaskList.TaskNotFoundException ie) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            return new CommandOption(String.format(INVALID_TASK,deleteIndex));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiajuinphoon": 30
    }
  },
  {
    "path": "src/main/java/duke/command/CommandDone.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.taskList.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "public class CommandDone extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    int numberToMark;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static final String MARK_TASK_DONE \u003d \"Sheena: YAY! I have marked it as done: %1$s\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static final String INVALID_TASK \u003d \"Sheena: Erm. Maybe you provided a wrong number ?\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static final String TASK_NOT_EXIST \u003d \"Sheena: Erm, I can\u0027t delete because you have not add task %s yet..\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public CommandDone(int numberToMark) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        this.numberToMark \u003d numberToMark;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public CommandOption execute() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            Task t \u003d TaskList.markAsDone(numberToMark-1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            return new CommandOption(String.format(MARK_TASK_DONE,t.toString()));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        } catch (TaskList.TaskNotFoundException tnf) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            return new CommandOption(TASK_NOT_EXIST);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        } catch (IndexOutOfBoundsException ie) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            //ie: if the user type 0 / number that is not within the list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            return new CommandOption(INVALID_TASK);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiajuinphoon": 30
    }
  },
  {
    "path": "src/main/java/duke/command/CommandEvent.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.taskList.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.task.Events;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "public class CommandEvent extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static final String SUCCESS \u003d \"Sheena: YAY! added this task: \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            +\"\\t%s.\\n Sheena: Now you have %d tasks in your list ~\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static final String DUPLICATE \u003d \"Sheena: Erm. This task is already in the list...\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    private Events Add;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public CommandEvent(Events Add) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        this.Add \u003d Add;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public CommandEvent(String desc, String date) throws StringIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        if(!(!desc.isEmpty()) || !(!date.isEmpty())){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            throw new StringIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        this.Add \u003d new Events(desc, date);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public CommandOption execute() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            TaskList.add(Add);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            return new CommandOption(String.format(SUCCESS, Add, TaskList.size()));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        } catch (TaskList.DuplicateTaskException dpe) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            return new CommandOption(DUPLICATE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiajuinphoon": 36
    }
  },
  {
    "path": "src/main/java/duke/command/CommandFind.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.taskList.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.Ui.TextUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import static duke.taskList.TaskList.filterTheList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "public class CommandFind extends Command{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static final String EMPTY_LIST_MESSAGE \u003d \"Sheena: Erm, List is currently empty.\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    String Keyword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public CommandFind (String filtered_word){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        this.Keyword \u003d filtered_word;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public CommandOption execute() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            ArrayList\u003cTask\u003e duplicateList \u003d TaskList.copy();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            ArrayList\u003cTask\u003e listToFilter \u003d filterTheList(duplicateList, Keyword);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            System.out.println(\"Sheena: Yay! Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            TaskList.printList(listToFilter);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            return new CommandOption(String.format(getMessageForTaskListShownSummary(listToFilter),listToFilter));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            return new CommandOption(EMPTY_LIST_MESSAGE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiajuinphoon": 31
    }
  },
  {
    "path": "src/main/java/duke/command/CommandList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.taskList.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "public class CommandList extends Command{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static final String EMPTY_LIST \u003d \"Sheena: Erm. There is nothing in the list...\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public CommandOption execute() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            ArrayList\u003cTask\u003e duplicateTaskList \u003d TaskList.copy();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            System.out.println(\"Sheena: Yay! Now you have these ~\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            TaskList.printList(duplicateTaskList);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            return new CommandOption(String.format(getMessageForTaskListShownSummary(duplicateTaskList),duplicateTaskList));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            return new CommandOption(EMPTY_LIST);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiajuinphoon": 23
    }
  },
  {
    "path": "src/main/java/duke/command/CommandOption.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "public class CommandOption {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public final String feedback;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public CommandOption(String feedback) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        this.feedback \u003d feedback;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiajuinphoon": 11
    }
  },
  {
    "path": "src/main/java/duke/command/CommandToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.taskList.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.task.ToDos;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "public class CommandToDo extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    private ToDos Add;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public CommandToDo(ToDos Add) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        this.Add \u003d Add;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public CommandToDo(String desc) throws NullPointerException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        if (!(!desc.isEmpty())) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            throw new NullPointerException();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        this.Add \u003d new ToDos(desc);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static final String SUCCESS \u003d \"Sheena: Yay! I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            + \"\\n %s.\\nNow you have %d tasks in your list ~ \";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static final String DUPLICATE_TASK \u003d \"Sheena: This task already exists in the list ~\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static final String ERROR \u003d \"Sheena: Sorry, but the %s of a todo command cannot be empty ~\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public CommandOption execute() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            taskList.add(Add);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            return new CommandOption(String.format(SUCCESS, Add.toString(), taskList.size()));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        } catch (NullPointerException NPE) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            return new CommandOption(String.format(ERROR, \"description\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        } catch (TaskList.DuplicateTaskException dpe) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            return new CommandOption(DUPLICATE_TASK);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiajuinphoon": 36
    }
  },
  {
    "path": "src/main/java/duke/command/FalseCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "public class FalseCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public final String feedback;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public FalseCommand(String feedbackToUser) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        this.feedback \u003d feedbackToUser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public CommandOption execute() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return new CommandOption(feedback);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiajuinphoon": 15
    }
  },
  {
    "path": "src/main/java/duke/exception/DuplicateInformationException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "public abstract class DuplicateInformationException extends IncorrectValueException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public DuplicateInformationException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiajuinphoon": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/IncorrectValueException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "public class IncorrectValueException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public IncorrectValueException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiajuinphoon": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/TaskNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "public class TaskNotFoundException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiajuinphoon": 4
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.command.CommandToDo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.command.CommandEvent;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.command.CommandDeadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.command.CommandFind;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.command.CommandDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.command.CommandDelete;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.command.CommandList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.command.CommandClear;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.command.CommandBye;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.command.FalseCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static final Pattern COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e^[\\\\S]+)(?\u003carguments\u003e[\\\\d\\\\s\\\\S]*$)\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static final String INVALID_TASK \u003d \"Sheena: Erm. This number is invalid..Maybe try another number?\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static final String ERROR \u003d \"Sheena: Erm, The %s of a %s command cannot be empty.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static final String TRY_AGAIN \u003d \"Sheena: Try again maybe? This is not part of the command.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public Command parseCommand(String userInput) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        final Matcher matcher \u003d COMMAND_FORMAT.matcher(userInput.trim());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            System.out.println(\"Sheena: Erm, This is a wrong command. Wanna try again? \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        final String commandWord \u003d matcher.group(\"commandWord\").trim();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        final String arguments \u003d matcher.group(\"arguments\").trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        if (commandWord.equals(\"bye\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            return new CommandBye();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        } else if (commandWord.equals(\"list\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            return new CommandList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        } else if (commandWord.equals(\"done\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                final int targetIndex \u003d parseArgsAsDisplayedIndex(arguments);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                return new CommandDone(targetIndex);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                return new FalseCommand(INVALID_TASK);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        } else if (commandWord.equals(\"todo\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                return new CommandToDo(arguments);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            } catch (NullPointerException npe) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                return new FalseCommand(String.format(ERROR, \"description\", \"todo\"));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        } else if (commandWord.equals(\"event\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                final int indexOfAtPrefix \u003d arguments.indexOf(\"/at\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                String description \u003d arguments.substring(0, indexOfAtPrefix);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                String timeOfEvent \u003d arguments.substring(indexOfAtPrefix + 3).trim();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                return new CommandEvent(description, timeOfEvent);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            } catch (StringIndexOutOfBoundsException iob) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                return new FalseCommand(String.format(ERROR, \"description and/or time\", \"event\"));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        } else if (commandWord.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                final int indexOfByPrefix \u003d arguments.trim().indexOf(\"/by\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                String description \u003d arguments.trim().substring(0, indexOfByPrefix);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                String dueDate \u003d arguments.substring(indexOfByPrefix + 3).trim();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                return new CommandDeadline(description, dueDate);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            } catch (StringIndexOutOfBoundsException iob) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                return new FalseCommand(String.format(ERROR, \"description and/or due date\", \"deadline\"));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        } else if (commandWord.equals(\"delete\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                final int targetIndex \u003d parseArgsAsDisplayedIndex(arguments);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                return new CommandDelete(targetIndex);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                return new FalseCommand(INVALID_TASK);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        } else if (commandWord.equals(\"clear\")){"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            return new CommandClear();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        } else if (commandWord.equals(\"find\")){"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            return new CommandFind(arguments);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            return new FalseCommand(TRY_AGAIN);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    private int parseArgsAsDisplayedIndex(String args) throws NumberFormatException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return Integer.parseInt(args.trim());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "}"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jiajuinphoon": 105
    }
  },
  {
    "path": "src/main/java/duke/storage/ReadTaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.taskList.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.task.Deadlines;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.task.Events;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.task.ToDos;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "public class ReadTaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static TaskList accessTaskList(List\u003cString\u003e saveTaskList) throws TaskList.DuplicateTaskException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        final List\u003cTask\u003e readTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        for (String saveTask : saveTaskList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            readTasks.add(accessTask(saveTask));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return new TaskList(readTasks);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    private static Task accessTask(String savedTask) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        String[] parse \u003d savedTask.split(\"\\\\s*\\\\|\\\\s*\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        if (parse.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            ToDos t \u003d new ToDos(parse[2]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            if (parse[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                t.markAsDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            return t;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        } else if (parse.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            if (parse[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                Deadlines d \u003d new Deadlines(parse[2], parse[3]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                if (parse[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                    d.markAsDone();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                return d;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                Events e \u003d new Events(parse[2], parse[3]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                if (parse[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                    e.markAsDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                return e;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiajuinphoon": 44
    }
  },
  {
    "path": "src/main/java/duke/storage/SaveTaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.taskList.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.task.Deadlines;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.task.Events;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.task.ToDos;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "public class SaveTaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static List\u003cString\u003e saveTaskList(TaskList toSave) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        final List\u003cString\u003e saveTask \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        toSave.getAllTasks().forEach(task -\u003e saveTask.add(storeTask(task)));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return saveTask;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    private static String storeTask(Task t) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        String fileDoneStatus;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        if (t.getStatusIcon().equals(\"\\u2718\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            fileDoneStatus \u003d \"0\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            fileDoneStatus \u003d \"1\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        final StringBuilder storedTask \u003d new StringBuilder();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        if (t instanceof ToDos){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            storedTask.append(t.getTaskType());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            storedTask.append(\" | \").append(fileDoneStatus);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            storedTask.append(\" | \").append(t.description);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        } else if (t instanceof Deadlines) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            storedTask.append(t.getTaskType());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            storedTask.append(\" | \").append(fileDoneStatus);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            storedTask.append(\" | \").append(t.description).append(\" | \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            storedTask.append(((Deadlines) t).getDueDate());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        } else if (t instanceof Events) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            storedTask.append(t.getTaskType());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            storedTask.append(\" | \").append(fileDoneStatus);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            storedTask.append(\" | \").append(t.description).append(\" | \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            storedTask.append(((Events) t).getTimeOfEvent());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return storedTask.toString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiajuinphoon": 44
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.taskList.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.exception.IncorrectValueException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": " * Represents the file used to store address book data."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    /** Default file path used if the user doesn\u0027t provide the file name. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static final String DEFAULT_FILE \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public final Path path;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public Storage() throws StorageFilePathException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        this(DEFAULT_FILE);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public Storage(String filePath) throws StorageFilePathException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        path \u003d Paths.get(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        if (!isValidPath(path)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            throw new StorageFilePathException(\"Storage file should end with \u0027.txt\u0027\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    private static boolean isValidPath(Path filePath) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return filePath.toString().endsWith(\".txt\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "     * Saves the {@code addressBook} data to the storage file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "     * @throws StorageOperationException if there were errors converting and/or storing data to file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public void save(TaskList tasklist) throws StorageOperationException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            List\u003cString\u003e writeTaskList \u003d SaveTaskList.saveTaskList(tasklist);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            Files.write(path, writeTaskList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            throw new StorageOperationException(\"Error writing to file: \" + path);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public TaskList load() throws StorageOperationException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        if (!Files.isRegularFile(path) || !Files.exists(path) ) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            return new TaskList();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            return ReadTaskList.accessTaskList(Files.readAllLines(path));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        } catch (FileNotFoundException fnfe) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            throw new AssertionError(\"Sheena: The non-existent file scenario is already handled.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            // other errors"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            throw new StorageOperationException(\"Sheena: Error writing to file \" + path);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        } catch (IncorrectValueException ive) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            throw new StorageOperationException(\"Sheena: Hey! File contains illegal data!\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public String getPath() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return path.toString();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static class StorageFilePathException extends IncorrectValueException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        public StorageFilePathException(String message) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            super(message);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static class StorageOperationException extends Exception {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        public StorageOperationException(String message) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            super(message);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiajuinphoon": 85
    }
  },
  {
    "path": "src/main/java/duke/task/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    protected String dueDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public Deadlines(String description, String dueDate) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        super.setTaskType(\"D\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public String getDueDate() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return dueDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public void setDueDate(String dueDate) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return \"[\" + super.getTaskType() + \"]\" + super.toString() + \"(by: \" + getDueDate() + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public boolean isSameTask(Task toCheck) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return (toCheck \u003d\u003d this) || ( !(toCheck \u003d\u003d null) \u0026\u0026 toCheck.getDescription().equals(this.getDescription())"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                \u0026\u0026 ((Deadlines) toCheck).getDueDate().equals(this.getDueDate()));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiajuinphoon": 31
    }
  },
  {
    "path": "src/main/java/duke/task/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    protected String timeOfEvent;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public Events(String description, String timeOfEvent) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        super.setTaskType(\"E\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        this.timeOfEvent \u003d timeOfEvent;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public String getTimeOfEvent() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return timeOfEvent;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public void setTimeOfEvent(String timeOfEvent) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        this.timeOfEvent \u003d timeOfEvent;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return \"[\" + super.getTaskType() + \"]\" + super.toString() + \"(at: \" + getTimeOfEvent() + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public boolean isSameTask(Task toCheck) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return (toCheck \u003d\u003d this) || ( !(toCheck \u003d\u003d null) \u0026\u0026 toCheck.getDescription().equals(this.getDescription())"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                \u0026\u0026 ((Events) toCheck).getTimeOfEvent().equals(this.getTimeOfEvent()));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiajuinphoon": 32
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public String taskType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        this.taskType \u003d null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public void setTaskType(String taskType) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public  boolean isSameTask(Task toCheck){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return (toCheck \u003d\u003d this) || ( !(toCheck \u003d\u003d null) \u0026\u0026 toCheck.getDescription().equals(this.getDescription()));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiajuinphoon": 51
    }
  },
  {
    "path": "src/main/java/duke/task/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public ToDos(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        super.setTaskType(\"T\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return \"[\" + super.getTaskType() + \"]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public boolean isSameTask(Task toCheck) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return super.isSameTask(toCheck);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiajuinphoon": 21
    }
  },
  {
    "path": "src/main/java/duke/taskList/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "package duke.taskList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.task.Deadlines;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.task.Events;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.task.ToDos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import duke.exception.DuplicateInformationException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": " * Represents the entire task  list. Contains the data of the task list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "     * Constructs a list from the items in the given collection."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "     * @param Tasks a collection of tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "     * @throws DuplicateTaskException if the {@code persons} contains duplicate tasks"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public TaskList(List\u003cTask\u003e Tasks) throws DuplicateTaskException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        if (!uniqueElements(Tasks)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            throw new DuplicateTaskException();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        taskList.addAll(Tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static boolean contains(Task toCheck) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        for (Task a : taskList) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            if (a instanceof ToDos \u0026\u0026 toCheck instanceof ToDos) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                return (((ToDos)a).isSameTask(toCheck));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            } else if (a instanceof Events \u0026\u0026 toCheck instanceof Events) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                return (((Events)a).isSameTask(toCheck));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            } else if (a instanceof Deadlines \u0026\u0026 toCheck instanceof Deadlines) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                return (((Deadlines)a).isSameTask(toCheck));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "     * Adds one task to the list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "     * @throws DuplicateTaskException if the task to add is a duplicate of an existing task in the list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static void add(Task toAdd) throws DuplicateTaskException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        if (contains(toAdd)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            throw new DuplicateTaskException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        taskList.add(toAdd);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static Task retrieve(int targetIndex) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return taskList.get(targetIndex);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "     * Removes task from the list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "     * @throws TaskNotFoundException if no such task could be found in the list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static void remove(int toRemove) throws TaskNotFoundException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        Task t \u003d taskList.get(toRemove);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        final boolean taskFoundAndDeleted \u003d taskList.remove(t);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        if (!taskFoundAndDeleted) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            throw new TaskNotFoundException();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static int size() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "     * Clears task list."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static void clear() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        taskList.clear();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "     * @return the duplicate task list"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static ArrayList\u003cTask\u003e copy() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return (new ArrayList\u003c\u003e(taskList));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "     * Shows to user all elements in task list."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static void printList(ArrayList\u003cTask\u003e taskList) throws NullPointerException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        int taskCounter \u003d 1;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            throw new NullPointerException();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            System.out.println(\"----------------------------\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            System.out.println(\"Sheena: Well, you have these items in your list: \\n\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            for (Task t : taskList) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                System.out.println(\" \" + taskCounter + \". \" + t.toString());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                taskCounter++;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            System.out.println(\"----------------------------\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static ArrayList\u003cTask\u003e filterTheList(ArrayList\u003cTask\u003e taskList, String keyword) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return (ArrayList\u003cTask\u003e) taskList.stream()"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                .filter(task -\u003e task.description.contains(keyword))"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "     * Marks a task as [done]."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static Task markAsDone(int targetIndex) throws TaskNotFoundException {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        Task t \u003d TaskList.retrieve(targetIndex);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        final boolean taskFound_Marked \u003d t.isDone;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        if (!taskFound_Marked) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            throw new TaskNotFoundException();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "     * Returns a new task list of all tasks in list at the time of the call."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public ArrayList\u003cTask\u003e getAllTasks() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "     * Signals that an operation would have violated the \u0027no duplicates\u0027 property of the list."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static class DuplicateTaskException extends DuplicateInformationException {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        protected DuplicateTaskException() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            super(\"Sheena: Erm. There will be duplicate tasks tho..\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static class TaskNotFoundException extends Exception {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        protected TaskNotFoundException() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            super(\"Sheena: Erm, I can\u0027t delete because you haven\u0027t added that task..\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static boolean uniqueElements(Collection\u003c?\u003e items) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        final Set\u003cObject\u003e testSet \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        for (Object item : items) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            final boolean itemExists \u003d !testSet.add(item); // see Set documentation"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            if (itemExists) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    public static void storedTaskList() throws NullPointerException {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            throw new NullPointerException();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            for (Task t : taskList) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                System.out.println(\" \" + counter + \". \" + t.toString());"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jiajuinphoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiajuinphoon": 189
    }
  }
]

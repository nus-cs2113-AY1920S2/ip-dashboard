[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "# User Guide for Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Author: **Wu Sibing**\u003cbr/\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Since: **Feb 2020**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "1. [Introduction](#1-introduction)\u003cbr/\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "2. [Quick Start](#2-quick-start)\u003cbr/\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "3. [Features](#3-features)\u003cbr/\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    3.1. [Viewing help: `help`](#31-viewing-help-help)\u003cbr/\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    3.2. [Adding a \"Todo\" task: `todo`](#32-adding-a-todo-task-todo)\u003cbr/\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    3.3. [Adding a \"Deadline\" task: `deadline`](#33-adding-a-deadline-task-deadline)\u003cbr/\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    3.4. [Adding a \"Event\" task: `event`](#34-adding-a-event-task-event)\u003cbr/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    3.5. [Listing all tasks: `list`](#35-listing-all-tasks-list)\u003cbr/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    3.6. [Marking a task as done: `done`](#36-marking-a-task-as-done-done)\u003cbr/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    3.7. [Deleting a task: `delete`](#37-deleting-a-task-delete)\u003cbr/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    3.8. [Checking tasks on a date: `check`](#38-checking-tasks-on-a-date-check)\u003cbr/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    3.9. [Finding tasks via keyword: `find`](#39-finding-tasks-via-keyword-find)\u003cbr/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    3.10. [Clearing all entries: `clear`](#310-clearing-all-entries-clear)\u003cbr\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    3.11. [Exiting the program: `bye`](#311-exiting-the-program-bye)\u003cbr/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    3.12. [Saving the data](#312-saving-the-data)\u003cbr/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "4. [FAQ](#4-faq)\u003cbr/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "5. [Command Summary](#5-command-summary)\u003cbr/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Duke is for those who want to record their \"todo list\". It allows user to add in, update, and keep track of their own daily tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Duke adopts Command Line Interface (CLI)."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "If you can type fast, AB3 can get your contact management tasks done faster than traditional GUI apps. Interested? Jump to the [Section 2, “Quick Start”](#2-quick-start) to get started. Enjoy!"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "## 2. Quick Start"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "1. Ensure you have Java **11** or above installed in your Computer."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "2. Download the latest **duke.jar** [here](https://github.com/SibingWu/duke/releases)."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "3. Copy the file to the folder you want to use as the home folder for your Duke."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "4. Open a Terminal in that folder."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "5. Run the command `java -jar duke.jar`. The CLI should appear in a few seconds. It should be a welcome page with existing task list.\u003cbr/\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "![Welcome Page](WelcomePage.png)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "6. Type the command in the command box and press Enter to execute it.\u003cbr/\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "e.g. typing `help` and pressing \u003ckbd\u003eEnter\u003c/kbd\u003e will open the help window."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "7. Some example commands you can try:\u003cbr/\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "   - `todo read book`: add the task \"read book\" into the task list"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "   - `list`: list all the tasks in the task list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "   - `bye`: exit the Duke program"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "8. Refer to [Section 3, “Features”](#3-features) for details of each command."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "## 3. Features"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "The word with UPPER_CASE: parameter.\u003cbr/\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "The date format: yyyy-mm-dd.\u003cbr/\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "### 3.1. Viewing help: `help`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "### 3.2. Adding a \"Todo\" task: `todo`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Adds an ordinary task to the task list.\u003cbr/\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Format: `todo TASK`\u003cbr/\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "*TASK can be any content.*\u003cbr/\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Examples:\u003cbr/\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "* `todo read book`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "* `todo join sports club`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "### 3.3. Adding a \"Deadline\" task: `deadline`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Adds a task with a deadline to the task list.\u003cbr/\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Format: `deadline TASK /by yyyy-mm-dd`\u003cbr/\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "*TASK can be any content.*\u003cbr/\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Reminder: The deadline date format must be **yyyy-mm-dd**.\u003cbr/\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Examples:\u003cbr/\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "* `deadline return book /by 2020-06-06`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "* `deadline CS2113 iP project /by 2020-03-01`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "### 3.4. Adding a \"Event\" task: `event`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Adds an event task on a specific date to the task list.\u003cbr/\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Format: `event TASK /at yyyy-mm-dd`\u003cbr/\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "*TASK can be any content.*\u003cbr/\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Reminder: The deadline date format must be **yyyy-mm-dd**.\u003cbr/\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Examples:\u003cbr/\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "* `event project meeting /at 2020-03-01`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "### 3.5. Listing all tasks: `list`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Shows a list of all tasks in the Duke task list.\u003cbr/\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Format: `list`\u003cbr/\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "### 3.6. Marking a task as done: `done`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Marks a task as done.\u003cbr/\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Format: `done TASK_NUMBER`\u003cbr/\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "*TASK_NUMBER is the number of that task in the task list. It is an integer.*"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Examples:\u003cbr/\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "* `done 1`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "* `done 4`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "### 3.7. Deleting a task: `delete`"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Deletes the specified task from the Duke task list.\u003cbr/\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Format: `delete TASK_NUMBER`\u003cbr/\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "*TASK_NUMBER is the number of that task in the task list. It is an integer.*"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Example:\u003cbr/\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "* `delete 1`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "* `delete 4`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "### 3.8. Checking tasks on a date: `check`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Displays all the tasks on a specified date.\u003cbr/\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Format: `check /on yyyy-mm-dd`\u003cbr/\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Reminder: The deadline date format must be **yyyy-mm-dd**.\u003cbr/\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Example:\u003cbr/\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "* `check /on 2020-03-03`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "### 3.9. Finding tasks via keyword: `find`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Finds tasks whose names contain the given keyword.\u003cbr/\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Format: `find KEYWORD`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Example:\u003cbr/\u003e  "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "* `find book`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "* `find basketball`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "### 3.10. Clearing all entries: `clear`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Clears all entries from the Duke task list.\u003cbr/\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Format: `clear`"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "### 3.11. Exiting the program: `bye`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Exit the Duke program.\u003cbr/\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Format: `bye`\u003cbr/\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "### 3.12. Saving the data"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Task list data are saved in the hard disk automatically after any command that changes the task list.\u003cbr/\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "There is no need to save manually."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "## 4. FAQ"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Q: How do I transfer my data to another Computer?\u003cbr/\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "A:  "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "1. Install the **duke.jar** in the other computer;\u003cbr/\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "2. Copy the **data** folder in the previous Duke folder to the new Duke folder."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "## 5. Command Summary"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "* Help `help`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "* Add"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "  - `todo TASK`"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "  - `deadline TASK /by yyyy-mm-dd`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "  - `event TASK /by yyyy-mm-dd`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "* List `list`"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "* Done `done TASK_NUMBER`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "* Delete `delete TASK_NUMBER`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "* Search"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "  - `check /on yyyy-mm-dd`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "  - `find KEYWORD`"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "* Clear `clear`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "* Exit `bye`"
      }
    ],
    "authorContributionMap": {
      "-": 6,
      "SibingWu": 122
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.exceptions.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": " * The Duke program implements an interactive chatbox that"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": " * allows the user to record and update their tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": " * "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": " * @author Wu Sibing"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": " * @since 2020-02-29"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Generates the ui interaction, sets up the txt file that saves the task list, and creates the task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param dirPath Path to the directory where the txt file locates."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param fileName Name of the txt file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public Duke(String dirPath, String fileName) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        ui.displayWelcomeMessage();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        storage \u003d new Storage(dirPath, fileName);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            tasks \u003d new TaskList(storage.loadFileContents());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            ui.displayLoadingError();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        } catch (ChatboxException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            ui.displayEmptyListMessage();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Executes the main body of the program."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Reads in commands, executes the command, updates the task list and txt file accordingly."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                ui.displayInvalidTaskNumberMessage();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            } catch (CommandNotFoundException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                ui.displayCommandNotFoundMessage();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                ui.displayEmptyDescriptionMessage(e.getCommand());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            } catch (MarkerMissingException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                ui.displayMarkerMissingMessage(e);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            } catch (TimeMissingException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                ui.displayTimeMissingMessage();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            } catch (InvalidTaskNumberException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                ui.displayInvalidTaskNumberMessage();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            } catch (ChatboxException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                ui.displayErrorMessage(e);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                ui.displayErrorMessage(e);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                ui.displayTimeFormatErrorMessage();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Runs the program and specifies where the txt file locates."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param args Unused."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        new Duke(\"data\", \"duke.txt\").run();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 1,
      "SibingWu": 88
    }
  },
  {
    "path": "src/main/java/duke/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": " * Superclass for TodoCommand, DeadlineCommand, and EventCommand."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public abstract class AddCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SibingWu": 7
    }
  },
  {
    "path": "src/main/java/duke/commands/CheckCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.exceptions.ChatboxException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.exceptions.MarkerMissingException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.exceptions.TimeMissingException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import static duke.utils.Constants.*;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": " * Command that checks all the tasks on a specific date."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class CheckCommand extends Command {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Defines the constructor."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Starts the target list with empty list, specifies the target date, and specifies the marker."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param description Check marker with target date."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public CheckCommand(String description) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.marker \u003d CHECK_MARKER;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Executes command \"check\"."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Displays all tasks on a specific date."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param tasks Task list that stores all the existing tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param ui Interaction with users."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param storage Files related operation object."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws ChatboxException{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        if (!description.contains(CHECK_MARKER)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            throw new MarkerMissingException(CHECK_MARKER);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        String[] taskOn \u003d description.split(CHECK_MARKER);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        // \"\", \"date\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        if (taskOn.length !\u003d 2) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            throw new TimeMissingException();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        String on \u003d taskOn[1].trim();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(on);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.getListSize(); i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            Task task \u003d tasks.getTask(i);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            if (task.getDate() \u003d\u003d null) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            if (task.getDate().equals(date)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                taskList.addTask(task);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(String.format(\"Here are the tasks on %s:\", "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\", Locale.UK))));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        ui.listTasks(taskList);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SibingWu": 76
    }
  },
  {
    "path": "src/main/java/duke/commands/ClearCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Executes command \"clear\"."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Removes all the tasks out of the existing tasks list, i.e. empties the task list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Updates txt file whenever the task list changes."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param tasks Task list that stores all the existing tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param ui Interaction with users."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param storage Files related operation object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        int listSize \u003d tasks.getListSize();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        // always delete the first tasks until there is no task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d listSize; i++) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            tasks.deleteTask(1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        ui.displayClearAllMessage();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        // update the txt file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            storage.updateTasksToFile(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            ui.displayErrorMessage(e);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SibingWu": 36
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.exceptions.ChatboxException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": " * Objects for all commands."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /** Represents if this command means \"Exit\" or not. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    protected boolean isExit \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /** Deliminator between the task content and the date. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    protected String marker; // to be assigned in subclasses"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Returns if this command means \"Exit\" or not."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @return True if the command means \"Exit\", False otherwise."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Returns the marker for the command: /by for deadline, /at for event, /on for check."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @return Marker of the command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public String getMarker() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        return this.marker;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Executes the command according to different types."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param tasks Task list that stores all the existing tasks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param ui Interaction with users."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param storage Files related operation object."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @throws ChatboxException Different types of ChatboxException specified in each specific implementation."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws ChatboxException;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SibingWu": 45
    }
  },
  {
    "path": "src/main/java/duke/commands/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.exceptions.MarkerMissingException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.exceptions.TimeMissingException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.exceptions.ChatboxException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import static duke.utils.Constants.DEADLINE_MARKER;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class DeadlineCommand extends AddCommand {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Defines the constructor."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Fills in the task content and specifies the marker."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param description Task content with date."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public DeadlineCommand(String description) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.marker \u003d DEADLINE_MARKER;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Executes command \"deadline\"."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Creates a new Deadline task with deadline date."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Adds the task into the existing task list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Updates txt file whenever the task list changes."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param tasks Task list that stores all the existing tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param ui Interaction with users."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param storage Files related operation object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @throws MarkerMissingException If there is no marker in the user input. "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws ChatboxException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        if (!description.contains(DEADLINE_MARKER)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            throw new MarkerMissingException(DEADLINE_MARKER);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        String[] taskBy \u003d description.split(DEADLINE_MARKER);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        if (taskBy.length !\u003d 2) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            throw new TimeMissingException();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        String taskDescription \u003d taskBy[0].trim();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        String by \u003d taskBy[1].trim();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        LocalDate byDate \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        Task task \u003d new Deadline(taskDescription, byDate);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        ui.displayAddTaskMessage(task, tasks.getListSize());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        // update the txt file"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            storage.updateTasksToFile(tasks);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            ui.displayErrorMessage(e);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SibingWu": 71
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.exceptions.InvalidTaskNumberException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.exceptions.ChatboxException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import static duke.utils.Constants.DELETE_COMMAND;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Defines the constructor."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Specifies the task number in the task list of the unwanted task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param taskNumber Number of the task in the task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public DeleteCommand(int taskNumber) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Executes command \"delete\"."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Removes the unwanted task out of the existing task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Updates txt file whenever the task list changes."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param tasks Task list that stores all the existing tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param ui Interaction with users."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param storage Files related operation object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @throws InvalidTaskNumberException If the task number is negative or outside the existing index range."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws ChatboxException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        if (taskNumber \u003e tasks.getListSize() || taskNumber \u003c\u003d 0) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            throw new InvalidTaskNumberException();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        ui.displayDeleteTaskMessage(tasks, taskNumber);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        tasks.deleteTask(taskNumber);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        // update the txt file"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            storage.updateTasksToFile(tasks);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            ui.displayErrorMessage(e);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SibingWu": 52
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.exceptions.InvalidTaskNumberException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.exceptions.ChatboxException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Defines the constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Specifies the task number in the list of the done task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param taskNumber Number of the task in the task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public DoneCommand(int taskNumber) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Executes command \"done\"."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Marks the task with the task number as done."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Updates txt file whenever the task list changes."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param tasks Task list that stores all the existing tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param ui Interaction with users."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param storage Files related operation object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @throws InvalidTaskNumberException If the task number is negative or outside the existing index range."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws ChatboxException{"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        if (taskNumber \u003e tasks.getListSize() || taskNumber \u003c\u003d 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            throw new InvalidTaskNumberException();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        Task task \u003d tasks.getTask(taskNumber);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        ui.displayDoneCommandMessage(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        // update the txt file"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            storage.updateTasksToFile(tasks);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            ui.displayErrorMessage(e);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SibingWu": 52
    }
  },
  {
    "path": "src/main/java/duke/commands/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.exceptions.MarkerMissingException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.exceptions.TimeMissingException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.exceptions.ChatboxException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import static duke.utils.Constants.EVENT_MARKER;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class EventCommand extends AddCommand {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Defines the constructor."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Fills in the task content and specifies the marker."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param description Task content with date."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public EventCommand(String description) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.marker \u003d EVENT_MARKER;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Executes command \"event\"."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Creates a new Event task with event date."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Adds the task into the existing task list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Updates txt file whenever the task list changes."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param tasks Task list that stores all the existing tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param ui Interaction with users."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param storage Files related operation object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws ChatboxException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        if (!description.contains(EVENT_MARKER)) { // time marker is missing"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            throw new MarkerMissingException(EVENT_MARKER);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        String[] taskAt \u003d description.split(EVENT_MARKER);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        if (taskAt.length !\u003d 2) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            throw new TimeMissingException();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        String taskDescription \u003d taskAt[0].trim();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        String at \u003d taskAt[1].trim();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        LocalDate atDate \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        Task task \u003d new Event(taskDescription, atDate);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        ui.displayAddTaskMessage(task, tasks.getListSize());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        // update the file"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            storage.updateTasksToFile(tasks);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            ui.displayErrorMessage(e);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SibingWu": 70
    }
  },
  {
    "path": "src/main/java/duke/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.exceptions.ChatboxException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Executes the command \"bye\"."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Marks that this command represent \"Exit\"."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param tasks Task list that stores all the existing tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param ui Interaction with users."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param storage Files related operation object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        ui.displayExitMessage();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SibingWu": 22
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": " * Command that finds all the tasks with a keyword."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    private String targetWord;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    private TaskList targetList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Defines the constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Starts the target list with empty list and specifies the keyword."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param targetWord Word that user want to find."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public FindCommand(String targetWord) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.targetWord \u003d targetWord;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.targetList \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Executes the command \"find\"."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Displays all the tasks with a keyword."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param tasks Task list that stores all the existing tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param ui Interaction with users."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param storage Files related operation object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.getListSize(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            Task task \u003d tasks.getTask(i);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            if (task.getDescription().contains(targetWord)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                targetList.addTask(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(String.format(\"Here are the tasks matching \\\"%s\\\" in your list:\", targetWord));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        ui.listTasks(targetList);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SibingWu": 47
    }
  },
  {
    "path": "src/main/java/duke/commands/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Executes command \"help\"."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Displays all valid commands to the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param tasks Task list that stores all the existing tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param ui Interaction with users."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param storage Files related operation object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        ui.displayHelpMessage();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SibingWu": 20
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import static duke.utils.Constants.LIST_COMMAND;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Executes command \"list\"."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Lists all the tasks inside the existing task list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param tasks Task list that stores all the existing tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param ui Interaction with users."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param storage Files related operation object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        ui.listTasks(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SibingWu": 23
    }
  },
  {
    "path": "src/main/java/duke/commands/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class TodoCommand extends AddCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Defines the constructor."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Fills in the task content."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param description Task content."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public TodoCommand(String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Executes command \"todo\"."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Creates a new Todo_task and adds the task into the existing task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Updates txt file whenever the task list changes."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param tasks Task list that stores all the existing tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param ui Interaction with users."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param storage Files related operation object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        String taskDescription \u003d description.trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        Task task \u003d new Todo(taskDescription);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        ui.displayAddTaskMessage(task, tasks.getListSize());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        // update the txt file"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            storage.updateTasksToFile(tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            ui.displayErrorMessage(e);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SibingWu": 48
    }
  },
  {
    "path": "src/main/java/duke/exceptions/ChatboxException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class ChatboxException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SibingWu": 4
    }
  },
  {
    "path": "src/main/java/duke/exceptions/CommandNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class CommandNotFoundException extends ChatboxException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SibingWu": 4
    }
  },
  {
    "path": "src/main/java/duke/exceptions/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class EmptyDescriptionException extends ChatboxException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public EmptyDescriptionException(String command) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SibingWu": 13
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidTaskNumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class InvalidTaskNumberException extends ChatboxException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SibingWu": 4
    }
  },
  {
    "path": "src/main/java/duke/exceptions/MarkerMissingException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class MarkerMissingException extends ChatboxException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    private String marker;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public MarkerMissingException(String marker) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.marker \u003d marker;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public String getMarker() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        return this.marker;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SibingWu": 13
    }
  },
  {
    "path": "src/main/java/duke/exceptions/TimeMissingException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class TimeMissingException extends ChatboxException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SibingWu": 4
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.exceptions.CommandNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.exceptions.EmptyDescriptionException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import static duke.utils.Constants.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": " * Deals with making sense of the user command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param input Raw input string from the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @return Corresponding command object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @throws CommandNotFoundException If the input does not start with valid command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @throws EmptyDescriptionException If the description of commands that require description(eg. event) is missing."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static Command parse(String input) throws CommandNotFoundException, EmptyDescriptionException{"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        String[] split \u003d input.split(\"\\\\s+\", 2); // limit: the number of segments after split"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        String command \u003d split[0];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            case HELP_COMMAND:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                return new HelpCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            case TODO_COMMAND:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                return new TodoCommand(split[1].trim());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            case DEADLINE_COMMAND:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                return new DeadlineCommand(split[1].trim());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            case EVENT_COMMAND:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                return new EventCommand(split[1].trim());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            case LIST_COMMAND:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            case DONE_COMMAND:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                return new DoneCommand(Integer.parseInt(split[1].trim()));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            case DELETE_COMMAND:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                return new DeleteCommand(Integer.parseInt(split[1].trim()));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            case CHECK_COMMAND:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                return new CheckCommand(split[1].trim());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            case FIND_COMMAND:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                return new FindCommand(split[1].trim());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            case CLEAR_COMMAND:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                return new ClearCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            case BYE_COMMAND:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                throw new CommandNotFoundException();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            throw new EmptyDescriptionException(command);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SibingWu": 55
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.exceptions.ChatboxException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    private String dirPath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    private List\u003cTask\u003e fileTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Defines the constructor."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Specifies the location of the txt file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param dirPath"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param fileName"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public Storage(String dirPath, String fileName) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.dirPath \u003d dirPath;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.filePath \u003d dirPath + File.separator + fileName;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Loads the content of the txt files into the task list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Prints the task list to the screen."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Creates the directory and the file if the directory and file do not exist."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @return ArrayList of tasks read from the txt file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @throws IOException If error occurs during creating and loading the txt file."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @throws ChatboxException If the txt file is empty at the first place."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public List\u003cTask\u003e loadFileContents() throws IOException, ChatboxException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        if (dirPath !\u003d \"\") {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            File directory \u003d new File(dirPath);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            if (!directory.exists()) { // create the folder"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                directory.mkdir();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        File f \u003d new File(filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        if (!f.exists()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            f.createNewFile();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(\"Tasks in the existing list: \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        if (!s.hasNext()) { // empty list"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            throw new ChatboxException();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            String taskLine \u003d s.nextLine();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            System.out.println(taskLine);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            saveStringtoTask(taskLine);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        return fileTasks;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Converts the task string from the txt file to Task object."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Adds the converted tasks into the ArrayList of Task."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param fileLine Task string read from the txt file."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void saveStringtoTask(String fileLine) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        String[] arrays \u003d fileLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        String type \u003d arrays[0].trim();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        String isDone \u003d arrays[1].trim();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        String description \u003d arrays[2].trim();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            Task todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            if (isDone \u003d\u003d \"1\") {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                todo.markAsDone();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            fileTasks.add(todo);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            String by \u003d arrays[3].trim();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            LocalDate byDate \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            Task deadline \u003d new Deadline(description, byDate);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            if (isDone \u003d\u003d \"1\") {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                deadline.markAsDone();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            fileTasks.add(deadline);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            String at \u003d arrays[3].trim();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            LocalDate atDate \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            Task event \u003d new Event(description, atDate);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            if (isDone \u003d\u003d \"1\") {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                event.markAsDone();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            fileTasks.add(event);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Writes the all tasks inside the task list to the txt file whenever the task list changes."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param taskList Existing list of tasks."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @throws IOException If error occurs during opening the txt file and writing to it."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void updateTasksToFile(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        int listSize \u003d taskList.getListSize();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d listSize; i++) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            fw.write(taskList.getTask(i).getFileString() + System.lineSeparator());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SibingWu": 133
    }
  },
  {
    "path": "src/main/java/duke/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": " * Contains the task list e.g., it has operations to add/delete tasks in the list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Defines the constructor and starts with an empty list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Defines the constructor and starts with a given ArrayList of tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param tasks Beginning list of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Adds tasks into the task list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param task Task that needs to be added into the list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Removes the task out of the task list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param taskNumber Task number in the task list of the unwanted task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void deleteTask(int taskNumber) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Returns that there are how many tasks in the list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @return Number of tasks in the existing list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public int getListSize() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Returns the wanted task via the task number."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param taskNumber Number of the wanted task in the task list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @return The wanted task object."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public Task getTask(int taskNumber) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        return tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SibingWu": 66
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Defines the constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Fills in the task content and specifies the type of the task as \"D\" Deadline."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param description Content of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param by The date by which the task should finish, i.e. the deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.date \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.type \u003d \"D\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Specifies the format when printing this task object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Prints deadline date in \"MMM dd yyyy\" localdate format."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @return Formatted string: [type][tick/cross] task content (by: deadline date)."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        return String.format(\"[%s]%s (by: %s)\", this.type, super.toString(), "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\", Locale.UK)));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Specifies the format of string that will be written into the txt file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Saves deadline date in \"yyyy-mm-dd\" localdate format."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @return Formatted string: type | status icon | task content | deadline date."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public String getFileString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        return String.format(\"%s | %d | %s | %s\", type, isDone ? 1 : 0, description, date);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SibingWu": 43
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Defines the constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Fills in the task content and specifies the type of the task as \"E\" Event."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param description Content of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param at The date of the event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.date \u003d at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.type \u003d \"E\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Specifies the format when printing this task object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Prints event date in \"MMM dd yyyy\" localdate format."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @return Formatted string: [type][tick/cross] task content (at: event date)."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        return String.format(\"[%s]%s (at: %s)\", this.type, super.toString(), "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\", Locale.UK)));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Specifies the format of string that will be written into the txt file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Saves event date in \"yyyy-mm-dd\" localdate format."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @return Formatted string: type | status icon | task content | event date."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public String getFileString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        return String.format(\"%s | %d | %s | %s\", type, isDone ? 1 : 0, description, date);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SibingWu": 43
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import static duke.utils.Constants.YES_ICON;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import static duke.utils.Constants.NO_ICON;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": " * Objects that stores the task content, date, status, and type."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    protected String type; // to be assigned in subclasses"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    protected LocalDate date; // only assigned for deadline and event"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Defines the constructor."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Fills in the task content and initializes the status of task as undone."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param description Content of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Gets the corresponding icon, tick or cross, for the status of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @return Tick for done tasks; Cross of undone tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        return (this.isDone ? YES_ICON : NO_ICON);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Specifies the format when printing this task object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @return Formatted string: [tick/cross] task content."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Marks the task as done"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Returns the date of the task: deadline date, event date."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @return Date of the task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Returns the task content."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @return Task content."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Specifies the format of string that will be written into the txt file."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @return Formatted string."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public abstract String getFileString();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SibingWu": 77
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Defines the constructor."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Fills in the task content and specifies the type of the task as \"T\" Todo_task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param description Content of the task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        this.type \u003d \"T\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Specifies the format when printing this task object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @return Formatted string: [type][tick/cross] task content."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        return String.format(\"[%s]%s\", this.type, super.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Specifies the format of string that will be written into the txt file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @return Formatted string: type | status icon | task content."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public String getFileString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        return String.format(\"%s | %d | %s\", type, isDone ? 1 : 0, description);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SibingWu": 35
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.exceptions.MarkerMissingException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": " * Deals with interactions with the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    private Scanner in;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /** Defines the constructor and opens the read-in scanner. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /** Display the welcome message. */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void displayWelcomeMessage() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(\"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    // command related"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Read in the command from the user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @return Raw user input."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        String input \u003d in.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /** Displays all the valid commands to the user. */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void displayHelpMessage() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(\"Here are all the commands that you can use in Duke:\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(\"todo TASK : add a task into the list;\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(\"deadline Task /by yyyy-mm-dd : add a deadline into the list;\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(\"event Task /by yyyy-mm-dd : add an event into the list;\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(\"list : list all tasks in the list;\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(\"done TASK_NUMBER : mark a task as done\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(\"delete TASK_NUMBER: delete a task\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(\"check /on yyyy-mm-dd : search for all tasks on a certain date;\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(\"find KEYWORD : search for all tasks containing the KEYWORD;\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(\"clear : delete all tasks in the list;\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(\"bye : exit the Duke chatbox;\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Lists all the tasks inside the given task list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param tasks Task list that needs to be presented on the screen."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void listTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        if (tasks.getListSize() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            System.out.println(\"Empty List.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.getListSize(); i++) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            Task task \u003d tasks.getTask(i);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            System.out.print(String.format(\"%d.\", i));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "            System.out.println(task);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Tells the user that the target task has been marked as done."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param task Target task."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void displayDoneCommandMessage(Task task) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.print(\"  \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Tells the user that the target task has been added into the task list."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param task Target task."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param taskQuantity The size of the task list."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void displayAddTaskMessage(Task task, int taskQuantity) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.print(\"  \");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(String.format(\"Now you have %d tasks in the list.\", taskQuantity));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Tells the user that the target task has been removed out from the task list."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param tasks Target task list."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param taskNumber Number of the unwanted task in the list."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void displayDeleteTaskMessage(TaskList tasks, int taskNumber) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.print(\"  \");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(tasks.getTask(taskNumber));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        // display the message first, then delete the task"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(String.format(\"Now you have %d tasks in the list.\", tasks.getListSize() - 1)); "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /** Tells the user that the task list has been cleared. */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void displayClearAllMessage() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(\"All tasks cleared.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /** Shows the exit message. */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void displayExitMessage() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    // exception related"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /** Tells the user that error occurs when loading files. */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void displayLoadingError() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(\"Something goes wrong when loading files...\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /** Tells the user that the target list is empty. */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void displayEmptyListMessage() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(\"Empty List.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /** Tells the user that the task number entered is invalid. */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void displayInvalidTaskNumberMessage() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(\"Please enter a valid task number~\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /** Tells the user that command entered is invalid. */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void displayCommandNotFoundMessage() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Tells the user that the description of certain commands is missing."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param command Command whose description is missing."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void displayEmptyDescriptionMessage(String command) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(String.format(\"OOPS!!! The description of a %s cannot be empty.\", command));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Tells the user that the marker of the certain command is missing."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param e MarkerMissingException to get the proper marker."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void displayMarkerMissingMessage(MarkerMissingException e) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(String.format(\"The marker is missing~ The marker for this command is %s.\", e.getMarker()));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /** Tells the user that the time of some command is missing. */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void displayTimeMissingMessage() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(\"Oops! Time is missing!\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    "
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void displayTimeFormatErrorMessage() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(\"The time format is wrong. Please follow: yyyy-mm-dd, thank you!\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * Tells the user that some errors have occurred."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * "
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     * @param e Exception that just occurred."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public void displayErrorMessage(Exception e) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "        System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SibingWu": 186
    }
  },
  {
    "path": "src/main/java/duke/utils/Constants.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": " * Stores the constants, including command constants, marker constants, and icon constants."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "public class Constants {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final String HELP_COMMAND \u003d \"help\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final String BYE_COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final String DONE_COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final String DELETE_COMMAND \u003d \"delete\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final String TODO_COMMAND \u003d \"todo\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final String DEADLINE_COMMAND \u003d \"deadline\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final String EVENT_COMMAND \u003d \"event\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final String CHECK_COMMAND \u003d \"check\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final String FIND_COMMAND \u003d \"find\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final String CLEAR_COMMAND \u003d \"clear\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final String DEADLINE_MARKER \u003d \"/by\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final String EVENT_MARKER \u003d \"/at\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final String CHECK_MARKER \u003d \"/on\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final String YES_ICON \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    public static final String NO_ICON \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SibingWu": 25
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Tasks in the existing list: "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Empty List."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Here are all the commands that you can use in Duke:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "todo TASK : add a task into the list;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "deadline Task /by yyyy-mm-dd : add a deadline into the list;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "event Task /by yyyy-mm-dd : add an event into the list;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "list : list all tasks in the list;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "done TASK_NUMBER : mark a task as done"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "delete TASK_NUMBER: delete a task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "check /on yyyy-mm-dd : search for all tasks on a certain date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "find KEYWORD : search for all tasks containing the KEYWORD;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "clear : delete all tasks in the list;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "bye : exit the Duke chatbox;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "  [T][✘] read book"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "The marker is missing~ The marker for this command is /by."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "The time format is wrong. Please follow: yyyy-mm-dd, thank you!"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "The time format is wrong. Please follow: yyyy-mm-dd, thank you!"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "The marker is missing~ The marker for this command is /by."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "  [D][✘] return book (by: Jun 06 2020)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "OOPS!!! The description of a event cannot be empty."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "The marker is missing~ The marker for this command is /at."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "The time format is wrong. Please follow: yyyy-mm-dd, thank you!"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "The time format is wrong. Please follow: yyyy-mm-dd, thank you!"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "The marker is missing~ The marker for this command is /at."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "  [E][✘] project meeting (at: Mar 01 2020)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "1.[T][✘] read book"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "2.[D][✘] return book (by: Jun 06 2020)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "3.[E][✘] project meeting (at: Mar 01 2020)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "  [T][✓] read book"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Please enter a valid task number~"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Please enter a valid task number~"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "  [D][✓] return book (by: Jun 06 2020)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "  [T][✘] join sports club"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "OOPS!!! The description of a todo cannot be empty."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "  [T][✘] borrow book"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "  [T][✓] join sports club"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "  [D][✘] CS2113 iP project (by: Mar 01 2020)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "1.[T][✓] read book"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "2.[D][✓] return book (by: Jun 06 2020)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "3.[E][✘] project meeting (at: Mar 01 2020)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "4.[T][✓] join sports club"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "5.[T][✘] borrow book"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "6.[D][✘] CS2113 iP project (by: Mar 01 2020)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Noted. I\u0027ve removed this task: "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "  [T][✓] join sports club"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Please enter a valid task number~"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Please enter a valid task number~"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "1.[T][✓] read book"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "2.[D][✓] return book (by: Jun 06 2020)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "3.[E][✘] project meeting (at: Mar 01 2020)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "4.[T][✘] borrow book"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "5.[D][✘] CS2113 iP project (by: Mar 01 2020)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Here are the tasks matching \"book\" in your list:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "1.[T][✓] read book"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "2.[D][✓] return book (by: Jun 06 2020)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "3.[T][✘] borrow book"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Here are the tasks matching \"basketball\" in your list:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Empty List."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "The time format is wrong. Please follow: yyyy-mm-dd, thank you!"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "The marker is missing~ The marker for this command is /on."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Here are the tasks on Mar 03 2020:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Empty List."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "All tasks cleared."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Empty List."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "SibingWu": 96
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "help"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "deadline return book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "deadline return book /by 2020-6-6"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "deadline return book 2020-06-06"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "deadline return book /by 2020-06-06"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "event"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "event project meeting"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "event project meeting /at March 1st 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "event project meeting /at 2020-3-1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "event project meeting 2020-03-01"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "event project meeting /at 2020-03-01"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "odne 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "done -2"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "todo"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "deadline CS2113 iP project /by 2020-03-01"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "delete 8"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "delete -2"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "find book"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "find basketball"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "check /on 2020-03-1"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "check 2020-03-03"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "check /on 2020-03-03"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "clear"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "list"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "SibingWu": 37
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\commands\\*.java ..\\src\\main\\java\\duke\\exceptions\\*.java ..\\src\\main\\java\\duke\\parser\\*.java ..\\src\\main\\java\\duke\\storage\\*.java ..\\src\\main\\java\\duke\\tasklist\\*.java ..\\src\\main\\java\\duke\\tasks\\*.java ..\\src\\main\\java\\duke\\ui\\*.java ..\\src\\main\\java\\duke\\utils\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "REM -Dfile.encoding\u003dUTF-8 let the tick and cross icon appears properly"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "SibingWu": 22
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "# -Dfile.encoding\u003dUTF-8 let the tick and cross icon appears properly"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SibingWu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "then"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "else"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SibingWu"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "SibingWu": 35
    }
  }
]

[
  {
    "path": "src/main/java/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "public class DeadlineTask extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public String deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public DeadlineTask(String input, int taskNumber) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        super(input, taskNumber);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        int positionOfDeadline \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        this.taskName \u003d input.substring(0, positionOfDeadline);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        this.taskName \u003d this.taskName.strip();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        this.deadline \u003d input.substring(positionOfDeadline + 4);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        this.deadline \u003d this.deadline.strip();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public void printCreateMessage(int pendingTaskNumber) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(\"The following task has been created:\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(this.taskNumber+1 + \".[D][Not Done] \" + this.taskName + \" (by: \" + this.deadline + \")\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(\"Total number of incomplete tasks: \" + pendingTaskNumber);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public void printListMessage() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        if (isDone \u003d\u003d false) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            System.out.println(this.taskNumber+1 + \".[D][Not Done] \" + this.taskName + \" (at: \" + this.deadline + \")\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            System.out.println(this.taskNumber+1 + \".[D][Done] \" + this.taskName + \" (at: \" + this.deadline + \")\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongquan448": 29
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static final String COMMAND_CREATE_TODO_TASK \u003d \"todo\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static final String COMMAND_CREATE_DEADLINE_TASK \u003d \"deadline\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static final String COMMAND_CREATE_EVENT_TASK \u003d \"event\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static final String COMMAND_DISPLAY_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static final String COMMAND_END_PROGRAM \u003d \"bye\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static final String COMMAND_MARK_AS_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static Task[] tasks \u003d new Task[100];"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static int taskCount \u003d 0, pendingTaskCount \u003d 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        String command, detailsOfTask;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        loop:  while(true) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            command \u003d input.next();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            switch(command) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            case COMMAND_CREATE_DEADLINE_TASK:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                detailsOfTask \u003d input.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                if(detailsOfTask \u003d\u003d null || detailsOfTask.isEmpty()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    System.out.println(\"Details of the task cannot be left Empty!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    createTask(new DeadlineTask(detailsOfTask, taskCount));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    tasks[taskCount].printCreateMessage(pendingTaskCount);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            case COMMAND_CREATE_EVENT_TASK:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                detailsOfTask \u003d input.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                if(detailsOfTask \u003d\u003d null || detailsOfTask.isEmpty()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    System.out.println(\"Details of the task cannot be left Empty!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    createTask(new EventTask(detailsOfTask, taskCount));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    tasks[taskCount].printCreateMessage(pendingTaskCount);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            case COMMAND_CREATE_TODO_TASK:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                detailsOfTask \u003d input.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                if(detailsOfTask \u003d\u003d null || detailsOfTask.isEmpty()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    System.out.println(\"Details of the task cannot be left Empty!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    createTask(new TodoTask(detailsOfTask, taskCount));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    tasks[taskCount].printCreateMessage(pendingTaskCount);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            case COMMAND_DISPLAY_LIST:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                printTaskList(tasks, taskCount, pendingTaskCount);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            case COMMAND_END_PROGRAM:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                break loop;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            case COMMAND_MARK_AS_DONE:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                String number \u003d input.next();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                if(number \u003d\u003d null || number.isEmpty()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    System.out.println(\"The task number cannot be left empty!\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    int doneTaskNumber \u003d Integer.parseInt(number);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    if (tasks[doneTaskNumber].isDone \u003d\u003d false) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                        --pendingTaskCount;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                        tasks[doneTaskNumber].markTaskAsDone(pendingTaskCount);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                        System.out.println(tasks[doneTaskNumber].taskName + \" is already done!\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                System.out.println(\"I don\u0027t understand what you are say! Please enter a valid command!\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static void printTaskList(Task[] tasks, int taskCount, int pendingTaskCount) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(\"Here is a list of all your tasks:\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d taskCount; ++i) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            tasks[i].printListMessage();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(\"Total number of incomplete tasks: \" + pendingTaskCount);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static void createTask(Task t) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        ++taskCount;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        ++pendingTaskCount;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(taskCount);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        tasks[taskCount] \u003d t;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "hongquan448": 89,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongquan448": 3
    }
  },
  {
    "path": "src/main/java/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "public class EventTask extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public String eventTiming;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public EventTask(String input, int taskNumber) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        super(input, taskNumber);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        int positionOfEvent \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        this.taskName \u003d input.substring(0, positionOfEvent);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        this.taskName \u003d this.taskName.strip();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        this.eventTiming \u003d input.substring(positionOfEvent + 4);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        this.eventTiming \u003d eventTiming.strip();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public void printCreateMessage(int pendingTaskNumber) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(\"The following task has been created:\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(this.taskNumber+1 + \".[E][Not Done] \" + this.taskName + \" (at: \" + this.eventTiming + \")\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(\"Total number of incomplete tasks: \" + pendingTaskNumber);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public void printListMessage() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        if (isDone \u003d\u003d false) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            System.out.println(this.taskNumber+1 + \".[E][Not Done] \" + this.taskName + \" (at: \" + this.eventTiming + \")\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            System.out.println(this.taskNumber+1 + \".[E][Done] \" + this.taskName + \" (at: \" + this.eventTiming + \")\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongquan448": 29
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    protected int taskNumber;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public Task(String input, int taskCount) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        this.taskNumber \u003d taskCount;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        this.taskName \u003d input.strip();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public void markTaskAsDone(int pendingTaskNumber) { //Method variable taskNumber is independent of the class variable"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            System.out.println(\"[Done] \" + this.taskName);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            System.out.println(\"Total number of incomplete tasks: \" + pendingTaskNumber);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public abstract void printCreateMessage(int pendingTaskNumber);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public abstract void printListMessage();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongquan448": 22
    }
  },
  {
    "path": "src/main/java/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public TodoTask(String input, int taskNumber) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        super(input, taskNumber);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public void printCreateMessage(int pendingTaskNumber) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(\"The following task has been created:\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(this.taskNumber+1 + \".[T][Not Done] \" + this.taskName);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(\"Total number of incomplete tasks: \" + pendingTaskNumber);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public void printListMessage() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        if (isDone \u003d\u003d false) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            System.out.println(this.taskNumber+1 + \".[T][Not Done] \" + this.taskName);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            System.out.println(this.taskNumber+1 + \".[T][Done] \" + this.taskName);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongquan448": 22
    }
  }
]

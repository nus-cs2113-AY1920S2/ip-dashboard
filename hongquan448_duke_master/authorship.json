[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "### Display help"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Open the list of available commands that are supported by Duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Keyword: `help`"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "### Create task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Creates a task with description only"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Keyword: `todo`"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "### Create task with deadline"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Creates a task with description and a time limit"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Keyword: `deadline`"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "### Create event with timing"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Creates an event with description, date and time"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Keyword: `event`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "### Mark task as done"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Mark a task/deadline task/event as done"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Keyword: `done`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "### Display the list of tasks"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Open the list of available tasks"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Keyword: `list`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "### Delete task"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Delete a task/deadline task/event"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Keyword: `delete`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "### Clear all tasks"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Delete all the tasks saved inside the memory"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Keyword: `clear`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "### Save changes"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Save any changes made since starting up duke"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Keyword: `save`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "### Find task"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Search for all tasks/deadline tasks/events that contains the keyword"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Keyword: `find`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "### Terminate program"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Terminate the program"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Keyword: `bye`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "### Display help"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Enter the keyword `help`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "#### Example of usage:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "`help`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Duke supports the following commands"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Please enter the keyword followed by details required in the \u003c\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "todo \u0026lt;task details\u0026gt; --------------------------- Create a new task"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "  "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "deadline \u0026lt;task details\u0026gt; /by: \u0026lt;timing details\u0026gt; - Create a new task with a time element"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "  "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "event \u0026lt;event details\u0026gt; /at: \u0026lt;timing details\u0026gt; --- Create a new event with a time element"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "  "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "done \u0026lt;task number\u0026gt; ---------------------------- Mark task as done"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "delete \u0026lt;task number\u0026gt; -------------------------- Delete task"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "list ------------------------------------------ List all available tasks and events"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "bye ------------------------------------------- Shutdown Duke"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "### Create task"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Enter keyword `todo` followed by the description of the task to create a new incomplete task with that description."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "todo get eggs"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "The following task has been created:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "1. [T][NotDone] get eggs "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Total number of incomplete tasks: 1"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "### Create task with deadline"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Enter the keyword `deadline`, the task description, keyword `/by`, and lastly the intended deadline, all on the same line"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "deadline OCIP planning \\by 20 Mar 2020 18:00"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "The following task has been created:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "2. [D][NotDone] OCIP planning (by: 20 Mar 2020 18:00)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Total number of incomplete tasks: 2"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "### Create event with timing"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Enter the keyword `event`, the event description, keyword `/at`, and lastly the intended date and time, all on the same line"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "event attend open house /at 8 Mar 2020 12:00"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "The following task has been created:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "3. [E][NotDone] attend open house (at: 8 Mar 2020 12:00) "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Total number of incomplete tasks: 3"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "### Mark task as done"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Enter the keyword `done` followed by the index number of the task (the index number could be checked using the list command)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "#### Example of usage:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "[Done] get eggs"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Total number of incomplete tasks: 2"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "### Display the list of tasks"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Enter the keyword `list`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "list"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Here is a list of all your tasks:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "1. [T][Done] get eggs "
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "2. [D][NotDone] OCIP planning (by: 20 Mar 2020 18:00)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "3. [E][NotDone] attend open house (at: 8 Mar 2020 12:00) "
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Total number of incomplete tasks: 2"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "### Delete task"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Enter the keyword `delete` followed by the index number of the task (the index number could be checked using the list command)"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "get eggs has been deleted!"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "### Clear all tasks"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Enter the keyword `clear`"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "clear"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Your changes have been saved successfully"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "### Save changes"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Enter the keyword `save`"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "save"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Warning! This command will delete all your tasks, proceed?(Y/N)"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "If user enters `Y`:"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Your tasks have been cleared"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "If user enters `N`:"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Command has been cancelled"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "### Find task"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Enter the keyword `find`, followed by the search term"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "find OCIP"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Here are the relevant tasks in your list:"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "1. [D][NotDone] OCIP planning (by: 20 Mar 2020 18:00)"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "### Terminate program"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Enter the keyword `bye`, then enter \"Y\" to save changes, \"N\" to exit without saving"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Would you like to save your changes?(Y/N)"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "If user enters `Y`:"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Your changes have been saved successfully"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "If user enters `N`:"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "hongquan448": 200,
      "-": 17
    }
  },
  {
    "path": "src/main/java/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "public class DeadlineTask extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public DeadlineTask(TaskType taskType, boolean isDone, String taskDetails, String taskDate, String taskTime) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        super(taskType, isDone, taskDetails);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        this.taskDate \u003d taskDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        this.taskTime \u003d taskTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public void printCreateMessage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(\"The following task has been created:\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(\"[\" + this.taskType  + \"]\" + \"[\" + convertToCheckMark(this.isDone)  + \"] \"+ this.taskDetails + \" (by: \" + this.taskDate + \" \" + this.taskTime + \")\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public void printListMessage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(\"[\" + this.taskType  + \"]\" + \"[\" + convertToCheckMark(this.isDone)  + \"] \"+ this.taskDetails + \" (by: \" + this.taskDate + \" \" + this.taskTime + \")\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongquan448": 20
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static final String COMMAND_CREATE_TODO_TASK \u003d \"todo\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static final String COMMAND_CREATE_DEADLINE_TASK \u003d \"deadline\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static final String COMMAND_CREATE_EVENT_TASK \u003d \"event\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static final String COMMAND_DISPLAY_HELP \u003d \"help\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static final String COMMAND_DISPLAY_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static final String COMMAND_DELETE_TASK \u003d \"delete\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static final String COMMAND_END_PROGRAM \u003d \"bye\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static final String COMMAND_FIND_TASK \u003d \"find\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static final String COMMAND_SAVE_FILE \u003d \"save\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static final String COMMAND_MARK_AS_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static final String FILE_PATH \u003d \"data/dukeData.txt\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static final String FOLDER_PATH \u003d \"data\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static int numberOfIncompleteTasks \u003d 0;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        Storage.createNewFolder(FOLDER_PATH);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        Storage.createNewFile(FILE_PATH);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        Storage.loadFile(FILE_PATH, tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        numberOfIncompleteTasks \u003d getIncomplete(tasks);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        printPageBreak();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        loop:  while(true) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            command \u003d input.next();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            printPageBreak();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            TaskType taskType;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            String taskDetails;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            Parser parsedTaskDetails;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            String taskIndex;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            switch(command) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            case COMMAND_CREATE_DEADLINE_TASK:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                taskDetails \u003d  input.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                if (taskDetails \u003d\u003d null || taskDetails.isEmpty()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    System.out.println(\"Details of the task cannot be left Empty!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    parsedTaskDetails \u003d new Parser(taskDetails);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    taskType \u003d TaskType.D;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    parsedTaskDetails.userInput(taskType, tasks);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    ++numberOfIncompleteTasks;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            case COMMAND_CREATE_EVENT_TASK:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                taskDetails \u003d  input.nextLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                if (taskDetails \u003d\u003d null || taskDetails.isEmpty()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    System.out.println(\"Details of the task cannot be left Empty!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    taskType \u003d TaskType.E;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    parsedTaskDetails \u003d new Parser(taskDetails);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    parsedTaskDetails.userInput(taskType, tasks);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    ++numberOfIncompleteTasks;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            case COMMAND_CREATE_TODO_TASK:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                taskDetails \u003d  input.nextLine();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                if (taskDetails \u003d\u003d null || taskDetails.isEmpty()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    System.out.println(\"Details of the task cannot be left Empty!\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    parsedTaskDetails \u003d new Parser(taskDetails);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    taskType \u003d TaskType.T;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    parsedTaskDetails.userInput(taskType, tasks);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    ++numberOfIncompleteTasks;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            case COMMAND_DISPLAY_HELP:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                printHelp();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            case COMMAND_DISPLAY_LIST:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                printTaskList(tasks, numberOfIncompleteTasks);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            case COMMAND_FIND_TASK:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                taskDetails \u003d input.nextLine().trim();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                findTasks(tasks, taskDetails);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            case COMMAND_END_PROGRAM:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                System.out.println(\"Would you like to save your changes? (Y/N)\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                String reply \u003d input.next();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                if (reply.equals(\"Y\") || reply.equals(\"y\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    Storage.saveFile(FILE_PATH, tasks);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    System.out.println(\"Your changes have been saved successfully\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                break loop;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            case COMMAND_MARK_AS_DONE:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                taskIndex \u003d input.next();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                if(taskIndex \u003d\u003d null || taskIndex.isEmpty()) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    System.out.println(\"The task index number cannot be left empty!\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    int doneTaskIndex \u003d Integer.parseInt(taskIndex) - 1;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    if (tasks.get(doneTaskIndex).isDone \u003d\u003d false) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                        --numberOfIncompleteTasks;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                        tasks.get(doneTaskIndex).markTaskAsDone(numberOfIncompleteTasks);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                        System.out.println(tasks.get(doneTaskIndex).taskDetails + \" is already done!\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            case COMMAND_DELETE_TASK:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                taskIndex \u003d input.next();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                if(taskIndex \u003d\u003d null || taskIndex.isEmpty()) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    System.out.println(\"The task index number cannot be left empty!\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    int deleteTaskIndex \u003d Integer.parseInt(taskIndex) - 1;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    if (tasks.size() \u003e deleteTaskIndex || deleteTaskIndex \u003c 0) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                        --numberOfIncompleteTasks;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                        deleteTask(tasks, deleteTaskIndex);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                        System.out.println(\"The task does not exist!\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            case COMMAND_SAVE_FILE:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                Storage.saveFile(FILE_PATH, tasks);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                System.out.println(\"Your changes have been saved successfully\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                System.out.println(\"I don\u0027t understand what you are saying! Please enter a valid command!\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static void printTaskList(ArrayList\u003cTask\u003e tasks, int numberOfIncompleteTasks) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(\"Here is a list of all your tasks:\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        int taskIndex \u003d 1;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        for (Task task: tasks){"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            System.out.print(taskIndex + \". \");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            task.printListMessage();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            ++taskIndex;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(\"Total number of incomplete tasks: \" + numberOfIncompleteTasks);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static void deleteTask(ArrayList\u003cTask\u003e tasks, int taskIndex) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(tasks.get(taskIndex).taskDetails + \" has been deleted!\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static void printHelp(){"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(\"Duke supports the following commands\\nPlease enter the keyword followed by details required in the \u003c\u003e\\n\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(\"todo \u003ctask details\u003e --------------------------- Create a new task\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(\"deadline \u003ctask details\u003e /by: \u003ctiming details\u003e - Create a new task with a time element\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(\"event \u003cevent details\u003e /at: \u003ctiming details\u003e --- Create a new event with a time element\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(\"done \u003ctask number\u003e ---------------------------- Mark task as done\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(\"delete \u003ctask number\u003e -------------------------- Delete task\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(\"list ------------------------------------------ List all available tasks and events\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(\"bye ------------------------------------------- Shutdown Duke\\n\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static void printPageBreak() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static int getIncomplete(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        int numberOfIncompleteTasks \u003d 0;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            if (!task.isDone) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                ++numberOfIncompleteTasks;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        return numberOfIncompleteTasks;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static void findTasks(ArrayList\u003cTask\u003e tasks, String input){"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(\"Here are the relevant tasks in your list:\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        int taskIndex \u003d 1;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            String[] details \u003d task.taskDetails.split(\" \");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            for (String detail: details) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                if (detail.equals(input)) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    System.out.print(taskIndex + \". \");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    task.printListMessage();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                    ++taskIndex;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "hongquan448": 184,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongquan448": 3
    }
  },
  {
    "path": "src/main/java/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "public class EventTask extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public EventTask(TaskType taskType, boolean isDone, String taskDetails, String taskDate, String taskTime) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        super(taskType, isDone, taskDetails);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        this.taskDate \u003d taskDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        this.taskTime \u003d taskTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public void printCreateMessage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(\"The following task has been created:\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(\"[\" + this.taskType  + \"]\" + \"[\" + convertToCheckMark(this.isDone)  + \"] \"+ this.taskDetails + \" (at: \" + this.taskDate + \" \" + this.taskTime + \")\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public void printListMessage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(\"[\" + this.taskType  + \"]\" + \"[\" + convertToCheckMark(this.isDone)  + \"] \"+ this.taskDetails + \" (at: \" + this.taskDate + \" \" + this.taskTime + \")\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongquan448": 20
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    String input;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public Parser(String input){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public void readFile(ArrayList\u003cTask\u003e tasks){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        String[] words \u003d this.input.split(\"\\\\|\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        TaskType taskType \u003d TaskType.valueOf(words[0]);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        boolean isDone \u003d parseIsDone(words[1]);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        String taskDetails \u003d words[2];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        String taskDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        String taskTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        case T:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            tasks.add(new TodoTask(taskType, isDone, taskDetails));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        case E:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            taskDate \u003d words[3];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            taskTime \u003d words[4];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            tasks.add(new EventTask(taskType, isDone, taskDetails, taskDate, taskTime));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        case D:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            taskDate \u003d words[3];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            taskTime \u003d words[4];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            tasks.add(new DeadlineTask(taskType, isDone, taskDetails, taskDate, taskTime));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            System.out.println(\"There is an error in the save file, please restart Duke\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public void userInput(TaskType taskType, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        boolean isDone \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        String taskDetails;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        String[] dateAndTime;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        String taskDate;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        String taskTime;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        int slashPosition;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        case T:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            taskDetails \u003d this.input.trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            tasks.add(new TodoTask(taskType, isDone, taskDetails));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            task \u003d new TodoTask(taskType, isDone, taskDetails);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            task.printCreateMessage();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        case E:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            slashPosition \u003d this.input.indexOf(\"/\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            taskDetails \u003d this.input.substring(0, slashPosition).trim();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            dateAndTime \u003d this.input.substring(slashPosition+3).trim().split(\" \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            taskDate \u003d dateAndTime[0];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            taskTime \u003d dateAndTime[1];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            tasks.add(new EventTask(taskType, isDone, taskDetails, taskDate, taskTime));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            task \u003d new EventTask(taskType, isDone, taskDetails, taskDate, taskTime);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            task.printCreateMessage();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        case D:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            slashPosition \u003d this.input.indexOf(\"/\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            taskDetails \u003d this.input.substring(0, slashPosition).trim();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            dateAndTime \u003d this.input.substring(slashPosition+3).trim().split(\" \");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            taskDate \u003d dateAndTime[0];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            taskTime \u003d dateAndTime[1];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            tasks.add(new DeadlineTask(taskType, isDone, taskDetails, taskDate, taskTime));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            task \u003d new DeadlineTask(taskType, isDone, taskDetails, taskDate, taskTime);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            task.printCreateMessage();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            System.out.println(\"An error has occurred, please check your input\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public void writeToFile(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            String taskType \u003d task.taskType.name();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            String isDone;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            if (task.isDone) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                isDone \u003d \"Y\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                isDone \u003d \"N\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                line \u003d taskType + \"|\" + isDone + \"|\" + task.taskDetails;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                line \u003d taskType + \"|\" + isDone + \"|\" + task.taskDetails + \"|\" + task.taskDate + \"|\" + task.taskTime;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                line \u003d null;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                System.out.println(\"Error in writing file, please restart Duke\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            this.input +\u003d line + System.lineSeparator();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public boolean parseIsDone(String input){"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        boolean isDone;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        if (input.equals(\"Y\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            isDone \u003d true;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            isDone \u003d false;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongquan448": 115
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static void createNewFolder(String pathname) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        File newFolder \u003d new File(pathname);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            newFolder.mkdirs();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        } catch (SecurityException e){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            System.out.print(\"The memory folder could not be created due to security reasons, please relocate the Duke.jar file\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static void createNewFile(String pathname) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        File newFile \u003d new File(pathname);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            newFile.createNewFile();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        } catch (SecurityException e){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            System.out.print(\"The memory file could not be created due to security reasons, please relocate the Duke.jar file\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            System.out.print(\"The memory file could not be created due to connection reasons, please restart the Duke.jar file\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static void loadFile(String pathname, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        File saveState \u003d new File(pathname);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            Scanner fileLoader \u003d new Scanner(saveState);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            while (fileLoader.hasNextLine()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                Parser data \u003d new Parser(fileLoader.nextLine());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "                data.readFile(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        } catch (FileNotFoundException e){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            System.out.print(\"No memory file found, please restart Duke\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public static void saveFile(String pathname, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            FileWriter saveState \u003d new FileWriter(pathname);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            Parser contentsToSave \u003d new Parser(\"\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            contentsToSave.writeToFile(tasks);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            saveState.write(contentsToSave.input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            saveState.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        } catch(IOException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            System.out.print(\"Connection error\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongquan448": 53
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    protected TaskType taskType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    protected String taskDetails;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    protected String taskDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    protected String taskTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public Task(TaskType taskType, boolean isDone, String taskDetails) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        this.taskDetails \u003d taskDetails;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public void markTaskAsDone(int numberOfIncompleteTasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            this.printListMessage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            System.out.println(\"Total number of incomplete tasks: \" + numberOfIncompleteTasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public String convertToCheckMark(boolean isDone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        String isDoneDisplay;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            int checkMark \u003d 0x2713;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            isDoneDisplay \u003d Character.toString((char)checkMark);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            int checkMark \u003d 0x10035;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "            isDoneDisplay \u003d Character.toString((char)checkMark);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        return isDoneDisplay;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public abstract void printCreateMessage();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public abstract void printListMessage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongquan448": 37
    }
  },
  {
    "path": "src/main/java/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "enum TaskType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    T,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    E,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    D"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongquan448": 5
    }
  },
  {
    "path": "src/main/java/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public TodoTask(TaskType taskType, boolean isDone, String taskDetails) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        super(taskType, isDone, taskDetails);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public void printCreateMessage() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(\"The following task has been created:\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(\"[\" + this.taskType  + \"]\" + \"[\" + convertToCheckMark(this.isDone) + \"] \"+ this.taskDetails);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hongquan448"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    public void printListMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "        System.out.println(\"[\" + this.taskType  + \"]\" + \"[\" + convertToCheckMark(this.isDone) + \"] \"+ this.taskDetails);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hongquan448": 17
    }
  },
  {
    "path": "src/main/java/data/dukeData.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "T|N|read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "T|N|write book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hongquan448"
        },
        "content": "T|N|burn book"
      }
    ],
    "authorContributionMap": {
      "hongquan448": 3
    }
  }
]

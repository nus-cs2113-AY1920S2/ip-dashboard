[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "GanapathySanathBalaji": 2,
      "-": 37
    }
  },
  {
    "path": "TaskList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "T # false # Hi"
      }
    ],
    "authorContributionMap": {
      "GanapathySanathBalaji": 1
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "test {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "compileJava.options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GanapathySanathBalaji": 24,
      "-": 19
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "import duke.exception.ExceptionType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "import duke.print.PrintHelper;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "import duke.task.TaskManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static final String BYE_COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static final String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static final String EMPTY_COMMAND \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static final String DONE_COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static final String DELETE_COMMAND \u003d \"delete\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static final String TODO_COMMAND \u003d \"todo\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static final String DEADLINE_COMMAND \u003d \"deadline\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static final String EVENT_COMMAND \u003d \"event\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Handles all the tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    private static TaskManager taskManager \u003d new TaskManager();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        loadData();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        PrintHelper.printWelcomeMessage();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        while (!command.equals(BYE_COMMAND)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                executeCommand(command);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            } catch (DukeException exception) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                exception.printExceptionMessage();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        saveData();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        PrintHelper.printByeMessage();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    private static void loadData() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            loadTasks();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    private static void saveData() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            TaskManager.storeTasksToFile();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    private static void loadTasks() throws IOException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            TaskManager.loadTasksFromFile();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            File file \u003d new File(\"TaskList.txt\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Executes the command entered by the user"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    private static void executeCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        String[] commandSplit \u003d command.split(\" \",2);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        String commandType \u003d commandSplit[0];"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        boolean isOneWordCommand \u003d commandSplit.length \u003d\u003d 1 || commandSplit[1].isBlank();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            switch (commandType) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            case LIST_COMMAND:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                taskManager.listTasks(isOneWordCommand);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            case DONE_COMMAND:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                taskManager.markTaskAsDone(commandSplit);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            case TODO_COMMAND:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                taskManager.addToDoTask(commandSplit);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            case DEADLINE_COMMAND:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                taskManager.addDeadlineTask(commandSplit, isOneWordCommand);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            case DELETE_COMMAND:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                taskManager.deleteTask(commandSplit);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            case EVENT_COMMAND:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                taskManager.addEventTask(commandSplit, isOneWordCommand);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            case EMPTY_COMMAND:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                throw new DukeException(ExceptionType.EmptyCommand);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                // break statement can\u0027t be reached if added"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                throw new DukeException(ExceptionType.InvalidCommand);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                // break statement can\u0027t be reached if added"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        } catch (DukeException dukeException) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            dukeException.printExceptionMessage();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Prints that user entered an invalid Command"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    private static void invalidCommand() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        PrintHelper.printInvalidCommand();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Prints that user entered an empty line"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    private static void emptyCommand() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        PrintHelper.printEmptyLineAlert();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GanapathySanathBalaji": 117,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "import duke.print.PrintHelper;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    ExceptionType exceptionType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public DukeException(ExceptionType exceptionType) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        this.exceptionType \u003d exceptionType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public void printExceptionMessage() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        switch (exceptionType) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        case InvalidCommand:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            PrintHelper.printInvalidCommand();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        case InvalidDoneCommand:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            PrintHelper.printInvalidDoneFormat();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        case InvalidDeleteCommand:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            PrintHelper.printInvalidDeleteFormat();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        case InvalidToDoDeclaration:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            PrintHelper.printInvalidToDoFormat();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        case InvalidDeadlineDeclaration:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            PrintHelper.printInvalidDeadlineFormat();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        case InvalidEventDeclaration:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            PrintHelper.printInvalidEventFormat();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        case EmptyCommand:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            PrintHelper.printEmptyLineAlert();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            PrintHelper.printWithIndentation(\"Execution Error!!!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GanapathySanathBalaji": 40
    }
  },
  {
    "path": "src/main/java/duke/exception/ExceptionType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "// Used to denote type of exception"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "public enum ExceptionType {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    InvalidCommand, InvalidDoneCommand, InvalidToDoDeclaration, InvalidEventDeclaration,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    InvalidDeadlineDeclaration, EmptyCommand, InvalidDeleteCommand"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GanapathySanathBalaji": 7
    }
  },
  {
    "path": "src/main/java/duke/print/PrintHelper.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "package duke.print;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "import duke.task.TaskManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "public class PrintHelper {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    private static final String INVALID_COMMAND_MESSAGE \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    private static final String INVALID_EVENT_FORMAT_MESSAGE \u003d \"Invalid format of declaration for event \""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            + \"(event .......  /at ......)\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    private static final String INVALID_DEADLINE_FORMAT_MESSAGE \u003d \"Invalid format of declaration for deadline \""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            + \"(deadline .......  /by ......)\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    private static final String DASHED_LINE \u003d \"_________________________________________________________________\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            + \"_________________________\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    private static final String WELCOME_MESSAGE_LINE_1 \u003d \"Hello! I\u0027m Duke\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    private static final String WELCOME_MESSAGE_LINE_2 \u003d \"What can I do for you?\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    private static final String EMPTY_LINE_ALERT_MESSAGE \u003d \"You have entered a empty line, Please enter a valid\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            + \" command\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    private static final String ARRAY_INDEX_OUT_OF_BOUNDS_MESSAGE_FOR_DONE_COMMAND \u003d \"Invalid Command \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            + \"(done x : x should be a valid integer index)\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    private static final String ARRAY_INDEX_OUT_OF_BOUNDS_MESSAGE_FOR_DELETE_COMMAND \u003d \"Invalid Command \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            + \"(delete x : x should be a valid integer index)\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    private static final String INVALID_ARRAY_INDEX_MESSAGE_FOR_DONE_COMMAND \u003d \"Invalid Command \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            + \"(done x : x should be an integer)\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    private static final String INVALID_ARRAY_INDEX_MESSAGE_FOR_DELETE_COMMAND \u003d \"Invalid Command \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            + \"(delete x : x should be an integer)\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    private static final String BYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    private static final String INVALID_TODO_FORMAT_MESSAGE \u003d \"OOPS!!! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    private static final String SINGLE_SPACE \u003d \" \";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    private static final String DONE_COMMAND \u003d TaskManager.DONE_COMMAND;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    private static final String DELETE_COMMAND \u003d TaskManager.DELETE_COMMAND;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Prints the number of spaces requested by the user"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static void printSpaces(int numberOfSpaces) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        while (numberOfSpaces \u003e 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            System.out.print(SINGLE_SPACE);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            numberOfSpaces--;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Prints a line made up of \u0027_\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static void printLine() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        printSpaces(4);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        System.out.println(DASHED_LINE);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Prints the line given by the user along with an indentation of 5 blank spaces"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static void printWithIndentation(String line) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        printSpaces(5);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Prints the line given by the user along with an indentation of certain number"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // of blank spaces provided by the user"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static void printWithIndentation(String line, int numberOfSpaces) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        printSpaces(numberOfSpaces);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Prints the welcome message"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static void printWelcomeMessage() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        printWithIndentation(WELCOME_MESSAGE_LINE_1);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        printWithIndentation(WELCOME_MESSAGE_LINE_2);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Prints the bye (exit) message"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static void printByeMessage() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        printWithIndentation(BYE_MESSAGE);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Prints a message to alert the user that an invalid task index was provided"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static void printInvalidIndexAlert(String commandType) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        case DONE_COMMAND:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            printWithIndentation(ARRAY_INDEX_OUT_OF_BOUNDS_MESSAGE_FOR_DONE_COMMAND);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        case DELETE_COMMAND:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            printWithIndentation(ARRAY_INDEX_OUT_OF_BOUNDS_MESSAGE_FOR_DELETE_COMMAND);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            // Add exception handling"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Prints a message to alert the user that an index of the wrong format was provided"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static void printIndexNotIntegerAlert(String commandType) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        case DONE_COMMAND:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            printWithIndentation(INVALID_ARRAY_INDEX_MESSAGE_FOR_DONE_COMMAND);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        case DELETE_COMMAND:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            printWithIndentation(INVALID_ARRAY_INDEX_MESSAGE_FOR_DELETE_COMMAND);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            // Add exception handling"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Prints a message to alert the user that an an empty line was provided as input"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static void printEmptyLineAlert() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        printWithIndentation(EMPTY_LINE_ALERT_MESSAGE);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Prints a message to alert that the user didn\u0027t follow the correct format to create a deadline task"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static void printInvalidDeadlineFormat() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        printWithIndentation(INVALID_DEADLINE_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Prints a message to alert that the user didn\u0027t follow the correct format to create an event task"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static void printInvalidEventFormat() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        printWithIndentation(INVALID_EVENT_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Prints a message to alert that the user that he entered an invalid command"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static void printInvalidCommand() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        printWithIndentation(INVALID_COMMAND_MESSAGE);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Prints a message to alert that the user didn\u0027t follow the correct format to create a todo task"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static void printInvalidToDoFormat() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        printWithIndentation(INVALID_TODO_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Prints a message to alert that the user didn\u0027t follow the correct format to mark a task done"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static void printInvalidDoneFormat() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        printIndexNotIntegerAlert(DONE_COMMAND);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static void printInvalidDeleteFormat() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        printIndexNotIntegerAlert(DELETE_COMMAND);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GanapathySanathBalaji": 152
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Stores information about deadline of task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Overloaded Constructor"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public Deadline(String descriptionWithDeadline) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        super(getDescription(descriptionWithDeadline));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        taskType \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        this.by \u003d getDeadline(descriptionWithDeadline);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Abstracts out the description from the user given input and returns it"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    private static String getDescription(String descriptionWithDeadline) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        String[] words \u003d descriptionWithDeadline.split(\"/\",2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        return words[0];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Abstracts out the deadline from the user given input and returns it"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    private static String getDeadline(String descriptionWithDeadline) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        String[] split \u003d descriptionWithDeadline.split(\"/\",2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        return (split[1].split(\" \",2))[1];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Returns the deadline in required format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        return \"(by: \" + by + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Returns the deadline"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public String getByWithoutBraces() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Returns the task\u0027s type and status along with it\u0027s description as a string"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public String getStatusWithDescription() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        return \"[\" + this.taskType + \"]\" + super.getStatusWithDescription() + getBy();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GanapathySanathBalaji": 42
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Stores information about period of task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    private String period;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Overloaded Constructor"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public Event(String descriptionWithPeriod) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        super(getDescription(descriptionWithPeriod));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        taskType \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        this.period \u003d getPeriod(descriptionWithPeriod);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Abstracts out the description from the user given input and returns it"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    private static String getDescription(String descriptionWithPeriod) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        String[] split \u003d descriptionWithPeriod.split(\"/\",2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        return split[0];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Abstracts out the period from the user given input and returns it"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    private static String getPeriod(String descriptionWithPeriod) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        String[] split \u003d descriptionWithPeriod.split(\"/\",2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        return (split[1].split(\" \",2))[1];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Returns the period in required format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public String getPeriod() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        return \"(at: \" + period + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Returns the period"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public String getPeriodWithoutBraces() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        return period;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Returns the task\u0027s type and status along with it\u0027s description as a string"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public String getStatusWithDescription() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        return \"[\" + this.taskType + \"]\" + super.getStatusWithDescription() + getPeriod();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GanapathySanathBalaji": 42
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static final String TICK_SYMBOL \u003d \"/\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static final String X_SYMBOL \u003d \" \";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Stores the description of the task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Denotes whether the task is done or not done"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Used to denote type of task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    protected char taskType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Constructor"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Returns the status icon as a string"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // tick -\u003e Task is done ;  X symbol -\u003e Task isn\u0027t done ;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        return (isDone ? TICK_SYMBOL : X_SYMBOL);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Returns description of the task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Set done as required"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Marks the task as done"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Returns the task\u0027s status along with it\u0027s description as a string"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public String getStatusWithDescription() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GanapathySanathBalaji": 47
    }
  },
  {
    "path": "src/main/java/duke/task/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "import duke.exception.ExceptionType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "import duke.print.PrintHelper;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static final String TASK_ALREADY_SET_ALERT \u003d \"Task was already set as done\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static final String TASK_MARKED_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static final String LIST_TASKS_MESSAGE \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static final String LIST_EMPTY_MESSAGE \u003d \"The list is empty\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static final String TASK_ADDED_MESSAGE \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static final String DEADLINE_SPECIFIER \u003d \"/by \";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static final String PERIOD_SPECIFIER \u003d \"/at \";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static final String DELETE_COMMAND \u003d \"delete\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static final String DONE_COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static final String TASK_DELETED_MESSAGE \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    private static final String FILE_PATH \u003d \"TaskList.txt\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Stores all the tasks provided"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Loads the tasks saved previously"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static void loadTasksFromFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        File f \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            String taskDescription \u003d s.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            String[] splitDescription \u003d taskDescription.split(\"#\",3);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            char taskType \u003d splitDescription[0].charAt(0);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            boolean isDone \u003d Boolean.parseBoolean(splitDescription[1].trim());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            String description \u003d splitDescription[2].trim();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            case \u0027T\u0027:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                ToDo toDo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                toDo.setDone(isDone);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                tasks.add(toDo);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            case \u0027D\u0027:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                Deadline deadline \u003d new Deadline(description);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                deadline.setDone(isDone);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                tasks.add(deadline);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            case \u0027E\u0027:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                Event event \u003d new Event(description);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                event.setDone(isDone);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                tasks.add(event);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                // Add exception handling"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Saves the tasks for future usage"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public static void storeTasksToFile() throws IOException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        FileWriter fw \u003d new FileWriter(FILE_PATH);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            switch (task.taskType) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            case \u0027T\u0027:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                ToDo toDo \u003d (ToDo) task;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                fw.write(\"T # \" + toDo.isDone + \" # \" + toDo.description + System.lineSeparator());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            case \u0027D\u0027:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                Deadline deadline \u003d (Deadline) task;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                fw.write(\"D # \" + deadline.isDone + \" # \" + deadline.description + \"/by \""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                        + deadline.getByWithoutBraces() + System.lineSeparator());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            case \u0027E\u0027:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                Event event \u003d (Event) task;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                fw.write(\"E # \" + event.isDone + \" # \" + event.description + \"/at \""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                        + event.getPeriodWithoutBraces() + System.lineSeparator());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                // Add Exception handling"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Adds a new task with the descriptionWithDetails provided by the user"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public void addTask(TaskType taskType, String descriptionWithDetails) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        case ToDo:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            tasks.add(new ToDo(descriptionWithDetails));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        case Deadline:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            tasks.add(new Deadline(descriptionWithDetails));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        case Event:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            tasks.add(new Event(descriptionWithDetails));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            PrintHelper.printWithIndentation(\"Error!!!\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        printLatestTaskAndTotalNumberOfTasks();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Prints details about the latest task added along with"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // the total number of tasks present in the list"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    private void printLatestTaskAndTotalNumberOfTasks() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        PrintHelper.printLine();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        PrintHelper.printWithIndentation(TASK_ADDED_MESSAGE);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        PrintHelper.printWithIndentation(tasks.get(tasks.size() - 1).getStatusWithDescription(),7);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        PrintHelper.printWithIndentation(\"Now you have \" + tasks.size() + \" task\""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                + (tasks.size() !\u003d 1 ? \"s \" : \" \") + \"in the list.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        PrintHelper.printLine();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Marks the task denoted by the task as done"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Also handles exceptions in case the index provided isn\u0027t valid"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public void markTask(String[] commandSplit) throws DukeException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        int taskNumber;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        if (commandSplit.length !\u003d 2) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            throw new DukeException(ExceptionType.InvalidDoneCommand);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        String taskIndex \u003d commandSplit[1];"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        taskNumber \u003d Integer.parseInt(taskIndex);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        // Convert to 0-based index"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        taskNumber--;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        if (tasks.get(taskNumber).isDone) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            printAsAlreadyDone(taskNumber);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            markTaskAndPrintMessage(taskNumber);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Relays message to another method to delete  the task denoted"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Also throws exceptions in case the index provided isn\u0027t valid"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public void deleteTaskFromList(String[] commandSplit) throws DukeException {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        int taskNumber;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        if (commandSplit.length !\u003d 2) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            throw new DukeException(ExceptionType.InvalidDeleteCommand);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        String taskIndex \u003d commandSplit[1];"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        taskNumber \u003d Integer.parseInt(taskIndex);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        // Convert to 0-based index"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        taskNumber--;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        deleteTaskAtIndex(taskNumber);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Deletes the task at specified index"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    private void deleteTaskAtIndex(int taskNumber) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        final String taskStatusWithDescription \u003d tasks.get(taskNumber).getStatusWithDescription();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        PrintHelper.printLine();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        PrintHelper.printWithIndentation(TASK_DELETED_MESSAGE);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        PrintHelper.printWithIndentation(taskStatusWithDescription,7);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        tasks.remove(taskNumber);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        PrintHelper.printWithIndentation(\"Now you have \" + tasks.size() + \" task\""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                + (tasks.size() !\u003d 1 ? \"s \" : \" \") + \"in the list.\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        PrintHelper.printLine();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Instructs the task manager to delete the task if the correct format is used"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public void deleteTask(String[] commandSplit) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            deleteTaskFromList(commandSplit);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        } catch (DukeException invalidDeleteCommand) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            invalidDeleteCommand.printExceptionMessage();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        } catch (NumberFormatException indexNotInteger) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            PrintHelper.printIndexNotIntegerAlert(DELETE_COMMAND);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        } catch (IndexOutOfBoundsException indexOutOfBounds) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            PrintHelper.printInvalidIndexAlert(DELETE_COMMAND);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Marks the task denoted by a valid task index as done and prints the corresponding message"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public void markTaskAndPrintMessage(int taskNumber) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        tasks.get(taskNumber).markAsDone();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        PrintHelper.printLine();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        PrintHelper.printWithIndentation(TASK_MARKED_MESSAGE);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        PrintHelper.printWithIndentation(tasks.get(taskNumber).getStatusWithDescription(),7);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        PrintHelper.printLine();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Lists all the tasks provided by user so far"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public void printListOfTasks() {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        boolean isEmpty \u003d (tasks.size() \u003d\u003d 0);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        PrintHelper.printLine();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        if (isEmpty) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            PrintHelper.printWithIndentation(LIST_EMPTY_MESSAGE);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            PrintHelper.printWithIndentation(LIST_TASKS_MESSAGE);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "                PrintHelper.printWithIndentation((i + 1) + \". \" + tasks.get(i).getStatusWithDescription());"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        PrintHelper.printLine();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Prints that the user has already marked the specified task as done previously"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public void printAsAlreadyDone(int index) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        PrintHelper.printLine();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        PrintHelper.printWithIndentation(TASK_ALREADY_SET_ALERT);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        PrintHelper.printWithIndentation(tasks.get(index).getStatusWithDescription(),7);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        PrintHelper.printLine();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Instructs the task manager to add the Event task specified by the user"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // to the list if the correct format is used"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public void addEventTask(String[] commandSplit, boolean isOneWordCommand) throws DukeException {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        boolean isCorrectFormat \u003d !isOneWordCommand \u0026\u0026 commandSplit[1].contains(PERIOD_SPECIFIER);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        if (!isCorrectFormat) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            throw new DukeException(ExceptionType.InvalidEventDeclaration);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        addTask(TaskType.Event, commandSplit[1]);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Instructs the task manager to add the Deadline task specified by the user"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // to the list if the correct format is used"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public void addDeadlineTask(String[] commandSplit, boolean isOneWordCommand) throws DukeException {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        boolean isCorrectFormat \u003d !isOneWordCommand \u0026\u0026 commandSplit[1].contains(DEADLINE_SPECIFIER);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        if (!isCorrectFormat) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            throw new DukeException(ExceptionType.InvalidDeadlineDeclaration);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        addTask(TaskType.Deadline, commandSplit[1]);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Instructs the task manager to add the ToDo task specified by the user"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    //  to the list if the correct format is used"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public void addToDoTask(String[] commandSplit) throws DukeException {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        if (commandSplit.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            throw new DukeException(ExceptionType.InvalidToDoDeclaration);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        addTask(TaskType.ToDo, commandSplit[1]);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Instructs the task manager to mark the task done if the correct format is used"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public void markTaskAsDone(String[] commandSplit) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            markTask(commandSplit);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        } catch (DukeException invalidDoneCommand) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            invalidDoneCommand.printExceptionMessage();"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        } catch (NumberFormatException indexNotInteger) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            PrintHelper.printIndexNotIntegerAlert(DONE_COMMAND);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        } catch (IndexOutOfBoundsException indexOutOfBounds) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            PrintHelper.printInvalidIndexAlert(DONE_COMMAND);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Instructs the task manager to list the tasks if the correct format is used"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public void listTasks(boolean isCorrectFormat) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        if (isCorrectFormat) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            printListOfTasks();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "            PrintHelper.printInvalidCommand();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GanapathySanathBalaji": 261
    }
  },
  {
    "path": "src/main/java/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "// Used to denote type of task"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    ToDo, Deadline, Event"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GanapathySanathBalaji": 6
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Constructor"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        taskType \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    // Returns the task\u0027s type and status along with it\u0027s description as a string"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    public String getStatusWithDescription() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "        return \"[\" + this.taskType + \"]\" + super.getStatusWithDescription();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GanapathySanathBalaji": 17
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     The list is empty"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "       [T][ ] borrow book"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     Now you have 1 task in the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "       [D][ ] return book (by: Sunday)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     OOPS!!! The description of a todo cannot be empty."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "       [E][ ] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     Invalid format of declaration for deadline (deadline .......  /by ......)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     1. [T][ ] borrow book"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     2. [D][ ] return book (by: Sunday)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     3. [E][ ] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     Invalid format of declaration for event (event .......  /at ......)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "       [T][/] borrow book"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     Invalid Command (done x : x should be an integer)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     Invalid format of declaration for event (event .......  /at ......)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     You have entered a empty line, Please enter a valid command"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     Invalid Command (done x : x should be a valid integer index)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     1. [T][/] borrow book"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     2. [D][ ] return book (by: Sunday)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     3. [E][ ] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     Invalid Command (done x : x should be an integer)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     Task was already set as done"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "       [T][/] borrow book"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     Invalid format of declaration for deadline (deadline .......  /by ......)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     1. [T][/] borrow book"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     2. [D][ ] return book (by: Sunday)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     3. [E][ ] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    __________________________________________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "GanapathySanathBalaji": 101
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "list events"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "deadline return book by Monday"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "event class meeting at Tue 12-2pm"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "done"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "done two"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "GanapathySanathBalaji": 20
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\print\\*.java ..\\src\\main\\java\\duke\\task\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "java -Dfile.encoding\u003dUTF8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GanapathySanathBalaji"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "GanapathySanathBalaji": 21
    }
  }
]

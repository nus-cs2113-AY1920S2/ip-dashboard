[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import static duke.PrintMessage.displayWelcomeMessage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import static duke.PrintMessage.displayAddMessage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import static duke.PrintMessage.displayDoneMessage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import static duke.PrintMessage.displayInvalidMessage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import static duke.PrintMessage.displayBlahMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import static duke.PrintMessage.displayByeMessageAndExit;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import static duke.PrintMessage.displayTaskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import static duke.PrintMessage.displayRemoveMessage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_LIST_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_BLAH_WORD \u003d \"blah\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_BYE_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_DONE_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_TODO_WORD \u003d \"todo\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_DEADLINE_WORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_EVENT_WORD \u003d \"event\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_DELETE_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String ENTER_A_COMMAND \u003d \"Enter a command: \";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_ENTERED \u003d \"Command entered: \";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String MISSING_DATE_MESSAGE_EXCEPTION \u003d \"OOPS!!! The date of a %s cannot be empty.\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String MISSING_DESCRIPTION_MESSAGE_EXCEPTION \u003d"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            \"OOPS!!! The description of a %s cannot be empty.\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String SPILT_BY_SPACE \u003d \"\\\\s+\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String SPILT_BY_SLASH \u003d \"/\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    protected static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        new Storage();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        displayWelcomeMessage();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            String userInput \u003d getUserInput();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            executeCommand(userInput);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    /* Solution below adapted from"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "       https://github.com/nus-cs2113-AY1920S2/contacts/blob/master/src/main/java/Contacts1.java"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static void executeCommand(String userInput) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        String[] commandTypeAndParams \u003d splitInputLine(userInput, SPILT_BY_SPACE);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        String[] paramAndDate \u003d splitInputLine(commandTypeAndParams[1], SPILT_BY_SLASH);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        String commandWord \u003d commandTypeAndParams[0].trim();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        String commandArgs \u003d paramAndDate[0].trim();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        String commandDate \u003d paramAndDate[1].trim();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            hasEmptyDescription(commandWord, commandArgs);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            hasEmptyDate(commandWord, commandDate);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            operateCommand(commandWord, commandArgs, commandDate);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            System.out.println(e.toString());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static void operateCommand(String commandWord, String commandArgs, String commandDate) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        switch (commandWord.toLowerCase()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        case COMMAND_TODO_WORD:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            tasks.add(new Todo(commandArgs));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            displayAddMessage();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        case COMMAND_DEADLINE_WORD:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            tasks.add(new Deadline(commandArgs, commandDate));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            displayAddMessage();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        case COMMAND_EVENT_WORD:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            tasks.add(new Event(commandArgs, commandDate));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            displayAddMessage();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        case COMMAND_LIST_WORD:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            displayTaskList();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        case COMMAND_DONE_WORD:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            displayDoneMessage(commandArgs);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        case COMMAND_BYE_WORD:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            displayByeMessageAndExit();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        case COMMAND_BLAH_WORD:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            displayBlahMessage();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        case COMMAND_DELETE_WORD:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            displayRemoveMessage(commandArgs);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            displayInvalidMessage();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static void hasEmptyDescription(String commandWord, String commandArgs) throws DukeException {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        if ((commandWord.equalsIgnoreCase(COMMAND_TODO_WORD) || commandWord.equalsIgnoreCase(COMMAND_DEADLINE_WORD) ||"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                commandWord.equalsIgnoreCase(COMMAND_EVENT_WORD)) \u0026\u0026 commandArgs.equals(\"\")) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            throw new DukeException(String.format(MISSING_DESCRIPTION_MESSAGE_EXCEPTION, commandWord));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static void hasEmptyDate(String commandWord, String commandDate) throws DukeException {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        if ((commandWord.equalsIgnoreCase(COMMAND_DEADLINE_WORD) || commandWord.equalsIgnoreCase(COMMAND_EVENT_WORD)) \u0026\u0026"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                commandDate.equals(\"\")) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            throw new DukeException(String.format(MISSING_DATE_MESSAGE_EXCEPTION, commandWord));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static String getUserInput() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        System.out.print(ENTER_A_COMMAND);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        String inputLine \u003d in.nextLine();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        echoUserInput(inputLine.trim());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return inputLine.trim();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static void echoUserInput(String userInput) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        System.out.println(COMMAND_ENTERED + userInput);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    /* Solution below adapted from"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "       https://github.com/nus-cs2113-AY1920S2/contacts/blob/master/src/main/java/Contacts1.java"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public static String[] splitInputLine(String rawUserInput, String regex) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        String[] split \u003d rawUserInput.trim().split(regex, 2);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return split.length \u003d\u003d 2 ? split : new String[]{split[0], \"\"}; // else no parameters"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 147,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/PrintMessage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import static duke.Duke.tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import static duke.Storage.appendToFile;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import static duke.Storage.modifyFileContent;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import static duke.Storage.deleteFileContent;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "public class PrintMessage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String DIVIDER \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String LS \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String TAB \u003d \"\\t\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String WELCOME_MESSAGE \u003d \"Hello! I\u0027m Duke\" + LS + \"What can i do for you?\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_LIST_EMPTY_MESSAGE \u003d TAB + \"The list is empty!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_LIST_MESSAGE \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_BLAH_MESSAGE \u003d \"I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_BYE_MESSAGE \u003d TAB + \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_DONE_MESSAGE \u003d TAB + \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_ADD_MESSAGE \u003d"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            \"Got it. I\u0027ve added this task:\" + LS + TAB + \"%s\" + LS + \"Now \" + \"you have %d task(s) in the list.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_DELETE_MESSAGE \u003d"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            \"Noted. I\u0027ve removed this task:\" + LS + TAB + \"%s\" + LS + \"Now \" + \"you have %d task(s) in the list.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_INVALID_MESSAGE \u003d \"Command is invalid, \" + \"please try another command\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_INVALID_INDEX_MESSAGE \u003d \"Index is invalid\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static void printToConsole(String... message) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        for (String m : message) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            System.out.println(m);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    protected static void displayWelcomeMessage() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        printToConsole(DIVIDER, WELCOME_MESSAGE, DIVIDER);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    protected static void displayAddMessage() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            printToConsole(DIVIDER, String.format(COMMAND_ADD_MESSAGE, tasks.get(tasks.size() - 1), tasks.size()),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                    DIVIDER);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            appendToFile(tasks.get(tasks.size() - 1).toStorage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    protected static void displayDoneMessage(String index) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            if (index.equals(\"\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                throw new IOException();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            int doneTaskIndex \u003d Integer.parseInt(index) - 1;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            if (doneTaskIndex \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                throw new ArrayIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            tasks.get(doneTaskIndex).markAsDone();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            printToConsole(DIVIDER, COMMAND_DONE_MESSAGE, TAB + tasks.get(doneTaskIndex), DIVIDER);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            modifyFileContent(doneTaskIndex, tasks.get(doneTaskIndex).toStorage());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            printToConsole(DIVIDER, COMMAND_INVALID_INDEX_MESSAGE, DIVIDER);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            printToConsole(DIVIDER, COMMAND_INVALID_INDEX_MESSAGE, DIVIDER);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    protected static void displayInvalidMessage() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            throw new DukeException(COMMAND_INVALID_MESSAGE);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            printToConsole(DIVIDER, COMMAND_INVALID_MESSAGE, DIVIDER);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    protected static void displayBlahMessage() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            throw new DukeException(COMMAND_BLAH_MESSAGE);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            printToConsole(e.toString());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    protected static void displayByeMessageAndExit() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        printToConsole(DIVIDER, COMMAND_BYE_MESSAGE, DIVIDER);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    protected static void displayTaskList() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            printToConsole(DIVIDER, COMMAND_LIST_EMPTY_MESSAGE, DIVIDER);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        printToConsole(DIVIDER, COMMAND_LIST_MESSAGE);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); ++i) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            System.out.println((i + 1) + \".\" + tasks.get(i));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        printToConsole(DIVIDER);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    protected static void displayRemoveMessage(String index) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            int removeTaskIndex \u003d Integer.parseInt(index) - 1;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            if (removeTaskIndex \u003e\u003d tasks.size() || removeTaskIndex \u003c 0) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                throw new ArrayIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            printToConsole(DIVIDER, String.format(COMMAND_DELETE_MESSAGE, tasks.get(removeTaskIndex), tasks.size() - 1),"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                    DIVIDER);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            deleteFileContent(removeTaskIndex);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            tasks.remove(removeTaskIndex);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException | IOException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            printToConsole(DIVIDER, COMMAND_INVALID_INDEX_MESSAGE, DIVIDER);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 125
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import static duke.Duke.tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String T \u003d \"T\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String D \u003d \"D\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String E \u003d \"E\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String MK_DIR_STRING \u003d (getRelativePath() + \"\\\\data\").replace(\"\\\\\", \"/\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String MK_FILE_STRING \u003d (getRelativePath() + \"\\\\data\\\\duke.txt\").replace(\"\\\\\", \"/\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String PIPE_REGEX \u003d \"\\\\s+\\\\|\\\\s+\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            File dir \u003d new File(MK_DIR_STRING);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            if (!dir.exists()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                dir.mkdirs();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            File f \u003d new File(MK_FILE_STRING);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            if (!f.exists()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            printAndLoadContents();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            System.out.println(\"Unable to create a file\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author geoO-reused"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    //Reused from https://stackoverflow.com/questions/4871051/getting-the-current-working-directory-in-java"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public static String getRelativePath() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        Path currentRelativePath \u003d Paths.get(\"\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        String s \u003d currentRelativePath.toAbsolutePath().toString();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author geoO-reused"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    protected static void appendToFile(String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        FileWriter fw \u003d new FileWriter(MK_FILE_STRING, true);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        fw.write(textToAppend + System.lineSeparator());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author Paul Vargas-reused"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    //Reused from https://stackoverflow.com/questions/31375972/how-to-replace-a-specific-line-in-a-file-using-java"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    //with minor modifications"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    protected static void modifyFileContent(int lineNumber, String data) throws IOException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        Path path \u003d Paths.get(MK_FILE_STRING);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        List\u003cString\u003e lines \u003d Files.readAllLines(path, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        lines.set(lineNumber, data);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        Files.write(path, lines, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author Paul Vargas-reused"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    protected static void deleteFileContent(int lineNumber) throws IOException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        Path path \u003d Paths.get(MK_FILE_STRING);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        List\u003cString\u003e lines \u003d Files.readAllLines(path, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        lines.remove(lineNumber);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        Files.write(path, lines, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    protected static void printAndLoadContents() throws FileNotFoundException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        File f \u003d new File(MK_FILE_STRING);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        // E | 0 | project meeting | Mon 2-4pm"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            String input \u003d s.nextLine();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            String[] argumentLine \u003d input.trim().split(PIPE_REGEX);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            System.out.println(input);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            boolean isDone \u003d argumentLine[1].equals(\"1\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            switch (argumentLine[0]) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            case T:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                tasks.add(new Todo(argumentLine[2]));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                if (isDone) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                    tasks.get(tasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            case D:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                tasks.add(new Deadline(argumentLine[2], \"/by\" + argumentLine[3]));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                if (isDone) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                    tasks.get(tasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            case E:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                tasks.add(new Event(argumentLine[2], \"/at\" + argumentLine[3]));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                if (isDone) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                    tasks.get(tasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 105,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String DIVIDER \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String LS \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return  DIVIDER + LS + getMessage() + LS + DIVIDER;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 16
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private final String PREFIX \u003d \"D\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private final int startIndexForSubstring \u003d 3;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        this.by \u003d by.substring(startIndexForSubstring);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return \"[\" + PREFIX + \"]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public String toStorage() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return PREFIX + super.toStorage() + PIPE + by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 24
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private final String PREFIX \u003d \"E\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private final int startIndexForSubstring \u003d 3;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        this.at \u003d at.substring(startIndexForSubstring);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return \"[\" + PREFIX + \"]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public String toStorage() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return PREFIX + super.toStorage() + PIPE + at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 23
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    protected final String PIPE \u003d \" | \";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return getStatusIcon() + \" \" + description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public String toStorage() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return PIPE + (isDone ? \"1\" : \"0\") + PIPE + description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 29
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private final String PREFIX \u003d \"T\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return \"[\" + PREFIX + \"]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public String toStorage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return PREFIX + super.toStorage();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 20
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "What can i do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\tThe list is empty!"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: todo read book"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\t[T][✘] read book"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Now you have 1 task(s) in the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "1.[T][✘] read book"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: deadline return book /by Sunday"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\t[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Now you have 2 task(s) in the list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\t[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Now you have 3 task(s) in the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: list"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "1.[T][✘] read book"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "2.[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "3.[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: done 4"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Index is invalid"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: done 2"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\tNice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\t[D][✓] return book (by: Sunday)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: list"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "1.[T][✘] read book"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "2.[D][✓] return book (by: Sunday)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "3.[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: done 1"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\tNice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\t[T][✓] read book"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: done 3"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\tNice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\t[E][✓] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: list"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "1.[T][✓] read book"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "2.[D][✓] return book (by: Sunday)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "3.[E][✓] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: blah"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: todo"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "OOPS!!! The description of a todo cannot be empty."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: deadline"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "OOPS!!! The description of a deadline cannot be empty."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: event"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "OOPS!!! The description of a event cannot be empty."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: deadline return book"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "OOPS!!! The date of a deadline cannot be empty."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: event read book"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "OOPS!!! The date of a event cannot be empty."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: done 5"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Index is invalid"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: TODO"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "OOPS!!! The description of a TODO cannot be empty."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: DEADLINE"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "OOPS!!! The description of a DEADLINE cannot be empty."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: EVENT"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "OOPS!!! The description of a EVENT cannot be empty."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: command"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Command is invalid, please try another command"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: delete 1"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\t[T][✓] read book"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Now you have 2 task(s) in the list."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: delete 1"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\t[D][✓] return book (by: Sunday)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Now you have 1 task(s) in the list."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: list"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "1.[E][✓] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: delete 2"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Index is invalid"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: todo fill water"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\t[T][✘] fill water"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Now you have 2 task(s) in the list."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: delete 2"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\t[T][✘] fill water"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Now you have 1 task(s) in the list."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: delete 1"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\t[E][✓] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Now you have 0 task(s) in the list."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: list"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\tThe list is empty!"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: bye"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\tBye. Hope to see you again soon!"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 162
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "blah"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "todo"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "event"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "deadline return book"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "event read book"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "TODO"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "DEADLINE"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "EVENT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "command"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "todo fill water"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 32
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\exception\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "java -Dfile.encoding\u003dUTF8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 21
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/task/*.java ../src/main/java/duke/exception/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "java -Dfile.encoding\u003dUTF8 -classpath ../bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 34
    }
  }
]

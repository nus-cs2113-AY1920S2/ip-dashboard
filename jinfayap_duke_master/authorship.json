[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    archiveVersion \u003d \"0.1.1\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 22,
      "-": 19
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import duke.commands.CommandResult;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import duke.commands.ExitCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private void start() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        ui.showLoadMessage();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        this.storage \u003d new Storage();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        ui.printToConsole(Ui.DIVIDER);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        ui.showGoodByeMessage();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        runCommandLoopUntilExitCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private void runCommandLoopUntilExitCommand() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        String userCommandText \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            userCommandText \u003d ui.getUserCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            command \u003d new Parser().parseCommand(userCommandText);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            CommandResult result \u003d new Parser().executeCommand(command);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            ui.showResultToUser(result);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        } while (!userCommandText.equals(ExitCommand.COMMAND_WORD));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 51,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import static duke.Duke.tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import static duke.storage.Storage.appendToFile;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_ADD_DESC \u003d \"Adds a task to the list.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public static final String COMMAND_WORD_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_TODO_PARAMETER \u003d \"TASK\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_TODO_EXAMPLE \u003d \"todo read book\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public static final String COMMAND_WORD_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_DEADLINE_PARAMETER \u003d \"TASK /by DAY\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_DEADLINE_EXAMPLE \u003d \"deadline return book /by Sunday\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public static final String COMMAND_WORD_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_EVENT_PARAMETER \u003d \"TASK /by DAY_AND_TIME\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_EVENT_EXAMPLE \u003d \"event project meeting /at Mon 2-4pm\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_ADD_MESSAGE \u003d"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            \"Got it. I\u0027ve added this task:\" + LS + TAB + \"%s\" + LS + \"Now \" + \"you have %d task(s) in the list.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            String.format(MESSAGE_COMMAND_HELP, COMMAND_WORD_TODO, COMMAND_ADD_DESC) + LS +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                    String.format(MESSAGE_COMMAND_HELP_PARAMETER, COMMAND_TODO_PARAMETER) + LS +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                    String.format(MESSAGE_COMMAND_HELP_EXAMPLE, COMMAND_TODO_EXAMPLE) + LS + LS +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                    String.format(MESSAGE_COMMAND_HELP, COMMAND_WORD_DEADLINE, COMMAND_ADD_DESC) + LS +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                    String.format(MESSAGE_COMMAND_HELP_PARAMETER, COMMAND_DEADLINE_PARAMETER) + LS +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                    String.format(MESSAGE_COMMAND_HELP_EXAMPLE, COMMAND_DEADLINE_EXAMPLE) + LS + LS +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                    String.format(MESSAGE_COMMAND_HELP, COMMAND_WORD_EVENT, COMMAND_ADD_DESC) + LS +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                    String.format(MESSAGE_COMMAND_HELP_PARAMETER, COMMAND_EVENT_PARAMETER) + LS +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                    String.format(MESSAGE_COMMAND_HELP_EXAMPLE, COMMAND_EVENT_EXAMPLE) + LS;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private String commandWord;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private String dayAndTime;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public AddCommand(String commandWord,String description) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        this.commandWord \u003d commandWord;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public AddCommand(String commandWord, String description, String dayAndTime) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        this.commandWord \u003d commandWord;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        this.dayAndTime \u003d dayAndTime;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            switch (commandWord) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            case AddCommand.COMMAND_WORD_TODO:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                tasks.add(new Todo(description));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            case AddCommand.COMMAND_WORD_DEADLINE:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                tasks.add(new Deadline(description, dayAndTime));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            case AddCommand.COMMAND_WORD_EVENT:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                tasks.add(new Event(description, dayAndTime));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            appendToFile(tasks.get(tasks.size() - 1).toStorage());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            return new CommandResult("
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                    DIVIDER + LS + String.format(COMMAND_ADD_MESSAGE, tasks.get(tasks.size() - 1), tasks.size()) + LS + DIVIDER);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            return new CommandResult(e.toString());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 79
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "public abstract class Command implements HelpFormat {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    protected Command() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        throw new UnsupportedOperationException(\"This method to be implemented by child class\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 12
    }
  },
  {
    "path": "src/main/java/duke/commands/CommandResult.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public final String feedbackToUser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private final ArrayList\u003cTask\u003e taskResult;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public CommandResult(String feedbackToUser) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        this.feedbackToUser \u003d feedbackToUser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        this.taskResult \u003d null;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public CommandResult(String feedbackToUser, ArrayList\u003cTask\u003e taskResult) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        this.feedbackToUser \u003d feedbackToUser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        this.taskResult \u003d taskResult;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 22
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import duke.common.ExceptionMessage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import static duke.Duke.tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import static duke.storage.Storage.deleteFileContent;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_DELETE_DESC \u003d \"Deletes the task from the list.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_DELETE_PARAMETER \u003d \"INDEX NUMBER\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_DELETE_EXAMPLE \u003d COMMAND_WORD + \" 1\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            String.format(MESSAGE_COMMAND_HELP, COMMAND_WORD, COMMAND_DELETE_DESC) + LS +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                    String.format(MESSAGE_COMMAND_HELP_PARAMETER, COMMAND_DELETE_PARAMETER) + LS +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                    String.format(MESSAGE_COMMAND_HELP_EXAMPLE, COMMAND_DELETE_EXAMPLE) + LS;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_DELETE_MESSAGE \u003d"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            \"Noted. I\u0027ve removed this task:\" + LS + TAB + \"%s\" + LS + \"Now \" + \"you have %d task(s) in the list.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private String targetIndex;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public DeleteCommand(String targetIndex) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public String getTargetIndex() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return targetIndex;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            String index \u003d getTargetIndex();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            int removeTaskIndex \u003d Integer.parseInt(index) - 1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            if (removeTaskIndex \u003e\u003d tasks.size() || removeTaskIndex \u003c 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                throw new ArrayIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            String taskDescription \u003d tasks.get(removeTaskIndex).toString();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            deleteFileContent(removeTaskIndex);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            tasks.remove(removeTaskIndex);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            return new CommandResult("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                    DIVIDER + LS + String.format(COMMAND_DELETE_MESSAGE, taskDescription, tasks.size()) + LS + DIVIDER);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException | IOException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            return new CommandResult(DIVIDER + LS + ExceptionMessage.COMMAND_INVALID_INDEX_MESSAGE + LS + DIVIDER);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 54
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import duke.common.ExceptionMessage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import static duke.Duke.tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import static duke.storage.Storage.modifyFileContent;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_DONE_DESC \u003d \"Marks the task done in the list.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_DONE_PARAMETER \u003d \"INDEX NUMBER\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_DONE_EXAMPLE \u003d COMMAND_WORD + \" 1\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_DONE_MESSAGE \u003d TAB + \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            String.format(MESSAGE_COMMAND_HELP, COMMAND_WORD, COMMAND_DONE_DESC) + LS +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                    String.format(MESSAGE_COMMAND_HELP_PARAMETER, COMMAND_DONE_PARAMETER) + LS +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                    String.format(MESSAGE_COMMAND_HELP_EXAMPLE, COMMAND_DONE_EXAMPLE) + LS;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private String targetIndex;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public DoneCommand(String targetIndex) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private String getTargetIndex() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return targetIndex;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        String index \u003d getTargetIndex();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            if (index.equals(\"\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                throw new IOException();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            int doneTaskIndex \u003d Integer.parseInt(index) - 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            if (doneTaskIndex \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                throw new ArrayIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            tasks.get(doneTaskIndex).markAsDone();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            String taskDescription \u003d tasks.get(doneTaskIndex).toString();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            modifyFileContent(doneTaskIndex, tasks.get(doneTaskIndex).toStorage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            return new CommandResult(DIVIDER + LS + COMMAND_DONE_MESSAGE + LS + TAB + taskDescription + LS + DIVIDER);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException | IOException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            return new CommandResult(DIVIDER + LS + ExceptionMessage.COMMAND_INVALID_INDEX_MESSAGE + LS + DIVIDER);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 55
    }
  },
  {
    "path": "src/main/java/duke/commands/ExceptionCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "public class ExceptionCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private String exceptionMessage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public ExceptionCommand(String exceptionMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        this.exceptionMessage \u003d exceptionMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return new CommandResult(exceptionMessage);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 16
    }
  },
  {
    "path": "src/main/java/duke/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_BYE_DESC \u003d \"Exits the program.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_BYE_EXAMPLE \u003d COMMAND_WORD;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            String.format(MESSAGE_COMMAND_HELP, COMMAND_WORD, COMMAND_BYE_DESC) + LS +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                    String.format(MESSAGE_COMMAND_HELP_EXAMPLE, COMMAND_BYE_EXAMPLE);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String MESSAGE_EXIT \u003d \"You are Exiting Duke at your Request :)\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return new CommandResult(DIVIDER + LS + MESSAGE_EXIT);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 20
    }
  },
  {
    "path": "src/main/java/duke/commands/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"help\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_HELP_DESC \u003d \"Shows the program command line interface instructions\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_HELP_EXAMPLE \u003d COMMAND_WORD;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            String.format(MESSAGE_COMMAND_HELP, COMMAND_WORD, COMMAND_HELP_DESC) + LS +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                    String.format(MESSAGE_COMMAND_HELP_EXAMPLE, COMMAND_HELP_EXAMPLE) + LS;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return new CommandResult(DIVIDER + LS + HelpCommand.MESSAGE_USAGE + LS + ListCommand.MESSAGE_USAGE + LS +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                AddCommand.MESSAGE_USAGE + LS + DoneCommand.MESSAGE_USAGE + LS + DeleteCommand.MESSAGE_USAGE + LS +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                ExitCommand.MESSAGE_USAGE + LS + DIVIDER);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 20
    }
  },
  {
    "path": "src/main/java/duke/commands/HelpFormat.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "public interface HelpFormat {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    String DIVIDER \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    String LS \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    String TAB \u003d \"\\t\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    String MESSAGE_COMMAND_HELP \u003d \"%s: %s\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    String MESSAGE_COMMAND_HELP_EXAMPLE \u003d TAB + \"Example: %s\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    String MESSAGE_COMMAND_HELP_PARAMETER \u003d TAB + \"Parameter(s): %s\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jinfayap": 13
    }
  },
  {
    "path": "src/main/java/duke/commands/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import duke.common.ExceptionMessage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return new CommandResult(DIVIDER + LS + ExceptionMessage.COMMAND_INVALID_MESSAGE + LS + DIVIDER);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 11
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import static duke.Duke.tasks;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_LIST_DESC \u003d \"Displays all the tasks in the list with index numbers.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_LIST_EXAMPLE \u003d COMMAND_WORD;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            String.format(MESSAGE_COMMAND_HELP, COMMAND_WORD, COMMAND_LIST_DESC) + LS +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                    String.format(MESSAGE_COMMAND_HELP_EXAMPLE, COMMAND_LIST_EXAMPLE) + LS;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_LIST_EMPTY_MESSAGE \u003d TAB + \"The list is empty!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_LIST_MESSAGE \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            return new CommandResult(DIVIDER + LS + COMMAND_LIST_EMPTY_MESSAGE + LS + DIVIDER);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        output.append(LS).append(COMMAND_LIST_MESSAGE).append(LS);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); ++i) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            output.append(i + 1).append(\".\").append(tasks.get(i)).append(LS);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return new CommandResult(DIVIDER + output + DIVIDER);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jinfayap": 34
    }
  },
  {
    "path": "src/main/java/duke/common/ExceptionMessage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "package duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "public class ExceptionMessage {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String LS \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public static final String COMMAND_INVALID_MESSAGE \u003d \"Invalid Command, please try another command\" + LS +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            \"type \\\"help\\\" in the command line console for instructions\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public static final String COMMAND_INVALID_INDEX_MESSAGE \u003d \"Invalid Index\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public static final String MISSING_DATE_MESSAGE_EXCEPTION \u003d \"OOPS!!! The date of a %s cannot be empty.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public static final String MISSING_DESCRIPTION_MESSAGE_EXCEPTION \u003d"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            \"OOPS!!! The description of a %s cannot be empty.\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 13
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String DIVIDER \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String LS \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return DIVIDER + LS + getMessage() + LS + DIVIDER;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 17
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import duke.common.ExceptionMessage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import duke.commands.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String SPILT_BY_SPACE \u003d \"\\\\s+\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String SPILT_BY_SLASH \u003d \"/\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public Command parseCommand(String userInput) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        String[] words \u003d splitInputLine(userInput, SPILT_BY_SPACE);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        final String commandWord \u003d words[0];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        final String arguments \u003d words[1];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        switch (commandWord.toLowerCase()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        case AddCommand.COMMAND_WORD_TODO:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        case AddCommand.COMMAND_WORD_DEADLINE:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        case AddCommand.COMMAND_WORD_EVENT:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            return parseAddCommand(commandWord, arguments);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        case DoneCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            return parseDoneCommand(arguments);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            return parseDeleteCommand(arguments);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        case HelpCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            return new InvalidCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private Command parseAddCommand(String commandWord, String arguments) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        String[] paramAndDate \u003d splitInputLine(arguments, SPILT_BY_SLASH);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        String commandArgs \u003d paramAndDate[0].trim();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        String commandDate \u003d paramAndDate[1].trim();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            hasEmptyDescription(commandWord, commandArgs);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            hasEmptyDate(commandWord, commandDate);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            switch (commandWord) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            case AddCommand.COMMAND_WORD_TODO:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                return new AddCommand(commandWord, arguments);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            case AddCommand.COMMAND_WORD_DEADLINE:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            case AddCommand.COMMAND_WORD_EVENT:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                return new AddCommand(commandWord, commandArgs, commandDate);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            return new ExceptionCommand(e.toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return new ExceptionCommand(\"Task adding has ended in failure\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private Command parseDeleteCommand(String argument) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return new DeleteCommand(argument);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private Command parseDoneCommand(String argument) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return new DoneCommand(argument);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public CommandResult executeCommand(Command command) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            CommandResult result \u003d command.execute();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            Ui.printToConsole(e.toString());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            throw new RuntimeException(e);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static void hasEmptyDescription(String commandWord, String commandArgs) throws DukeException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        if ((commandWord.equalsIgnoreCase(AddCommand.COMMAND_WORD_TODO) ||"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                commandWord.equalsIgnoreCase(AddCommand.COMMAND_WORD_DEADLINE) ||"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                commandWord.equalsIgnoreCase(AddCommand.COMMAND_WORD_EVENT)) \u0026\u0026 commandArgs.equals(\"\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            throw new DukeException(String.format(ExceptionMessage.MISSING_DESCRIPTION_MESSAGE_EXCEPTION, commandWord));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static void hasEmptyDate(String commandWord, String commandDate) throws DukeException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        if ((commandWord.equalsIgnoreCase(AddCommand.COMMAND_WORD_DEADLINE) ||"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                commandWord.equalsIgnoreCase(AddCommand.COMMAND_WORD_EVENT)) \u0026\u0026 commandDate.equals(\"\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            throw new DukeException(String.format(ExceptionMessage.MISSING_DATE_MESSAGE_EXCEPTION, commandWord));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    /* Solution below adapted from"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "       https://github.com/nus-cs2113-AY1920S2/contacts/blob/master/src/main/java/Contacts1.java"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public static String[] splitInputLine(String rawUserInput, String regex) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        String[] split \u003d rawUserInput.trim().split(regex, 2);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return split.length \u003d\u003d 2 ? split : new String[]{split[0], \"\"}; // else no parameters"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "}"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      }
    ],
    "authorContributionMap": {
      "jinfayap": 103
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import static duke.Duke.tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String T \u003d \"T\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String D \u003d \"D\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String E \u003d \"E\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String MK_DIR_STRING \u003d (getRelativePath() + \"\\\\data\").replace(\"\\\\\", \"/\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String MK_FILE_STRING \u003d (getRelativePath() + \"\\\\data\\\\duke.txt\").replace(\"\\\\\", \"/\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String PIPE_REGEX \u003d \"\\\\s+\\\\|\\\\s+\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            File dir \u003d new File(MK_DIR_STRING);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            if (!dir.exists()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                dir.mkdirs();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            File f \u003d new File(MK_FILE_STRING);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            if (!f.exists()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            printAndLoadContents();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            System.out.println(\"Unable to create a file\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author geoO-reused"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    //Reused from https://stackoverflow.com/questions/4871051/getting-the-current-working-directory-in-java"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public static String getRelativePath() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        Path currentRelativePath \u003d Paths.get(\"\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        String s \u003d currentRelativePath.toAbsolutePath().toString();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author geoO-reused"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public static void appendToFile(String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        FileWriter fw \u003d new FileWriter(MK_FILE_STRING, true);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        fw.write(textToAppend + System.lineSeparator());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author Paul Vargas-reused"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    //Reused from https://stackoverflow.com/questions/31375972/how-to-replace-a-specific-line-in-a-file-using-java"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    //with minor modifications"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public static void modifyFileContent(int lineNumber, String data) throws IOException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        Path path \u003d Paths.get(MK_FILE_STRING);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        List\u003cString\u003e lines \u003d Files.readAllLines(path, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        lines.set(lineNumber, data);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        Files.write(path, lines, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author Paul Vargas-reused"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public static void deleteFileContent(int lineNumber) throws IOException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        Path path \u003d Paths.get(MK_FILE_STRING);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        List\u003cString\u003e lines \u003d Files.readAllLines(path, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        lines.remove(lineNumber);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        Files.write(path, lines, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public static void printAndLoadContents() throws FileNotFoundException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        File f \u003d new File(MK_FILE_STRING);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            String input \u003d s.nextLine();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            String[] argumentLine \u003d input.trim().split(PIPE_REGEX);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            System.out.println(input);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            boolean isDone \u003d argumentLine[1].equals(\"1\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            switch (argumentLine[0]) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            case T:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                tasks.add(new Todo(argumentLine[2]));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                if (isDone) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                    tasks.get(tasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            case D:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                tasks.add(new Deadline(argumentLine[2], \"/by\" + argumentLine[3]));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                if (isDone) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                    tasks.get(tasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            case E:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                tasks.add(new Event(argumentLine[2], \"/at\" + argumentLine[3]));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                if (isDone) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                    tasks.get(tasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 106,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private final String PREFIX \u003d \"D\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private final int startIndexForSubstring \u003d 3;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        this.by \u003d by.substring(startIndexForSubstring);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return \"[\" + PREFIX + \"]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public String toStorage() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return PREFIX + super.toStorage() + PIPE + by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 24
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private final String PREFIX \u003d \"E\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private final int startIndexForSubstring \u003d 3;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        this.at \u003d at.substring(startIndexForSubstring);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return \"[\" + PREFIX + \"]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public String toStorage() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return PREFIX + super.toStorage() + PIPE + at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 24
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    protected final String PIPE \u003d \" | \";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return getStatusIcon() + \" \" + description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public String toStorage() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return PIPE + (isDone ? \"1\" : \"0\") + PIPE + description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 29
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private final String PREFIX \u003d \"T\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return \"[\" + PREFIX + \"]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public String toStorage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return PREFIX + super.toStorage();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 21
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import duke.commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public static final String DIVIDER \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String LS \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String TAB \u003d \"\\t\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String ENTER_COMMAND \u003d \"Enter a command: \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String COMMAND_ENTERED \u003d \"Command entered: \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String WELCOME_MESSAGE \u003d \"Hello! I\u0027m Duke\" + LS + \"What can i do for you?\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String GOODBYE_MESSAGE \u003d TAB + \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private static final String LOAD_SAVE_DATA \u003d \"Saved Data (if any) have been preloaded below:\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public Ui(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public String getUserCommand() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        out.print(ENTER_COMMAND);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        String inputLine \u003d in.nextLine().trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        echoUserInput(inputLine);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        return inputLine;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    private void echoUserInput(String userInput) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        out.println(COMMAND_ENTERED + userInput);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public static void printToConsole(String... message) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        for (String m : message) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "            System.out.println(m);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        printToConsole(DIVIDER, WELCOME_MESSAGE, DIVIDER);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public void showGoodByeMessage() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        printToConsole(GOODBYE_MESSAGE, DIVIDER);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public void showLoadMessage() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        printToConsole(LOAD_SAVE_DATA);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    public void showResultToUser(CommandResult result) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "        printToConsole(result.feedbackToUser);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jinfayap": 67
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "What can i do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Saved Data (if any) have been preloaded below:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: help"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "help: Shows the program command line interface instructions"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\tExample: help"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "list: Displays all the tasks in the list with index numbers."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\tExample: list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "todo: Adds a task to the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\tParameter(s): TASK"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\tExample: todo read book"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "deadline: Adds a task to the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\tParameter(s): TASK /by DAY"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\tExample: deadline return book /by Sunday"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "event: Adds a task to the list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\tParameter(s): TASK /by DAY_AND_TIME"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\tExample: event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "done: Marks the task done in the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\tParameter(s): INDEX NUMBER"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\tExample: done 1"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "delete: Deletes the task from the list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\tParameter(s): INDEX NUMBER"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\tExample: delete 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "bye: Exits the program."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\tExample: bye"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: list"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\tThe list is empty!"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: todo read book"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\t[T][✘] read book"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Now you have 1 task(s) in the list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: list"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "1.[T][✘] read book"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: deadline return book /by Sunday"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\t[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Now you have 2 task(s) in the list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\t[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Now you have 3 task(s) in the list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: list"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "1.[T][✘] read book"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "2.[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "3.[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: done 4"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Invalid Index"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: done 2"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\tNice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\t[D][✓] return book (by: Sunday)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: list"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "1.[T][✘] read book"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "2.[D][✓] return book (by: Sunday)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "3.[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: done 1"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\tNice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\t[T][✓] read book"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: done 3"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\tNice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\t[E][✓] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: list"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "1.[T][✓] read book"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "2.[D][✓] return book (by: Sunday)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "3.[E][✓] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: todo"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "OOPS!!! The description of a todo cannot be empty."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: deadline"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "OOPS!!! The description of a deadline cannot be empty."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: event"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "OOPS!!! The description of a event cannot be empty."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: deadline return book"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "OOPS!!! The date of a deadline cannot be empty."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: event read book"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "OOPS!!! The date of a event cannot be empty."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: done 5"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Invalid Index"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: TODO"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "OOPS!!! The description of a TODO cannot be empty."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: DEADLINE"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "OOPS!!! The description of a DEADLINE cannot be empty."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: EVENT"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "OOPS!!! The description of a EVENT cannot be empty."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: command"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Invalid Command, please try another command"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "type \"help\" in the command line console for instructions"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: delete 1"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\t[T][✓] read book"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Now you have 2 task(s) in the list."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: delete 1"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\t[D][✓] return book (by: Sunday)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Now you have 1 task(s) in the list."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: list"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "1.[E][✓] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: delete 2"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Invalid Index"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: todo fill water"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\t[T][✘] fill water"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Now you have 2 task(s) in the list."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: delete 2"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\t[T][✘] fill water"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Now you have 1 task(s) in the list."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: delete 1"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\t[E][✓] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Now you have 0 task(s) in the list."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: list"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\tThe list is empty!"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "Enter a command: Command entered: bye"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "You are Exiting Duke at your Request :)"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "\tBye. Hope to see you again soon!"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 193
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "help"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "todo"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "event"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "deadline return book"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "event read book"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "TODO"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "DEADLINE"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "EVENT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "command"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "todo fill water"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 32
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\storage\\*.java ..\\src\\main\\java\\duke\\parser\\*.java ..\\src\\main\\java\\duke\\ui\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "java -Dfile.encoding\u003dUTF8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 22
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/task/*.java ../src/main/java/duke/exception/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "java -Dfile.encoding\u003dUTF8 -classpath ../bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinfayap"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jinfayap"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "jinfayap": 34
    }
  }
]

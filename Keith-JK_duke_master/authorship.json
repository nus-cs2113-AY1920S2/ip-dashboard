[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "Duke is a a Personal Assistant Chatbot that helps a person to keep track of various `Task` they have. "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "## Startup"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "1. Put the .jar in any folder."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "2. Open up command prompt and navigate to that folder containing the .jar file "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "3. Enter the following command to start the program: "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "* `$ java -jar duke.jar`"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "## Task Types"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "* `Todo`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "* `Deadline`"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "* `Event`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "1. Adding a `Task`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "2. Listing all `Task`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "3. Marking a `Task` as done"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "4. Finding related `Task` by keywords"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "5. Deleting a `Task`"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "6. Exiting the program"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "### Feature 1 - Adding a `Task`"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "Adds a `Task` to the list of `Task` kept by Duke. "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "#### Format"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "\u003e `\u003cTask type\u003e \u003cTask description\u003e \u003c/seperator\u003e \u003cDate if applicable\u003e`"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "#### 1.1 Adding a `Todo`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "Adds a `Todo` to the list of `Task`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "\u003e `todo do IP progress`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "\u003e `Added the task:`\\"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;`[T][✘] do IP progress`\\"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    `Now you have 1 tasks in the list!`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "#### 1.2 Adding a `Deadline`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "Adds a `Deadline` to the list of `Task`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "\u003e `deadline do IP progress /monday`"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "\u003e `Added the task:`\\"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;`[D][✘] do IP progress(by: monday)`\\"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "   `Now you have 2 tasks in the list!`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "#### 1.3 Adding an `Event`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "Adds an Event to the list of `Task` "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "\u003e `event do IP progress /monday`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "Expected outcome"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "\u003e `Added the task:`\\"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;`[E][✘] do IP progress(by: monday)`\\"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "   `Now you have 3 tasks in the list!`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "### Feature 2 - Listing all `Task`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "Lists all the `Task` currently in the list of `Task`\\"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "\u003e `list`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "\u003e`Here are the tasks in your list:`\\"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "  `1. [T][✘] do IP progress`\\"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "  `2. [D][✘] do IP progress(by: monday)`\\"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "  `3. [E][✘] do IP progress(by: monday)`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "### Feature 3 - Marking `Task` as done"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "Marks the `task` in the `task` list corresponding to the `index` supplied as done"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "#### Format "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "\u003e `done \u003cindex of task to be marked done\u003e`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "\u003e`done 1`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "\u003e`[1. [T][✓] do IP progress] is marked done!`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "### Feature 4 - Finding `Task` by keywords"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "Finds all related `task` using the keywords provided by user"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "#### Format"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "\u003e`find \u003ckeyword\u003e`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "\u003e`find monday`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "\u003e `Here are the matching tasks in your list:`\\"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "   `1. [D][✘] do IP progress(by: monday)`\\"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "   `2. [E][✘] do IP progress(by: monday)`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "### Feature 5 - Deleting a `Task`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "Deletes the `task` in the `task` list corresponding to the `index` supplied"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "#### Format"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "\u003e`delete \u003cindex of task to be deleted\u003e`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "\u003e`delete 2`"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "\u003e`Removed the task:`\\"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "  \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;`[D][✘] do IP progress(by: monday)`\\"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "  `Now you have 2 tasks in the list!`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "### Feature 6 - Exiting the program"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "Exits the program"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "\u003e`bye`"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "\u003e`Exiting DUKE`\\"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "\u003e`____        _         `         "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " `|  _ \\ _   _| | _____ `   "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " `| | | | | | | |/ / _ \\`\\"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " `| |_| | |_| |   \u003c  __/`\\"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " `|____/ \\__,_|_|\\_\\___|`"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 115,
      "-": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import exceptions.HardDiskCorruptedException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " * Class representing a command line task manager"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Constructs Duke object and instantiate Ui, Storage and TaskList objects"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.storage \u003d new Storage();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            ui.printHardDiskNotFound();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        } catch (HardDiskCorruptedException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Starts the Duke process"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                String rawUserInput \u003d ui.readCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                ui.printDivider();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                Command command \u003d Parser.parse(rawUserInput);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                command.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                ui.printErrorMessage(e.toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                ui.printDivider();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Creates a new Duke object and runs the process"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param args unused arguments"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 59,
      "-": 4
    }
  },
  {
    "path": "src/main/java/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import exceptions.MissingDateException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import exceptions.MissingDescriptionException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " * Abstract Class for Commands"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    protected String rawUserInput;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Constructs a default Command object with rawUserInput"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param rawUserInput String provided by user through System.in"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public Command(String rawUserInput) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.rawUserInput \u003d rawUserInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Abstract class that handles execution of the respective commands"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param taskList object handling task operations"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param ui object handling default user interface messages"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param storage object handling storage operations"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @throws DukeException abstract class that handles all custom Exceptions"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Sets isExit to true"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public void setExitTrue() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Returns the value of boolean isExit"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @return boolean value of isExit"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Returns an array of the separated command word and descriptions"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Separates the command word from user input"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param rawUserInput unedited String provided from user"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @return Array containing separated Command Word and description"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @throws MissingDescriptionException throws Exception when user fails to provide description"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String[] removeCommandWord(String rawUserInput) throws MissingDescriptionException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        String[] removedCommandWord \u003d rawUserInput.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        if (removedCommandWord.length !\u003d 2) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            throw new MissingDescriptionException(rawUserInput);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            return removedCommandWord;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Returns an array of the separated description and date"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Separates the description and date from user input"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param userInput String object provided from user without the command word"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @return Array containing Description and Date"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @throws MissingDateException throws when user fails to provide date"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @throws MissingDescriptionException throws when user fails to provide description"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String[] splitDate(String userInput)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            throws MissingDateException, MissingDescriptionException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        String[] splitDate \u003d userInput.trim().split(\"/\", 2);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        if (splitDate.length !\u003d 2 || isEmptyString(splitDate[1])) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            throw new MissingDateException(rawUserInput);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        } else if (isEmptyString(splitDate[0])) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            throw new MissingDescriptionException(rawUserInput);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            return splitDate;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Returns boolean true if string is empty"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * otherwise returns false"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param myString string to check if empty"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @return true if string is empty otherwise, false"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    private boolean isEmptyString(String myString) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return (myString.length() \u003d\u003d 0);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 95
    }
  },
  {
    "path": "src/main/java/commands/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import exceptions.MissingDateException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import exceptions.MissingDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " * Command object that handles creating a new Deadline"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Constructs a Deadline Object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param rawUserInput unedited String provided by user"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public DeadlineCommand(String rawUserInput) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        super(rawUserInput);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Creates a new Deadline"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Updates Task list and writes to Storage"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param taskList object handling task operations"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param ui object handling default user interface messages"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param storage object handling storage operations"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @throws IndexOutOfBoundsException throws when user fails to provide date/description"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @throws MissingDescriptionException throws when user fails to provide description"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @throws MissingDateException throws when user fails to provide date"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            throws IndexOutOfBoundsException, MissingDescriptionException, MissingDateException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        String[] splitCommands \u003d removeCommandWord(super.rawUserInput);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        String[] deadlineSplit \u003d splitDate(splitCommands[1]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        taskList.addNewDeadline(deadlineSplit[0].trim(), deadlineSplit[1].trim());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        storage.saveToHardDisk(taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 39
    }
  },
  {
    "path": "src/main/java/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import exceptions.MissingDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import exceptions.MissingItemIndexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " * Command object that handles deleting a Task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Constructs a Delete Command object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param rawUserInput unedited String from user"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public DeleteCommand(String rawUserInput) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        super(rawUserInput);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Deletes a Task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Updates Task list and writes to Storage"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param taskList object handling task operations"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param ui object handling default user interface messages"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param storage object handling storage operations"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @throws MissingItemIndexException throws when user fails to provide an index to be deleted"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws MissingItemIndexException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            String[] splitCommands \u003d removeCommandWord(rawUserInput);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            int itemIndex \u003d Integer.parseInt(splitCommands[1]) - 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            taskList.deleteTask(itemIndex);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            storage.saveToHardDisk(taskList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        } catch (MissingDescriptionException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            throw new MissingItemIndexException(rawUserInput);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            ui.printErrorMessage(\"Please enter an integer to be marked done\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 42
    }
  },
  {
    "path": "src/main/java/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import exceptions.MissingDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import exceptions.MissingItemIndexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import exceptions.TaskAlreadyDoneException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " * Command Object that handles operations to mark Task as done"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Constructs a Done Command object"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param rawUserInput unedited String from user"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public DoneCommand(String rawUserInput) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        super(rawUserInput);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Marks Task as done"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Updates Task list and writes to Storage"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param taskList object handling task operations"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param ui object handling default user interface messages"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param storage object handling storage operations"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @throws MissingItemIndexException throws when user fails to provide index to be marked done"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @throws NumberFormatException throws when user provides a non-integer to be marked done"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @throws TaskAlreadyDoneException throws when user tries to mark a task that is already done"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws MissingItemIndexException"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            , TaskAlreadyDoneException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            String[] splitCommands \u003d removeCommandWord(super.rawUserInput);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            int itemIndex \u003d Integer.parseInt(splitCommands[1]) - 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            taskList.markTaskAsDone(itemIndex);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            storage.saveToHardDisk(taskList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        } catch (MissingDescriptionException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            throw new MissingItemIndexException(super.rawUserInput);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            ui.printErrorMessage(\"Please enter an integer to be marked done\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 46
    }
  },
  {
    "path": "src/main/java/commands/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import exceptions.MissingDateException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import exceptions.MissingDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " * Command object that handles creating a new Event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Constructs a Event Command object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param rawUserInput String provided by user"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public EventCommand(String rawUserInput) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        super(rawUserInput);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Creates a new Event object"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Updates Task list and writes to Storage"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param taskList object handling task operations"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param ui object handling default user interface messages"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param storage object handling storage operations"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @throws MissingDescriptionException throws when user fails to provide description"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @throws MissingDateException throws when user fails to provide date"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            throws MissingDescriptionException, MissingDateException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        String[] splitCommands \u003d removeCommandWord(super.rawUserInput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        String[] eventSplit \u003d splitDate(splitCommands[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        taskList.addNewEvent(eventSplit[0].trim(), eventSplit[1].trim());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        storage.saveToHardDisk(taskList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 38
    }
  },
  {
    "path": "src/main/java/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " * Command object that handles the exiting of Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Constructs a Exit Command object and sets boolean isExit to true"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param rawUserInput String from user input"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public ExitCommand(String rawUserInput) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        super(rawUserInput);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        super.setExitTrue();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Prints user interface message for exiting Duke"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param taskList object handling task operations"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param ui object handling default user interface messages"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param storage object handling storage operations"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        ui.printGoodbyeMessage();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 30
    }
  },
  {
    "path": "src/main/java/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import exceptions.MissingDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " * Command object that handles a find operation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Constructs a Find Command object"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param rawUserInput String provided by user"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public FindCommand(String rawUserInput) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        super(rawUserInput);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Finds and prints to Ui the list of Task objects that contains the substring"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * provided by user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Updates Task list and writes to Storage"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param taskList object handling task operations"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param ui object handling default user interface messages"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param storage object handling storage operations"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @throws MissingDescriptionException throws when user does not provide a keyword to find"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws MissingDescriptionException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            String[] splitCommands \u003d removeCommandWord(super.rawUserInput);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            taskList.findTask(splitCommands[1]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        } catch (MissingDescriptionException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            ui.printErrorMessage(\"Missing keywords to search for! Please provide a keyword to search!\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 38
    }
  },
  {
    "path": "src/main/java/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import exceptions.EmptyListException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " * Command object to handle listing out Task in the Task List"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Constructs a List Command object"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param rawUserInput unedited String provided by user"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public ListCommand(String rawUserInput) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        super(rawUserInput);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Prints a list of Task in current Task List"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param taskList object handling task operations"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param ui object handling default user interface messages"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param storage object handling storage operations"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @throws EmptyListException throws when there is no Task in the list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws EmptyListException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        taskList.printTaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 31
    }
  },
  {
    "path": "src/main/java/commands/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import exceptions.MissingDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " * Command Object that handles creating a new ToDo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public class ToDoCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Constructs a Todo Command object"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param rawUserInput String provided by user"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public ToDoCommand(String rawUserInput) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        super(rawUserInput);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Creates a new ToDo object"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Updates Task list and writes to Storage"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param taskList object handling task operations"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param ui object handling default user interface messages"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param storage object handling storage operations"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @throws MissingDescriptionException throws when user fails to provide a description"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws MissingDescriptionException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        String[] splitCommands \u003d removeCommandWord(super.rawUserInput);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        taskList.addNewToDo(splitCommands[1]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        storage.saveToHardDisk(taskList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 34
    }
  },
  {
    "path": "src/main/java/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " * abstract class for custom exceptions"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public abstract class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 7
    }
  },
  {
    "path": "src/main/java/exceptions/EmptyListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " * Custom Exceptions for Empty list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public class EmptyListException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Constructs EmptyListException object"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param errorMessage String provided by user"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public EmptyListException(String errorMessage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Returns a formatted string"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @return String formatting the error message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return String.format(\"Empty List: %s Please add an item!\", errorMessage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 25
    }
  },
  {
    "path": "src/main/java/exceptions/HardDiskCorruptedException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " * Customs Exception object for failed reading of hard disk"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public class HardDiskCorruptedException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Constructs a HardDiskCorruptedException object"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param errorMessage String provided by user"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public HardDiskCorruptedException(String errorMessage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Returns a formatted string"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @return String formatting the error message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return String.format(\"Hard Disk Data is corrupted! %s\", errorMessage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 25
    }
  },
  {
    "path": "src/main/java/exceptions/MissingDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " * Custom Exceptions that throws when user fails to provide date"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public class MissingDateException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Constructs a MissingDateException object"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param errorMessage String provided by user"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public MissingDateException(String errorMessage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Returns a formatted string"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @return String formatting the error message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return String.format(\"Missing Date: \u0027%s\u0027 is missing a date! \" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                \"Please enter a date!\", errorMessage);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 26
    }
  },
  {
    "path": "src/main/java/exceptions/MissingDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " * Custom Exceptions for when user fails to provide description"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public class MissingDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Constructs a MissingDescriptionException object"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param errorMessage String provided by user"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public MissingDescriptionException(String errorMessage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Returns a formatted string"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @return String formatting the error message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return String.format(\"Missing Description: \u0027%s\u0027 missing a description.\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                \" Please enter a description!\", errorMessage);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 26
    }
  },
  {
    "path": "src/main/java/exceptions/MissingItemIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " * Custom Exception for when user fails to provide an integer index"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public class MissingItemIndexException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Constructs a MissingItemIndexException"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param errorMessage String provided by user"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public MissingItemIndexException(String errorMessage){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Returns a formatted string"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @return String formatting the error message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return String.format(\"Missing Item Index: missing an index! \" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                \"Please enter an index to be marked done!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 26
    }
  },
  {
    "path": "src/main/java/exceptions/TaskAlreadyDoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " * Custom Exceptions that throws when user marks a Task that is already done"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public class TaskAlreadyDoneException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Constructs a TaskAlreadyDoneException object"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param errorMessage String provided by user"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public TaskAlreadyDoneException(String errorMessage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Returns a formatted string"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @return String formatting the error message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return String.format(\"Task has already been marked done before! Try another task!\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 25
    }
  },
  {
    "path": "src/main/java/exceptions/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " * Custom Exceptions for when user provides an unknown command"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Constructs an UnknownCommandException object"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param errorMessage String provided by user"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public UnknownCommandException(String errorMessage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Returns a formatted string"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @return String formatting the error message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return String.format(\"Unknown Command: \u0027%s\u0027 is not a valid command!\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                \" Please enter a valid command!\", errorMessage);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 26
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import commands.FindCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import commands.EventCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import commands.ToDoCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import commands.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import commands.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import commands.DeadlineCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import commands.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import commands.ExitCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import exceptions.UnknownCommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " * Parser that parses user input and returns the appropriate Command object that"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " * corresponds to the command word inputted"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Processes the user input from System.in and returns appropriate Command object"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param rawUserInput String provided by user"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @return Command object that corresponds to the Command word"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @throws UnknownCommandException throws when command word is unknown"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public static Command parse(String rawUserInput)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            throws UnknownCommandException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        String[] splitCommands \u003d rawUserInput.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        switch (splitCommands[0]) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            return new ListCommand(rawUserInput);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            return new DeadlineCommand(rawUserInput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            return new DoneCommand(rawUserInput);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            return new ToDoCommand(rawUserInput);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            return new EventCommand(rawUserInput);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            return new DeleteCommand(rawUserInput);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            return new FindCommand(rawUserInput);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            return new ExitCommand(rawUserInput);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            throw new UnknownCommandException(rawUserInput);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 50
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import exceptions.HardDiskCorruptedException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import task.Events;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " * Manages the loading and saving of all data"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    private static final String TODO \u003d \"[T]\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    private static final String DEADLINE \u003d \"[D]\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    private static final String EVENT \u003d \"[E]\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    protected String dirPath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    protected File file;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Construct Storage object"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Creates directory if not found"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.filePath \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.dirPath \u003d \"data\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        if (new File(dirPath).mkdir()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            System.out.println(\"No existing data directory found. Creating new data directory!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.file \u003d new File(dirPath, filePath);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Returns a ArrayList of Task objects saved in the data file"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @return ArrayList of Task objects saved in data file"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @throws IndexOutOfBoundsException throws when file operations fails"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @throws FileNotFoundException throws when file is not found"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @throws HardDiskCorruptedException throws when data file data is corrupted"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IndexOutOfBoundsException,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            FileNotFoundException, HardDiskCorruptedException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            throw new FileNotFoundException();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                String line \u003d \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                while ((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    String[] parseLine \u003d line.split(\"/\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    if (parseLine.length \u003c 3) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                        throw new HardDiskCorruptedException(\"HDD data corrupted!\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    String taskType \u003d parseLine[0];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    String isDone \u003d parseLine[1];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    String taskDescription \u003d parseLine[2];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    switch (taskType) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    case TODO:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                        Todo todo \u003d new Todo(taskDescription);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                        if (isDone(isDone)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                            todo.markAsDone();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                        taskArrayList.add(todo);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    case DEADLINE:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                        String deadlineTime \u003d parseLine[3];"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                        Deadline deadline \u003d new Deadline(taskDescription, deadlineTime);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                        if (isDone(isDone)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                            deadline.markAsDone();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                        taskArrayList.add(deadline);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    case EVENT:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                        String eventTime \u003d parseLine[3];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                        Events event \u003d new Events(taskDescription, eventTime);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                        if (isDone(isDone)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                            event.markAsDone();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                        taskArrayList.add(event);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                        throw new HardDiskCorruptedException(\"Event type is corrupted!\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            } catch (HardDiskCorruptedException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return taskArrayList;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    private boolean isDone(String isDone) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return isDone.equals(\"Y\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Saves all Task in TaskList to the data file"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param taskArrayList TaskList of current Tasks"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public void saveToHardDisk(TaskList taskArrayList) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            writeToDataFile(taskArrayList, fileWriter);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        } catch (HardDiskCorruptedException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Writes Task data in TaskList to the data file in proper formatting"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param taskArrayList TaskList of current Tasks"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param fileWriter Object that writes to the data file"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @throws IOException throws when writing to data file fails"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @throws HardDiskCorruptedException throws when task data is corrupted in current TaskList"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    private void writeToDataFile(TaskList taskArrayList, FileWriter fileWriter)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            throws IOException, HardDiskCorruptedException {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        for (Task task : taskArrayList.getTaskList()) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            if (isToDo(task)) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                fileWriter.write(String.format(\"%s/%s/%s\\n\", task.getEventType(),"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                        task.isDone(), task.getDescription()));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            } else if (isDeadline(task) || isEvent(task)) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                fileWriter.write((String.format(\"%s/%s/%s/%s\\n\", task.getEventType(),"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                        task.isDone(), task.getDescription(), task.getTaskTime())));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                throw new HardDiskCorruptedException(\"File writing is corrupted!\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    private boolean isToDo(Task task) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return task.getEventType().equals(\"[T]\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    private boolean isDeadline(Task task) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return task.getEventType().equals(\"[D]\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    private boolean isEvent(Task task) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return task.getEventType().equals(\"[E]\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 158
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " * Class that represents a deadline task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    protected String deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    protected String eventType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Constructs a Deadline object"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param description description of the Deadline provided by user"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param deadline date of the Deadline provided by user"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.eventType \u003d \"[D]\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Returns String representing the event type"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @return String representing the event type"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String getEventType() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return this.eventType;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Returns formatted string of date of deadline"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @return String containing the date"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String getTaskTime() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return this.deadline;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Returns a formatted string object in list format"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @return String formatting the deadline task"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return String.format(\"%s%s %s(by: %s)\", getEventType(),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                super.getStatusIcon(), super.getDescription(), getTaskTime());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Returns a formatted string object is list format being marked done"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param itemIndexRequested index of item being marked done"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @return String formatting message of deadline being marked done"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String getDoneResponseMessage(int itemIndexRequested) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return String.format(\"[%d. %s%s %s(by: %s)] is marked done!\", itemIndexRequested, getEventType(),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                super.getStatusIcon(), super.getDescription(), getTaskTime());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 59
    }
  },
  {
    "path": "src/main/java/task/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " * Class that represents an Event"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    protected String eventTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    protected String eventType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Constructs an Event object"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param description description of Event provided by user"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param time time period of Event provided by user"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public Events(String description, String time) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.eventTime \u003d time;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.eventType \u003d \"[E]\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Returns formatted string of date of Event"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @return String containing the date"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String getTaskTime() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return this.eventTime;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Returns String representing the event type"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @return String representing the event type"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String getEventType() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return this.eventType;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Returns a formatted string object in list format"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @return String formatting the Event task"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return String.format(\"%s%s %s(by: %s)\", getEventType(),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                super.getStatusIcon(), super.getDescription(), getTaskTime());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Returns a formatted string object is list format being marked done"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param itemIndexRequested index of item being marked done"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @return String formatting message of Event being marked done"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String getDoneResponseMessage(int itemIndexRequested) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return String.format(\"[%d. %s%s %s(by: %s)] is marked done!\", itemIndexRequested, getEventType(),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                super.getStatusIcon(), super.getDescription(), getTaskTime());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 57
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " * Represents a Task in the list kept by Duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    private static int numberOfTasksInList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Creates a new Task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Default value for isDone is false"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Increments the total number of Task in the list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param description description of Task provided by user"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        numberOfTasksInList++;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Return the current total number of Task in the TaskList"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @return number of task in the list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public static int getNumberOfTasksInList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return numberOfTasksInList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Decrement the number of Tasks in List"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public static void reduceNumberOfTaskInList(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        numberOfTasksInList--;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Returns an icon corresponding to the status of Task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @return tick or cross icon"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Sets the boolean isDone to true"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Returns the description of Task"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @return description of Task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Returns String representing the boolean isDone"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @return string representing boolean isDone"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String isDone() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return (isDone ? \"Y\" : \"N\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public abstract String getEventType();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public abstract String getTaskTime();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public abstract String getDoneResponseMessage(int itemIndexRequested);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 73
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " * Class that represents ToDo task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    protected String eventType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Constructs a ToDo object"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param description description of the ToDo provided by user"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public Todo(String description){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.eventType \u003d \"[T]\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Returns String representing the event type"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @return String representing the event type"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String getEventType() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return eventType;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String getTaskTime() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Returns a formatted string object in list format"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @return String formatting the Event task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return String.format(\"%s%s %s\", getEventType(), super.getStatusIcon(), super.getDescription());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Returns a formatted string object is list format being marked done"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param itemIndexRequested index of item being marked done"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @return String formatting message of ToDo being marked done"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String getDoneResponseMessage(int itemIndexRequested) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return String.format(\"[%d. %s%s %s] is marked done!\", itemIndexRequested, getEventType(),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                super.getStatusIcon(), super.getDescription());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 51
    }
  },
  {
    "path": "src/main/java/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import exceptions.EmptyListException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import exceptions.TaskAlreadyDoneException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import task.Events;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " * Class that manages all operations regarding TaskList"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Constructs TaskList object for an existing TaskList"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param taskList existing TaskList loaded from saved file data"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Constructs new TaskList"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Returns the TaskList object"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @return TaskList object"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Prints all task in TaskList in list formatting"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @throws EmptyListException throws when task list is empty"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public void printTaskList() throws EmptyListException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            throw new EmptyListException(\"The list seems to be empty!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                System.out.println(String.format(\"%d. %s\", index++, task.toString()));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Marks Task as done"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param itemIndex index of Task to be marked done"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @throws IndexOutOfBoundsException throws when index provided by user is out of bounds of list"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @throws TaskAlreadyDoneException throws when user tries to mark done a Task that is already done"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public void markTaskAsDone(int itemIndex) throws IndexOutOfBoundsException, TaskAlreadyDoneException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        int listIndex \u003d itemIndex + 1;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            if (isAlreadyDone(taskList.get(itemIndex))) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                throw new TaskAlreadyDoneException(\"Task already done\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                taskList.get(itemIndex).markAsDone();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                System.out.println(taskList.get(itemIndex).getDoneResponseMessage(listIndex));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            System.out.println(\"You don\u0027t have that many items in the list. \" +"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    \"Please try a number within range!\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    private boolean isAlreadyDone(Task task) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return task.isDone().equals(\"Y\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Deletes a Task"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param itemIndex index of Task to be deleted provided by user"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @throws IndexOutOfBoundsException throws when index provided is out of range of list"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public void deleteTask(int itemIndex) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            String taskDetails \u003d taskList.get(itemIndex).toString();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            taskList.remove(itemIndex);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            printSuccessfulDeletion(taskDetails);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            System.out.println(\"You don\u0027t have that many items in the list. \" +"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    \"Please try a number within range!\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Prints successful deletion message"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param taskDetails details of Task being deleted"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public void printSuccessfulDeletion(String taskDetails) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        Task.reduceNumberOfTaskInList();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        System.out.println(String.format(\"Removed the task:\\n    %s\", taskDetails));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        System.out.println(String.format(\"Now you have %d tasks in the list!\","
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                Task.getNumberOfTasksInList()));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * add a new ToDo and updates user interface"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param description description of Todo provided by user"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public void addNewToDo(String description) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        taskList.add(todo);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        printSuccessfulAddMessage(todo.toString());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * add a new Deadline and updates user interface"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param description description of Deadline provided by user"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param date date of Deadline provided by user"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public void addNewDeadline(String description, String date) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        Deadline deadline \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        taskList.add(deadline);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        printSuccessfulAddMessage(deadline.toString());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Add a new Event and updates user interface"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param description description of Event provided by user"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param date date of Event provided by user"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public void addNewEvent(String description, String date) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        Events event \u003d new Events(description, date);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        taskList.add(event);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        printSuccessfulAddMessage(event.toString());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Prints to user interface a successful adding of Task"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param taskDetails details of Task added"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public void printSuccessfulAddMessage(String taskDetails) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        System.out.println(String.format(\"Added the task:\\n    %s\", taskDetails));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        System.out.println(String.format(\"Now you have %d tasks in the list!\","
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                Task.getNumberOfTasksInList()));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Finds matching tasks from keyword"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param keyword substring to be searched"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public void findTask(String keyword) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            if (task.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                if (isNoTaskYetFound(index)) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                System.out.println(String.format(\"%d. %s\", index++, task.toString()));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        if (isNoTaskYetFound(index)) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            System.out.println(\"There are no matching results\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    private boolean isNoTaskYetFound(int index) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return index \u003d\u003d 1;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 175
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " * Manages user interface of Duke"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    private static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    Scanner myScanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Constructs Ui object and new Scanner object to accept user input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.myScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Prints Welcome message"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public void printWelcomeMessage() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        System.out.println(\"Hello from\\n\" + LOGO + \"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Prints Exit message"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public void printGoodbyeMessage() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        System.out.println(\"Exiting DUKE\\n\" + LOGO);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Prints error Message"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param errorMessage String of errorMessage"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public void printErrorMessage(String errorMessage) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Prints hard disk not found error message"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public void printHardDiskNotFound() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        System.out.println(\"No existing stored data file found. Creating new file to store data!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Prints the prompt message for user to enter input"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public void printPromptMessage() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        System.out.print(\"Input a command:\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Reads input from user"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @return String of user input"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        printPromptMessage();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return myScanner.nextLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Prints the divider between user input and response"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public void printDivider() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 74
    }
  }
]

[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "[T]/Y/add"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "[D]/N/add/lol"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 2
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import Exceptions.EmptyListException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import Exceptions.MissingItemIndexException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import Exceptions.MissingDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import Exceptions.UnknownCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import Task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import Task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import Task.Events;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import Task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public static final String MISSING_TIME_PERIOD \u003d \"Please enter a time period for the task!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public static final String ITEM_OUT_OF_RANGE \u003d \"Item requested is out of range! Try another item.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public static final String INVALID_INDEX \u003d \"Invalid index! Please enter a valid integer as index!\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public static final String FILE_PATH \u003d \"data\" + File.separator + \"duke.txt\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        String home \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        // inserts correct file path separator on *nix and Windows"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        // works on *nix"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        // works on Windows"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        java.nio.file.Path path \u003d java.nio.file.Paths.get(home, \"projects\",\"DUKE\",\"duke\",\"data\", \"duke.txt\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        Storage storage \u003d new Storage(path.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        ArrayList\u003cTask\u003e myList \u003d storage.load();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        Scanner myScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        printWelcomeMessage();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            System.out.print(\"USER:\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            userInput \u003d myScanner.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            printNewLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            String[] commands \u003d userInput.trim().split(\" \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            switch (commands[0]) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    printListOfTasks(myList);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                } catch (EmptyListException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    System.out.println(e);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    markTaskAsDone(myList, commands, userInput);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    storage.saveToHardDisk(myList);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    System.out.println(ITEM_OUT_OF_RANGE);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    System.out.println(INVALID_INDEX);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                } catch (MissingItemIndexException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    System.out.println(e);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    deleteTask(myList, commands, userInput);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    storage.saveToHardDisk(myList);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    System.out.println(ITEM_OUT_OF_RANGE);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    System.out.println(INVALID_INDEX);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                } catch (MissingItemIndexException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    System.out.println(e);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    addNewToDo(myList, commands, userInput);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    storage.saveToHardDisk(myList);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                } catch (MissingDescriptionException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    System.out.println(e);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    addNewDeadline(myList, commands, userInput);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    storage.saveToHardDisk(myList);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    System.out.println(MISSING_TIME_PERIOD);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                } catch (MissingDescriptionException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    System.out.println(e);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    addNewEvent(myList, commands, userInput);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    storage.saveToHardDisk(myList);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    System.out.println(MISSING_TIME_PERIOD);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                } catch (MissingDescriptionException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    System.out.println(e);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    throw new UnknownCommandException(userInput);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                } catch (UnknownCommandException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    System.out.println(e);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            printNewLine();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        } while (!userInput.equals(\"bye\"));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        cleanUpAndExit(myScanner);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public static void addNewDeadline(ArrayList\u003cTask\u003e myList, String[] commands, String userInput)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            throws MissingDescriptionException, IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        if (isInvalidLength(commands)) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            throw new MissingDescriptionException(userInput);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            // parsing userInput, remove first word \"deadline\""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            String[] deadlineDetails \u003d removeFirstWord(commands).split(\"/\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            myList.add(new Deadline(deadlineDetails[0].trim(), deadlineDetails[1].trim()));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            printSuccessfulAddMessage(myList.get(Task.getNumberOfTasksInList() - 1).toString());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public static void addNewToDo(ArrayList\u003cTask\u003e myList, String[] commands, String userInput)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            throws MissingDescriptionException {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        if (isInvalidLength(commands)) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            throw new MissingDescriptionException(userInput);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            String parsedUserInput \u003d removeFirstWord(commands);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            myList.add(new Todo(parsedUserInput.trim()));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            // gets last newly added Task.Task"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            printSuccessfulAddMessage(myList.get(Task.getNumberOfTasksInList() - 1).toString());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public static void addNewEvent(ArrayList\u003cTask\u003e myList, String[] commands, String userInput)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            throws IndexOutOfBoundsException, MissingDescriptionException{"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        if (isInvalidLength(commands)) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            throw new MissingDescriptionException(userInput);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            // parsing userInput, remove first word \"event\""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            String[] eventDetails \u003d removeFirstWord(commands).split(\"/\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            // testing IndexOutOfBoundsException"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            myList.add(new Events(eventDetails[0].trim(), eventDetails[1].trim()));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            printSuccessfulAddMessage(myList.get(Task.getNumberOfTasksInList() - 1).toString());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public static void markTaskAsDone(ArrayList\u003cTask\u003e myList, String[] commands, String userInput)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            throws IndexOutOfBoundsException, NumberFormatException, MissingItemIndexException {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        if (isInvalidLength(commands)){"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            throw new MissingItemIndexException(userInput);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        // testing NumberFormatException"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        int itemIndexRequested \u003d Integer.parseInt(commands[1]) - 1;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        // testing IndexOutOfBoundsException"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        myList.get(itemIndexRequested).markAsDone();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        System.out.println(myList.get(itemIndexRequested)"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                .getDoneResponseMessage(itemIndexRequested + 1));"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public static void deleteTask(ArrayList\u003cTask\u003e myList, String[] commands, String userInput)"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            throws IndexOutOfBoundsException, NumberFormatException, MissingItemIndexException {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        if (isInvalidLength(commands)){"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            throw new MissingItemIndexException(userInput);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        // testing NumberFormatException"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        int itemIndexRequested \u003d Integer.parseInt(commands[1]) - 1;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        String taskDetails \u003d myList.get(itemIndexRequested).toString();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        // testing IndexOutOfBoundsException"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        myList.remove(itemIndexRequested);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        printSuccessfulDeleteMessage(taskDetails);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public static boolean isInvalidLength(String[] commands) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return commands.length \u003c 2;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public static void printListOfTasks(ArrayList\u003cTask\u003e myList)"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            throws EmptyListException {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        if (myList.isEmpty()) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            // dummy argument"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            throw new EmptyListException(\"Empty list\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            for (int i \u003d 0; i \u003c myList.size(); i++) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                System.out.println(String.format(\"%d. %s\", i + 1,"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                        myList.get(i).toString()));"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public static void printSuccessfulAddMessage(String taskDetails) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        System.out.println(String.format(\"Added the task:\\n    %s\", taskDetails));"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        System.out.println(String.format(\"Now you have %d tasks in the list!\","
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                Task.getNumberOfTasksInList()));"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public static void printSuccessfulDeleteMessage(String taskDetails) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        // update number of Tasks left"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        Task.reduceNumberOfTaskInList();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        System.out.println(String.format(\"Removed the task:\\n    %s\", taskDetails));"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        System.out.println(String.format(\"Now you have %d tasks in the list!\","
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                Task.getNumberOfTasksInList()));"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Returns the user input in a String format without the first command"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param command the Array of split commands entered"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @return description of Task.Task as a String"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    private static String removeFirstWord(String[] command) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        // parsing userInput, remove first word"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        String[] detailsOfTask \u003d Arrays.copyOfRange(command, 1, command.length);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        for (String word : detailsOfTask) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            sb.append(word).append(\" \");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return (sb.toString());"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Prints the partition between each user response interaction"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public static void printNewLine() {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        String NEW_LINE \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        System.out.println(NEW_LINE);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public static void printWelcomeMessage() {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        System.out.println(\"Hello from\\n\" + LOGO + \"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public static void cleanUpAndExit(Scanner myScanner) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        myScanner.close();"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        System.out.println(\"Exiting DUKE\\n\" + LOGO);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 251,
      "-": 5
    }
  },
  {
    "path": "src/main/java/Exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 4
    }
  },
  {
    "path": "src/main/java/Exceptions/EmptyListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public class EmptyListException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public EmptyListException(String errorMessage) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return String.format(\"Empty List: It seems that the list is empty! Please add an item!\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 14
    }
  },
  {
    "path": "src/main/java/Exceptions/HardDiskCorruptedException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public class HardDiskCorruptedException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public HardDiskCorruptedException(String errorMessage) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return String.format(\"Hard Disk Data is corrupted! %s\", errorMessage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 14
    }
  },
  {
    "path": "src/main/java/Exceptions/MissingDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public class MissingDescriptionException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    // default constructor"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public MissingDescriptionException(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public MissingDescriptionException(String errorMessage){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return String.format(\"Missing Description: \u0027%s\u0027 missing a description.\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                \" Please enter a description!\", errorMessage);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 19
    }
  },
  {
    "path": "src/main/java/Exceptions/MissingItemIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public class MissingItemIndexException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public MissingItemIndexException(String errorMessage){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return String.format(\"Missing Item Index: missing an index! \" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                \"Please enter an index to be marked done!\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 16
    }
  },
  {
    "path": "src/main/java/Exceptions/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public class UnknownCommandException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public UnknownCommandException(String errorMessage){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return String.format(\"Unknown Command Found: \u0027%s\u0027 is not a valid command!\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                \" Please enter a valid command!\", errorMessage);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 15
    }
  },
  {
    "path": "src/main/java/Storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import Exceptions.HardDiskCorruptedException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import Task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import Task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import Task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import Task.Events;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            String line \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            while ((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                String[] parseLine \u003d line.split(\"/\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                if (parseLine.length \u003c 3) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    throw new HardDiskCorruptedException(\"HDD data corrupted!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                String taskType \u003d parseLine[0];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                String isDone \u003d parseLine[1];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                String taskDescription \u003d parseLine[2];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                case \"[T]\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    Todo todo \u003d new Todo(taskDescription);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    if (isDone.equals(\"Y\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                        todo.markAsDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    taskArrayList.add(todo);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                case \"[D]\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    Deadline deadline \u003d new Deadline(taskDescription, parseLine[3]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    if (isDone.equals(\"Y\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                        deadline.markAsDone();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    taskArrayList.add(deadline);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                case \"[E]\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    Events event \u003d new Events(taskDescription, parseLine[3]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    if (isDone.equals(\"Y\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                        event.markAsDone();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    taskArrayList.add(event);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    throw new HardDiskCorruptedException(\"Event type is corrupted!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        } catch (HardDiskCorruptedException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return taskArrayList;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public void saveToHardDisk(ArrayList\u003cTask\u003e taskArrayList) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            for (Task task : taskArrayList) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                if (task.getEventType().equals(\"[T]\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    fileWriter.write(String.format(\"%s/%s/%s\\n\", task.getEventType(),"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                            task.isDone(), task.getDescription()));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                } else if (task.getEventType().equals(\"[D]\") || task.getEventType().equals(\"[E]\")){"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    fileWriter.write((String.format(\"%s/%s/%s/%s\\n\", task.getEventType(),"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                            task.isDone(), task.getDescription(), task.getTaskTime())));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                    throw new HardDiskCorruptedException(\"Event type is corrupted\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        } catch (HardDiskCorruptedException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 91
    }
  },
  {
    "path": "src/main/java/Task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    protected String deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    protected String eventType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.eventType \u003d \"[D]\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String getEventType() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return this.eventType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String getTaskTime() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return String.format(\"%s\", this.deadline);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return String.format(\"%s%s %s(%s)\", getEventType(),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                super.getStatusIcon(), super.getDescription(), getTaskTime());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String getDoneResponseMessage(int itemIndexRequested) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return String.format(\"[%d. %s%s %s(%s)] is marked done!\", itemIndexRequested, getEventType(),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                super.getStatusIcon(), super.getDescription(), getTaskTime());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 32
    }
  },
  {
    "path": "src/main/java/Task/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    protected String eventTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    protected String eventType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public Events(String description, String time) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.eventTime \u003d time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.eventType \u003d \"[E]\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String getTaskTime() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return String.format(\"%s\", this.eventTime);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String getEventType() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return eventType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return String.format(\"%s%s %s(%s)\", getEventType(),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                super.getStatusIcon(), super.getDescription(), getTaskTime());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String getDoneResponseMessage(int itemIndexRequested) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return String.format(\"[%d. %s%s %s(%s)] is marked done!\", itemIndexRequested, getEventType(),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                super.getStatusIcon(), super.getDescription(), getTaskTime());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 33
    }
  },
  {
    "path": "src/main/java/Task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "import javax.print.DocFlavor;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " * Represents a Task.Task in the list kept by Duke"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    private static int numberOfTasksInList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Creates a new Task.Task with the given description"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Default value for isDone is false"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @param description of the Task.Task created"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        numberOfTasksInList++;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public static int getNumberOfTasksInList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return numberOfTasksInList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public static void reduceNumberOfTaskInList(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        numberOfTasksInList--;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Get the status of isDone of the Task.Task and returns an icon"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @return tick or cross icon"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * Changes the boolean isDone to true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * get description of Task.Task"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     * @return description of Task.Task"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String isDone() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return (isDone ? \"Y\" : \"N\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public abstract String getEventType();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public abstract String getTaskTime();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public abstract String getDoneResponseMessage(int itemIndexRequested);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 67
    }
  },
  {
    "path": "src/main/java/Task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    protected String eventType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public Todo(String description){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        this.eventType \u003d \"[T]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String getEventType() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return eventType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String getTaskTime() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return String.format(\"%s%s %s\", getEventType(), super.getStatusIcon(), super.getDescription());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    public String getDoneResponseMessage(int itemIndexRequested) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "        return String.format(\"[%d. %s%s %s] is marked done!\", itemIndexRequested, getEventType(),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "                super.getStatusIcon(), super.getDescription());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Keith-JK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Keith-JK": 30
    }
  }
]

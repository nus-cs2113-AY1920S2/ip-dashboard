[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "// seedu.duke?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lwxymere": 16,
      "-": 18
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "## What is Duke?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Duke is a personal task manager which records your tasks, remembers the status "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "of your tasks, and shows you all your tasks at one go. Duke uses a command-line "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "interface, where single-line user commands are used for interaction. Duke also "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "stores your tasks locally, so that your data persists between sessions."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "* [Add Task: Todo](#todo) - Add a `todo` to the task list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "* [Add Task: Deadline](#deadline) - Add a `deadline` to the task list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "* [Add Task: Event](#event) - Add an `event` to the task list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "* [Delete Task](#delete) - Delete a task from the task list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "* [Mark Task as Complete](#done) - Set the status of a task to `done`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "* [View Task List](#list) - Show all tasks added to Duke\u0027s task list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "* [Find a Task](#find) - Search for a task by name"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "* [Exit](#bye) - Exit Duke"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "### Add a Task  "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Duke can track 3 different types of tasks, which are `todo`, `deadline`, and `event`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "---"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "#### `todo`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Add a `todo` task to the task list. The `todo` contains a description of the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Syntax  "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "`todo \u003cdescription\u003e`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Example  "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "`todo buy bread`  "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Expected Outcome"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "```"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Task added:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  [T][X] buy bread"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "You have 1 task in the list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "```"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "---"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "#### `deadline`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Add a `deadline` task to the task list. The `deadline` contains a description of "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "the task, and a date which indicates when the task is due. The date is specified "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "in the format `DD/MM/YY`, and the time is specified in the 24h format `HHMM`."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Syntax  "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "`deadline \u003cdescription\u003e /by \u003cdate\u003e \u003ctime\u003e`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Example  "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "`deadline 2113T iP final submission /by 02/03/20 1200`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Expected Outcome  "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "```"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Task added:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  [D][X] 2113T iP final submission (by: Mon 02 Mar 2020 12:00)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "You have 2 tasks in the list"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "```"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "---"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "#### `event`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Add an `event` task to the task list. The `event` contains a description of the "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "task, and a date, start time, and end time which indicates when the task takes "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "place. The date is specified in the format `DD/MM/YY`, and the times are "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "specified in the 24h format `HHMM`."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Syntax  "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "`event \u003cdescription\u003e /at \u003cdate\u003e \u003cstartTime\u003e - \u003cendTime\u003e`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Example  "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "`event tP meeting 7 /at 04/03/20 1400 - 1500`  "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Expected Outcome  "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "```"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Task added:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  [E][X] tP meeting 7 (at: Wed 04 Mar 2020 14:00 - 15:00)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "You have 3 tasks in the list"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "```"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "---"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "### View all Tasks"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "#### `list`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Shows a list of all tasks stored by Duke."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Syntax  "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "`list`  "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Example  "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "`list`  "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Expected Outcome  "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "```"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Quite a few tasks you got there"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     1. [T][X] buy bread"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     2. [D][X] 2113T iP final submission (by: Mon 02 Mar 2020 12:00)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     3. [E][X] tP meeting 7 (at: Wed 04 Mar 2020 14:00 - 15:00)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "```"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "---"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "### Delete a Task"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "#### `delete`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Removes a task from the task list. The task to be removed is identified by "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "its number shown in the `list` command.  "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Syntax  "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "`delete \u003ctaskNumber\u003e`"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Example  "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Expected Outcome"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "```"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Task deleted:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  [T][X] buy bread"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "You have 2 tasks in the list"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "```"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "---"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "### Mark a Task as completed"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "#### `done`"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Change the status of a task from not done to done. The task to be marked as done "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "is identified by its number shown in the `list` command."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Syntax  "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "`done \u003ctaskNumber\u003e`  "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Example  "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "`done 2`  "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Expected Outcome:  "
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "```"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Well, that\u0027s one task down"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  [E][O] tP meeting 7 (at: Wed 04 Mar 2020 14:00 - 15:00)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "```"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "---"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "### Find a specific Task"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "#### `find`"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Searches the task list for tasks with names that contain the query, then shows "
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "all matching tasks to the user."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Syntax  "
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "`find \u003cquery\u003e`  "
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Example  "
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "`find iP`  "
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Expected Outcome  "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "```"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Are these what you\u0027re looking for?"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  1. [D][X] 2113T iP final submission (by: Mon 02 Mar 2020 12:00)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "```"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "---"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "### Exit Duke"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "#### `bye`"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Closes the Duke program."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Syntax  "
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "`bye`  "
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Example  "
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Expected Outcome  "
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "```"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "Bye then"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "```  "
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "---"
      }
    ],
    "authorContributionMap": {
      "lwxymere": 150,
      "-": 12
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " * Contains main logic for Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * Constructs Duke object and loads existing save data, if any."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        this.storage \u003d new Storage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            tasks \u003d storage.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            // no save file found"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            ui.showToUser(e.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * Continuously read and execute Duke commands input by the user, until the"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * \u0027Bye\u0027 command is entered where Duke exits."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        // Loop terminates on receiving a \"bye\" command, which calls System.exit(0)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        //noinspection InfiniteLoopStatement"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            String fullCommand \u003d ui.getUserCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            Command command \u003d Parser.parseCommand(fullCommand);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            ui.showDivider();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * Main entry point into Duke\u0027s logic"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @param args unused"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lwxymere": 53,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " * Exceptions unique to Duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        return Ui.GENERIC_ERROR_MESSAGE_PREFIX + super.getMessage();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lwxymere": 15
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.commands.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.commands.DeadlineCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.commands.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.commands.EventCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.commands.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.commands.IncorrectCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.commands.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.commands.TodoCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " * Parses user input"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final DateTimeFormatter INPUT_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy HHmm\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final DateTimeFormatter PRINT_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"EEE dd MMM yyyy HH\u0027:\u0027mm\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final DateTimeFormatter PRINT_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"HH\u0027:\u0027mm\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * Returns a Command object depending on the command input by the user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @param fullCommand line input by the user, which represents a command"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @return command input by the user, with the appropriate arguments set"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static Command parseCommand(String fullCommand) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        String[] commandTokens \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        String commandType \u003d commandTokens[0].toLowerCase();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        case ByeCommand.BYE_COMMAND_NAME:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            // exit duke"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        case ListCommand.LIST_COMMAND_NAME:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            // show all tasks in the list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        case DeleteCommand.DELETE_COMMAND_NAME:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            // delete a task by its displayed list index"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            return prepareDeleteCommand(commandTokens);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        case DoneCommand.DONE_COMMAND_NAME:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            // mark a task as done"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            return prepareDoneCommand(commandTokens);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        case FindCommand.FIND_COMMAND_NAME:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            // find tasks with descriptions that match a query string"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            return prepareFindCommand(fullCommand);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        case TodoCommand.TODO_COMMAND_NAME:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            // add to`do to tasks"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            return prepareTodoCommand(fullCommand);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        case DeadlineCommand.DEADLINE_COMMAND_NAME:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            // add deadline to tasks"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            return prepareDeadlineCommand(fullCommand);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        case EventCommand.EVENT_COMMAND_NAME:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            // add event to tasks"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            return prepareEventCommand(fullCommand);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            // unknown command name"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            return new IncorrectCommand(Ui.UNKNOWN_COMMAND_NAME_MESSAGE);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static LocalDateTime parseDate(String dateTimeString)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            throws DateTimeParseException, IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        // handle issue where there are multiple spaces between the date and the time"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        String[] dateAndTime \u003d dateTimeString.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        String formattedDateTimeString \u003d dateAndTime[0] + \" \" + dateAndTime[1];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        return LocalDateTime.parse(formattedDateTimeString, INPUT_DATE_FORMAT);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    private static Command prepareDeadlineCommand(String fullCommand) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        // deadline command follows format: \u003ctaskType\u003e \u003ctaskName\u003e /by \u003cdate time\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        String[] deadlineInfo \u003d null;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            deadlineInfo \u003d fullCommand"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                    .substring(DeadlineCommand.DEADLINE_COMMAND_NAME.length() + 1)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                    .trim()"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                    .split(DeadlineCommand.COMMAND_DATE_TIME_DELIMITER, 2);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            return new IncorrectCommand(Ui.DEADLINE_INSUFFICIENT_ARGS_MESSAGE);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        if (deadlineInfo.length !\u003d 2) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            return new IncorrectCommand(Ui.DEADLINE_INSUFFICIENT_ARGS_MESSAGE);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        String deadlineName \u003d deadlineInfo[0].trim();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        LocalDateTime deadlineDate;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            deadlineDate \u003d parseDate(deadlineInfo[1].trim());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        } catch (DateTimeParseException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            return new IncorrectCommand(Ui.INVALID_DATE_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        return new DeadlineCommand(deadlineName, deadlineDate);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    private static Command prepareDeleteCommand(String[] commandTokens) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        // delete command follows format: delete \u003cdeleteIndex\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            int deleteIndex \u003d Integer.parseInt(commandTokens[1]) - 1;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            return new DeleteCommand(deleteIndex);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException aioobe) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            // deleteIndex is not specified"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            return new IncorrectCommand(Ui.TASK_NUMBER_NOT_SPECIFIED_MESSAGE);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            // commandTokens[1] is unable to be parsed as an int"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            return new IncorrectCommand(Ui.TASK_NUMBER_NOT_INTEGER_MESSAGE);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    private static Command prepareDoneCommand(String[] commandTokens) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        // done command follows format: done \u003cdoneIndex\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            int doneIndex \u003d Integer.parseInt(commandTokens[1]) - 1;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            return new DoneCommand(doneIndex);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        } catch (IndexOutOfBoundsException aioobe) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            // taskIndex is not specified"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            return new IncorrectCommand(Ui.TASK_NUMBER_NOT_SPECIFIED_MESSAGE);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            return new IncorrectCommand(Ui.TASK_NUMBER_NOT_INTEGER_MESSAGE);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    private static Command prepareEventCommand(String fullCommand) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        // event command follows format: \u003ctaskType\u003e \u003ctaskName\u003e /at \u003cdate startTime - endTime\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        String[] eventInfo;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            eventInfo \u003d fullCommand"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                    .substring(EventCommand.EVENT_COMMAND_NAME.length() + 1)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                    .trim()"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                    .split(EventCommand.COMMAND_DATE_TIME_DELIMITER, 2);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            return new IncorrectCommand(Ui.EVENT_INSUFFICIENT_ARGS_MESSAGE);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        if (eventInfo.length !\u003d 2) { // insufficient arguments"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            return new IncorrectCommand(Ui.EVENT_INSUFFICIENT_ARGS_MESSAGE);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        String eventName \u003d eventInfo[0].trim();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        String eventDate \u003d eventInfo[1].trim();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        LocalDateTime startTime;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        LocalDateTime endTime;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            String[] eventDateAndTime \u003d eventDate.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            String[] startAndEndTime \u003d eventDateAndTime[1].split(EventCommand.COMMAND_START_END_TIME_DELIMITER, 2);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            startTime \u003d parseDate(eventDateAndTime[0] + \" \" + startAndEndTime[0]);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            endTime \u003d parseDate(eventDateAndTime[0] + \" \" + startAndEndTime[1]);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        } catch (DateTimeParseException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            return new IncorrectCommand(Ui.INVALID_EVENT_DATE_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        if (startTime.isAfter(endTime)) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            return new IncorrectCommand(Ui.INVALID_START_AND_END_TIME_MESSAGE);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        return new EventCommand(eventName, startTime, endTime);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    private static Command prepareFindCommand(String fullCommand) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        // find command follows format: find \u003csearchString\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            String searchString \u003d fullCommand.substring(FindCommand.FIND_COMMAND_NAME.length() + 1).trim();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            return new FindCommand(searchString);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        } catch (StringIndexOutOfBoundsException sioobe) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            return new IncorrectCommand(Ui.FIND_INSUFFICIENT_ARGS_MESSAGE);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    private static Command prepareTodoCommand(String fullCommand) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        // to`do command follows format: \u003ctaskType\u003e \u003ctaskName\u003e"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            String description \u003d fullCommand.substring(TodoCommand.TODO_COMMAND_NAME.length() + 1).trim();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            return new TodoCommand(description);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            return new IncorrectCommand(Ui.TODO_INSUFFICIENT_ARGS_MESSAGE);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lwxymere": 180
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import java.util.StringJoiner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " * Handles local storage of the Duke TaskList"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    private static final String DEFAULT_FILE_PATH \u003d \"./dukeData.txt\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * Constructs Storage object with a default file path"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        this(DEFAULT_FILE_PATH);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * Constructs the Storage object with the given filePath."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @param path desired location for the storage file"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        this.filePath \u003d path;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * Retrieves stored TaskList information from previous Duke sessions."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @return TaskList constructed using the stored information"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @throws DukeException if storage file contents cannot be deciphered"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @throws FileNotFoundException if no existing load file is found"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public TaskList load() throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        Scanner scanner \u003d new Scanner(f);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            String taskLine \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            decodeAndAddTask(taskList, taskLine);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    private void decodeAndAddTask(TaskList taskList, String taskLine) throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            switch (taskLine.charAt(0)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            case Todo.TODO_ICON:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                // todo"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                taskList.addTask(Todo.decodeTask(taskLine));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            case Deadline.DEADLINE_ICON:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                // deadline"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                taskList.addTask(Deadline.decodeTask(taskLine));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            case Event.EVENT_ICON:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                // event"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                taskList.addTask(Event.decodeTask(taskLine));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                throw new DukeException(Ui.UNKNOWN_STORAGE_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        } catch (IndexOutOfBoundsException | DateTimeParseException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            throw new DukeException(Ui.UNKNOWN_STORAGE_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * Saves the current state of the TaskList into the local storage file."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @param taskList the TaskList to be saved"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @throws IOException if error is encountered when writing to the file"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public void save(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        StringJoiner sj \u003d new StringJoiner(System.lineSeparator());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        for (Task task : taskList.getTasks()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            sj.add(task.encodeTask());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath); // throws IOException"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        fw.write(sj.toString()); // throws IOException"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lwxymere": 94
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " * List of Task objects"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * Returns the list of Tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @return the list of Tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * Returns the number of tasks in the TaskList"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @return number of tasks in the TaskList"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public int getNumTasks() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * Adds a task to the TaskList"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @param task task to be added"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * Prints all tasks in the TaskList. Printed tasks may no longer by well"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * aligned if the list contains more than 999 tasks."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public void showTasks() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); ++i) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            System.out.printf(\"%3d. %s%n\", i + 1, tasks.get(i));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * Deletes a task from the TaskList."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @param index list index of task to be deleted"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @return the deleted task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @throws IndexOutOfBoundsException if given index falls outside the list"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public Task deleteTask(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        Task deletedTask \u003d tasks.get(index);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        return deletedTask;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * Changes the status of a task from not done to done."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @param index list index of task to be marked as done"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @return the task that was marked as done"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @throws IndexOutOfBoundsException if given index falls outside the list"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @throws DukeException if task is already done"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public Task markTaskAsDone(int index) throws IndexOutOfBoundsException, DukeException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        Task selectedTask \u003d tasks.get(index);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        if (selectedTask.isDone()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            throw new DukeException(Ui.TASK_ALREADY_DONE_MESSAGE);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        selectedTask.markAsDone();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        return selectedTask;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lwxymere": 78
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " * Handles all input and output of Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final String DUKE_LOGO \u003d"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            \" ____        _        \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                    + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                    + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                    + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final String DIVIDER \u003d \"_________________________________________________\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final String LS \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final String NO_TASKS_MESSAGE \u003d \"You have no tasks right now though\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final String HAVE_TASKS_MESSAGE \u003d \"Quite a few tasks you got there\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final String NO_MATCHING_TASKS_MESSAGE \u003d \"Hmm... Seems like no tasks matched your query\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final String FOUND_MATCHING_TASKS_MESSAGE \u003d \"Are these what you\u0027re looking for?\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final String FIND_INSUFFICIENT_ARGS_MESSAGE \u003d \"Please specify a string to search for\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final String TASK_INDEX_OUT_OF_RANGE_MESSAGE \u003d \"Please specify a task number between 1 and \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final String TASK_MARKED_AS_DONE_MESSAGE \u003d \"Well, that\u0027s one task down\" + LS + \"  \";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final String TASK_ALREADY_DONE_MESSAGE \u003d \"That task is already done\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final String GENERIC_ERROR_MESSAGE_PREFIX \u003d \"☹ OOPS!!! \";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final String TODO_INSUFFICIENT_ARGS_MESSAGE \u003d \"The description of a todo cannot be empty\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final String DEADLINE_INSUFFICIENT_ARGS_MESSAGE \u003d"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            \"The description and date of a deadline cannot be empty\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final String EVENT_INSUFFICIENT_ARGS_MESSAGE \u003d \"The description and date of an event cannot be empty\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final String UNKNOWN_COMMAND_NAME_MESSAGE \u003d \"I\u0027m not very sure what that means...\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final String TASK_NUMBER_NOT_SPECIFIED_MESSAGE \u003d \"Please specify a task number\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final String TASK_NUMBER_NOT_INTEGER_MESSAGE \u003d \"Please specify an integer for the task number\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final String UNKNOWN_STORAGE_FORMAT_MESSAGE \u003d"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            \"Unknown save file format encountered\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            + LS"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            + \"Exit now to manually fix and retain saved data\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final String INVALID_DATE_FORMAT_MESSAGE  \u003d"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            \"Please specify the date and time using the format DD/MM/YY HHMM\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final String INVALID_EVENT_DATE_FORMAT_MESSAGE  \u003d"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            \"Please specify the starting and ending date and time using the format DD/MM/YY HHMM - HHMM\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final String INVALID_START_AND_END_TIME_MESSAGE \u003d"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            \"The starting time should be before the ending time\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        this.in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        this.out \u003d System.out;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * Prints a line divider to better format Duke\u0027s output."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public void showDivider() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        out.println(DIVIDER);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * Prints all messages, separated by a newline."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @param messages strings to be shown to the user"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public void showToUser(String... messages) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        for (String message : messages) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            out.println(message);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * Prints Duke\u0027s welcome message."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        showDivider();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        showToUser(\"This is\", DUKE_LOGO, \"How can I help you today?\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        showDivider();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * Prints a message to the user before Duke exits"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public void showByeMessage() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        showToUser(\"Bye then\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        showDivider();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * Shows the user that a task has been successfully added to the TaskList."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @param addedTask the Task object that has been added"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @param numTasks number of tasks currently in the TaskList"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public void showAddedTaskMessage(Task addedTask, int numTasks) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        showToUser(\"Task added:\","
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                \"  \" + addedTask,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                \"You have \" + numTasks + \" task\" + (numTasks \u003d\u003d 1 ? \"\" : \"s\") + \" in the list\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        );"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * Shows the user that a task has been successfully deleted from the"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * TaskList."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @param deletedTask the Task object that has been deleted"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @param numTasks number of tasks currently in the TaskList"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public void showDeletedTaskMessage(Task deletedTask, int numTasks) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        showToUser(\"Task deleted:\","
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                \"  \" + deletedTask,"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                \"You have \" + numTasks + \" task\" + (numTasks \u003d\u003d 1 ? \"\" : \"s\") + \" in the list\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        );"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * Shows a prompt to the user, then reads the next line of user input"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @return line input by the user"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public String getUserCommand() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        out.print(\"\u003e \");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        out.flush();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        return in.nextLine().trim();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lwxymere": 125
    }
  },
  {
    "path": "src/main/java/duke/commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final String BYE_COMMAND_NAME \u003d \"bye\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        ui.showByeMessage();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lwxymere": 15
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " * A Duke Command given by a user to be executed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * Run the specified Command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @param tasks TaskList containing the current user\u0027s Tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @param ui Ui object to handle user feedback"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @param storage Storage object to save data if the TaskList is updated"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * Saves the current state of the TaskList after a Command is executed."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @param tasks TaskList containing the current user\u0027s Tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @param ui Ui object to handle user feedback"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @param storage Storage object to save data if the TaskList is updated"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    protected void attemptSave(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            ui.showToUser(ioe.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lwxymere": 34
    }
  },
  {
    "path": "src/main/java/duke/commands/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " * Adds a Deadline to the TaskList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /** Word to be typed by the user to invoke this Command */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final String DEADLINE_COMMAND_NAME \u003d \"deadline\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /** Delimiter that separates the description and date of the Command */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final String COMMAND_DATE_TIME_DELIMITER \u003d \"\\\\s+/by\\\\s+\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    private final LocalDateTime by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public DeadlineCommand(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        Task addedTask \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        tasks.addTask(addedTask);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        ui.showAddedTaskMessage(addedTask, tasks.getNumTasks());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        attemptSave(tasks, ui, storage);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lwxymere": 34
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " * Deletes a Task from the TaskList."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /** Word to be typed by the user to invoke this Command */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final String DELETE_COMMAND_NAME \u003d \"delete\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    private final int deleteIndex;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public DeleteCommand(int deleteIndex) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        this.deleteIndex \u003d deleteIndex;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        int numTasks \u003d tasks.getNumTasks();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            Task deletedTask \u003d tasks.deleteTask(deleteIndex);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            numTasks -\u003d 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            ui.showDeletedTaskMessage(deletedTask, numTasks);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        } catch (IndexOutOfBoundsException ioobe) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            if (numTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                ui.showToUser(Ui.NO_TASKS_MESSAGE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                ui.showToUser("
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                        Ui.GENERIC_ERROR_MESSAGE_PREFIX"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                                + Ui.TASK_INDEX_OUT_OF_RANGE_MESSAGE"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                                + numTasks"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                );"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        attemptSave(tasks, ui, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lwxymere": 40
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " * Changes the status of a Task from \u0027not done\u0027 to \u0027done\u0027."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /** Word to be typed by the user to invoke this Command */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final String DONE_COMMAND_NAME \u003d \"done\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    private final int doneIndex;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public DoneCommand(int doneIndex) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        this.doneIndex \u003d doneIndex;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        int numTasks \u003d tasks.getNumTasks();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            Task doneTask \u003d tasks.markTaskAsDone(doneIndex);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            ui.showToUser(Ui.TASK_MARKED_AS_DONE_MESSAGE + doneTask);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        } catch (IndexOutOfBoundsException ioobe) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            if (numTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                ui.showToUser(Ui.NO_TASKS_MESSAGE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                ui.showToUser("
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                        Ui.GENERIC_ERROR_MESSAGE_PREFIX"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                        + Ui.TASK_INDEX_OUT_OF_RANGE_MESSAGE"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                        + numTasks"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                );"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        } catch (DukeException de) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            ui.showToUser(de.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        attemptSave(tasks, ui, storage);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lwxymere": 42
    }
  },
  {
    "path": "src/main/java/duke/commands/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " * Adds an Event to the TaskList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /** Word to be typed by the user to invoke this Command */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final String EVENT_COMMAND_NAME \u003d \"event\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /** Delimiter that separates the description and date of the Command */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final String COMMAND_DATE_TIME_DELIMITER \u003d \"\\\\s+/at\\\\s+\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /** Delimiter that separates the start time and end time of the Command */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final String COMMAND_START_END_TIME_DELIMITER \u003d \"\\\\s*-\\\\s*\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    private final LocalDateTime startTime;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    private final LocalDateTime endTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public EventCommand(String description, LocalDateTime startTime, LocalDateTime endTime) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        this.endTime \u003d endTime;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        Task addedTask \u003d new Event(description, startTime, endTime);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        tasks.addTask(addedTask);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        ui.showAddedTaskMessage(addedTask, tasks.getNumTasks());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        attemptSave(tasks, ui, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lwxymere": 38
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " * Searches for Tasks with descriptions that match a query string."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /** Word to be typed by the user to invoke this Command */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final String FIND_COMMAND_NAME \u003d \"find\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    private final String searchString;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public FindCommand(String searchString) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        this.searchString \u003d searchString;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        TaskList matchingTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            String description \u003d task.getDescription();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            if (description.contains(searchString)) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                matchingTasks.addTask(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        if (matchingTasks.getNumTasks() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            ui.showToUser(Ui.NO_MATCHING_TASKS_MESSAGE);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            ui.showToUser(Ui.FOUND_MATCHING_TASKS_MESSAGE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            matchingTasks.showTasks();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lwxymere": 37
    }
  },
  {
    "path": "src/main/java/duke/commands/IncorrectCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " * An invalid or non-existent Command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "public class IncorrectCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /** Error information to be shown to the user */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public final String errorMessage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public IncorrectCommand(String errorMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        ui.showToUser(Ui.GENERIC_ERROR_MESSAGE_PREFIX + errorMessage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "lwxymere": 23
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " * Shows all Tasks in the TaskList to the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /** Word to be typed by the user to invoke this Command */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final String LIST_COMMAND_NAME \u003d \"list\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        if (tasks.getNumTasks() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            ui.showToUser(Ui.NO_TASKS_MESSAGE);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            ui.showToUser(Ui.HAVE_TASKS_MESSAGE);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            tasks.showTasks();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lwxymere": 23
    }
  },
  {
    "path": "src/main/java/duke/commands/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " * Adds a Todo the the TaskList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /** Word to be typed by the user to invoke this Command */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final String TODO_COMMAND_NAME \u003d \"todo\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public TodoCommand(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        Task addedTask \u003d new Todo(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        tasks.addTask(addedTask);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        ui.showAddedTaskMessage(addedTask, tasks.getNumTasks());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        attemptSave(tasks, ui, storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lwxymere": 28
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " * Type of Task that should be done before a specified date."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /** Icon used to represent a Deadline */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final char DEADLINE_ICON \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /** Date before which the Deadline should be done */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public String encodeTask() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        return String.format(\"%s|%s|%s|%s\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                DEADLINE_ICON, isDone, description, by.format(Parser.INPUT_DATE_FORMAT)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        );"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * Returns the object representation of an encoded Deadline."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @param encodedTask a string returned by method Task.encodeTask()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @return a Deadline object whose information was stored in encodedTask"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @throws IndexOutOfBoundsException if encodedTask is not a string returned by Task.encodeTask()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @throws DateTimeParseException if date or time fields in encodedTask are of incorrect format"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static Deadline decodeTask(String encodedTask) throws DateTimeParseException, IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        String[] tokens \u003d encodedTask.split(\"\\\\\" + DELIMITER);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        boolean isDone \u003d Boolean.parseBoolean(tokens[1]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        String description \u003d tokens[2];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        LocalDateTime by \u003d Parser.parseDate(tokens[3]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        Deadline deadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            deadline.markAsDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        return \"[\" + DEADLINE_ICON + \"]\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                + super.toString()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                + \" (by: \" + by.format(Parser.PRINT_DATE_FORMAT) + \")\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lwxymere": 55
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " * Type of Task that takes place at a specified date."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /** Icon used to represent an Event */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final char EVENT_ICON \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /** Starting and ending time of the Event */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    protected LocalDateTime startTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    protected LocalDateTime endTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public Event(String description, LocalDateTime startTime, LocalDateTime endTime) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        this.endTime \u003d endTime;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public String encodeTask() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        return String.format(\"%s|%s|%s|%s|%s\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                EVENT_ICON, isDone, description,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                startTime.format(Parser.INPUT_DATE_FORMAT),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                endTime.format(Parser.INPUT_DATE_FORMAT));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * Returns the object representation of an encoded Event."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @param encodedTask a string returned by method Task.encodeTask()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @return an Event object whose information was stored in encodedTask"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @throws IndexOutOfBoundsException if encodedTask is not a string returned by Task.encodeTask()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @throws DateTimeParseException if date or time fields in encodedTask are of incorrect format"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static Event decodeTask(String encodedTask) throws DateTimeParseException, IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        String[] tokens \u003d encodedTask.split(\"\\\\\" + DELIMITER);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        boolean isDone \u003d Boolean.parseBoolean(tokens[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        String description \u003d tokens[2];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        LocalDateTime startTime \u003d Parser.parseDate(tokens[3]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        LocalDateTime endTime \u003d Parser.parseDate(tokens[4]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        Event event \u003d new Event(description, startTime, endTime);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            event.markAsDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        return event;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        return \"[\" + EVENT_ICON + \"]\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                + super.toString()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                + \" (at: \""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                + startTime.format(Parser.PRINT_DATE_FORMAT)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                + \" - \""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                + endTime.format(Parser.PRINT_TIME_FORMAT)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lwxymere": 63
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " * Task that a user can keep of track of."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    protected static final String DELIMITER \u003d \"|\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    protected static final String TASK_DONE_ICON \u003d \"O\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    protected static final String TASK_NOT_DONE_ICON \u003d \"X\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * Constructs a task using a given description. Task is marked as not done"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * by default."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @param description Task description"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * Returns a status icon that show whether the Task is done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @return string representing the status icon"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        return (isDone ? TASK_DONE_ICON : TASK_NOT_DONE_ICON);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * Returns whether a Task is currently done."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @return true if Task is done, false otherwise"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public Boolean isDone() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * Returns the description of the Task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @return Task description"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * Changes the status of the Task to done."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * Formats the Task information as a string that can be stored and decoded."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @return the encoded Task string"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public abstract String encodeTask();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lwxymere": 65
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " * Type of Task that is not tied to a date."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /** Icon used to represent a Todo */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static final char TODO_ICON \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public String encodeTask() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        return String.format(\"%s|%s|%s\", TODO_ICON, isDone, description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * Returns the object representation of an encoded Todo."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @param encodedTask a string returned by method Task.encodeTask()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @return a Todo object whose information was stored in encodedTask"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @throws IndexOutOfBoundsException if encodedTask is not a string returned by Task.encodeTask()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     * @throws DateTimeParseException if date or time fields in encodedTask are of incorrect format"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public static Todo decodeTask(String encodedTask) throws DateTimeParseException, IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        String[] tokens \u003d encodedTask.split(\"\\\\\" + DELIMITER);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        boolean isDone \u003d Boolean.parseBoolean(tokens[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        String description \u003d tokens[2];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "            todo.markAsDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        return todo;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "        return \"[\" + TODO_ICON + \"]\" + super.toString();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lwxymere": 43
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "This is"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "How can I help you today?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e You have no tasks right now though"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Task added:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  [T][X] borrow book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "You have 1 task in the list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Quite a few tasks you got there"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  1. [T][X] borrow book"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Task added:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  [D][X] return book (by: Thu 12 Mar 2020 18:45)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "You have 2 tasks in the list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Task added:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  [E][X] project meeting (at: Fri 28 Feb 2020 10:00 - 12:00)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "You have 3 tasks in the list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Quite a few tasks you got there"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  1. [T][X] borrow book"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  2. [D][X] return book (by: Thu 12 Mar 2020 18:45)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  3. [E][X] project meeting (at: Fri 28 Feb 2020 10:00 - 12:00)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Well, that\u0027s one task down"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  [D][O] return book (by: Thu 12 Mar 2020 18:45)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Quite a few tasks you got there"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  1. [T][X] borrow book"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  2. [D][O] return book (by: Thu 12 Mar 2020 18:45)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  3. [E][X] project meeting (at: Fri 28 Feb 2020 10:00 - 12:00)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Well, that\u0027s one task down"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  [T][O] borrow book"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Well, that\u0027s one task down"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  [E][O] project meeting (at: Fri 28 Feb 2020 10:00 - 12:00)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Quite a few tasks you got there"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  1. [T][O] borrow book"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  2. [D][O] return book (by: Thu 12 Mar 2020 18:45)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  3. [E][O] project meeting (at: Fri 28 Feb 2020 10:00 - 12:00)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Task added:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  [D][X] finish reading book (by: Sun 01 Mar 2020 00:00)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "You have 4 tasks in the list"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Task added:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  [T][X] i want to write a slash here /by doing sth like this"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "You have 5 tasks in the list"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Quite a few tasks you got there"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  1. [T][O] borrow book"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  2. [D][O] return book (by: Thu 12 Mar 2020 18:45)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  3. [E][O] project meeting (at: Fri 28 Feb 2020 10:00 - 12:00)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  4. [D][X] finish reading book (by: Sun 01 Mar 2020 00:00)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  5. [T][X] i want to write a slash here /by doing sth like this"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e ☹ OOPS!!! That task is already done"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Well, that\u0027s one task down"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  [D][O] finish reading book (by: Sun 01 Mar 2020 00:00)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Well, that\u0027s one task down"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  [T][O] i want to write a slash here /by doing sth like this"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e ☹ OOPS!!! Please specify a task number between 1 and 5"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Quite a few tasks you got there"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  1. [T][O] borrow book"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  2. [D][O] return book (by: Thu 12 Mar 2020 18:45)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  3. [E][O] project meeting (at: Fri 28 Feb 2020 10:00 - 12:00)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  4. [D][O] finish reading book (by: Sun 01 Mar 2020 00:00)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  5. [T][O] i want to write a slash here /by doing sth like this"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e ☹ OOPS!!! The description of a todo cannot be empty"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e ☹ OOPS!!! The description and date of a deadline cannot be empty"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e ☹ OOPS!!! The description and date of a deadline cannot be empty"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e ☹ OOPS!!! The description and date of a deadline cannot be empty"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Task added:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  [D][X] to-trim deadline (by: Sat 22 Feb 2020 20:20)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "You have 6 tasks in the list"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e ☹ OOPS!!! Please specify the date and time using the format DD/MM/YY HHMM"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e ☹ OOPS!!! The description and date of an event cannot be empty"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e ☹ OOPS!!! The description and date of an event cannot be empty"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e ☹ OOPS!!! The description and date of an event cannot be empty"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Task added:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  [E][X] to-trim event (at: Sat 22 Feb 2020 20:20 - 20:40)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "You have 7 tasks in the list"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Task added:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  [E][X] no space between start end time dash (at: Wed 12 Dec 2012 23:45 - 23:59)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "You have 8 tasks in the list"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e ☹ OOPS!!! Please specify the starting and ending date and time using the format DD/MM/YY HHMM - HHMM"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e ☹ OOPS!!! Please specify the starting and ending date and time using the format DD/MM/YY HHMM - HHMM"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e ☹ OOPS!!! The starting time should be before the ending time"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Task added:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  [T][X] 9"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "You have 9 tasks in the list"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Task added:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  [T][X] 10"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "You have 10 tasks in the list"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Quite a few tasks you got there"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  1. [T][O] borrow book"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  2. [D][O] return book (by: Thu 12 Mar 2020 18:45)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  3. [E][O] project meeting (at: Fri 28 Feb 2020 10:00 - 12:00)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  4. [D][O] finish reading book (by: Sun 01 Mar 2020 00:00)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  5. [T][O] i want to write a slash here /by doing sth like this"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  6. [D][X] to-trim deadline (by: Sat 22 Feb 2020 20:20)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  7. [E][X] to-trim event (at: Sat 22 Feb 2020 20:20 - 20:40)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  8. [E][X] no space between start end time dash (at: Wed 12 Dec 2012 23:45 - 23:59)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  9. [T][X] 9"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lwxymere"
        },
        "content": " 10. [T][X] 10"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Are these what you\u0027re looking for?"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  1. [T][O] borrow book"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  2. [D][O] return book (by: Thu 12 Mar 2020 18:45)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  3. [D][O] finish reading book (by: Sun 01 Mar 2020 00:00)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Are these what you\u0027re looking for?"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  1. [D][X] to-trim deadline (by: Sat 22 Feb 2020 20:20)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  2. [E][X] to-trim event (at: Sat 22 Feb 2020 20:20 - 20:40)"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e ☹ OOPS!!! Please specify a string to search for"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Hmm... Seems like no tasks matched your query"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Are these what you\u0027re looking for?"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  1. [T][O] i want to write a slash here /by doing sth like this"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Are these what you\u0027re looking for?"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  1. [D][O] finish reading book (by: Sun 01 Mar 2020 00:00)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e ☹ OOPS!!! Please specify a task number between 1 and 10"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Well, that\u0027s one task down"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  [T][O] 10"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e ☹ OOPS!!! Please specify a task number between 1 and 10"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Task deleted:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  [T][O] 10"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "You have 9 tasks in the list"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Task deleted:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  [D][O] return book (by: Thu 12 Mar 2020 18:45)"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "You have 8 tasks in the list"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Task deleted:"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  [E][O] project meeting (at: Fri 28 Feb 2020 10:00 - 12:00)"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "You have 7 tasks in the list"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Task deleted:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  [D][O] finish reading book (by: Sun 01 Mar 2020 00:00)"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "You have 6 tasks in the list"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Task deleted:"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  [T][O] i want to write a slash here /by doing sth like this"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "You have 5 tasks in the list"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Task deleted:"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  [D][X] to-trim deadline (by: Sat 22 Feb 2020 20:20)"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "You have 4 tasks in the list"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Task deleted:"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  [E][X] to-trim event (at: Sat 22 Feb 2020 20:20 - 20:40)"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "You have 3 tasks in the list"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Task deleted:"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  [E][X] no space between start end time dash (at: Wed 12 Dec 2012 23:45 - 23:59)"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "You have 2 tasks in the list"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Task deleted:"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  [T][O] borrow book"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "You have 1 task in the list"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Task deleted:"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  [T][X] 9"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "You have 0 tasks in the list"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e You have no tasks right now though"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e You have no tasks right now though"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e ☹ OOPS!!! I\u0027m not very sure what that means..."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e ☹ OOPS!!! Please specify an integer for the task number"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e ☹ OOPS!!! Please specify an integer for the task number"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "\u003e Bye then"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "_________________________________________________"
      }
    ],
    "authorContributionMap": {
      "lwxymere": 215
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "deadline return book /by 12/03/20 1845"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "event project meeting /at 28/02/20 1000 - 1200"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "deadline finish reading book /by 01/03/20 0000"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "todo i want to write a slash here /by doing sth like this"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "delete 8"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "todo"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "deadline   /by 01/01/01 0101"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "deadline  hello /by"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "deadline    to-trim deadline      /by    22/02/20    2020"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "deadline wrong date format test /by 30-02-20 1234"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "event"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "event   /at  01/01/01 0101 - 1010"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "event  yes  no  /at"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "event       to-trim event    /at   22/02/20      2020    -     2040"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "event no space between start end time dash /at 12/12/12 2345-2359"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "event no date test /at 2345-2359"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "event wrong date format test /at 31/6/20 1234 - 2345"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "event wrong start end time test /at 12/12/12 2359 - 0000"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "todo 9"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "todo 10"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "list"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "find book"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "find o-t"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "find"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "find qwerty"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "find /by"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "find sh r"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "done 11"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "done 10"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "delete 11"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "delete 10"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "list"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "sssp"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "done abc"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "delete eeee"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "lwxymere": 61
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "del ECTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\commands\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "  exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ECTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lwxymere"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lwxymere"
        },
        "content": "FC ECTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "lwxymere": 21
    }
  }
]

[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewc97": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public static final int MAX_TASK \u003d 100;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        printWelcomeMessage();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        Task[] list \u003d new Task[MAX_TASK];"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        int itemCount \u003d 0;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        String input \u003d in.nextLine(); // Get string input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            String[] words \u003d input.split(\" \", 2); // Split command from rest of sentence"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                itemCount \u003d manageCommand(list, itemCount, input, words);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            } catch (EmptyToDoException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                System.out.println(\"    ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                System.out.println(\"    ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            } catch (InvalidDeadlineException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                System.out.println(\"    ☹ OOPS!!! The description of a deadline must be in this format: \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                System.out.println(\"    deadline \u003ctask name\u003e /by \u003cdate/time\u003e\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            } catch (InvalidEventException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                System.out.println(\"    ☹ OOPS!!! The description of an event must be in this format: \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                System.out.println(\"    event \u003ctask name\u003e /at \u003cdate/time\u003e\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            input \u003d in.nextLine(); // Get string input"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        printExitMessage(); // Exit"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    private static int manageCommand(Task[] list, int itemCount, String input, String[] words) throws EmptyToDoException, InvalidCommandException, InvalidDeadlineException, InvalidEventException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        if (words[0].equals(\"list\")) { // List tasks"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            printBorder();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            System.out.println(\"    Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            for (int i \u003d 0; i \u003c itemCount; ++i) { // Print list of tasks"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                System.out.println(\"    \" + (i + 1) + \". \" + list[i].toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            printBorder();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        } else if (words[0].equals(\"done\")) { // Mark task as done"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            printBorder();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            System.out.println(\"    Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            String doneTask \u003d words[1];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(doneTask) - 1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            list[taskIndex].setDone(true);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            System.out.println(\"    \" + list[taskIndex].toString()); // Print task marked as done"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            printBorder();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        } else if (words[0].equals(\"deadline\")) { // Deadline"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            if ((words.length \u003c 2) || !words[1].contains(\" /by \")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                throw new InvalidDeadlineException();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            String[] deadlineWords \u003d words[1].split(\" /by \", 2); // Split task and date/time"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            String deadlineTask \u003d deadlineWords[0];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            String deadlineBy \u003d deadlineWords[1];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            list[itemCount] \u003d new Deadline(deadlineTask, deadlineBy);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            printBorder();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            printTaskAdded(list, itemCount);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            itemCount++;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            printListCount(itemCount);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            printBorder();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        } else if (words[0].equals(\"event\")) { // Event"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            if ((words.length \u003c 2) || !words[1].contains(\" /at \")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                throw new InvalidEventException();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            String[] eventWords \u003d words[1].split(\" /at \", 2); // Split task and date/time"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            String eventTask \u003d eventWords[0];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            String eventAt \u003d eventWords[1];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            list[itemCount] \u003d new Event(eventTask, eventAt);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            printBorder();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            printTaskAdded(list, itemCount);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            itemCount++;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            printListCount(itemCount);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            printBorder();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        } else if (words[0].equals(\"todo\")) { // ToDo"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            if (words.length \u003c 2) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                throw new EmptyToDoException();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            String toDoTask \u003d words[1];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            list[itemCount] \u003d new ToDo(toDoTask);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            printBorder();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            printTaskAdded(list, itemCount);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            itemCount++;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            printListCount(itemCount);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            printBorder();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        return itemCount;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    private static void printListCount(int itemCount) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        System.out.println(\"    Now you have \" + itemCount + \" tasks in the list.\"); // Print list count"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    private static void printTaskAdded(Task[] list, int itemCount) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        System.out.println(\"    Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        System.out.println(\"      \" + list[itemCount].toString()); // Print task info"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    private static void printBorder() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    private static void printExitMessage() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        System.out.println(\" _                \\n\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                + \"| |               \\n\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                + \"| |__  _   _  ___ \\n\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                + \"| \u0027_ \\\\| | | |/ _ \\\\\\n\""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                + \"| |_) | |_| |  __/\\n\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                + \"|_.__/ \\\\__, |\\\\___|\\n\""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                + \"        __/ |     \\n\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "                + \"       |___/      \\n\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    private static void printWelcomeMessage() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewc97": 121,
      "-": 11
    }
  },
  {
    "path": "src/main/java/EmptyToDoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "public class EmptyToDoException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewc97": 2
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewc97": 13
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewc97": 2
    }
  },
  {
    "path": "src/main/java/InvalidDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "public class InvalidDeadlineException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewc97": 2
    }
  },
  {
    "path": "src/main/java/InvalidEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "public class InvalidEventException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewc97": 2
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public void setDone(boolean isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.getTask();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewc97": 25
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewc97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewc97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewc97": 10
    }
  }
]

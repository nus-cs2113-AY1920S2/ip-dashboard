[
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguan1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguan1"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by:\" + this.by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguan1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguan1": 14
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguan1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguan1"
        },
        "content": "import duke.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguan1"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        Task[] tasks \u003d new Task[100];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        System.out.println(\"Hello! I\u0027m duke.Duke\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        boolean ifError \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        while (true){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            String next \u003d input.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            if (next.equals(\"bye\")){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon! :)\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            } else if (next.equals(\"list\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                System.out.println(\"Here are the tasks on your list:\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                for (int i \u003d 0; i \u003c counter; i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                System.out.printf(\"%d. %s\\n\",i +1,tasks[i].toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            } else if (next.startsWith(\"done\")){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                String temp \u003d next.replaceAll(\"\\\\D+\",\"\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                int FinishedNumber \u003d Integer.parseInt(temp);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                tasks[FinishedNumber-1].markAsDone();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                System.out.printf(\"  [%s] %s\\n\",tasks[FinishedNumber-1].getStatusIcon(),tasks[FinishedNumber-1].getDescription());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                String[] splitString \u003d next.split(\" \", 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                if (splitString[0].equals(\"deadline\")){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                    if (splitString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        System.out.println(\"The description of deadline cannot be empty\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        ifError \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                    } else{"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        String[] splitString2 \u003d splitString[1].split(\"/by\", 2);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        if (splitString2.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                            System.out.println(\"duke.Deadline requires to be separated by a \u0027/by\u0027 statement\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                            ifError \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        } else{"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                            gotItMessage();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                            tasks[counter] \u003d new Deadline(splitString2[0],splitString2[1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                            System.out.printf(\"  %s\\n\",tasks[counter].toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                } else if (splitString[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                    if (splitString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        System.out.println(\"OOPS!!! The description of todo cannot be empty\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        ifError \u003d true;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                    } else{"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        gotItMessage();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        tasks[counter] \u003d new Todo(splitString[1]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        System.out.printf(\"  %s\\n\",tasks[counter].toString());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                } else if (splitString[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                    if (splitString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        System.out.println(\"OOPS!!! The description of event cannot be empty\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        ifError \u003d true;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        String[] splitString2 \u003d splitString[1].split(\"/at\", 2);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        if (splitString2.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                            System.out.println(\"duke.Event is required to be separated by a \u0027/at\u0027 statement\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                            ifError \u003d true;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                            gotItMessage();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                            tasks[counter] \u003d new Event(splitString2[0], splitString2[1]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                            System.out.printf(\"  %s\\n\",tasks[counter].toString());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                } else{"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                    System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                    ifError \u003d true;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//                    tasks[counter] \u003d new duke.Task(next);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//                    System.out.println(\"added: \"+ next);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                if (ifError \u003d\u003d false) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                    counter +\u003d1;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                    System.out.printf(\"Now you have %d tasks in the list\\n\", counter);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                ifError \u003d false;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    private static void gotItMessage() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "nguan1": 100
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguan1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguan1"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    public Event(String description, String time){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at:\" + this.time + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguan1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguan1": 13
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguan1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguan1"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        this.description \u003ddescription;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nguan1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguan1": 24
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguan1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguan1"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguan1"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguan1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguan1": 13
    }
  }
]

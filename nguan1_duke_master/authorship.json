[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nguan1"
        },
        "content": "duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nguan1"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "nguan1": 2
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguan1"
        },
        "content": "1. [T][✘] eat"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguan1"
        },
        "content": "2. [T][✘] left"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguan1"
        },
        "content": "3. [T][✘] right"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguan1"
        },
        "content": "4. [T][✘] eat"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguan1"
        },
        "content": "5. [T][✘] work"
      }
    ],
    "authorContributionMap": {
      "nguan1": 5
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguan1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguan1"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by:\" + this.by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguan1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguan1": 14
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguan1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguan1"
        },
        "content": "import duke.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguan1"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguan1"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguan1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguan1"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        System.out.println(\"Hello! I\u0027m duke.Duke\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        boolean ifError \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        while (true){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            String next \u003d input.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            if (next.equals(\"bye\")){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon! :)\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            } else if (next.equals(\"list\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                System.out.println(\"Here are the tasks on your list:\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                for (int i \u003d 0; i \u003c counter; i++) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                System.out.printf(\"%d. %s\\n\",i +1,tasks.get(i).toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            } else if (next.startsWith(\"done\")){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                String temp \u003d next.replaceAll(\"\\\\D+\",\"\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                int FinishedNumber \u003d Integer.parseInt(temp);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                tasks.get(FinishedNumber-1).markAsDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                System.out.printf(\"  [%s] %s\\n\",tasks.get(FinishedNumber-1).getStatusIcon(),tasks.get(FinishedNumber-1).getDescription());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                String[] splitString \u003d next.split(\" \", 2);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                if (splitString[0].equals(\"deadline\")){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                    if (splitString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        System.out.println(\"The description of deadline cannot be empty\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        ifError \u003d true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                    } else{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        String[] splitString2 \u003d splitString[1].split(\"/by\", 2);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        if (splitString2.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                            System.out.println(\"duke.Deadline requires to be separated by a \u0027/by\u0027 statement\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                            ifError \u003d true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        } else{"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                            gotItMessage();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                            tasks.add(counter,new Deadline(splitString2[0],splitString2[1]));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                            System.out.printf(\"  %s\\n\",tasks.get(counter).toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                } else if (splitString[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                    if (splitString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        System.out.println(\"OOPS!!! The description of todo cannot be empty\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        ifError \u003d true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                    } else{"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        gotItMessage();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        tasks.add(counter,new Todo(splitString[1]));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        System.out.printf(\"  %s\\n\",tasks.get(counter).toString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                } else if (splitString[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                    if (splitString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        System.out.println(\"OOPS!!! The description of event cannot be empty\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        ifError \u003d true;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        String[] splitString2 \u003d splitString[1].split(\"/at\", 2);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        if (splitString2.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                            System.out.println(\"duke.Event is required to be separated by a \u0027/at\u0027 statement\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                            ifError \u003d true;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                            gotItMessage();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                            tasks.add(counter,new Event(splitString2[0], splitString2[1]));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                            System.out.printf(\"  %s\\n\",tasks.get(counter).toString());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                } else if (splitString[0].equals(\"delete\")){"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                    if (splitString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        System.out.println(\"OOPS!!! The description of event cannot be empty\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        ifError \u003d true;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        System.out.println(\"Noted: I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        System.out.printf(\"  %s\\n\",tasks.get(Integer.parseInt(splitString[1]) - 1).toString());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        tasks.remove(Integer.parseInt(splitString[1]) - 1);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                        counter \u003d counter - 2;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                } else if (splitString[0].equals(\"save\")){"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                    writeToFile(\"./duke.txt\",tasks);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                    counter \u003d counter -1;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                else{"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                    System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                    ifError \u003d true;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//                    tasks[counter] \u003d new duke.Task(next);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nguan1"
        },
        "content": "//                    System.out.println(\"added: \"+ next);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                if (ifError \u003d\u003d false) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                    counter +\u003d1;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                    System.out.printf(\"Now you have %d tasks in the list\\n\", counter);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                ifError \u003d false;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    private static void gotItMessage() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "nguan1": 119
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguan1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguan1"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    public Event(String description, String time){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at:\" + this.time + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguan1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguan1": 13
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguan1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguan1"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguan1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguan1": 4
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguan1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguan1"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguan1"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguan1"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguan1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguan1"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguan1"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguan1"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    protected String fname;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    public Storage(String fname) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        this.fname \u003d fname;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    private static void writeToFile(String filePath, ArrayList\u003cTask\u003e tasksToWrite) throws IOException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            for (int i \u003d 0; i \u003c tasksToWrite.size(); i++) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                String writtenString \u003d String.format(\"%d. %s\\n\", i + 1, tasksToWrite.get(i).toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                fw.write(writtenString);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            System.out.println(\"Invalid path\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    private static ArrayList\u003cString\u003e readFromFile(String filePath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        Scanner sc \u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        ArrayList\u003cString\u003e tasks \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nguan1"
        },
        "content": "                String task \u003d sc.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        }catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nguan1"
        },
        "content": "            System.out.println(\"File Not Found\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nguan1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguan1": 45
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguan1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguan1"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        this.description \u003ddescription;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nguan1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguan1": 24
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguan1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguan1"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguan1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguan1": 4
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguan1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguan1"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguan1"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguan1"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguan1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguan1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguan1": 13
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguan1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguan1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguan1"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguan1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguan1": 4
    }
  }
]

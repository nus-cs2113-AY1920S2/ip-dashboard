[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "katelo731"
        },
        "content": "1. [T] [v] read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "katelo731"
        },
        "content": "2. [D] [x] return book (by: June 6th)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "katelo731"
        },
        "content": "3. [E] [v] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "katelo731"
        },
        "content": "4. [T] [v] join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "katelo731"
        },
        "content": "5. [E] [x] hang out (at: Sat)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "katelo731"
        },
        "content": "6. [T] [v] workout"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "katelo731"
        },
        "content": "7. [E] [x] exam (at: Fri)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "katelo731"
        },
        "content": "8. [T] [x] book shopping"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "katelo731"
        },
        "content": "9. [T] [x] read book"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "katelo731"
        },
        "content": "10. [E] [x] project meeting (at: Feb 12 2020)"
      }
    ],
    "authorContributionMap": {
      "katelo731": 10
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "katelo731"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "katelo731"
        },
        "content": "1. **Introduction**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "katelo731"
        },
        "content": "2. **Features**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    - 2.1. **Add Tasks**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        - 2.1.a **Add Todo Task**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        - 2.1.b **Add Event Task**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        - 2.1.c **Add Deadline Task**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    - 2.2. **Mark As Done**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    - 2.3. **Delete Tasks**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    - 2.4. **List Tasks**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    - 2.5. **Find Tasks**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    - 2.6. **Save**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    - 2.7. **Load**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "katelo731"
        },
        "content": "3. **Usage**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "katelo731"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "katelo731"
        },
        "content": "Duke is a personal assistant chatbot that helps a person to keep track of upcoming tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "katelo731"
        },
        "content": "## 2. Features "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "katelo731"
        },
        "content": "### 2.1. Add Tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "katelo731"
        },
        "content": "#### 2.1.a Add Todo Task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- Add a `todo` task into task list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- Format: `todo TASK`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "katelo731"
        },
        "content": "#### 2.1.b Add Event Task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- Add an `event` task into task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- Format: `event TASK /at TIME`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "katelo731"
        },
        "content": "#### 2.1.c Add Deadline Task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- Add a `deadline` task into task list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- Format: `deadline TASK /by TIME`"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "katelo731"
        },
        "content": "### 2.2. Mark As Done"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- User can mark a task as done by the given task number."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- Format: `done TASK_NUMBER`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "katelo731"
        },
        "content": "### 2.3. Delete Tasks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- User can delete a task by the given task number."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- Format: `delete TASK_NUMBER`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "katelo731"
        },
        "content": "### 2.4. List Tasks"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- User can list all the tasks in the task list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- Format: `list`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "katelo731"
        },
        "content": "### 2.5. Find Tasks"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- User can search related tasks by a given keyword."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- Format: `find KEYWORD`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "katelo731"
        },
        "content": "### 2.6. Save"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "katelo731"
        },
        "content": "Duke save the tasks in the hard disk automatically whenever the task list changes."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "katelo731"
        },
        "content": "### 2.7. Load"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "katelo731"
        },
        "content": "Load the data automatically from the hard disk when Duke starts up."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "katelo731"
        },
        "content": "## 3. Usage"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "katelo731"
        },
        "content": "### Todo"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- Format: ```todo TASK```"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- Example of usage: ```todo read book```"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- Expected outcome:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "katelo731"
        },
        "content": "```"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "katelo731"
        },
        "content": "╔═══════════════════════════════════════════════════════════╗"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "katelo731"
        },
        "content": "║               Got it. I\u0027ve added this task:               ║"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "katelo731"
        },
        "content": "║                    1. [T] [x] read book                   ║"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "katelo731"
        },
        "content": "║             Now you have 1 tasks in the list.             ║"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "katelo731"
        },
        "content": "╚═══════════════════════════════════════════════════════════╝"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "katelo731"
        },
        "content": "What can I do for you? Type \u0027bye\u0027 to exit."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "katelo731"
        },
        "content": "```"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "katelo731"
        },
        "content": "### Event"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- Format: ```event TASK /at TIME```"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- Example of usage: ```event project meeting /at 2020-02-12```"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- Expected outcome:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "katelo731"
        },
        "content": "```"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "katelo731"
        },
        "content": "╔═══════════════════════════════════════════════════════════╗"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "katelo731"
        },
        "content": "║               Got it. I\u0027ve added this task:               ║"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "katelo731"
        },
        "content": "║        2. [E] [x] project meeting (at: Feb 12 2020)       ║"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "katelo731"
        },
        "content": "║              Now you have 2 tasks in the list.            ║"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "katelo731"
        },
        "content": "╚═══════════════════════════════════════════════════════════╝"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "katelo731"
        },
        "content": "What can I do for you? Type \u0027bye\u0027 to exit."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "katelo731"
        },
        "content": "```"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "katelo731"
        },
        "content": "### Deadline"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- Format: ```deadline TASK /by TIME```"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- Example of usage: ```deadline return book /by Mon```"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- Expected outcome:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "katelo731"
        },
        "content": "```"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "katelo731"
        },
        "content": "╔═══════════════════════════════════════════════════════════╗"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "katelo731"
        },
        "content": "║               Got it. I\u0027ve added this task:               ║"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "katelo731"
        },
        "content": "║              3. [D] [x] return book (by: Mon)             ║"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "katelo731"
        },
        "content": "║              Now you have 3 tasks in the list.            ║"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "katelo731"
        },
        "content": "╚═══════════════════════════════════════════════════════════╝"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "katelo731"
        },
        "content": "What can I do for you? Type \u0027bye\u0027 to exit."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "katelo731"
        },
        "content": "```"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "katelo731"
        },
        "content": "### Mark As Done"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- Format: ```done TASK_NUMBER```"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- Example of usage: ```done 3```"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- Expected outcome:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "katelo731"
        },
        "content": "```"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "katelo731"
        },
        "content": "╔═══════════════════════════════════════════════════════════╗"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "katelo731"
        },
        "content": "║           Nice! I\u0027ve marked this task as done:            ║"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "katelo731"
        },
        "content": "║              3. [D] [v] return book (by: Mon)             ║"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "katelo731"
        },
        "content": "╚═══════════════════════════════════════════════════════════╝"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "katelo731"
        },
        "content": "What can I do for you? Type \u0027bye\u0027 to exit."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "katelo731"
        },
        "content": "```"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "katelo731"
        },
        "content": "### Delete Tasks"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- Format: ```delete TASK_NUMBER```"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- Example of usage: ```delete 3```"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- Expected outcome:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "katelo731"
        },
        "content": "```"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "katelo731"
        },
        "content": "╔═══════════════════════════════════════════════════════════╗"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "katelo731"
        },
        "content": "║              Noted. I\u0027ve removed this task:               ║"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "katelo731"
        },
        "content": "║              3. [D] [v] return book (by: Mon)             ║"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "katelo731"
        },
        "content": "║              Now you have 2 tasks in the list.            ║"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "katelo731"
        },
        "content": "╚═══════════════════════════════════════════════════════════╝"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "katelo731"
        },
        "content": "What can I do for you? Type \u0027bye\u0027 to exit."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "katelo731"
        },
        "content": "```"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "katelo731"
        },
        "content": "### List"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- Format: ```list```"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- Expected outcome:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "katelo731"
        },
        "content": "```"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "katelo731"
        },
        "content": "╔═══════════════════════════════════════════════════════════╗"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "katelo731"
        },
        "content": "║              Here are the tasks in your list:             ║"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "katelo731"
        },
        "content": "║                    1. [T] [x] read book                   ║"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "katelo731"
        },
        "content": "║        2. [E] [x] project meeting (at: Feb 12 2020)       ║"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "katelo731"
        },
        "content": "╚═══════════════════════════════════════════════════════════╝"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "katelo731"
        },
        "content": "What can I do for you? Type \u0027bye\u0027 to exit."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "katelo731"
        },
        "content": "```"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "katelo731"
        },
        "content": "### Find Tasks"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- Format: ```find KEYWORD```"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- Example of usage: ```find book```"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "katelo731"
        },
        "content": "- Expected outcome:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "katelo731"
        },
        "content": "```"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "katelo731"
        },
        "content": "╔═══════════════════════════════════════════════════════════╗"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "katelo731"
        },
        "content": "║         Here are the matching tasks in your list:         ║"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "katelo731"
        },
        "content": "║                    1. [T] [x] read book                   ║"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "katelo731"
        },
        "content": "╚═══════════════════════════════════════════════════════════╝"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "katelo731"
        },
        "content": "What can I do for you? Type \u0027bye\u0027 to exit."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "katelo731"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "katelo731": 126,
      "-": 17
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import org.jetbrains.annotations.NotNull;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import duke.exception.FindDukeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "katelo731"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "katelo731"
        },
        "content": " * Duke application."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "katelo731"
        },
        "content": " * Duke class includes user interface and some functions to be manipulated."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "katelo731"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    private static String HEADER_LINE \u003d \"        ╔═══════════════════════════════════════════════════════════╗\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    private static String BOTTOM_LINE \u003d \"        ╚═══════════════════════════════════════════════════════════╝\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public static final String FILE_PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    private static final int charLengthToSkip \u003d 5;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    /** Let the statement be printed in center. **/"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public static void printInCenter (@NotNull String str) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        int left \u003d (60 - str.length()) / 2;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        int right \u003d 60 - left - str.length();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        String repeatedChar \u003d \" \";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        String buff \u003d \"\\t║\" + repeatedChar.repeat(Math.max(0, left)) +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                str + repeatedChar.repeat(Math.max(0, right - 1)) + \"║\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println(buff);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    /** Show a ASCII code message to user. **/"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public static void greet () {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println(HEADER_LINE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\"  _   _    _   _ U _____ u             \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\" |\u0027| |\u0027|U |\\\"|u| |\\\\| ___\\\"|/    ___      \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\"/| |_| |\\\\\\\\| |\\\\| | |  _|\\\"     |_\\\"_|     \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\"U|  _  |u | |_| | | |___      | |      \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\" |_| |_| \u003c\u003c\\\\___/  |_____|   U/| |\\\\u    \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\" //   \\\\\\\\(__) )(   \u003c\u003c   \u003e\u003e.-,_|___|_,-. \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\"(_\\\") (\\\"_)   (__) (__) (__)\\\\_)-\u0027 \u0027-(_/  \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\"\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\"Hello! I\u0027m your chatbot - Huei.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println(BOTTOM_LINE);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println(\"        What can I do for you? Type \u0027bye\u0027 to exit.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    /** Find related task by a given keyword. **/"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public static void find (@NotNull String cmd) throws DukeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        int startPosition \u003d cmd.indexOf(\" \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        String cmdFind \u003d cmd.substring(startPosition + 1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        boolean isEmptyKeyword \u003d cmdFind.length()\u003d\u003d0;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        if(isEmptyKeyword){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            throw new DukeException(\"Please enter a keyword.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        int taskID \u003d 0;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        for (Task t: tasks) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            if (t.toString().contains(cmdFind)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                boolean isFirstOne \u003d (taskID \u003d\u003d 0);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                if (isFirstOne) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                    System.out.println(HEADER_LINE);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                    printInCenter(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                taskID++;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                printInCenter(t.toString());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        boolean isNotFound \u003d taskID \u003d\u003d 0;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        if (isNotFound) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            throw new DukeException(\"Not found this keyword.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            System.out.println(BOTTOM_LINE);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    /** Delete the task by given a task number. **/"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public static void delete (int taskNumber) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        Task task \u003d tasks.get(taskNumber);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        tasks.remove(task);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        Iterator itr \u003d tasks.iterator();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        while (itr.hasNext()) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            Task t \u003d (Task)itr.next();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            t.taskID \u003d counter;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println(HEADER_LINE);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(task.toString());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println(BOTTOM_LINE);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println(\"        What can I do for you? Type \u0027bye\u0027 to exit.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    /** Print a task that be added into task list. **/"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    private static void printTask (@NotNull Task t) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println(HEADER_LINE);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(t.toString());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println(BOTTOM_LINE);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println(\"        What can I do for you? Type \u0027bye\u0027 to exit.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    /** Deal with a todo command and add it to the list. **/"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public static void todo (String cmd) throws DukeException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        FindDukeException findTodoException \u003d new FindDukeException(cmd);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        findTodoException.toDoException();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        int startPosition \u003d cmd.indexOf(\" \");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        String cmdTodo \u003d cmd.substring(startPosition + 1);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        Task todo \u003d new Todo(tasks.size(), cmdTodo, false);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        tasks.add(todo);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printTask(todo);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    /** Deal with an event command and add it to the list. **/"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public static void event (String cmd) throws DukeException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        FindDukeException findEventException \u003d new FindDukeException(cmd);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        findEventException.eventException();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        int startPosition \u003d cmd.indexOf(\" \");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        int timePosition \u003d cmd.indexOf(\" /at \");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        String cmdEvent \u003d cmd.substring(startPosition + 1, timePosition);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        String cmdTime \u003d cmd.substring(timePosition + charLengthToSkip);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        Task event \u003d new Event(tasks.size(), cmdEvent, false, cmdTime);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        tasks.add(event);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printTask(event);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    /** Deal with a deadline command and add it to the list. **/"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public static void deadline (String cmd) throws DukeException {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        FindDukeException findDeadlineException \u003d new FindDukeException(cmd);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        findDeadlineException.deadlineException();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        int startPosition \u003d cmd.indexOf(\" \");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        int timePosition \u003d cmd.indexOf(\" /by \");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        String cmdDeadline \u003d cmd.substring(startPosition + 1, timePosition);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        String cmdTime \u003d cmd.substring(timePosition + charLengthToSkip);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        Task deadline \u003d new Deadline(tasks.size(), cmdDeadline, false, cmdTime);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        tasks.add(deadline);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printTask(deadline);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    /** Mark a task as done. **/"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public static void done (int taskNumber) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        tasks.get(taskNumber).setStatus();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println(HEADER_LINE);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(tasks.get(taskNumber).toString());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println(BOTTOM_LINE);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println(\"        What can I do for you? Type \u0027bye\u0027 to exit.\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    /** List all tasks in the task list. **/"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public static void list () {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println(HEADER_LINE);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        for (Task t: tasks){"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            if (t \u003d\u003d null){"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            printInCenter(t.toString());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println(BOTTOM_LINE);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println(\"        What can I do for you? Type \u0027bye\u0027 to exit.\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    /** Save each task into a file. **/"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public static void save () {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            for (Task ignored : tasks) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                writeToFile();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            System.out.println(HEADER_LINE);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            printInCenter(\"Error occurred: \" + e.getMessage());"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            System.out.println(BOTTOM_LINE);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    /** Called by save() function and do some implementation.**/"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    private static void writeToFile() throws IOException {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        FileWriter fw \u003d new FileWriter(Duke.FILE_PATH);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            fw.write(task.toString() + System.lineSeparator());"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    /** Check whether the file exists.**/"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public static void load() {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        File duke \u003d new File(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        if (!duke.exists()) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                duke.getParentFile().mkdir();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                duke.createNewFile();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            loadFile();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            System.out.println(HEADER_LINE);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            printInCenter(\"File not found.\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            System.out.println(BOTTOM_LINE);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    /** Load the file into Duke.**/"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public static void loadFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        File file \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            int indexOfCommand \u003d 3;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            String cmd \u003d scanner.nextLine().substring(indexOfCommand)"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                    .replace(\"(\",\"/\")"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                    .replace(\")\",\"\");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            addLoadedTask(cmd, tasks);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    /** Add a task in the file into Duke.**/"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    private static void addLoadedTask (@NotNull String cmd, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        String[] words \u003d cmd.split(\" \");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        String taskType \u003d words[0];"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        String taskStatus \u003d words[1];"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        int indexOfCommand \u003d 8;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        int indexOfTimePosition \u003d 6;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        String cmdTask \u003d cmd.substring(indexOfCommand);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        boolean isToDo \u003d taskType.equals(\"[T]\");"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        boolean isDeadline \u003d taskType.equals(\"[D]\");"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        boolean isEvent \u003d taskType.equals(\"[E]\");"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        boolean isDone \u003d taskStatus.equals(\"[v]\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        FindDukeException findDukeException \u003d new FindDukeException(cmd);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            if (isToDo) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                Task todo \u003d new Todo(tasks.size(), cmdTask, isDone);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                tasks.add(todo);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            } else if (isEvent) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                int timePosition \u003d cmdTask.indexOf(\" /at: \");"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                String cmdEvent \u003d cmdTask.substring(0, timePosition);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                String cmdTime \u003d cmdTask.substring(timePosition + indexOfTimePosition);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                Task event \u003d new Event(tasks.size(), cmdEvent, isDone, cmdTime);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                tasks.add(event);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            } else if (isDeadline) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                int timePosition \u003d cmdTask.indexOf(\" /by: \");"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                String cmdDeadline \u003d cmdTask.substring(0, timePosition);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                String cmdTime \u003d cmdTask.substring(timePosition + indexOfTimePosition);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                Task deadline \u003d new Deadline(tasks.size(), cmdDeadline, isDone, cmdTime);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                tasks.add(deadline);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                findDukeException.undefinedTypeException();"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        } catch (DukeException dukeException) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            System.out.println(HEADER_LINE);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            printInCenter(dukeException.getMessage());"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            System.out.println(BOTTOM_LINE);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    /** Exit smoothly from Duke.**/"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public static void exit () {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println(HEADER_LINE);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        printInCenter(\"Bye! See you next time. :)\");"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.out.println(BOTTOM_LINE);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    /** Driver function to Duke application. **/"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public static void main (String[] args) throws DukeException {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        int spacePosition;"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        int taskNumber;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        load();"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        // read command-line input"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        String cmd \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        while (!cmd.equals(\"bye\")) {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            String[] cmdSplit \u003d cmd.split(\" \");"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            switch (cmdSplit[0]) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                list();"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                find(cmd);"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                spacePosition \u003d cmd.indexOf(\" \");"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                taskNumber \u003d Integer.parseInt(cmd.substring(spacePosition + 1)) - 1;"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                delete(taskNumber);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                save();"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                    todo(cmd);"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                } catch (DukeException dukeException) {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                    System.out.println(HEADER_LINE);"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                    printInCenter(dukeException.getMessage());"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                    System.out.println(BOTTOM_LINE);"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                save();"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                    event(cmd);"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                } catch (DukeException dukeException) {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                    System.out.println(HEADER_LINE);"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                    printInCenter(dukeException.getMessage());"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                    System.out.println(BOTTOM_LINE);"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                save();"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                    deadline(cmd);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                } catch (DukeException dukeException) {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                    System.out.println(HEADER_LINE);"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                    printInCenter(dukeException.getMessage());"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                    System.out.println(BOTTOM_LINE);"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                save();"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                spacePosition \u003d cmd.indexOf(\" \");"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                taskNumber \u003d Integer.parseInt(cmd.substring(spacePosition + 1)) - 1;"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                done(taskNumber);"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                save();"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                    FindDukeException findDukeException \u003d new FindDukeException(cmd);"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                    findDukeException.undefinedTypeException();"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                } catch (DukeException dukeException) {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                    System.out.println(HEADER_LINE);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                    printInCenter(dukeException.getMessage());"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                    System.out.println(BOTTOM_LINE);"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            }"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            cmd \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        }"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "katelo731": 367,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "katelo731"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "katelo731"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "katelo731"
        },
        "content": " * Detect exceptions in Duke application."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "katelo731"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "katelo731"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public DukeException () {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        super ();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public DukeException (String message) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        super (message);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "katelo731"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "katelo731": 18
    }
  },
  {
    "path": "src/main/java/duke/exception/FindDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "katelo731"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import org.jetbrains.annotations.NotNull;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "katelo731"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "katelo731"
        },
        "content": " * Find exceptions when Duke is running."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "katelo731"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "katelo731"
        },
        "content": "public class FindDukeException extends Throwable {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    private String cmd;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    private String[] words;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    private boolean isWrongLength;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public FindDukeException (@NotNull String cmd) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        this.cmd \u003d cmd;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        this.words \u003d cmd.split(\" \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        this.isWrongLength \u003d words.length \u003c\u003d 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     * Detect exception when todo command be processed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     * @throws DukeException if todo\u0027s task is missing."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public void toDoException () throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        if (isWrongLength) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     * Detect exception when deadline command be processed."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     * @throws DukeException if deadline\u0027s task or time is missing."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public void deadlineException () throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        boolean isMissingTime \u003d (!cmd.contains(\"/by\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        if (isWrongLength) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        } else if (isMissingTime) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            throw new DukeException(\"OOPS!!! You forget to fill in a specific date/time.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     * Detect exception when event command be processed."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     * @throws DukeException if event\u0027s task or time is missing."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public void eventException () throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        boolean isMissingTime \u003d (!cmd.contains(\"/at\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        if (isWrongLength) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        } else if (isMissingTime) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            throw new DukeException(\"OOPS!!! You forget to fill in a specific date/time.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     * Detect exception when command type can\u0027t be defined."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public void undefinedTypeException () throws DukeException{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means..\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "katelo731"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "katelo731": 62
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "katelo731"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "katelo731"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "katelo731"
        },
        "content": " * Structure for a deadline task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "katelo731"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "katelo731"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    private boolean isStandardTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public Deadline (int taskID, String description, boolean isDone, String time) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        super (taskID, description, isDone);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        isStandardTime \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            this.date \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            isStandardTime \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public String getTaskType () {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public String toString () {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        String outputTime \u003d isStandardTime? date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) : time;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        return (super.taskID + 1) + \". [D] \" + super.getStatusIcon() + \" \" + super.description"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                + \" (by: \" + outputTime + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "katelo731"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "katelo731": 37
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "katelo731"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "katelo731"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "katelo731"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "katelo731"
        },
        "content": " * Structure for an event task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "katelo731"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "katelo731"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    private boolean isStandardTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public Event (int taskID, String description, boolean isDone, String time) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        super (taskID, description, isDone);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        isStandardTime \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            this.date \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "katelo731"
        },
        "content": "            isStandardTime \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public String getTaskType () {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        return \"[E]\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public String toString () {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        String outputTime \u003d isStandardTime? date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) : time;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        return (super.taskID + 1) + \". [E] \" + super.getStatusIcon() + \" \" + super.description"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "katelo731"
        },
        "content": "                + \" (at: \" + outputTime + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "katelo731"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "katelo731": 37
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "katelo731"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "katelo731"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "katelo731"
        },
        "content": " * Structure for a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "katelo731"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "katelo731"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public int taskID;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public Task (int taskID, String description, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        this.taskID \u003d taskID;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    /** Mark the task as done. **/"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public void setStatus () {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        this.isDone \u003d true; // mark as done"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    /**Gets the status icon of task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     * @return status icon."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "katelo731"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public String getStatusIcon () {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        return (isDone ? \"[v]\" : \"[x]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public String getTaskType () {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        return \"[]\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public String toString () {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        return (taskID + 1) + \". \" + getStatusIcon() + \" \" + description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "katelo731"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "katelo731": 38
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "katelo731"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "katelo731"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "katelo731"
        },
        "content": " * Structure for a todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "katelo731"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "katelo731"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public Todo (int taskID, String description, boolean isDone) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        super (taskID, description, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public String getTaskType () {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "katelo731"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    public String toString () {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "katelo731"
        },
        "content": "        return (super.taskID + 1) + \". [T] \" + super.getStatusIcon() + \" \" + super.description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "katelo731"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "katelo731"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "katelo731": 20
    }
  }
]

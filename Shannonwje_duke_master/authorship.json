[
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "T | 0 | say hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "D | 1 | say hello twice | today"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "E | 0 | say hello thrice | home"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "D | 0 | do work | Sat and Sun"
      }
    ],
    "authorContributionMap": {
      "Shannonwje": 4
    }
  },
  {
    "path": "src/main/java/duke/Constants.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": " * contains all the common constants used throughout program"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "public class Constants {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static final String STANDARD_SEPARATOR \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static final String SHANNON \u003d \"Shannon\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static final String ioErrorMessage \u003d \" OOPS!! There is an error in input or output\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static final String unknownCommandMessage \u003d \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static final String errMissingParam \u003d \"OOPS!!! The description is incomplete.\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Shannonwje": 12
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static String inputLine \u003d null; //most updated line of input"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static boolean isEnd \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        run(\"duke.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    private static void run(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        Ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            Storage.addExistingList(filePath); // Reads offline list into current list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            System.out.println(Constants.ioErrorMessage);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        runCommandLoop();  // Reads in the first command from the user"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        Storage.saveListOffline(filePath); // save current list to be offline"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        Ui.printExitMessage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * Goes into loop"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static void runCommandLoop() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        while (!isEnd) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "                inputLine \u003d Ui.readInput();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "                Parser.determineCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "                Ui.printErrMsg(Constants.errMissingParam);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "                Ui.printErrMsg(Constants.unknownCommandMessage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Shannonwje": 45,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Shannonwje": 4
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * reads inputLine and determines which command"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * it is then passes on the input Line to the"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * correct command to carry out."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * If command is \"bye\" then will prepare to send out of program"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * @throws DukeException if command is unreadable"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static void determineCommand() throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        if (Duke.inputLine.equals(\"bye\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            Duke.isEnd \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        } else if (Duke.inputLine.substring(0, 4).equals(\"list\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            Ui.printsOutTheList(); // prints out the list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        } else if (Duke.inputLine.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            TaskList.indicateTaskAsDone(); // marks task in the stated index as done"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        } else if (Duke.inputLine.substring(0, 6).equals(\"remove\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            TaskList.removeTaskFromList(); // removes task in the stated index"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            TaskList.addInNewTask();// adds a new task into the list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Shannonwje": 32
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": " * deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": " * Happens before and after the program;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": " * loads from file before user starts entering their commands,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": " * then saves tasks into file when user exits from program"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * saves the current list offline into duke.txt file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static void saveListOffline(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            if (!f.exists()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            writeToFile(filePath); // overwrite old contents"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            for (int i \u003d 0; i \u003c TaskList.sizeOfList; i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "                String textToAppend \u003d getTextToAppend(i);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "                appendToFile(filePath, textToAppend);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            System.out.println(Constants.ioErrorMessage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * gets task from current list and formats it to"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * be a line of text to add into the offline file"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * @param i index of task to add"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * @return the line of task to add offline"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static String getTextToAppend(int i) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        String currentListLine \u003d TaskList.listOfTasks.get(i).toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        String typeOfTask \u003d currentListLine.substring(1, 2);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        String markedOrUnmarked \u003d TaskList.listOfTasks.get(i).getStatusIcon();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        String description \u003d TaskList.listOfTasks.get(i).getDescription();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        String extra \u003d TaskList.listOfTasks.get(i).getExtra();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        String textToAppend;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        if (extra \u003d\u003d null) { // if it does not have a /by or /at (it is a todo)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            textToAppend \u003d typeOfTask + \" | \" + markedOrUnmarked + \" | \" + description;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        } else { // it is a deadline or event"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            textToAppend \u003d typeOfTask + \" | \" + markedOrUnmarked + \" | \" + description + \" | \" + extra;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        return textToAppend + System.lineSeparator();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * appends the given text into the file duke.txt"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * @param textToAppend the text to be added into file"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * @throws IOException if file duke.txt is not found"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static void appendToFile(String filePath, String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        fw.write(textToAppend);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * overwrites the file duke.txt each time there are changes to the list"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * @throws IOException if file duke.txt is not found"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static void writeToFile(String filePath) throws IOException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        fw.write(\"\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * Adds existing list in the file to system so"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * that changes can be made to existing list"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * @throws IOException if error in reading from file"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static void addExistingList(String filePath) throws IOException {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        if (!f.exists()) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            f.createNewFile();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        } else { // if file does exist, add into current list"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            Scanner scan \u003d new Scanner(f);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            while (scan.hasNext()) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "                String lineInList \u003d scan.nextLine();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "                addExistingTask(lineInList);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * Add current task in existing list into list"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * @param lineInList task in text formatted inside offline list"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static void addExistingTask(String lineInList) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        String[] itemInLine \u003d lineInList.split(\" \\\\| \");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        if (itemInLine[0].contains(\"T\")) { // add task as todo into list"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            Todo newTodo \u003d new Todo(itemInLine[2]);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            TaskList.listOfTasks.add(newTodo);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            if (itemInLine[1].contains(\"1\")) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "                TaskList.listOfTasks.get(TaskList.sizeOfList).markAsDone();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            TaskList.sizeOfList++;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        } else if (itemInLine[0].contains(\"D\")) { // add task as deadline into list"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            Deadline newDeadline \u003d new Deadline(itemInLine[2], itemInLine[3]);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            TaskList.listOfTasks.add(newDeadline);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            if (itemInLine[1].contains(\"1\")) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "                TaskList.listOfTasks.get(TaskList.sizeOfList).markAsDone();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            TaskList.sizeOfList++;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        } else { // add task as event into list"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            Event newEvent \u003d new Event(itemInLine[2], itemInLine[3]);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            TaskList.listOfTasks.add(newEvent);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            if (itemInLine[1].contains(\"1\")) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "                TaskList.listOfTasks.get(TaskList.sizeOfList).markAsDone();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            TaskList.sizeOfList++;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Shannonwje": 145
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": " * contains the task list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": " * Has to do with the addition and deletion of the current list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e(); // array of tasks that is \u003c\u003d100"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static int sizeOfList \u003d 0; // number of items in the list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * removes the task in the given index from the list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * @throws DukeException if the index is not given"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static void removeTaskFromList() throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        String[] commandArray \u003d Duke.inputLine.split(\" \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        if (commandArray.length \u003c 2) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        if (commandArray.length \u003e 2) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        int indexToRemove \u003d Integer.parseInt(commandArray[1]) - 1; // obtain index of task to remove"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        if (indexToRemove \u003e\u003d sizeOfList) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        Task taskToDelete \u003d listOfTasks.get(indexToRemove);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        listOfTasks.remove(taskToDelete);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        sizeOfList--;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        Ui.printWhenCommand(taskToDelete,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "                \" Noted. I\u0027ve removed this task:\", \"   \", \" in the list.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * Differentiates task and adds into array"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static void addInNewTask() throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        String inputCommand \u003d Duke.inputLine.substring(0, 4);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        // creates new task"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        if (inputCommand.contains(\"todo\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            if (Duke.inputLine.equals(\"todo\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "                throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            addToDo();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        } else if (inputCommand.contains(\"dead\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            if (Duke.inputLine.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "                throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            addDeadline();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        } else if (inputCommand.contains(\"even\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            if (Duke.inputLine.equals(\"event\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "                throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            addEvent();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        // informs user that task has been added to list"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        Ui.printWhenCommand(listOfTasks.get(sizeOfList - 1),"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "                \" Got it. I\u0027ve added this task:\", \"  \", \" tasks in the list.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * Adds in new Event to the array"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static void addEvent() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        int indexOfEvent \u003d Duke.inputLine.indexOf(\"/at\") + 4;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        int descriptionStart \u003d 6;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        int descriptionEnd \u003d Duke.inputLine.indexOf(\" /at\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        description \u003d Duke.inputLine.substring(descriptionStart, descriptionEnd);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        String at \u003d Duke.inputLine.substring(indexOfEvent);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        Event newEvent \u003d new Event(description, at);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        listOfTasks.add(newEvent);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        sizeOfList++;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * Adds in new Deadline to the array"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static void addDeadline() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        int indexOfDeadline \u003d Duke.inputLine.indexOf(\"/by\") + 4;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        int descriptionStart \u003d 9;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        int descriptionEnd \u003d Duke.inputLine.indexOf(\" /by\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        description \u003d Duke.inputLine.substring(descriptionStart, descriptionEnd);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        String by \u003d Duke.inputLine.substring(indexOfDeadline);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        listOfTasks.add(newDeadline);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        sizeOfList++;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * Adds in new Todo to array"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static void addToDo() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        String description \u003d Duke.inputLine.substring(5);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        Todo newToDo \u003d new Todo(description);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        listOfTasks.add(newToDo);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        sizeOfList++;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * Prints acknowledgment that the specified task is done,"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * sets the task in the array to be done"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     *"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * @throws DukeException if index is not given"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static void indicateTaskAsDone() throws DukeException {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        String[] commandArray \u003d Duke.inputLine.split(\" \");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        if (commandArray.length \u003c 2) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        if (commandArray.length \u003e 2) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        int index \u003d Integer.parseInt(commandArray[1]) - 1; // obtain index to set as done"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        if (index \u003e\u003d sizeOfList) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        listOfTasks.get(index).markAsDone(); // mark as done"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        Ui.printWhenMarked(index);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Shannonwje": 146
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": " * deals with interactions with the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": " * Handles the input from the user and also the"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": " * output that the user sees"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * Prints the exit message"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static void printExitMessage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        System.out.println(Constants.STANDARD_SEPARATOR);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        System.out.println(\" Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        System.out.println(Constants.STANDARD_SEPARATOR);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * Prints out the entire list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static void printsOutTheList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        System.out.println(Constants.STANDARD_SEPARATOR);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        System.out.println(\" Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        for (int i \u003d 0; i \u003c TaskList.sizeOfList; i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            int k \u003d i + 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            System.out.println(\" \" + k + \".\" + TaskList.listOfTasks.get(i).toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        System.out.println(Constants.STANDARD_SEPARATOR);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * Prints out the welcome message"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static void printWelcomeMessage() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        System.out.println(\"Hello from \" + Constants.SHANNON);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        System.out.println(Constants.STANDARD_SEPARATOR);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        System.out.println(\" Hello! I\u0027m \" + Constants.SHANNON"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "                + System.lineSeparator() + \" What can I do for you?\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        System.out.println(Constants.STANDARD_SEPARATOR);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * Prints the required when encounters tasks are"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * added or removed to inform user command carried out"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * @param currTask task that is added or removed"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * @param s        either \"removed\" or \"added\","
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     *                 depending on command"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * @param s2       string of double spacing"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * @param s3       \"task in the list\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static void printWhenCommand(Task currTask, String s, String s2, String s3) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        System.out.println(Constants.STANDARD_SEPARATOR);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        System.out.println(s2 + currTask.toString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        System.out.println(\" Now you have \" + TaskList.sizeOfList + s3);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        System.out.println(Constants.STANDARD_SEPARATOR);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * Prints out the required to inform user the task that has been marked"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * @param index index of the task marked"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static void printWhenMarked(int index) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        System.out.println(Constants.STANDARD_SEPARATOR);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        System.out.println(\" Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        System.out.println(\"   \" + TaskList.listOfTasks.get(index).toString());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        System.out.println(Constants.STANDARD_SEPARATOR);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * reads the command from the user"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * @return what is read from user"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static String readInput() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * prints the error message depending on the kind of error it is"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * @param errorMsg the error Msg to print"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static void printErrMsg(String errorMsg) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        System.out.println(Constants.STANDARD_SEPARATOR);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        System.out.println(errorMsg);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        System.out.println(Constants.STANDARD_SEPARATOR);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Shannonwje": 104
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * Returns the task created with the specified"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * @param description the description of the task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public String getExtra() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Shannonwje": 28
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * Returns the task created with the specified"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * @param description the description of the task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public String getExtra() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Shannonwje": 28
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static final String TICK \u003d \"1\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public static final String CROSS \u003d \"0\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * Returns the task created with the specified"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * @param description the description of the task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * Returns the tick or the cross icon of the specified tsk"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * If the task\u0027s isDone is false, a cross is returned, else its a tick"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * @return either tick or cross"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            return TICK;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "            return CROSS;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public abstract String getExtra();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * Sets the specified task\u0027s isDone to be true"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Shannonwje": 57
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * Returns the task created with the specified"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * description."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     * @param description the description of the task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public String getExtra() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Shannonwje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Shannonwje": 23
    }
  }
]

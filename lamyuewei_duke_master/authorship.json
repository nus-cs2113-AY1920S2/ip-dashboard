[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "lamyuewei": 2,
      "-": 37
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "T | 0 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "D | 0 | return book | 2020-10-06 19:30"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "E | 1 | project meeting | 2021-05-29 03:20"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "T | 0 | join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "E | 0 | exams | 2020-05-03 16:00"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "D | 1 | do homework | 2020-04-25 11:45"
      }
    ],
    "authorContributionMap": {
      "lamyuewei": 6
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "# User Guide for Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "Duke is your personal chatbot who is capable of managing your task."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "Some of the task that Duke can manage are *Todo*, *Deadline* and *Event*."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "* **Todo:** A Task with description of what needs to be done."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "* **Deadline:** A Task with description of what needs to be done along with the due date and time."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "* **Event:** A Task with description of what needs to be done along with the date and time that the task will occur."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "Below are the list of command that you can key in to interact with Duke."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "1. Add Task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    1. Input: `todo` j  "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    Example: todo CS2113 Homework  "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    Command: Add a *Todo* Task with String description j."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    1. Input: `deadline` j /by d  "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    Example: deadline CS2113 Homework /by 2020-04-15 16:00  "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    Command: Add a *Deadline* Task with String description j, followed by \"/by\", then the corresponding due date in YYYY-MM-DD format and the time in HH:MM format."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    1. Input: `event` j /at d  "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    Example: deadline CS2113 Homework /at 2020-04-15 16:00  "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    Command: Add a *Event* Task with String description j, followed by \"/at\", then the corresponding date in YYYY-MM-DD format and the time in HH:MM format."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "1. List Task  "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "Input: `list`  "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "Example: list  "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "Command: List out all the stored task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "1. Complete Task  "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "Input: `done` i  "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "Example: done 3  "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "Command: Mark Task i as done, where i is the corresponding Task number."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "1. Delete Task  "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "Input: `delete` i  "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "Example: delete 3  "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "Command: Delete Task i, where i is the corresponding Task number."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "1. Find Task  "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "Input: `find` j  "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "Example: find Homework  "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "Command: Find all the task with description that contains the word/phrase j."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "1. Help  "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "Input: `help`  "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "Command: List out all the commands"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "1. Exit  "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "Input: `bye`  "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "Command: Terminate the program and automatically help you store the Task into your hard disk with directory ../data/Duke.txt  "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "**Note:** Duke will help you take care of creating a folder and txt file if one does not already exist."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "## Summary of Commands"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "| Index | Input | Command |  "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "| ----- | ----- | --------------- |  "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "| 01 | todo description | Add a todo task with description |  "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "| 02 | dateline description /by YYYY-MM-DD HH:MM | Add a deadline task description and due date |  "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "| 03 | event description /at YYYY-MM-DD HH:MM | Add a event task description and due date |  "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "| 04 | list | List out all the stored task |  "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "| 05 | done index | Mark task index as done |  "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "| 06 | delete index | Delete task index |  "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "| 07 | find description | Find all task containing the description |  "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "| 08 | help | List out all the commands |  "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "| 09 | bye | Terminate the program and store all Task into hard disk |  "
      }
    ],
    "authorContributionMap": {
      "lamyuewei": 58,
      "-": 9
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "import duke.exception.DukeArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "import duke.exception.DukeIndexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "import duke.exception.DukeNullException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * Duke is a chatbot that manages Task for user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * @author Lam Yue Wei"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * @version CS2113 AY19/20 Sem 2 Duke"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public static final String FILE_PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * Main method for Duke."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param args String[] args in main."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        Storage storage \u003d new Storage(FILE_PATH);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d storage.load();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        int taskCount \u003d tasks.size();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        boolean isBye \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        ui.greetUser();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        while (!isBye) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            String string \u003d sc.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            String[] stringSplit \u003d string.split(\" \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                switch (stringSplit[0]) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                    listCommand(tasks, stringSplit, taskCount);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                    doneCommand(tasks, stringSplit, taskCount);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                    isBye \u003d byeCommand(stringSplit, taskCount, tasks);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                    taskCount \u003d todoCommand(tasks, stringSplit, taskCount);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                    taskCount \u003d deadlineCommand(tasks, taskCount, string);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                    taskCount \u003d eventCommand(tasks, taskCount, string);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                    taskCount \u003d deleteCommand(tasks, stringSplit, taskCount);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                    findCommand(tasks, taskCount, string);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                case \"help\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                    ui.helpCommand();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                    throw new DukeNullException(\"     :( OOPS!!! Command does not exist.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            } catch (DukeArgumentException | DukeIndexException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            } catch (DukeNullException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                System.out.println(\"     To view the list of commands available use the command: help\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                System.out.println(\"     :( OOPS!!! \" + e.getMessage().substring(18) + \" is not number!\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                System.out.println(\"Folder does not exist yet\" + e.getMessage());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * Find all Task with description that matches a key word or phrase."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param tasks ArrayList containing all the Task."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param taskCount Total number of Task stored."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param string User input."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @throws DukeArgumentException If missing parameter for description."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public static void findCommand(ArrayList\u003cTask\u003e tasks, int taskCount, String string) throws"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            DukeArgumentException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        int deletedTask;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        if (string.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            throw new DukeArgumentException(\"     :( OOPS!!! Missing description for find.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        String description \u003d string.substring(5);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        boolean containDescription \u003d false;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        int matchNumber \u003d 1;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        for (int i \u003d 0; i \u003c taskCount; i++) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            if (tasks.get(i).getDescription().contains(description)) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                if (!containDescription) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                    System.out.println(\"     Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                    containDescription \u003d true;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                System.out.println(\"     \" + matchNumber + \".\" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                matchNumber++;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        if (!containDescription) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            System.out.println(\"     There is no matching tasks\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * Open the file directory based on the filePath, add Task for storage into hard disk and close file."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param filePath File directory path."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param taskToAdd Sting containing Task information to store into file."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @throws IOException If input or output operation failed."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public static void writeFileTask(String filePath, String taskToAdd) throws IOException {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        fileWriter.write(taskToAdd);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * Delete a Task given an index."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param tasks ArrayList containing all the Task."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param stringSplit User input that is split by spacing."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param taskCount Total number of Task stored."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @return Total number of Task stored."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @throws DukeArgumentException If missing parameter for index."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @throws DukeIndexException If index provided is out of range."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public static int deleteCommand(ArrayList\u003cTask\u003e tasks, String[] stringSplit, int taskCount) throws"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            DukeArgumentException, DukeIndexException {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        int deletedTask;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        if (stringSplit.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            throw new DukeArgumentException(\"     :( OOPS!!! Missing index for delete.\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        deletedTask \u003d Integer.parseInt(stringSplit[1]) - 1; // Might throw NumberFormatException"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        if (deletedTask \u003e\u003d taskCount | deletedTask \u003c 0) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            throw new DukeIndexException(\"     :( OOPS!!! Invalid index for delete.\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"     Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"       \" + tasks.get(deletedTask));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        tasks.remove(deletedTask);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        taskCount--;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"     Now you have \" + taskCount + \" tasks in the list.\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        return taskCount;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * Add event Task given a description and a time of occurrence."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param tasks ArrayList containing all the Task."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param taskCount Total number of Task stored."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param string User input."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @return Total number of Task stored."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @throws DukeArgumentException If missing parameter for description or date."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public static int eventCommand(ArrayList\u003cTask\u003e tasks, int taskCount, String string) throws"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            DukeArgumentException {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        if (string.length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            throw new DukeArgumentException(\"     :( OOPS!!! Missing description for event.\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        if (!string.contains(\"/at\")) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            throw new DukeArgumentException(\"     :( OOPS!!! Missing date for event.\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        String dateTime;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        description \u003d string.substring(0, string.indexOf(\" /at\")).replace(\"event \", \"\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        dateTime \u003d string.substring(string.indexOf(\"/at \")).replace(\"/at \", \"\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        tasks.add(new Event(description, dateTime));"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"       \" + tasks.get(taskCount).toString());"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        taskCount++;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"     Now you have \" + taskCount + \" tasks in the list.\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        return taskCount;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * Add deadline Task given a description and a due date."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param tasks ArrayList containing all the Task."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param taskCount Total number of Task stored."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param string User input."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @return Total number of Task stored."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @throws DukeArgumentException If missing parameter for description or date."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public static int deadlineCommand(ArrayList\u003cTask\u003e tasks, int taskCount, String string) throws"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            DukeArgumentException {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        if (string.length() \u003d\u003d 8) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            throw new DukeArgumentException(\"     :( OOPS!!! Missing description for deadline.\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        if (!string.contains(\"/by\")) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            throw new DukeArgumentException(\"     :( OOPS!!! Missing date for deadline.\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        String dateTime;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        description \u003d string.substring(0, string.indexOf(\" /by\")).replace(\"deadline \", \"\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        dateTime \u003d string.substring(string.indexOf(\"/by \")).replace(\"/by \", \"\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        tasks.add(new Deadline(description, dateTime));"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"       \" + tasks.get(taskCount).toString());"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        taskCount++;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"     Now you have \" + taskCount + \" tasks in the list.\");"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        return taskCount;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * Add todo Task given a description."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param tasks ArrayList containing all the Task."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param stringSplit User input that is split by spacing."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param taskCount Total number of Task stored."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @return Total number of Task stored."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @throws DukeArgumentException If missing parameter for index."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public static int todoCommand(ArrayList\u003cTask\u003e tasks, String[] stringSplit, int taskCount) throws"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            DukeArgumentException {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        if (stringSplit.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            throw new DukeArgumentException(\"     :( OOPS!!! Missing description for todo.\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        description \u003d String.join(\" \", Arrays.copyOfRange(stringSplit, 1, stringSplit.length));"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        tasks.add(new Todo(description));"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"       \" + tasks.get(taskCount).toString());"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        taskCount++;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"     Now you have \" + taskCount + \" tasks in the list.\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        return taskCount;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * Store all the Task into the hard disk and exit the program."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param stringSplit User input that is split by spacing."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param taskCount Total number of Task stored."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param tasks ArrayList containing all the Task."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @return true to indicate to the program to end."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @throws DukeArgumentException If additional parameter is provided."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @throws IOException If input or output operation failed."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public static boolean byeCommand(String[] stringSplit, int taskCount, ArrayList\u003cTask\u003e tasks) throws"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            DukeArgumentException, IOException {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        if (stringSplit.length \u003e 1) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            throw new DukeArgumentException(\"     :( OOPS!!! Description not required for bye.\");"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        Path path \u003d Paths.get(\"data\");"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        if(!Files.exists(path)) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            Files.createDirectory(path);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        String taskToAdd \u003d \"\";"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        for (int i \u003d 0; i \u003c taskCount; i++) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            if ( tasks.get(i) instanceof Todo) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                Todo todo \u003d (Todo) tasks.get(i);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                taskToAdd \u003d taskToAdd + \"T | \" + (todo.getIsDone() ? 1 : 0) + \" | \";"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                taskToAdd \u003d taskToAdd + todo.getDescription();"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            if ( tasks.get(i) instanceof Deadline) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                Deadline deadline \u003d (Deadline) tasks.get(i);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                taskToAdd \u003d taskToAdd + \"D | \" + (deadline.getIsDone() ? 1 : 0) + \" | \";"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                taskToAdd \u003d taskToAdd + deadline.getDescription() + \" | \" + deadline.getDate();"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            if ( tasks.get(i) instanceof Event) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                Event event \u003d (Event) tasks.get(i);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                taskToAdd \u003d taskToAdd + \"E | \" + (event.getIsDone() ? 1 : 0) + \" | \";"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                taskToAdd \u003d taskToAdd + event.getDescription() + \" | \" + event.getDate();"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            taskToAdd +\u003d \"\\n\";"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        writeFileTask(FILE_PATH, taskToAdd);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"    Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * Mark a Task as done."
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param tasks ArrayList containing all the Task."
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param stringSplit User input that is split by spacing."
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param taskCount Total number of Task stored."
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @throws DukeArgumentException If missing parameter for index."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @throws DukeIndexException If index provided is out of range."
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public static void doneCommand(ArrayList\u003cTask\u003e tasks, String[] stringSplit, int taskCount) throws"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            DukeArgumentException, DukeIndexException {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        int completedTask;"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        if (stringSplit.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            throw new DukeArgumentException(\"     :( OOPS!!! Missing index for done.\");"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        completedTask \u003d Integer.parseInt(stringSplit[1]) - 1; // Might throw NumberFormatException"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        if (completedTask \u003e\u003d taskCount || completedTask \u003c 0) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            throw new DukeIndexException(\"     :( OOPS!!! Invalid index for done.\");"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        tasks.get(completedTask).markAsDone();"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"       \" + tasks.get(completedTask).toString());"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * List all the Task stored."
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param tasks ArrayList containing all the Task."
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param stringSplit User input that is split by spacing."
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param taskCount Total number of Task stored."
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @throws DukeArgumentException If additional parameter is provided."
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public static void listCommand(ArrayList\u003cTask\u003e tasks, String[] stringSplit, int taskCount) throws"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            DukeArgumentException {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        if (stringSplit.length \u003e 1) {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            throw new DukeArgumentException(\"     :( OOPS!!! Description not required for list.\");"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        if (taskCount \u003d\u003d 0) {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            System.out.println(\"     There are currently no tasks in your list\");"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            for (int i \u003d 0; i \u003c taskCount; i++) {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                System.out.println(\"     \" + (i + 1) + \".\" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lamyuewei": 333,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * Open file from file directory if any and convert the string into the respective Task at the"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * start of the programs launch."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @return ArrayList of Task stored in the file if it exist."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        ArrayList\u003cTask\u003e taskArray \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        int taskCount \u003d 0;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            File file \u003d new File(filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            Scanner fileScanner \u003d new Scanner(file); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            while (fileScanner.hasNext()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                String[] existingTask \u003d fileScanner.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                if (existingTask[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                    taskArray.add(new Todo(existingTask[2]));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                if (existingTask[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                    taskArray.add(new Deadline(existingTask[2], existingTask[3]));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                if (existingTask[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                    taskArray.add(new Event(existingTask[2], existingTask[3]));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                if (existingTask[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                    taskArray.get(taskCount).markAsDone();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "                taskCount++;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            return taskArray;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "            return taskArray;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lamyuewei": 52
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * Print the Welcome message and call commandList method to List out all the possible command"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * the user can execute."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public void greetUser() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"    Hello! I\u0027m duke.Duke\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        helpCommand();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"    What can I do for you?\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * Print out all the possible command the user can execute."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public void helpCommand() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"    Here is the list of commands that are available:\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"+---------------------------------------------------------------+\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"| Index | Input            | Command                            |\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"|-------+------------------+------------------------------------|\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"| 01    | todo j           | Add a task(j) without dateline     |\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"|-------+------------------+------------------------------------|\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"| 02    | dateline j /by d | Add a task(j) with due date d      |\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"|-------+------------------+------------------------------------|\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"| 03    | event j /at d    | Add a task(j) that start at date d |\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"|-------+------------------+------------------------------------|\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"| 04    | list             | List out all the stored task       |\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"|-------+------------------+------------------------------------|\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"| 05    | done i           | Mark task i as done                |\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"|-------+------------------+------------------------------------|\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"| 06    | delete i         | Delete task(i)                     |\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"|-------+------------------+------------------------------------|\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"| 07    | find j           | Find all task with description j   |\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"|-------+------------------+------------------------------------|\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"| 08    | help             | List out all the commands          |\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"|-------+------------------+------------------------------------|\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"| 09    | bye              | Terminate the program              |\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        System.out.println(\"|---------------------------------------------------------------|\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lamyuewei": 46
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * The DukeArgumentException class is an Exception that is thrown when there are either"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * missing parameter or too many parameter provided by the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * DukeArgumentException class extends from IllegalArgumentException class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * @author Lam Yue Wei"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * @version CS2113 AY19/20 Sem 2 Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "public class DukeArgumentException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * Public constructor for DukeArgumentException."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param message Error message shown to the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public DukeArgumentException(String message) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lamyuewei": 18
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * The DukeIndexException class is an Exception that is thrown when the index provided by"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * the user is out of bound. In such cases, the index provided is either negative or greater"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * than total number of Task stored."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * DukeIndexException class extends from IndexOutOfBoundsException class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * @author Lam Yue Wei"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * @version CS2113 AY19/20 Sem 2 Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "public class DukeIndexException extends IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * Public constructor for DukeIndexException."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param message Error message shown to the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public DukeIndexException(String message) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lamyuewei": 19
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeNullException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * The DukeNullException class is an Exception that is thrown when there is an invalid"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * command provided by the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * DukeNullException class extends from NullPointerException class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * @author Lam Yue Wei"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * @version CS2113 AY19/20 Sem 2 Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "public class DukeNullException extends NullPointerException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * Public constructor for DukeNullException."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param message Error message shown to the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public DukeNullException(String message) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lamyuewei": 18
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * The Deadline class is a Task with specified String description and String dateTime."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * The class stores the date as a LocalDate Object, time as a LocalTime Object and their combined"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * String representation as a String dateTime."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * Deadline class extends from Task class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * @author Lam Yue Wei"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * @version CS2113 AY19/20 Sem 2 Duke"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    String dateTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    LocalDate date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    LocalTime time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * Public constructor for Deadline."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param description Description of the Deadline Task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param dateTime Due date and time of the Deadline Task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public Deadline(String description, String dateTime) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        date \u003d LocalDate.parse(dateTime.split(\" \")[0]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        time \u003d LocalTime.parse(dateTime.split(\" \")[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * Getter method for the date."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @return Due date."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        return this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * Getter method for the time."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @return Due time."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        return this.time.toString();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * Return a String representation of this Deadline."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @return The Deadline\u0027s icon, followed by the Task\u0027s toString, followed by the due date and time."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + getDate() + \", \" + getTime() + \")\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lamyuewei": 55
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * The Event class is a Task with specified description and date of occurrence."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * Event class extends from Task class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * @author Lam Yue Wei"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * @version CS2113 AY19/20 Sem 2 Duke"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    String dateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    LocalDate date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    LocalTime time;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * Public constructor for Event."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param description Description of the Event Task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param dateTime Date of occurrence and time of the Event Task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public Event(String description, String dateTime) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        date \u003d LocalDate.parse(dateTime.split(\" \")[0]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        time \u003d LocalTime.parse(dateTime.split(\" \")[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * Getter method for the date of occurrence."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @return Date of occurrence."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        return this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * Getter method for the time of occurrence."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @return Time of occurrence."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        return this.time.toString();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * Return a String representation of this Event."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @return The Event\u0027s icon, followed by the Task\u0027s toString, followed by the date and time of occurrence."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + getDate() + \", \" + getTime() + \")\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lamyuewei": 54
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * The Task class keeps a record of the description of any Task and whether is is done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * @author Lam Yue Wei"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * @version CS2113 AY19/20 Sem 2 Duke"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * Public constructor for Task and set isDone to false by default."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param description Description of the Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * Getter method for the status of Task\u0027s completion."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @return Y if Task is done and N if Task is not done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        return (getIsDone() ? \"Y\" : \"N\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    // Not immutable version"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * Mark the task as done by setting isDone to true."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * Getter method for description of the Task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @return Description of the Task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * Getter method for isDone."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @return isDone which is true if Task if done and false if Task is not done."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * Return a String representation of this Task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @return The Task\u0027s done status, followed by the description."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lamyuewei": 61
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * The Todo class is a Task with specified description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * Todo class extends from Task class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * @author Lam Yue Wei"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " * @version CS2113 AY19/20 Sem 2 Duke"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * Public constructor for Task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @param description Description of the Task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * Return a String representation of this Todo."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     * @return The Todo\u0027s icon, followed by the Task\u0027s toString."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lamyuewei": 25
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    Hello! I\u0027m duke.Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    Here is the list of commands that are available:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "+---------------------------------------------------------------+"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "| Index | Input            | Command                            |"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "|-------+------------------+------------------------------------|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "| 01    | todo j           | Add a task(j) without dateline     |"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "|-------+------------------+------------------------------------|"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "| 02    | dateline j /by d | Add a task(j) with due date d      |"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "|-------+------------------+------------------------------------|"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "| 03    | event j /at d    | Add a task(j) that start at date d |"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "|-------+------------------+------------------------------------|"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "| 04    | list             | List out all the stored task       |"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "|-------+------------------+------------------------------------|"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "| 05    | done i           | Mark task i as done                |"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "|-------+------------------+------------------------------------|"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "| 06    | delete i         | Delete task(i)                     |"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "|-------+------------------+------------------------------------|"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "| 07    | find j           | Find all task with description j   |"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "|-------+------------------+------------------------------------|"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "| 08    | help             | List out all the commands          |"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "|-------+------------------+------------------------------------|"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "| 09    | bye              | Terminate the program              |"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "|---------------------------------------------------------------|"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    What can I do for you?"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     There are currently no tasks in your list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "       [T][N] read book"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     1.[T][N] read book"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "       [D][N] return book (by: Oct 6 2020, 19:30)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     1.[T][N] read book"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     2.[D][N] return book (by: Oct 6 2020, 19:30)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "       [E][N] project meeting (at: May 29 2021, 03:20)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     1.[T][N] read book"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     2.[D][N] return book (by: Oct 6 2020, 19:30)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     3.[E][N] project meeting (at: May 29 2021, 03:20)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "       [T][Y] read book"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     1.[T][Y] read book"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     2.[D][N] return book (by: Oct 6 2020, 19:30)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     3.[E][N] project meeting (at: May 29 2021, 03:20)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "       [E][Y] project meeting (at: May 29 2021, 03:20)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     1.[T][Y] read book"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     2.[D][N] return book (by: Oct 6 2020, 19:30)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     3.[E][Y] project meeting (at: May 29 2021, 03:20)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "       [T][N] join sports club"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "       [E][N] exams (at: May 3 2020, 16:00)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "       [D][N] do homework (by: Apr 25 2020, 11:45)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     1.[T][Y] read book"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     2.[D][N] return book (by: Oct 6 2020, 19:30)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     3.[E][Y] project meeting (at: May 29 2021, 03:20)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     4.[T][N] join sports club"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     5.[E][N] exams (at: May 3 2020, 16:00)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     6.[D][N] do homework (by: Apr 25 2020, 11:45)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "       [D][Y] do homework (by: Apr 25 2020, 11:45)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     1.[T][Y] read book"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     2.[D][N] return book (by: Oct 6 2020, 19:30)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     3.[E][Y] project meeting (at: May 29 2021, 03:20)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     4.[T][N] join sports club"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     5.[E][N] exams (at: May 3 2020, 16:00)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     6.[D][Y] do homework (by: Apr 25 2020, 11:45)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "       [T][Y] join sports club"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     1.[T][Y] read book"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     2.[D][N] return book (by: Oct 6 2020, 19:30)"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     3.[E][Y] project meeting (at: May 29 2021, 03:20)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     4.[T][Y] join sports club"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     5.[E][N] exams (at: May 3 2020, 16:00)"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     6.[D][Y] do homework (by: Apr 25 2020, 11:45)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "       [D][Y] do homework (by: Apr 25 2020, 11:45)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     1.[T][Y] read book"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     2.[D][N] return book (by: Oct 6 2020, 19:30)"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    Here is the list of commands that are available:"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "+---------------------------------------------------------------+"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "| Index | Input            | Command                            |"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "|-------+------------------+------------------------------------|"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "| 01    | todo j           | Add a task(j) without dateline     |"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "|-------+------------------+------------------------------------|"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "| 02    | dateline j /by d | Add a task(j) with due date d      |"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "|-------+------------------+------------------------------------|"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "| 03    | event j /at d    | Add a task(j) that start at date d |"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "|-------+------------------+------------------------------------|"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "| 04    | list             | List out all the stored task       |"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "|-------+------------------+------------------------------------|"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "| 05    | done i           | Mark task i as done                |"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "|-------+------------------+------------------------------------|"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "| 06    | delete i         | Delete task(i)                     |"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "|-------+------------------+------------------------------------|"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "| 07    | find j           | Find all task with description j   |"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "|-------+------------------+------------------------------------|"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "| 08    | help             | List out all the commands          |"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "|-------+------------------+------------------------------------|"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "| 09    | bye              | Terminate the program              |"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "|---------------------------------------------------------------|"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     :( OOPS!!! Command does not exist."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     To view the list of commands available use the command: help"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     There is no matching tasks"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     :( OOPS!!! Missing description for find."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     :( OOPS!!! Missing index for delete."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     :( OOPS!!! \"a\" is not number!"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     :( OOPS!!! Invalid index for delete."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     :( OOPS!!! Invalid index for delete."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     :( OOPS!!! Description not required for list."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     :( OOPS!!! Missing index for done."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     :( OOPS!!! Invalid index for done."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     :( OOPS!!! Description not required for bye."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     :( OOPS!!! Missing description for todo."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     :( OOPS!!! Missing description for deadline."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     :( OOPS!!! Missing date for deadline."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     :( OOPS!!! Missing description for event."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     :( OOPS!!! Missing date for event."
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     :( OOPS!!! Command does not exist."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "     To view the list of commands available use the command: help"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "lamyuewei": 256
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "deadline return book /by 2020-10-06 19:30"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "event project meeting /at 2021-05-29 03:20"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "event exams /at 2020-05-03 16:00"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "deadline do homework /by 2020-04-25 11:45"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "done 6"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "delete 6"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "find book"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "help"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "find everything"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "find"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "delete"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "delete a"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "delete -3"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "delete 10"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "list all"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "done"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "done 10"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "bye there"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "todo"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "deadline complete ip coding"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "event"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "event complete ip coding"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "complete everything"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "lamyuewei": 39
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\exception\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "REM java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "REM Delete duke.txt from previous run"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lamyuewei"
        },
        "content": "del ..\\text-ui-test\\data\\duke.txt"
      }
    ],
    "authorContributionMap": {
      "lamyuewei": 25
    }
  }
]

[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kcubey"
        },
        "content": "# Duke User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kcubey"
        },
        "content": "### List All Tasks"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kcubey"
        },
        "content": "The user can view all current tasks and their completion status"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kcubey"
        },
        "content": "### Add New Tasks "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kcubey"
        },
        "content": "The user can add tasks of type Todo/Deadline/Event"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kcubey"
        },
        "content": "* Todo: These are Todo tasks that require no date"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kcubey"
        },
        "content": "* Deadline: These are Deadline tasks that have a due by date"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kcubey"
        },
        "content": "* Event: These are Event tasks that have a given date"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kcubey"
        },
        "content": "### Mark Task as Done"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kcubey"
        },
        "content": "The user can indicate that the given task is complete."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kcubey"
        },
        "content": "Tasks have a default completion status of N. A completed status is indicated by Y."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kcubey"
        },
        "content": "### Delete Task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kcubey"
        },
        "content": "The user can delete a given task based on task index"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kcubey"
        },
        "content": "### Find Task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kcubey"
        },
        "content": "The user can find a task that matches the given search keyword"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kcubey"
        },
        "content": "### Quit Program"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kcubey"
        },
        "content": "The user can safely exit the program"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kcubey"
        },
        "content": "### `todo \u003ctask name\u003e` - Add a Todo task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kcubey"
        },
        "content": "Adding a task of type `todo`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kcubey"
        },
        "content": "Example of usage | Expected Outcome"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kcubey"
        },
        "content": "---------------- | ---------------- "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kcubey"
        },
        "content": "`todo buy food` | Got it. I\u0027ve added this task: \u003cbr/\u003e[T][N] eat dinner"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kcubey"
        },
        "content": "### `deadline \u003cdeadline name\u003e /by \u003cdate\u003e` - Add a Deadline task"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kcubey"
        },
        "content": "Adding a task of type `deadline`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kcubey"
        },
        "content": "Example of usage | Expected Outcome"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kcubey"
        },
        "content": "---------------- | ---------------- "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kcubey"
        },
        "content": "`deadline complete homework /by Monday` | Got it. I\u0027ve added this task: \u003cbr/\u003e[D][N] complete homework (by: Monday)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kcubey"
        },
        "content": "### `event \u003cevent name\u003e /at \u003cdate\u003e` - Add an Event task"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kcubey"
        },
        "content": "Adding a task of type `event`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kcubey"
        },
        "content": "Example of usage | Expected Outcome"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kcubey"
        },
        "content": "---------------- | ---------------- "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kcubey"
        },
        "content": "`event carnival /at Sunday` | Got it. I\u0027ve added this task: \u003cbr/\u003e[E][N] carnival (at: Sunday)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kcubey"
        },
        "content": "### `list` - List all Tasks"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kcubey"
        },
        "content": "Displays all the current tasks in the task list"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kcubey"
        },
        "content": "Example of usage | Expected Outcome"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kcubey"
        },
        "content": "---------------- | ---------------- "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kcubey"
        },
        "content": "`list` | Current task list:\u003cbr/\u003e1. [T][N] buy food\u003cbr\u003e2. [D][N] complete homework (by: Monday)\u003cbr\u003e3. [E][N] carnival (at: Sunday)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kcubey"
        },
        "content": "### `done \u003cindex number\u003e` - Mark given Task as Done"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kcubey"
        },
        "content": "Mark the task in the task list of the given index as done"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kcubey"
        },
        "content": "Example of usage | Expected Outcome"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kcubey"
        },
        "content": "---------------- | ---------------- "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kcubey"
        },
        "content": "`done 2` | I\u0027ve marked this task as done:\u003cbr\u003e[D][Y] complete homework (by: Monday)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kcubey"
        },
        "content": "### `delete \u003cindex number\u003e` - Remove given Task from Task List "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kcubey"
        },
        "content": "Removes the task in the task list of the given index"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kcubey"
        },
        "content": "Example of usage | Expected Outcome"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kcubey"
        },
        "content": "---------------- | ---------------- "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kcubey"
        },
        "content": "`delete 2` | I\u0027ve removed this task:\u003cbr\u003e[D][Y] complete homework (by: Monday)\u003cbr\u003eYou have 2 task(s) left."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kcubey"
        },
        "content": "### `find \u003ckeyword\u003e` - Find any Tasks with a given Keyword"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kcubey"
        },
        "content": "Searches through the task list for any tasks that match the keyword "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kcubey"
        },
        "content": "Example of usage | Expected Outcome"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kcubey"
        },
        "content": "---------------- | ---------------- "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kcubey"
        },
        "content": "`find buy` | Given keyword: buy\u003cbr\u003eHere are the matching tasks: \u003cbr\u003e1. [T][N] buy food"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kcubey"
        },
        "content": "### `bye` - Exit the Program"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kcubey"
        },
        "content": "Stops the Duke program"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kcubey"
        },
        "content": "Example of usage | Expected Outcome"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kcubey"
        },
        "content": "---------------- | ---------------- "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kcubey"
        },
        "content": "`bye` | Bye. Hope to see you again!"
      }
    ],
    "authorContributionMap": {
      "kcubey": 72,
      "-": 11
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kcubey"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kcubey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kcubey"
        },
        "content": " * \u003ch1\u003eDuke\u003c/h1\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kcubey"
        },
        "content": " * The main running class. Duke is a task management program,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kcubey"
        },
        "content": " * allowing users to add/delete/find tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kcubey"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    private static Parser parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    private static UI ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    private static TaskList taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Initialises the relevant functions for Duke to run"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Starts up the Duke UI and Parser, loads preexisting list (if any) from file"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    public static void init() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        ui \u003d new UI(); //prints greeting"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            taskList \u003d new TaskList(storage.loadDuke());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        parser \u003d new Parser(taskList);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Starts running the program."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    public static void runDuke() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        boolean continueRun \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        String userCmd \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            while (continueRun) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kcubey"
        },
        "content": "                userCmd \u003d UI.getUserCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kcubey"
        },
        "content": "                //immediate exit if userCmd has \u0027bye\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kcubey"
        },
        "content": "                parser.runParser(userCmd);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kcubey"
        },
        "content": "                storage.saveDuke(taskList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        catch (DukeException e){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            System.out.println(e +\"\\nPlease try again\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Main method to run"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        init();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        runDuke();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "kcubey": 52,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kcubey"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kcubey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kcubey"
        },
        "content": " * \u003ch1\u003eParser\u003c/h1\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kcubey"
        },
        "content": " * Deals with making sense of the user command,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kcubey"
        },
        "content": " * directs the program to execute the corresponding TaskList command"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kcubey"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kcubey"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    private static TaskList currTasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    public Parser(TaskList taskList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        currTasks \u003d taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    //[event, food, fair, /at, Mon, 2-4pm]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    //[deadline, buy, food, /by, Sunday]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    //TODO: For further abstraction, related to TaskList further abstraction. To remove if abstraction is not done"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    protected static String[] splitString(String userCmd){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        String[] strArr \u003d userCmd.split(\" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        return strArr;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Assesses the given user command and decides what TaskList function to execute"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @param userCmd the given user command"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @throws DukeException from TaskList exceptions"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    protected static void runParser(String userCmd) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        // end program"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        if (userCmd.toLowerCase().equals(\"bye\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            System.out.println(\"Bye. Hope to see you again!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        // List commands"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        else if (userCmd.toLowerCase().equals(\"list\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            currTasks.listTasks();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        // Mark task as done"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        else if (userCmd.contains(\"done\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            currTasks.markTaskDone(userCmd);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        // Add task type todos (normal tasks)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        else if (userCmd.contains(\"todo\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            currTasks.addTask(userCmd);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        // Add task type deadline"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        else if (userCmd.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            currTasks.addDeadline(userCmd);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        // Add task type events"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        else if (userCmd.contains(\"event\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            currTasks.addEvent(userCmd);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        // Help command"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        else if (userCmd.contains(\"help\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            UI.printHelp();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        else if (userCmd.contains(\"delete\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            currTasks.deleteTask(userCmd);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        else if (userCmd.contains(\"find\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            currTasks.findTask(userCmd);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            System.out.println(\"Wrong syntax!\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            UI.printHelp();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kcubey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kcubey": 69
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kcubey"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kcubey"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kcubey"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kcubey"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kcubey"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kcubey"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kcubey"
        },
        "content": "//TODO: Possibility of further abstraction"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kcubey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kcubey"
        },
        "content": " * \u003ch1\u003eStorage\u003c/h1\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kcubey"
        },
        "content": " * The Storage class deals with saving and loading the task list to/from"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kcubey"
        },
        "content": " * the preset file"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kcubey"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kcubey"
        },
        "content": "public class Storage  {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    String dir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    Path filepath \u003d Paths.get(dir, \"data\", \"taskList.txt\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    String filepathStr  \u003d String.valueOf(filepath);;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    File dukeFile \u003d new File(filepathStr);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Attempts to load a preexisting task list from the preset file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * If the file is not found, the file is created and a new ArrayList is created"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Else, the preexisting task list is loaded into Duke"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @return the preexising task list, or a new (clean) task list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @throws DukeException of IOException if the file cannot be created"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @throws DukeException of IOException if the file cannot be read"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @throws DukeException of ClassNotFoundException if the saved class type cannot be identified"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    public ArrayList\u003cTask\u003e loadDuke() throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        ArrayList\u003cTask\u003e loadTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        if(!dukeFile.exists()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kcubey"
        },
        "content": "                // creates all sub dir if not exist"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kcubey"
        },
        "content": "                dukeFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kcubey"
        },
        "content": "                dukeFile.createNewFile();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            catch (IOException e){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kcubey"
        },
        "content": "                throw new DukeException(\"File creation error\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kcubey"
        },
        "content": "                FileInputStream fileRead \u003d new FileInputStream(dukeFile);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kcubey"
        },
        "content": "                ObjectInputStream objRead \u003d new ObjectInputStream(fileRead);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kcubey"
        },
        "content": "                loadTasks \u003d (ArrayList\u003cTask\u003e) objRead.readObject();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kcubey"
        },
        "content": "                objRead.close();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            catch (IOException | ClassNotFoundException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kcubey"
        },
        "content": "                throw new DukeException( e+ \"\\nLoad error\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        return loadTasks;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Saves the current task list to the preset file"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @param saveTasks the current TaskList"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @throws DukeException of IOException if the task list cannot be saved"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    public void saveDuke(TaskList saveTasks) throws DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            FileOutputStream fileWrite \u003d new FileOutputStream(dukeFile);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            ObjectOutputStream objWrite \u003d new ObjectOutputStream(fileWrite);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            objWrite.writeObject(saveTasks.getTaskList());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            objWrite.flush();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            objWrite.close();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        catch (IOException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            throw new DukeException(e+\"\\nSave error\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kcubey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kcubey": 77
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kcubey"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kcubey"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kcubey"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kcubey"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kcubey"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kcubey"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kcubey"
        },
        "content": "//TODO Abstract this class further"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kcubey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kcubey"
        },
        "content": " * \u003ch1\u003eTaskList\u003c/h1\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kcubey"
        },
        "content": " * Contains all functions related to the Task List, such as:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kcubey"
        },
        "content": " * adding, deleting and listing tasks in the task list,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kcubey"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kcubey"
        },
        "content": "public class TaskList implements Serializable{"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    public static ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Initialises an ArrayList of Task type for the TaskList"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @param currTask the current task list retrieved from Storage"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e currTask) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        taskList \u003d currTask;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Retrieves the ArrayList of tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @return the task ArrayList"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    public static ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Lists all the tasks in the task list"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    protected static void listTasks() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            System.out.println(\"List is empty!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            System.out.println(\"Current task list: \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            for (Task t : taskList) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kcubey"
        },
        "content": "                System.out.println(\"\\t\" +index +\". \" +t.toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kcubey"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Finds tasks with given keyword"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @param userCmd the user command with the search keyword"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @throws DukeException of ArrayIndexOutOfBoundsException if no keyword is given"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    protected static void findTask(String userCmd) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        String findStr;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            String[] splitCmd \u003d userCmd.split(\" \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            findStr \u003d splitCmd[1].trim();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        catch (ArrayIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            throw new DukeException(\"There must be keyword to search for. Syntax: find book\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        boolean hasMatch \u003d false;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        String matchingTask \u003d \"\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        for (Task t : taskList){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            if (t.getTaskName().contains(findStr)){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kcubey"
        },
        "content": "                hasMatch \u003d true;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kcubey"
        },
        "content": "                matchingTask +\u003d \"\\t\" +index +\". \" +t.toString() +\"\\n\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kcubey"
        },
        "content": "                //numbering is dependent on if getting the list index or numbering those with match"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kcubey"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        System.out.println(\"Given keyword: \" +findStr);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        if (hasMatch){"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            System.out.println(\"Here are the matching tasks: \");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            System.out.println(matchingTask);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            System.out.println(\"There are no matching tasks\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Marks the given task as done"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @param userCmd the given user command"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @throws DukeException of NumberFormatException if the number is not an integer"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @throws DukeException of ArrayIndexOutOfBoundsException if no number is provided"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    protected static void markTaskDone(String userCmd) throws DukeException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        // syntax: done 2"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        String[] splitCmd \u003d userCmd.split(\" \");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        int completedTask \u003d 0;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        // error check syntax"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            completedTask \u003d Integer.parseInt(splitCmd[1]);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        catch (NumberFormatException e){"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            throw new DukeException(\"The number must be in number form. Syntax: done 3\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        catch (ArrayIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            throw new DukeException(\"There must be a task number provided to mark as done. Syntax: done 3\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        if (completedTask \u003e taskList.size() ) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            System.out.println(\"Task not found!\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            int completedIndex \u003d completedTask-1;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            Task t \u003d taskList.get(completedIndex);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            // todo: need to check if already completed?"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            t.setDone();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            System.out.println(\"I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            System.out.println(\"\\t\" +t.toString());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Adds a To-do task to the current task list"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @param userCmd the user command stating the given task"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @throws DukeException of ArrayIndexOutOfBoundsException if no description is given"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    protected static void addTask(String userCmd) throws DukeException {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        String todoStr;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            String[] splitCmd \u003d userCmd.split(\"todo \");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            todoStr \u003d splitCmd[1].trim();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        catch (ArrayIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            throw new DukeException(\"There must be a description for a todo task. Syntax: todo buy food\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        Task newTask \u003d new Task(todoStr);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        taskList.add(newTask);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        System.out.println(\"\\t\" +newTask.toString() );"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Adds a Deadline task to the current task list"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @param userCmd the user command stating the given deadline"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @throws DukeException of ArrayIndexOutOfBoundsException if a wrong description was given"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    protected static void addDeadline(String userCmd) throws DukeException {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        String taskStr, deadlineStr;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        // Syntax: deadline return book /by Sunday"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            String[] splitCmd \u003d userCmd.split(\"/by \");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            deadlineStr \u003d splitCmd[1].trim();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            String[] splitName \u003d splitCmd[0].split(\"deadline \");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            taskStr \u003d splitName[1].trim();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        catch (ArrayIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            throw new DukeException(\"Wrong syntax for deadline tasks. Syntax: deadline buy food /by Sunday\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(taskStr, deadlineStr);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        taskList.add(newDeadline);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        System.out.println(\"\\t\" +newDeadline.toString() );"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Adds an Event task to the current task list"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @param userCmd the user command stating the given event"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @throws DukeException of ArrayIndexOutOfBoundsException if a wrong description was given"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    protected static void addEvent(String userCmd) throws DukeException {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        // Syntax: event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        String dateStr, eventStr;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            String[] splitCmd \u003d userCmd.split(\"/at \");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            dateStr \u003d splitCmd[1].trim();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            String[] splitName \u003d splitCmd[0].split(\"event \");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            eventStr \u003d splitName[1].trim();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        catch (ArrayIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            throw new DukeException(\"Wrong syntax for event tasks. Syntax: event food fair /at Mon 2-4pm\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        Event newEvent \u003d new Event(eventStr, dateStr);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        taskList.add(newEvent);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this event: \");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        System.out.println(\"\\t\" +newEvent.toString() );"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Removes the given task from the current task list"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @param userCmd the user command stating the task to be deleted"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @throws DukeException of NumberFormatException if the task number is not an integer"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @throws DukeException of ArrayIndexOutOfBoundsException if a no task number is given"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    protected static void deleteTask(String userCmd) throws DukeException {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        // syntax: done 2"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        String[] splitCmd \u003d userCmd.split(\" \");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        int taskToDelete \u003d 0;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        // error check syntax"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            taskToDelete \u003d Integer.parseInt(splitCmd[1]);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            throw new DukeException(\"The number must be in number form. Syntax: delete 3\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            throw new DukeException(\"There must be a task number provided to mark as done. Syntax: delete 3\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        if (taskToDelete \u003e taskList.size()) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            System.out.println(\"Task not found!\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            int taskIndex \u003d taskToDelete - 1;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            Task t \u003d taskList.get(taskIndex);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            taskList.remove(taskIndex);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            System.out.println(\"I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            System.out.println(\"\\t\" + t.toString());"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "kcubey"
        },
        "content": "            System.out.println(\"You have \" + taskList.size() + \" task(s) left.\");"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "kcubey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kcubey": 231
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kcubey"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kcubey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kcubey"
        },
        "content": " * \u003ch1\u003eUI\u003c/h1\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kcubey"
        },
        "content": " * This class deals with interactions with the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kcubey"
        },
        "content": " * It contains functions for general Duke-user interaction"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kcubey"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kcubey"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    private static Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        printGreeting();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Prints the greeting message when Duke is started"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    protected static void printGreeting() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kcubey"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kcubey"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kcubey"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kcubey"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Prints the help message when the user executes a"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * wrong command or if the \u0027help\u0027 command is run"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    protected static void printHelp() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        String helpMsg \u003d \"Here is a list of things you can do: \\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kcubey"
        },
        "content": "                + \"\\ttodo:      tasks without a date/time (syntax: todo buy food)\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kcubey"
        },
        "content": "                + \"\\tlist:      list your current tasks (syntax: list)\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kcubey"
        },
        "content": "                + \"\\tdeadline:  tasks that need to be done by a date/time (syntax: deadline buy food /by Sunday)\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kcubey"
        },
        "content": "                + \"\\tevent:     tasks that start/end by a specific time (syntax: event food fair /at Mon 2-4pm)\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kcubey"
        },
        "content": "                + \"\\tdone x:    mark the xth task as done (syntax: done 3)\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kcubey"
        },
        "content": "                + \"\\tdelete x:  remove the xth task (syntax: delete 3)\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kcubey"
        },
        "content": "                + \"\\tfind:      find a task with the given keyword (syntax: find apple)\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kcubey"
        },
        "content": "                + \"\\thelp:      launch the help screen (syntax: help)\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        System.out.println(helpMsg);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Prepares to receive a user input"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @return the user input"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    protected static String getUserCommand() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        System.out.println(\"How can I help you?\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kcubey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kcubey": 53
    }
  },
  {
    "path": "src/main/java/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kcubey"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kcubey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kcubey"
        },
        "content": " * \u003ch1\u003eDukeException\u003c/h1\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kcubey"
        },
        "content": " * Handles all exceptions in the Duke program and gives an error statement"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kcubey"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kcubey"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        super(\"A Duke error has occurred! \\n\\t\" +message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kcubey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kcubey": 11
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kcubey"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kcubey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kcubey"
        },
        "content": " * \u003ch1\u003eDeadline\u003c/h1\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kcubey"
        },
        "content": " * Deadline tasks are tasks that need to be done before a specific date/time"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kcubey"
        },
        "content": " * e.g., submit report /by Monday"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kcubey"
        },
        "content": " * Contains Deadline-specific descriptions"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kcubey"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kcubey"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    protected String dueBy;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    public Deadline(String taskName, String dueBy) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        this.taskType \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        this.dueBy \u003d dueBy;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Not yet implemented: A branch-8 task (TODO)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Gets the \u0027due by\u0027 date of the deadline"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @return the date as a String"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    public String getDueBy() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        return dueBy;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Not yet implemented: A branch-8 task (TODO)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Sets the deadline (date) of the task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @param dueBy the given date as a String"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    public void setDueBy(String dueBy) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        this.dueBy \u003d dueBy;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Converts the Deadline task to a String-readable format"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @return a String containing the task details, includes \u0027due by\u0027 date"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        return (super.toString() + \" (by: \" + dueBy +\")\" );"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kcubey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kcubey": 44
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kcubey"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kcubey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kcubey"
        },
        "content": " * \u003ch1\u003eEvent\u003c/h1\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kcubey"
        },
        "content": " * Event tasks are tasks that have a specific date/time"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kcubey"
        },
        "content": " * e.g., carnival /at 11 May 5pm"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kcubey"
        },
        "content": " * Contains Event-specific descriptions"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kcubey"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kcubey"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    protected String dateStr;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    public Event(String taskName, String dateStr) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        this.taskType \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        this.dateStr \u003d dateStr;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Not yet implemented: A branch-8 task (TODO)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Gets the date of the event"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @return the date as a String"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    public String getDateStr() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        return dateStr;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Not yet implemented: A branch-8 task (TODO)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Sets the date of the task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @param dateStr the given date as a String"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    public void setDateStr(String dateStr) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        this.dateStr \u003d dateStr;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Converts the Event task to a String-readable format"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @return a String containing the task details, includes the date"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        return (super.toString() + \" (at: \" + dateStr +\")\" );"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kcubey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kcubey": 44
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kcubey"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kcubey"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kcubey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kcubey"
        },
        "content": " * \u003ch1\u003eTask\u003c/h1\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kcubey"
        },
        "content": " * Contains the general properties of a Task:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kcubey"
        },
        "content": " * Name, Task type, completion status"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kcubey"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kcubey"
        },
        "content": " * \u003ch3\u003eAlso known as To-Do tasks\u003c/h3\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kcubey"
        },
        "content": " * To-Dos are tasks without any date/time attached to it"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kcubey"
        },
        "content": " * e.g. visit zoo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kcubey"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kcubey"
        },
        "content": "public class Task implements Serializable{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    protected char taskType;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    public Task(String taskName) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        this.taskType \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Gets the type of the Task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @return \u0027T\u0027 if it is a To-Do task; \u0027D\u0027 for Deadline tasks, \u0027E\u0027 for Event tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    public char getTaskType() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Gets the status \u0027icon\u0027 of the task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @return \u0027Y\u0027 if it is complete, else \u0027N\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    public String getStatusIcon(){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        return (isDone ? \"Y\" : \"N\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kcubey"
        },
        "content": "//        return (isDone ? \"\\u2713\" : \"\\u2718\"); check : cross mark"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Gets the name of the task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @return the task name"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Sets the isDone variable to true, indicating the task is completed"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kcubey"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * Converts the task description to a String-readable format"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     * @return the task details in a readable String"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kcubey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kcubey"
        },
        "content": "        return (\"[\" +getTaskType() +\"][\" + getStatusIcon() +\"] \" +getTaskName() );"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kcubey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kcubey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kcubey": 65
    }
  }
]

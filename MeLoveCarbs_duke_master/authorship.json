[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "TestDuke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for TestDuke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "MeLoveCarbs": 2
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.5.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "test {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "MeLoveCarbs": 20
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "import Features.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "import Features.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "import Features.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "import Features.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    private static String lines \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    private static Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    private static ArrayList\u003cTask\u003e userList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    private static void listCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        System.out.print(lines);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        if (userList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            System.out.println(\"No items added!\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        for (int i\u003d0; i\u003cuserList.size(); i++) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            Integer index \u003d i+1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            System.out.print(index + \".\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            System.out.println(userList.get(i));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        System.out.print(lines);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    private static void doneCommand(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        System.out.print(lines);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        String[] words \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        if (words.length !\u003d 2) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            throw new DukeException(\"Format error, please follow: \\\"done \u003ctask number\u003e\\\"\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            Integer doneIndex \u003d Integer.parseInt((words[1]));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            doneIndex--;    // decrement doneIndex from one-based indexing to zero-based indexing to access ArrayList using it"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            userList.get(doneIndex).setIsDone(true);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            System.out.println(userList.get(doneIndex));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            System.out.println(\"OOPS!! Features.Task number \" + words[1] + \" is not within your list. type \\\"list\\\" for more info.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            System.out.println(\"OOPS!! \" + words[1] + \" is not a valid task number\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        System.out.print(lines);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    private static Todo newTodo(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        ArrayList\u003cString\u003e words \u003d new ArrayList\u003cString\u003e(Arrays.asList(userInput.split(\" \")));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        words.remove(0);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        String task \u003d String.join(\" \", words);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        if (task.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            throw new DukeException(\"Features.Todo task name cannot be empty.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        return new Todo (task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    private static Event newEvent(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        ArrayList\u003cString\u003e words \u003d new ArrayList\u003cString\u003e(Arrays.asList(userInput.split(\" \")));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        words.remove(0);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        String at \u003d \"\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        int atIndex \u003d -1;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        for (int i\u003d0; i\u003cwords.size(); i++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            if (words.get(i).equals(\"/at\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                atIndex \u003d i;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        if (atIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            throw new DukeException(\"Format error, please follow: event \u003ctask\u003e /at \u003ctime\u003e\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        for (int i\u003d0; i\u003catIndex; i++) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            description +\u003d words.get(i);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            description +\u003d \" \";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        description \u003d description.substring(0, description.length()-1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        for (int i\u003datIndex+1; i \u003c words.size(); i++) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            at +\u003d words.get(i);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            at +\u003d \" \";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        at \u003d at.substring(0, at.length()-1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        return new Event(description, at);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    private static Deadline newDeadline(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        ArrayList\u003cString\u003e words \u003d new ArrayList\u003cString\u003e(Arrays.asList(userInput.split(\" \")));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        words.remove(0);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        String by \u003d \"\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        int byIndex \u003d -1;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        for (int i\u003d0; i\u003cwords.size(); i++) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            if (words.get(i).equals(\"/by\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                byIndex \u003d i;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        if (byIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            throw new DukeException(\"Format error, please follow: deadline \u003ctask\u003e /by \u003ctime\u003e\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        for (int i\u003d0; i\u003cbyIndex; i++) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            description +\u003d words.get(i);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            description +\u003d \" \";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        description \u003d description.substring(0, description.length()-1);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        for (int i\u003dbyIndex+1; i \u003c words.size(); i++) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            by +\u003d words.get(i);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            by +\u003d \" \";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        by \u003d by.substring(0, by.length()-1);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        return new Deadline(description, by);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    private static void addCommand(String userInput, String taskType) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        System.out.print(lines);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                    userList.add(newTodo(userInput));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                    userList.add(newEvent(userInput));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                    userList.add(newDeadline(userInput));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            printAddedInfo();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            System.out.println(\"OOPS!! \" + e);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        System.out.print(lines);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    private static void printAddedInfo() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        System.out.println(\"Got it . I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        System.out.print(\"  \");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        System.out.println(userList.get(userList.size()-1));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        System.out.println(\"Now you have \" + userList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    //Main bot control"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    private static void botResponse(String keyword, String userInput) throws DukeException {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            switch (keyword) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                    listCommand();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                    doneCommand(userInput);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                    addCommand(userInput, \"todo\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                    addCommand(userInput, \"event\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                    addCommand(userInput, \"deadline\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                    throw new DukeException(\"Unknown command.\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "//        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "//                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "//                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "//                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "//                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        String toPrint \u003d lines + \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\" + lines;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        System.out.print(toPrint);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        String userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        ArrayList\u003cString\u003e words \u003d new ArrayList\u003cString\u003e(Arrays.asList(userInput.split(\" \")));"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        String keyword \u003d words.get(0);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        while (!keyword.equals(\"bye\")) {          // if user command is not bye, go inside loop"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                botResponse(keyword, userInput);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                System.out.print(lines);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                System.out.println(\"OOPS!! \" + e);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                System.out.print(lines);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                words \u003d new ArrayList\u003cString\u003e(Arrays.asList(userInput.split(\" \")));"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "                keyword \u003d words.get(0);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "            }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        System.out.print(lines + \"Bye. Hope to see you again soon!\\n\" + lines);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "//    For unit testing purposes"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "//    public static int multiply(int i, int j) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "//        return i * j;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "MeLoveCarbs": 195
    }
  },
  {
    "path": "src/main/java/Exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "package Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MeLoveCarbs": 7
    }
  },
  {
    "path": "src/main/java/Features/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "package Features;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "       super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "       this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MeLoveCarbs": 15
    }
  },
  {
    "path": "src/main/java/Features/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "package Features;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MeLoveCarbs": 15
    }
  },
  {
    "path": "src/main/java/Features/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "package Features;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    public void setIsDone(boolean isDone) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "       this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MeLoveCarbs": 29
    }
  },
  {
    "path": "src/main/java/Features/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "package Features;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MeLoveCarbs": 12
    }
  },
  {
    "path": "src/test/java/TestDuke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "public class TestDuke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    void myTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "        Duke myDuke \u003d new Duke();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "//        assertEquals(81, Duke.multiply(9, 9), \"9 x 9 is 81\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MeLoveCarbs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MeLoveCarbs": 13
    }
  }
]

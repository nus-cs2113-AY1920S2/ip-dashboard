[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "Duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for Duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "harithadiv": 2,
      "-": 37
    }
  },
  {
    "path": "src/main/java/Duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private String byFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        this.byFormat \u003d getByFormat();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public Deadline(String description, String by, Boolean isDone){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public String getByFormat(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        LocalDateTime localDateTime \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        return localDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + byFormat + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public String toText(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        return \"D | \" + (this.isDone? \"1\" : \"0\") + \" | \" + this.description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "harithadiv": 38
    }
  },
  {
    "path": "src/main/java/Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static List\u003cTask\u003e tasksList \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static final String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static final String BYE_COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static final String DONE_COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static final String DELETE_COMMAND \u003d \"delete\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static final String TODO_COMMAND \u003d \"todo\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static final String DEADLINE_COMMAND \u003d \"deadline\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static final String EVENT_COMMAND \u003d \"event\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static final String TODO_ERROR_MESSAGE \u003d \"Oops! The description of todo cannot be empty.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static final String DEADLINE_ERROR_MESSAGE \u003d \"Oops! The description of deadline cannot be empty.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static final String EVENT_ERROR_MESSAGE \u003d \"Oops! The description of event cannot be empty.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static final String INVALID_COMMAND_MESSAGE \u003d \" Oops! Im sorry, but I don\u0027t know what that means :(\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public Duke(String filePath){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        ui.greetUser();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        Scanner scanner \u003d  new Scanner(System.in);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        boolean isExit \u003d false ;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        while(!isExit){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                String input \u003d scanner.nextLine().trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                String[] parsedInput \u003d Parser.parseInput(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                int inputLength \u003d parsedInput.length;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                List\u003cString\u003e parsedList \u003d Arrays.asList(parsedInput);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                String command \u003d parsedInput[0];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                List\u003cString\u003e arguments \u003d parsedList.subList(1, parsedList.size());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                switch(command){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                case BYE_COMMAND:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    storage.writeNewData(tasks);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    ui.exitProgram();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    isExit \u003d true;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                case LIST_COMMAND:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    ui.list(tasks);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                case DONE_COMMAND:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    if(inputLength \u003d\u003d 2 \u0026\u0026 Parser.isNumeric(parsedInput[1])){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                        int taskNumber \u003d Integer.parseInt(parsedInput[1]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                        try{"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                            tasks.markAsDone(taskNumber - 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                            ui.showDoneMessage(tasks.getTasks().get(taskNumber-1).toString());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                            ui.showTaskErrorMessage();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    else{"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                        throw new DukeException(INVALID_COMMAND_MESSAGE);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                case DELETE_COMMAND:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    if(inputLength \u003d\u003d 2 \u0026\u0026 Parser.isNumeric(parsedInput[1])){"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                        int taskNumber \u003d Integer.parseInt(parsedInput[1]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                        try{"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                            tasks.delete(taskNumber - 1);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                            ui.showTasksLeft(tasks);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                            ui.showTaskErrorMessage();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    else{"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                        throw new DukeException(INVALID_COMMAND_MESSAGE);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                case TODO_COMMAND:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    if(inputLength \u003d\u003d  1){"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                        throw new DukeException(TODO_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    String todoDescription \u003d Parser.getTodoDescription(arguments);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    tasks.add(new Todo(todoDescription));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    ui.showTasksLeft(tasks);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                case DEADLINE_COMMAND:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    if(inputLength \u003d\u003d 1){"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                        throw new DukeException(DEADLINE_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    String deadlineDescription \u003d Parser.getDeadlineDescription(parsedList);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    String by \u003d Parser.getBy(parsedList);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    tasks.add(new Deadline(deadlineDescription, by));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    ui.showTasksLeft(tasks);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                case EVENT_COMMAND:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    if(inputLength \u003d\u003d 1){"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                        throw new DukeException(EVENT_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    String eventDescription \u003d Parser.getEventDescription(parsedList);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    String at \u003d Parser.getAt(parsedList);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    tasks.add(new Event(eventDescription, at));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    ui.showTasksLeft(tasks);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    throw new DukeException(INVALID_COMMAND_MESSAGE);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            } catch (DukeException de) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                ui.printMessage(de.getMessage());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            } catch(DateTimeParseException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                ui.printMessage(\"Please give the following format for date and time: yyyy-mm-dd HHmm\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                ui.printBorder();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "harithadiv": 136,
      "-": 2
    }
  },
  {
    "path": "src/main/java/Duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        super (error);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "harithadiv": 7
    }
  },
  {
    "path": "src/main/java/Duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    String atFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public Event(String description, String at){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        this.atFormat \u003d getAtFormat();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public Event(String description, String at, Boolean isDone){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public String getAtFormat(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        LocalDateTime localDateTime \u003d LocalDateTime.parse(at, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        return localDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + atFormat + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public String toText(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        return \"E | \" + (this.isDone? \"1\" : \"0\") + \" | \" + this.description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "harithadiv": 38
    }
  },
  {
    "path": "src/main/java/Duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public static String[] parseInput(String input){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        return input.split(\" \");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public static String getTodoDescription(List\u003cString\u003e arguments){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        return String.join(\" \", arguments);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public static String getDeadlineDescription(List\u003cString\u003e parsedList) throws DukeException{"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        int i \u003d parsedList.indexOf(\"/by\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        if(i \u003d\u003d -1){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            throw new DukeException(\"Please enter again with the following format: D/NAME /by D/TIME\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            return String.join(\" \", parsedList.subList(1, i));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public static String getEventDescription(List\u003cString\u003e parsedList) throws DukeException{"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        int i \u003d parsedList.indexOf(\"/at\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        if(i \u003d\u003d -1){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            throw new DukeException(\"Please enter again with the following format: E/NAME /at D/TIME\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            return String.join(\" \", parsedList.subList(1, i));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public static String getBy(List\u003cString\u003e parsedList) throws DukeException{"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        int i \u003d parsedList.indexOf(\"/by\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        if(i \u003d\u003d -1){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            throw new DukeException(\"Please enter again with the following format: D/NAME /by D/TIME\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            return String.join(\" \", parsedList.subList(i + 1, parsedList.size()));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public static String getAt(List\u003cString\u003e parsedList) throws DukeException{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        int i \u003d parsedList.indexOf(\"/at\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        if(i \u003d\u003d -1){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            throw new DukeException(\"Please enter again with the following format: E/NAME /at D/TIME\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            return String.join(\" \", parsedList.subList(i + 1, parsedList.size()));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public static boolean isNumeric(String strNum){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            int d \u003d Integer.parseInt(strNum);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "harithadiv": 64
    }
  },
  {
    "path": "src/main/java/Duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public Storage(String filePath){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public static List\u003cTask\u003e load() throws DukeException{"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            File file \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            if(!scanner.hasNext()){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                throw new DukeException(\"Task List is empty.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            while(scanner.hasNext()){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                String[] line \u003d scanner.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                boolean isDone \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                if (line[1].equals(\"1\")){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    isDone \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                switch (line[0]){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    tasks.add(new Deadline(line[2], line[3], isDone));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    tasks.add(new Event(line[2], line[3], isDone));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    tasks.add(new Todo(line[2], isDone));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            ui.printMessage(\"File does not exist\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            ui.printMessage(\"Invalid file contents\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public static void writeNewData(TaskList tasks){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter( \"data/duke.txt\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                fileWriter.write(task.toText() + \"\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            ui.printMessage(\"An error occurred while writing to file\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "harithadiv": 67
    }
  },
  {
    "path": "src/main/java/Duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public Task(String description, Boolean isDone){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public String toText(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        return \" \";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "harithadiv": 34
    }
  },
  {
    "path": "src/main/java/Duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public void add(Task task){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        ui.showAddedTask(task.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public void delete(int i){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        ui.showDeletedTask(tasks.get(i).toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        tasks.remove(i);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public List\u003cTask\u003e getTasks(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public void markAsDone(int i){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        tasks.get(i).markAsDone();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public int getSize(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "harithadiv": 38
    }
  },
  {
    "path": "src/main/java/Duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public Todo(String description){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public Todo(String description,  Boolean isDone){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public String toText(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        return \"T | \" + (this.isDone? \"1\" : \"0\") + \" | \" + this.description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "harithadiv": 23
    }
  },
  {
    "path": "src/main/java/Duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static final String BORDER \u003d \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ \";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static final String INDENT \u003d \"  \";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static final String TASK_ERROR_MESSAGE \u003d \"Task not found\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public void printMessage(String s){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        System.out.println(INDENT + s);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public void printBorder(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public void greetUser() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        printMessage(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        printMessage(\"What can I do for you?\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public void list(TaskList tasks){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        if(tasks.getSize() \u003d\u003d 0){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            printMessage(\"There are no tasks in your list.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            printMessage(\"Here are the tasks in your list\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.getSize(); i++){ //unsure of getSize()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                printMessage(i+1 + \".\" + tasks.getTasks().get(i).toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public void showDoneMessage(String taskDescription){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        printMessage(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        printMessage(taskDescription);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public void showAddedTask(String taskDescription){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        printMessage(\"Got it! I\u0027ve added this task\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        printMessage(taskDescription);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public void showDeletedTask(String taskDescription){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        printMessage(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        printMessage(taskDescription);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public void showTasksLeft(TaskList tasks){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        printMessage(\"Now you have \" + tasks.getSize() + \" tasks left in your list.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public void showTaskErrorMessage(){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        printMessage(TASK_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public void exitProgram(){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        printMessage(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public void showLoadingError(){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "harithadiv": 67
    }
  },
  {
    "path": "test-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "harithadiv": 1
    }
  },
  {
    "path": "test-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "harithadiv": 1
    }
  },
  {
    "path": "test-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "javac  -C:\\Repos\\duke\\src\\main\\java\\Duke.Duke.java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "java -C:\\Repos\\duke\\src\\main\\java\\Duke.Duke.java \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "harithadiv": 21
    }
  }
]

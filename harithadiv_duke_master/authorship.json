[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "Duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for Duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "harithadiv": 2,
      "-": 37
    }
  },
  {
    "path": "src/main/java/Duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "harithadiv": 16
    }
  },
  {
    "path": "src/main/java/Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static final String BORDER \u003d \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static final String SPACE \u003d \"  \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static final List\u003cTask\u003e tasksList \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static final String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static final String BYE_COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static final String DONE_COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static final String TODO_COMMAND \u003d \"todo\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static final String DEADLINE_COMMAND \u003d \"deadline\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static final String EVENT_COMMAND \u003d \"event\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static final String DONE_ERROR_MESSAGE \u003d \"Duke.Task not found\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static final String TODO_ERROR_MESSAGE \u003d \"Oops! The description of todo cannot be empty.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static final String DEADLINE_ERROR_MESSAGE \u003d \"Oops! The description of deadline cannot be empty.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static final String EVENT_ERROR_MESSAGE \u003d \"Oops! The description of event cannot be empty.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static final String INVALID_COMMAND_MESSAGE \u003d \" Oops! Im sorry, but I don\u0027t know what that means :(\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static void printBorder(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static void printMessage(String message){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        System.out.println(SPACE + message);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static void greetUser(){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        printMessage(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        printMessage(\"What can I do for you?\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    private static void replyUser(String input) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            if(input.equals(LIST_COMMAND)){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                if(tasksList.size() \u003d\u003d 0){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    printMessage(\"There are no tasks in your list!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    for (int i \u003d 0; i \u003c tasksList.size(); i++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                        printMessage((i + 1) + \". \" + tasksList.get(i).toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                String[] line \u003d input.split(\" \");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                List\u003cString\u003e taskList \u003d Arrays.asList(line);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                String command \u003d line[0];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                List\u003cString\u003e arguments \u003d taskList.subList(1, taskList.size());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                Task task \u003d null;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                String s;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                boolean isTask \u003d false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                switch (command) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                case DONE_COMMAND:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    if(line.length \u003d\u003d 2 \u0026\u0026 isNumeric(line[1])){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                        int i \u003d Integer.parseInt(line[1]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                        if (i \u003e 0 \u0026\u0026 i \u003c\u003d tasksList.size()){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                            System.out.println(\"Nice! I\u0027ve marked this task as done\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                            tasksList.get(i - 1).markAsDone();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                            System.out.println(i + \". \" + tasksList.get(i - 1).toString());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                            printBorder();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                        } else{"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                            throw new DukeException(DONE_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                case TODO_COMMAND:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    if (line.length \u003d\u003d 1){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                        throw new DukeException(EVENT_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    isTask \u003d true;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    s \u003d String.join(\" \", arguments);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    task \u003d new Todo(s);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                case DEADLINE_COMMAND:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    if (line.length \u003d\u003d 1){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                        throw new DukeException(DEADLINE_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    isTask \u003d true;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    int index \u003d taskList.indexOf(\"/by\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    if(index \u003d\u003d -1){"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                        System.out.println(\"Please enter again with a deadline: \");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                        printBorder();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                        //continue;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    String by \u003d String.join(\" \", taskList.subList(index + 1, taskList.size()));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    String description \u003d String.join(\" \", taskList.subList(1, index));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    task \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                case EVENT_COMMAND:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    if (line.length \u003d\u003d 1){"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                        throw new DukeException(EVENT_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    isTask \u003d true;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    index \u003d taskList.indexOf(\"/at\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    if(index \u003d\u003d -1){"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                        System.out.println(\"Please enter again with a location: \");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                        printBorder();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                        //continue;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    String at \u003d String.join(\" \", taskList.subList(index + 1, taskList.size()));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    description \u003d String.join(\" \", taskList.subList(1, index));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    task \u003d new Event(description, at);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    throw new DukeException(INVALID_COMMAND_MESSAGE);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                if(isTask) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    tasksList.add(task);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    System.out.println(\"Got it! I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    System.out.println(\" \" + task.toString());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    System.out.println(\"Now you have \" + tasksList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                    printBorder();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public static boolean isNumeric(String strNum) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        if (strNum \u003d\u003d null) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            int d \u003d Integer.parseInt(strNum);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        greetUser();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        while(true){"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            String input \u003d scanner.nextLine().trim();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            if(input.equals(BYE_COMMAND)) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                printMessage(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            printBorder();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                replyUser(input);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                printMessage(e.getMessage());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "                printBorder();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "harithadiv": 155,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        super (error);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "harithadiv": 7
    }
  },
  {
    "path": "src/main/java/Duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public Event(String description, String at){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "harithadiv": 16
    }
  },
  {
    "path": "src/main/java/Duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    /*public String getDescription(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "harithadiv": 30
    }
  },
  {
    "path": "src/main/java/Duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public Todo(String description){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "harithadiv": 13
    }
  },
  {
    "path": "test-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "harithadiv": 1
    }
  },
  {
    "path": "test-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "harithadiv": 1
    }
  },
  {
    "path": "test-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "javac  -C:\\Repos\\duke\\src\\main\\java\\Duke.Duke.java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "java -C:\\Repos\\duke\\src\\main\\java\\Duke.Duke.java \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "harithadiv"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "harithadiv"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "harithadiv": 21
    }
  }
]

[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "### Todo"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "Add a simple task that can be marked as done."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "### Deadline"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "Add a task to be completed by a set deadline."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "### Event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "Add a task involving a specific date."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "### List"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "List all tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "### Mark as done"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "Mark task as done."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "### Delete"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "Delete task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "### Find"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "Find task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "### `todo \u003cdescription\u003e` - Add todo"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "Adds a task to be done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "`todo study for test`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "`Added task: [T][X] study for test`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "### `deadline \u003cdescription\u003e /by \u003cdate (yyyy-mm-dd)\u003e` - Add deadline"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "Adds a task to be completed by a set deadline."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "`deadline finalize design /by 2020-06-05`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "`Added task: [D][X] finalize design (by: Jun 5 2020)`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "### `event \u003cdescription\u003e /at \u003cdate (yyyy-mm-dd)\u003e` - Add event"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "Adds a task involving a specific date."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "`event attend meeting /at 2020-05-15`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "`Added task: [E][X] attend meeting (on: May 15 2020)`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "### `list` - List tasks"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "Lists all the current tasks."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "```"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " 1. [T][X] study for test"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " 2. [D][X] finalize design (by: Jun 5 2020)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " 3. [E][X] attend meeting (on: May 15 2020)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "```"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "### `done \u003ctask-id\u003e` - Mark task as done"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "Marks task starting with the specified ID as done."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "`Marked task as done.`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "New output of `list`:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "```"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "1. [T][/] study for test"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "2. [D][X] finalize design (by: Jun 5 2020)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "3. [E][X] attend meeting (on: May 15 2020)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "```"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "### `delete \u003ctask-id\u003e` - Delete task"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "Deletes task starting with the specified ID."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "`Deleted task 1`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "New output of `list`:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "```"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "1. [D][X] finalize design (by: Jun 5 2020)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "2. [E][X] attend meeting (on: May 15 2020)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "```"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "### `find \u003cstring\u003e` - Find text in tasks"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "Searches the task descriptions and returns tasks that contain the input string."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "`find design`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "```"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "Found 1 match(es) in your list:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "[D][X] finalize design (by: Jun 5 2020)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "rdimaio": 118,
      "-": 14
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import duke.exception.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import duke.parser.ScannedCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " * Main class for the Duke program."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /** Constant file path of data file. */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private static final String DATA_FILE_PATH \u003d \"data/data.csv\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /** Storage object for data file. */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /** Task list to store current tasks in. */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private static TaskList taskList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /** Parser object to scan and parse user input. */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private static Parser parser;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Constructs Duke, loading data from the specified file path."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param dataFilePath File path to data file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public Duke(String dataFilePath) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        storage \u003d new Storage(dataFilePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        createTaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Creates TaskList and loads data from data file if the data file previously existed;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * otherwise, an empty task list is initialized."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private void createTaskList() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        if (storage.loadFile()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            taskList \u003d new TaskList(storage.dataFile);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Main running function."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param args CLI arguments when starting file."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        new Duke(DATA_FILE_PATH);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        Ui.displayWelcome();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        ScannedCommand inputCommand;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        String userCommand;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        String userParams;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            inputCommand \u003d parser.scanCommand();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            userCommand \u003d inputCommand.getUserCommand();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            userParams \u003d inputCommand.getUserParams();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            run(userCommand, userParams);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        } while (!userCommand.equalsIgnoreCase(\"bye\"));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Parses command and catches exceptions for unusual input."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param userCommand Command input by the user."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param userParams Any parameters input by the user."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private static void run(String userCommand, String userParams) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            Parser.parseCommand(userCommand, userParams, taskList, storage);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        } catch (NoDescException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            Ui.formatPrint(\"Please input a description.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        } catch (NoDateException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            Ui.formatPrint(\"Please input a date.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        } catch (InvalidDateFormatException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            Ui.formatPrint(\"Invalid input method. Please input the task in the following format: \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            Ui.printCorrectDateFormat(userCommand);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            Ui.formatPrint(\"Sorry, I didn\u0027t recognize that command.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        } catch (NoFindException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            Ui.formatPrint(\"Please input the string you want to find.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            Ui.formatPrint(\"Incorrect date format: please input date as YYYY-mm-dd.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        } catch (InvalidTaskIndexException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            Ui.formatPrint(\"Error: please input a valid task index.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            Ui.formatPrint(\"Please input an integer as task index.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        System.out.println(\"You have \" + taskList.getSize() + \" task/s. (type \u0027list\u0027 to list your tasks)\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        System.out.println(\"Anything else? Remember that you can leave by typing \u0027bye\u0027.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rdimaio": 101,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " * Thrown when an invalid command is input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rdimaio": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidDateFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " * Thrown when user does not delimit description and date of Tasks with date (e.g. duke.task.Deadline, duke.task.Event)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " * by using the specified delimiter character \u0027/\u0027 (forward slash)."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "public class InvalidDateFormatException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rdimaio": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidTaskIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " * Thrown when user inputs an index that is not valid (either negative or out of bounds)."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "public class InvalidTaskIndexException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rdimaio": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/NoDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " * Thrown when user doesn\u0027t input date in Tasks that require a date (e.g. duke.task.Deadline, duke.task.Event)."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "public class NoDateException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rdimaio": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/NoDescException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " * Thrown when user doesn\u0027t input the description of a duke.task.Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "public class NoDescException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rdimaio": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/NoFindException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "public class NoFindException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rdimaio": 4
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import duke.exception.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " * Scans the user input and parses the commands."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /** Scanner object to read user input. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    Scanner inputScanner;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Constructs a Parser object by initializing a new Scanner."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        inputScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Scans the latest user input, reading the command and the parameters separately."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @return ScannedCommand object comprising both the command and the parameters."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public ScannedCommand scanCommand() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Note: Scanner.next() reads until delimiter, Scanner.nextLine() reads until EOL"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // If Scanner.next() is called first, then Scanner.nextLine() reads from that point onwards"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // e.g. if the user inputs: \u0027deadline read book \\5pm\u0027, the two strings below will contain:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        //      userCommand \u003d \u0027deadline\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        //      userParams  \u003d \u0027read book \\5pm\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        String userCommand \u003d inputScanner.next(); // Read first word of input"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        String userParams \u003d inputScanner.nextLine(); // Get user input after first word"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        return new ScannedCommand(userCommand, userParams);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Parses the scanned input and executes commands accordingly."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param userCommand Command input by the user."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param userParams Any subsequent parameters input by the user."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param taskList The current session\u0027s TaskList."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param storage The current session\u0027s Storage (where the data file is stored)."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @throws NoDescException If description for a task is missing."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @throws NoDateException If date for a task is missing."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @throws NoFindException If string to find is missing when using the \u0027find\u0027 command."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @throws InvalidDateFormatException If date for a task is not formatted properly."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @throws InvalidCommandException If command is invalid."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public static void parseCommand(String userCommand, String userParams,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                                    TaskList taskList, Storage storage)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            throws NoDescException, NoDateException, InvalidDateFormatException,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                InvalidCommandException, NoFindException, InvalidTaskIndexException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        switch (userCommand) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            parseTodo(userParams, taskList, storage);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            parseDateTask(userCommand, userParams, taskList, storage);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            parseTaskModification(userCommand, userParams, taskList, storage);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            parseFind(userParams, taskList);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            Ui.formatPrint(taskList);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            Ui.formatPrint(\"Goodbye!\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            // Note: break statement not needed here because the exception is thrown, stopping flow"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Parses commands that modify a task, by either marking it as done or deleting it."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param userCommand Command input by the user."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param userParams String containing the ID of the task to mark as done or delete."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param taskList Current session\u0027s TaskList."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param storage Current session\u0027s Storage."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private static void parseTaskModification(String userCommand, String userParams,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                                              TaskList taskList, Storage storage)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            throws InvalidTaskIndexException, NumberFormatException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        String stringId \u003d userParams.replaceAll(\"[^0-9]\", \"\"); // Extract numeric characters"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        int taskId \u003d Integer.parseInt(stringId) - 1;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        if (taskId \u003c 0 || taskId \u003e\u003d taskList.getSize()) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            throw new InvalidTaskIndexException();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        if (userCommand.equals(\"done\")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            taskList.setDone(taskId, storage);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            taskList.deleteTask(taskId, storage);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Parses tasks with a LocalDate property (e.g. Deadline and Event)."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param userCommand Command input by the user."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param userParams Description and date of task."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param taskList Current session\u0027s TaskList."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param storage Current session\u0027s Storage."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @throws InvalidDateFormatException If date is not formatted properly."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @throws NoDescException If description is missing."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @throws NoDateException If date is missing."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private static void parseDateTask(String userCommand, String userParams,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                                      TaskList taskList, Storage storage)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            throws InvalidDateFormatException, NoDescException, NoDateException, InvalidDateFormatException {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        int delimIndex \u003d userParams.indexOf(\"/\"); // duke.Duke uses / to define where the date starts"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // If String.indexOf returns -1, the character has not been found"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        if (delimIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            throw new InvalidDateFormatException();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        String desc \u003d userParams.substring(0, delimIndex); // Get description substring (before /)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        String date \u003d userParams.substring(delimIndex+3, userParams.length()); // Get date substring (after /at or /by)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Check that description and date exist"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        if (desc.trim().isEmpty()) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            throw new NoDescException();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        } else if (date.trim().isEmpty()) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            throw new NoDateException();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        LocalDate ld \u003d LocalDate.parse(date.trim());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        if (userCommand.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            taskList.addTask(new Deadline(desc.trim(), ld), storage);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            taskList.addTask(new Event(desc.trim(), ld), storage);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Parses a Todo command."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param desc The description of the task."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param taskList Current session\u0027s TaskList."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param storage Current session\u0027s Storage."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @throws NoDescException If description is missing."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private static void parseTodo(String desc, TaskList taskList, Storage storage) throws NoDescException {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Check that description exists"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        if (desc.trim().isEmpty()) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            throw new NoDescException();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        taskList.addTask(new Todo(desc.trim()), storage);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private static void parseFind(String userParams, TaskList taskList) throws NoFindException {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        if (userParams.trim().isEmpty()) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            throw new NoFindException();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        taskList.find(userParams);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rdimaio": 181
    }
  },
  {
    "path": "src/main/java/duke/parser/ScannedCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " * Object that holds the command input by the user, along with any optional parameters."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "public class ScannedCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /** Command input by the user. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private String userCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /** Parameters input by the user. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private String userParams;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Constructs a ScannedCommand object using the user\u0027s input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param userCommand Command input by the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param userParams Parameters input by the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public ScannedCommand(String userCommand, String userParams) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        this.userCommand \u003d userCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        this.userParams \u003d userParams;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Returns the command input by the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @return The user command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public String getUserCommand() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        return userCommand;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Returns the parameters input by the user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @return The user parameters."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public String getUserParams() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        return userParams;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rdimaio": 42
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " * Class that holds the path and File object for the current data file."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /** Path to current data file. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public String dataFilePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /** File object for current data file. */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public File dataFile;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Constructs a Storage object for the input file path."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param dataFilePath The data file\u0027s file path."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public Storage(String dataFilePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        this.dataFilePath \u003d dataFilePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        dataFile \u003d new File(dataFilePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Writes the input string to file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param s The input string."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @throws IOException If an error occurs while writing."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public void writeToFile(String s) throws IOException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        FileWriter fw \u003d new FileWriter(dataFilePath, true);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        fw.write(s + System.lineSeparator());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    // Return true if file previously existed, false if it didn\u0027t exist (and it created a new one)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Loads the data file. Creates file and directories if data file did not previously exist."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @return True if file previously existed (and was not created); False if file did not exist and was created."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public boolean loadFile() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Create data file if it does not exist already"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        if (!dataFile.exists()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            try  {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                createDataFile();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                return false; // false \u003d file didn\u0027t previously exist, so it was created"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                Ui.formatPrint(\"Error loading data file.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        return true; // true \u003d file previously existed, and was not created"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Creates a file and any non-existing directories to that file."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @throws IOException If an error occurs while creating the file or directories."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private void createDataFile() throws IOException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        dataFile.getParentFile().mkdirs(); // Create data directory (does nothing if directory already exists)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        dataFile.createNewFile();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rdimaio": 74
    }
  },
  {
    "path": "src/main/java/duke/storage/StorageHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " * Class containing useful functions for modifying the data file."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "public class StorageHandler {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Removes the line whose index matches lineNumber from file at dataFilePath."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param lineNumber Index of line to remove."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param dataFilePath Path to data file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @throws IOException If an error occurs while writing the new list to file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public static void removeLine(int lineNumber, String dataFilePath) throws IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Read file into list of strings, where each string is a line in the file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        List\u003cString\u003e fileContent \u003d new ArrayList\u003c\u003e(Files.readAllLines(Paths.get(dataFilePath), StandardCharsets.UTF_8));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        int removedIndex \u003d 0;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Remove line from fileContent list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        removedIndex \u003d removeLineFromList(lineNumber, fileContent, removedIndex);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Rewrite list into data file"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        Files.write(Paths.get(dataFilePath), fileContent, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Update indexes of subsequent lines"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        updateIndexes(fileContent, removedIndex, dataFilePath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Removes line from a list based on its index. Returns index at which the line was removed."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param lineNumber Index of line to remove."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param list List of strings containing lines, each with a starting index."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param removedIndex Index at which line was removed."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @return Index of the removed line."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private static int removeLineFromList(int lineNumber, List\u003cString\u003e list, int removedIndex) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Iterate through the lines"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            // If the current line matches the taskId"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            if (list.get(i).startsWith(String.valueOf(lineNumber))) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                // Remove current line"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                removedIndex \u003d i; // Store index of removed line to use as initial index of next loop"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                list.remove(i);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        return removedIndex;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * After a line has been removed, updates subsequent indexes."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param fileContent List of strings from the data file."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param removedIndex Index at which line was removed."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param dataFilePath Path to data file."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @throws IOException If an error occurs while writing to file."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private static void updateIndexes(List\u003cString\u003e fileContent, int removedIndex, String dataFilePath) throws IOException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Update indexes of subsequent tasks (e.g. if you remove task 2, task 3 becomes task 2)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        for (int i \u003d removedIndex; i \u003c fileContent.size(); i++)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            // Get current comma separated string"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            String currString \u003d fileContent.get(i);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            String updatedString \u003d decrementIndex(currString, i);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            // Replace the line with the updated string"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            replaceLine(i+1, updatedString, dataFilePath);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Decrements index at beginning of string by 1."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param currString String whose index must be decremented."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param i Index that the currString\u0027s index must be set to."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @return Original string with its index decremented by 1."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private static String decrementIndex(String currString, int i) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Split into different cells"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        List\u003cString\u003e cells \u003d Arrays.asList(currString.split(\",\"));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Change first cell (taskID) to new ID (taskID-1)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Task 3 becomes task 2, task 4 becomes task 3, until end of list"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        cells.set(0, String.valueOf(i));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Recombine the comma separated string"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        return String.join(\",\", cells);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Replaces line in a data file."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param lineNumber Index of the line to replace."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param newString String that replaces the original line."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param dataFilePath Path to data file."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @throws IOException If an error occurs while writing to file."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public static void replaceLine(int lineNumber, String newString, String dataFilePath) throws IOException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Read file into list of strings, where each string is a line in the file"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        List\u003cString\u003e fileContent \u003d new ArrayList\u003c\u003e(Files.readAllLines(Paths.get(dataFilePath), StandardCharsets.UTF_8));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Replace line in the list of strings"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        replaceLineInList(lineNumber, newString, fileContent);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Write new list of strings to file"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        Files.write(Paths.get(dataFilePath), fileContent, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Replaces a line in a list of Strings."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param lineNumber Number at which line must be replaced."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param newString String that replaces the original string."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param list List of strings."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private static void replaceLineInList(int lineNumber, String newString, List\u003cString\u003e list) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Iterate through the lines"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            // If the current line matches the taskId"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            if (list.get(i).startsWith(String.valueOf(lineNumber))) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                // Replace it with the new task string"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                list.set(i, newString);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rdimaio": 139
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " * Task that must be completed before a set deadline."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /** Deadline of task. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private LocalDate deadline; // String containing deadline"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Returns the type of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @return The type of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Returns the deadline of the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @return The deadline of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public LocalDate getDeadline() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Sets the task\u0027s deadline."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param deadline The deadline to set."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public void setDeadline(LocalDate deadline) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Constructs a deadline task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param deadline Task deadline."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public Deadline(String description, LocalDate deadline) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Constructs a deadline task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param isDone Set whether the task is already done or not."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param deadline Task deadline."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public Deadline(boolean isDone, String description, LocalDate deadline) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        super(isDone, description);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Converts the Task object to data representation to be stored in a data file."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * File format:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * taskId, taskType, taskIsDone, taskDesc, taskDate"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param taskId ID of task."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @return String representing the Task object in comma-separated data format."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public String toData(int taskId) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        String dataLine \u003d (taskId + \",\" + this.getType() + \",\" + this.isDone() + \",\" + this.getDescription() + \",\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                + this.getDeadline());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        return dataLine;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Represents the input task as a string."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @return String representing the Task object."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        return (\"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                + this.getDeadline().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rdimaio": 90
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " * Task that is connected to a specific date."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /** Time at which event occurs. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private LocalDate eventTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Get the event time."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @return The event time."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public LocalDate getEventTime() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        return eventTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Returns the type of the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @return The type of the task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Set the event time."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param eventTime The event time to set."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public void setEventTime(LocalDate eventTime) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Constructs an event task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param eventTime Date of event."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public Event(String description, LocalDate eventTime) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Constructs an event task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param isDone Set whether the task is already done or not."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param eventTime Date of event."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public Event(boolean isDone, String description, LocalDate eventTime) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        super(isDone, description);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Converts the Task object to data representation to be stored in a data file."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * File format:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * taskId, taskType, taskIsDone, taskDesc, taskDate"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param taskId ID of task."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @return String representing the Task object in comma-separated data format."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public String toData(int taskId) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        String dataLine \u003d (taskId + \",\" + this.getType() + \",\" + this.isDone() + \",\" + this.getDescription() + \",\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                + this.getEventTime());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        return dataLine;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Represents the input task as a string."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @return String representing the Task object."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        return (\"[E]\" + super.toString() + \" (on: \""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                + this.getEventTime().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rdimaio": 90
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " * Task to be completed."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /** Task description. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /** Boolean indicating whether task is done or not. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Constructs a task object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Constructs a task object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param isDone Marks whether object is already done or not."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public Task(boolean isDone, String description) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Returns the type of the task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @return The type of the task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        return \"Task\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Returns status icon of task depending on value of isDone."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @return Status icon depending on value of isDone."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        return (isDone ? \"/\" : \"X\"); // Return / or X symbols"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Returns task description."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @return The task description."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Returns whether the task is done or not."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @return Whether the task is done."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Marks task as done."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Converts the Task object to data representation to be stored in a data file."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * File format:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * taskId, taskType, taskIsDone, taskDesc"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param taskId ID of task."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @return String representing the Task object in comma-separated data format."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public String toData(int taskId) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        String dataLine \u003d taskId + \", Task\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        return dataLine;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Represents the input task as a string."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @return String representing the Task object."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rdimaio": 100
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import duke.storage.StorageHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " * Class containing a list of Tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /** List containing Task objects. */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Constructs new TaskList."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Loads taskList from data file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param dataFile Data file to load from."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public TaskList(File dataFile) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        populateTaskList(dataFile);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Populates task list from file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param dataFile Data file to populate from."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private void populateTaskList(File dataFile) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            Scanner dataScanner \u003d new Scanner(dataFile);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            while (dataScanner.hasNext()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                parseDataLine(dataScanner.nextLine());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            Ui.formatPrint(\"Error: data file not found. Could not load into the current session\u0027s task list.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Returns the size of the taskList."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @return The size of taskList."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Returns the Task at the input index."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param index Index of desired task."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @return Task at desired index. In case index is invalid, it returns an empty task."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        if (index \u003e\u003d 0 \u0026\u0026 taskList.size() \u003e index) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            return taskList.get(index);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            return new Task(\"\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Parses the current line in the data file to a Task object."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param s String to parse."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private void parseDataLine(String s) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        List\u003cString\u003e strings \u003d Arrays.asList(s.split(\",\"));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        boolean isDone \u003d Boolean.parseBoolean(strings.get(2));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        parseDataLine_parseTask(strings, isDone);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Parses sections of a string to different components of a Task object; finally, adds Task to list."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param strings Components of initial data line."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param isDone Whether the task is done."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private void parseDataLine_parseTask(List\u003cString\u003e strings, boolean isDone) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        switch (strings.get(1)) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            Todo t \u003d new Todo(isDone, strings.get(3));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            taskList.add(t);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            Deadline d \u003d new Deadline(isDone, strings.get(3), LocalDate.parse(strings.get(4)));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            taskList.add(d);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            Event e \u003d new Event(isDone, strings.get(3), LocalDate.parse(strings.get(4)));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            taskList.add(e);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            Ui.formatPrint(\"Error: task type not recognized\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Adds task to taskList and writes it to the data file."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param t Task to add."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param storage Storage object for data file."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public void addTask(Task t, Storage storage) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        taskList.add(t);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        int taskId \u003d taskList.size()-1;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        String dataLine \u003d t.toData(taskId);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        addTask_updateFile(storage, dataLine);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        Ui.formatPrint(\"Added task: \" + t);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Updates data file with new task."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param storage Storage object for data file."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param dataLine Line to write to file."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private void addTask_updateFile(Storage storage, String dataLine) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            storage.writeToFile(dataLine);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            Ui.formatPrint(\"Error saving task to data file.\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Sets task as done."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param taskId ID of task to set as done."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param storage Storage object for data file."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public void setDone(int taskId, Storage storage) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        taskList.get(taskId).markAsDone(); // Mark task with that ID as done"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        setDone_updateFile(taskId, storage);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        Ui.formatPrint(\"Marked task as done.\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Writes that task is done to file."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param taskId ID of task to set as done."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param storage Storage object for data file."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private void setDone_updateFile(int taskId, Storage storage) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            StorageHandler.replaceLine(taskId, taskList.get(taskId).toData(taskId), storage.dataFilePath);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            Ui.formatPrint(\"Error updating line in data file.\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Deletes task from task list and data file."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param taskId ID of task to remove."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param storage Storage object for data file."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public void deleteTask(int taskId, Storage storage) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        taskList.remove(taskId);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        deleteTask_updateFile(taskId, storage);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        Ui.formatPrint(\"Deleted task \" + (taskId+1));"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Removes task from data file."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param taskId ID of task to remove."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param storage Storage object for data file."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    private void deleteTask_updateFile(int taskId, Storage storage) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            StorageHandler.removeLine(taskId, storage.dataFilePath);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            Ui.formatPrint(\"Error while deleting task from data file.\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Finds string in descriptions of tasks in the task list."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param toFind String to find."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public void find(String toFind) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        String s \u003d toFind.trim();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        List\u003cString\u003e matches \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        int matchCounter \u003d 0;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            if (taskList.get(i).getDescription().contains(s)) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                matches.add(taskList.get(i).toString());"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                matchCounter +\u003d 1;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        System.out.println(\"Found \" + matchCounter + \" match(es) in your list:\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        Ui.formatPrint(matches);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rdimaio": 222
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " * Simple task that can be marked as done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Constructs a Todo task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Constructs a Todo task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param isDone Marks whether object is already done or not."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public Todo(boolean isDone, String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        super(isDone, description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Returns the type of the task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @return The type of the task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Converts the Task object to data representation to be stored in a data file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * File format:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * taskId, taskType, taskIsDone, taskDesc"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param taskId ID of task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @return String representing the Task object in comma-separated data format."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public String toData(int taskId) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        String dataLine \u003d taskId + \",\" + this.getType() + \",\" + this.isDone() + \",\" + this.getDescription();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        return dataLine;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Represents the input task as a string."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @return String representing the Task object."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rdimaio": 60
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " * Class for user interface-related functions."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rdimaio"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Displays a welcome message to the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public static void displayWelcome()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        // Logo generated using http://patorjk.com/software/taag/#p\u003ddisplay\u0026f\u003dFire%20Font-s\u0026t\u003dNUSBOT"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        String logo \u003d \"    )       (           )          \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                + \" ( /(       )\\\\ )  (  ( /(   *   )  \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                + \" )\\\\())   ( (()/(( )\\\\ )\\\\())` )  /(  \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                + \"((_)\\\\    )\\\\ /(_))((_|(_)\\\\  ( )(_)) \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                + \" _((_)_ ((_|_))((_)_  ((_)(_(_())  \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                + \"| \\\\| | | | / __|| _ )/ _ \\\\|_   _|  \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                + \"| .` | |_| \\\\__ \\\\| _ \\\\ (_) | | |    \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                + \"|_|\\\\_|\\\\___/|___/|___/\\\\___/  |_|    \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "                + \"                                   \\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        System.out.println(\"Hi! Type \u0027bye\u0027 to leave at any time.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Surrounds the input string with bars and prints it."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param input String to print."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public static void formatPrint(String input) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        System.out.println(\"----------\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        System.out.println(input);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        System.out.println(\"----------\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Surrounds the input TaskList with bars and prints it."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param taskList TaskList to print."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public static void formatPrint(TaskList taskList) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        System.out.println(\"----------\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            System.out.println(i+1 + \". \" + taskList.getTask(i));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        System.out.println(\"----------\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Surrounds the list of strings with bars and prints it."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param list List of strings to print."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public static void formatPrint(List\u003cString\u003e list) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        System.out.println(\"----------\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            System.out.println(list.get(i));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        System.out.println(\"----------\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * Print a message when the user does not input data in the correct format."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     * @param taskType Whether the task is a Deadline or an Event."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    public static void printCorrectDateFormat(String taskType) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            Ui.formatPrint(\"deadline description /by yyyy-mm-dd\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            Ui.formatPrint(\"event description /on yyyy-mm-dd\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rdimaio": 83
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "rdimaio": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "REM script won\u0027t work for me unless I include all .java files in src."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rdimaio"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rdimaio"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "rdimaio": 22
    }
  }
]

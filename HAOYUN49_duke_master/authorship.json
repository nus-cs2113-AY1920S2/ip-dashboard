[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "HAOYUN49": 2,
      "-": 37
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "T | 0 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "D | 0 | return book | Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "E | 0 | meeting | Monday 12-2pm"
      }
    ],
    "authorContributionMap": {
      "HAOYUN49": 3
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public static final String FORMAT_LINE \u003d \"------------------------------------\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public static final String GOODBYE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public static final String INVALID_COMMAND \u003d \"\\uD83D\\uDE22 OOPS!!! This is an invalid command, please type a valid command\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public static final String GREETING \u003d String.format(\"%s\\n%s\", \"Hello, I\u0027m duke.Duke!\", \"What can I do for you?\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public static final String TODO_DESCRIPTION \u003d \"todo \u003cTask Name\u003e\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public static final String DEADLINE_DESCRIPTION \u003d \"deadline \u003cTask Name\u003e /by \u003cDeadline\u003e\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public static final String INVALID_DONE \u003d \"# of the task is invalid\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public static final String DONE_DESCRIPTION \u003d \"done \u003cTask #\u003e\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public static final String CORRECT_FORMAT \u003d \"The correct format should be:\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public static final String INVALID_DESCRIPTION \u003d \"The description of the task is invalid\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public static final String EVENT_DESCRIPTION \u003d \"event \u003cTask Name\u003e /at \u003cTimeslot\u003e\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    private static boolean hasChanges \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    private TaskManager manager \u003d new TaskManager();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public static void printFormat(String str) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        System.out.println(FORMAT_LINE);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        System.out.println(str);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        System.out.println(FORMAT_LINE);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public void exitDuke() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        if(hasChanges) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                manager.writeToFile(\"data/duke.txt\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                printFormat(\"\\uD83D\\uDE22 OOPS!!! Something went wrong when writing to file!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        printFormat(GOODBYE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public void runDuke() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "            manager.loadFile(\"data/duke.txt\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "            printFormat(\"\\uD83D\\uDE22 OOPS!!! File not found!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        while(in.hasNextLine()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "            command \u003d in.nextLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "            String[] commands \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "            if (commands[0].equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "            } else if (commands[0].equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                manager.listTask();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "            } else if (commands[0].equalsIgnoreCase(\"done\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                    manager.markTask(Integer.parseInt(commands[1]));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                    hasChanges \u003d true;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                } catch (IndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                    printFormat(INVALID_DONE + CORRECT_FORMAT + DONE_DESCRIPTION);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "            } else if (commands[0].equalsIgnoreCase(\"todo\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                    manager.addTodo(commands[1]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                    hasChanges \u003d true;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                    printFormat(INVALID_DESCRIPTION + CORRECT_FORMAT + TODO_DESCRIPTION);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "            } else if (commands[0].equalsIgnoreCase(\"deadline\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                    manager.addDeadline(commands[1]);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                    hasChanges \u003d true;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                    printFormat(INVALID_DESCRIPTION + CORRECT_FORMAT + DEADLINE_DESCRIPTION);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "            } else if (commands[0].equalsIgnoreCase(\"event\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                    manager.addEvent(commands[1]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                    hasChanges \u003d true;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                    printFormat(INVALID_DESCRIPTION + CORRECT_FORMAT + EVENT_DESCRIPTION);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "            } else if (commands[0].equalsIgnoreCase(\"delete\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                    manager.delete(Integer.parseInt(commands[1]));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                } catch (IndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                    printFormat(INVALID_DONE + CORRECT_FORMAT + DONE_DESCRIPTION.replace(\"done\", \"delete\"));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                printFormat(INVALID_COMMAND);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        printFormat(GREETING);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        System.out.println(\"Welcome to\\n\" + logo);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        duke.greet();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        duke.runDuke();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        duke.exitDuke();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HAOYUN49": 107,
      "-": 9
    }
  },
  {
    "path": "src/main/java/duke/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public static final String FORMAT_LINE \u003d \"------------------------------------\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public static final String LISTING \u003d \"Here is the list of all tasks you have:\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public static final String DONE_TASK \u003d \"Good job! You have done this task:\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public static final String ADD_TASK \u003d \"Got it! I have added this task into your list:\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public static final String DELETE_TASK\u003d \"Noted! I have deleted this task from the list:\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public void printCommand(String command, String str) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        System.out.println(FORMAT_LINE);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        System.out.println(command);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        System.out.println(\"\\t\" + str);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + (tasks.size() \u003e 1 ? \" tasks\" : \" task\") + \" in the list\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        System.out.println(\"Remember to finish your tasks on time!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        System.out.println(FORMAT_LINE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public void loadFile(String filePath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        Scanner fileIn \u003d new Scanner(f);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        String record;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        while (fileIn.hasNextLine()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "            record \u003d fileIn.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "            String[] meta \u003d record.split(\"\\\\|\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "            switch (meta[0].trim()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                tasks.add(new Todo(meta[2].trim(), meta[1].trim().equals(\"1\")));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                tasks.add(new Deadline(meta[2].trim(), meta[1].trim().equals(\"1\"), meta[3].trim()));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                tasks.add(new Event(meta[2].trim(), meta[1].trim().equals(\"1\"), meta[3].trim()));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public void writeToFile(String filePath) throws IOException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        for(Task task: tasks) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "            fw.write(task.textToFile());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public void addTodo(String command) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        tasks.add(new Todo(command));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        printCommand(ADD_TASK, tasks.get(tasks.size()-1).print());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public void addDeadline(String command) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        String[] commands \u003d command.split(\"/\", 2);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        tasks.add(new Deadline(commands));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        printCommand(ADD_TASK, tasks.get(tasks.size()-1).print());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public void addEvent(String command) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        String[] commands \u003d command.split(\"/\", 2);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        tasks.add(new Event(commands));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        printCommand(ADD_TASK, tasks.get(tasks.size()-1).print());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public void listTask() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        System.out.println(FORMAT_LINE);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        System.out.println(LISTING);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        for(Task task: tasks) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "            System.out.println(i++ + \".\" + task.print());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        System.out.println(FORMAT_LINE);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public void markTask(int taskNo) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        printCommand(DONE_TASK,\"  [\\u2713] \" + tasks.get(taskNo-1).getName());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        tasks.get(taskNo-1).changeStatus(true);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public void delete(int taskNo) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        String description \u003d tasks.get(taskNo-1).print();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        tasks.remove(taskNo-1);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        printCommand(DELETE_TASK, description);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HAOYUN49": 101
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    String deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public Deadline(String[] commands) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        super(commands[0].trim());"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        deadline \u003d commands[1].split(\" \",2)[1];"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public Deadline(String command, boolean status, String deadline) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        super(command, status);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public String textToFile() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        String text \u003d \"D | 0 | \" + name + \" | \" + deadline + System.lineSeparator();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        if(isDone) text.replace(\"| 0 |\", \"| 1 |\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        return  text;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public String print() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        String str \u003d \"[D]\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        if(isDone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "            str +\u003d \"[\\u2713]\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "            str +\u003d \"[\\u274c]\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        return str \u003d str + \" \" + name + \" (by: \" + deadline + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HAOYUN49": 32
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    String timeSlot;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public Event(String[] commands) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        super(commands[0].trim());"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        timeSlot \u003d commands[1].split(\" \",2)[1];"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public Event(String command, boolean status, String timeSlot) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        super(command, status);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        this.timeSlot \u003d timeSlot;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public String textToFile() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        String text \u003d \"E | 0 | \" + name + \" | \" + timeSlot + System.lineSeparator();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        if(isDone) text.replace(\"| 0 |\", \"| 1 |\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        return  text;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public String print() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        String str \u003d \"[E]\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        if(isDone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "            str +\u003d \"[\\u2713]\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "            str +\u003d \"[\\u274c]\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        return str \u003d str + \" \" + name + \" (at: \" + timeSlot + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HAOYUN49": 31
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    String name;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public Task(String name, boolean status) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        isDone \u003d status;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public void changeStatus(boolean newStatus) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        isDone \u003d newStatus;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public abstract String textToFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public abstract String print();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HAOYUN49": 33
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public Todo(String command) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public Todo(String command, boolean status) {super(command, status);};"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public String textToFile() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        String text \u003d \"T | 0 | \" + name + System.lineSeparator();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        if(isDone) text.replace(\"| 0 |\", \"| 1 |\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    public String print(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        String str \u003d \"[T]\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        if(isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "            str +\u003d \"[\\u2713]\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "            str +\u003d \"[\\u274c]\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "        return str \u003d str + \" \" + name;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HAOYUN49"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HAOYUN49": 26
    }
  }
]

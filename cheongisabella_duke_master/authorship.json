[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "D | 1 | increment level-7  | 1:30pm"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "D | 0 | email coach  | 2pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "T | 0 | 2105 webcast 4"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "T | 0 | 2017 webcast 5"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "E | 0 | run + shower  | 6-7pm"
      }
    ],
    "authorContributionMap": {
      "cheongisabella": 5
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    //protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    public Deadline(String action, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        super(action);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        this.taskType \u003d \"D\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        this.date \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        return \"[\" + taskType + \"]\" + super.toString() + \"(by: \" + date + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheongisabella": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            loadFile(\"data/duke.txt\", taskList);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        String[] validCommands \u003d {\"todo\", \"deadline\", \"event\", \"done\", \"list\", \"delete\"};"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Isabella\" + System.lineSeparator() + \"What can I do for you?\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        line \u003d in.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        while (checkLoop(line)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            String[] words \u003d  line.split(\" \", 2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            String command \u003d words[0].toLowerCase();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "                checkValidCommand(command, validCommands);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "                System.out.println(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "                line \u003d in.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "                displayList(taskList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "                determineTask(command, line, taskList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            line \u003d in.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            saveFile(\"data/duke.txt\", taskList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    //read text file to load previously saved taskList"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    private static void loadFile (String filePath, ArrayList\u003cTask\u003e taskList) throws FileNotFoundException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            String[] words \u003d  line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            if (words[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "                Task t \u003d new Todo (words[2]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "                if (words[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "                    t.markAsDone();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "                taskList.add(t);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            } else if (words[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "                Task t \u003d new Deadline(words[2], words[3]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "                if (words[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "                    t.markAsDone();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "                taskList.add(t);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "                Task t \u003d new Event(words[2], words[3]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "                if (words[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "                    t.markAsDone();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "                taskList.add(t);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    //save taskList to text file before end program"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    private static void saveFile (String filePath, ArrayList\u003cTask\u003e taskList) throws IOException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        //FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        String lineInTextFile;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        String taskComplete;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            FileWriter fw;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "                fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "                fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            if (taskList.get(i).isDone) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "                taskComplete \u003d \"1\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "                taskComplete \u003d \"0\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            lineInTextFile \u003d taskList.get(i).taskType + \" | \" + taskComplete +"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "                    \" | \" + taskList.get(i).action;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            if (taskList.get(i).date !\u003d null) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "                lineInTextFile +\u003d (\" | \" + taskList.get(i).date + System.lineSeparator());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "                lineInTextFile +\u003d System.lineSeparator();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            fw.write(lineInTextFile);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    public static boolean checkLoop(String line) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        String s \u003d line.toLowerCase();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        if (s.startsWith(\"bye\")) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    public static void checkValidCommand(String command, String[] validCommands) throws DukeException {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        boolean isValidTask \u003d false;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        for (String c : validCommands) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            if (command.equals(c)) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "                isValidTask \u003d true;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        if (!isValidTask) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    public static void checkMissingDescription(String command, String taskDescription, ArrayList\u003cTask\u003e taskList) throws DukeException {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        String[] arr \u003d taskDescription.split(\" \");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        String action \u003d arr[1];"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            index \u003d taskDescription.indexOf(\"/by \");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            if (action.startsWith(\"/by\")) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "                index \u003d -1;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            index \u003d taskDescription.indexOf(\"/at \");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            if (action.startsWith(\"/at\")) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "                index \u003d -1;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        } else if (command.equals(\"done\") || command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            int listNumber \u003d Integer.parseInt(action);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            if (listNumber \u003e taskList.size()) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "                index \u003d -1;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        if ((action.length() \u003d\u003d 0) || (index \u003d\u003d -1)) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    public static void printEditTask(String command, Task t, ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        String editWord;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            editWord \u003d \"removed\";"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            editWord \u003d \"added\";"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done: \" + System.lineSeparator() + t);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve \" + editWord + \" this task: \" + System.lineSeparator() + t"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "                    + System.lineSeparator() + \"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    public static void printErrorMessage(String command) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        String commandType \u003d \"\", addition \u003d \"\";"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            commandType \u003d \"a \" + command;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            addition \u003d \".\";"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        } else if (command.equals(\"deadline\")){"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            commandType \u003d \"a \" + command;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            addition \u003d  \" and needs a date indicated by \\\"/by \\\".\";"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            commandType \u003d \"an \" + command;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            addition \u003d  \" and needs a date indicated by \\\"/at \\\".\";"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        } else if (command.equals(\"done\") || command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            commandType \u003d command;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            addition \u003d \" and has to be a number in the list.\";"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        System.out.println(\"â˜¹ OOPS!!! The description of \" + commandType + \" cannot be empty\" + addition);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    public static void displayList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            System.out.println(\"There is nothing on the list.\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        System.out.println(\"Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            System.out.println(i + 1 + \".\" + taskList.get(i));"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    public static void determineTask(String command, String taskDescription, ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        String action, date;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            checkMissingDescription(command, taskDescription, taskList);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            printErrorMessage(command);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        } catch (NumberFormatException e) { //if parse invalid string into Integer.parseInt()"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            printErrorMessage(command);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) { //if arr[1] doesn\u0027t exist and no word after command"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            printErrorMessage(command);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            action \u003d taskDescription.substring(5);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            Task t \u003d new Todo(action);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            taskList.add(t);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            printEditTask(command, t, taskList);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            int startOfDate \u003d taskDescription.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            action \u003d taskDescription.substring(9, startOfDate);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            date \u003d taskDescription.substring(startOfDate + 4);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            Task t \u003d new Deadline(action, date);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            taskList.add(t);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            printEditTask(command, t, taskList);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            int startOfDate \u003d taskDescription.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            action \u003d taskDescription.substring(6, startOfDate);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            date \u003d taskDescription.substring(startOfDate + 4);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            Task t \u003d new Event(action, date);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            taskList.add(t);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            printEditTask(command, t, taskList);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            int listNumber \u003d Integer.parseInt(taskDescription.substring(5));"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            Task t \u003d taskList.get(listNumber-1);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            t.markAsDone();"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            printEditTask(command, t, taskList);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            int listNumber \u003d Integer.parseInt(taskDescription.substring(7));"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            Task t \u003d taskList.get(listNumber-1);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            taskList.remove(t);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            printEditTask(command, t, taskList);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheongisabella": 258,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheongisabella": 2
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    //protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    public Event(String action, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        super(action);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        this.taskType \u003d \"E\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        this.date \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        return \"[\" + taskType + \"]\" + super.toString() + \"(at: \" + date + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheongisabella": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    protected String action;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    public Task(String action) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        this.action \u003d action;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        this.taskType \u003d \"T\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        this.date \u003d null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    public String checkIfDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            return \"\\u2713\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "            return \"\\u2718\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    public boolean markAsDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        return isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        return \"[\" + checkIfDone() + \"] \" + action;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheongisabella": 30
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    //protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    public Todo(String action) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        super(action);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "        return \"[\" + taskType + \"]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheongisabella"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheongisabella": 12
    }
  }
]

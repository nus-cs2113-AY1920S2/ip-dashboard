[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "import java.lang.NullPointerException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "import Duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "import Exceptions.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    private static Task[] tasks \u003d new Task[100];"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    private static int size \u003d 0;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args)  {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        Scanner myScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        String userName \u003d GreetingsAndFunctions(myScanner); //Greetings and list of Functions"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        boolean flag \u003d true; //Boolean flag for while loop"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        String function \u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        while (flag \u003d\u003d true) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                function \u003d myScanner.next();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                String line \u003d myScanner.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                switch (function) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        if(line.equals(\"\")){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            throw new MissingDescriptionException(\"☹ OOPS!!! The todo description cannot be empty!!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        addtask(new Todo(line));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        printAddedTask(\"New To-Do Duke.Task added:\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        String[] description \u003d line.split(\"/\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        if(description[0].equals(\"\")){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            throw new MissingDescriptionException(\"☹ OOPS!!! The deadline description cannot be empty!!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        String[] deadLine \u003d description[1].split(\"by \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        if(description[0] \u003d\u003d null){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            throw new ArrayIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        addtask(new Deadline(description[0], deadLine[1]));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        printAddedTask(\"New Duke.Task with deadline added:\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        String[] eventName \u003d line.split(\"/\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        if(eventName[0].equals(\"\")){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            throw new MissingDescriptionException(\"☹ OOPS!!! The event description cannot be empty!!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        String[] event \u003d eventName[1].split(\"at \");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        if(event[0].equals(null)){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            throw new ArrayIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        addtask(new Events(eventName[0], event[1]));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        printAddedTask(\"New event added:\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                    case \"bye\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        System.out.println(\"Bye \" + userName + \"! Hope to see you again soon!\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        flag \u003d false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        System.out.println(\"Here are your task(s) currently in your planner:\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            System.out.println(i + 1 + \".\" + tasks[i]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        String l \u003d line.replace(\" \", \"\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        if(l \u003d\u003d \"\"){"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        int taskNumber \u003d Integer.parseInt(l);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        tasks[taskNumber - 1].markAsDone(tasks[taskNumber - 1]);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        if(tasks[0] \u003d\u003d null){"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            throw new NullPointerException();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        System.out.println(\"Great job! I\u0027ve marked this task as done in your planner:\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        System.out.println(tasks[taskNumber - 1]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        System.out.println(\"Please key in a valid function\"); //loop till valid function entered"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            } catch (MissingDescriptionException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "               e.printDescr();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                System.out.println(\"☹ OOPS! Error storing date and time!! Please try again.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                System.out.println(\"☹ OH NO! task number is missing!! Please try storing a task first.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                System.out.println(\"☹ OOPS! Missing command! Please try command: done [task number] \");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    // method for printing the last type of task entered"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public static void printAddedTask(String s) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        System.out.println(tasks[size - 1]);                     //size-1 to get index value of current task"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        System.out.println(\"Total number of tasks in the list:  \" + size);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    // method for greeting and displaying of all available functions"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public static String GreetingsAndFunctions(Scanner myScanner) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        System.out.println(\"Hey there! My name is Duke and i will be your personal assistant.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        System.out.println(\"Please enter your username: \");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        String userName \u003d myScanner.nextLine();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        System.out.println(\"Hi \" + userName + \"!\" + \" What can i do for you?\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        System.out.println(\" ___________________________________________________________________________________________________________\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        System.out.println(\"|  Functions:  |                 Descriptions:                      |               Example:                |\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        System.out.println(\"|______________|____________________________________________________|_______________________________________|\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        System.out.println(\"|   todo       |                Create a To-do task                 | (eg. todo borrow books)               |\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        System.out.println(\"|   deadline   |                Create a task with a deadline       | (eg. deadline bathe /by 9PM)          |\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        System.out.println(\"|   event      |                Create an event task                | (eg. event Meeting /at Library, 12PM) |\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        System.out.println(\"|   list       |                List all the task in your planner   |                                       |\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        System.out.println(\"|   done       |                Mark a task as completed            |                                       |\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        System.out.println(\"|   bye        |                Exit Planner                        |                                       |\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        System.out.println(\"|______________|____________________________________________________|_______________________________________|\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        System.out.println(\"Please key in your command: \");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        return userName;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    //method for adding adding newly created task into tasks array"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public static void addtask(Task description) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        tasks[size++] \u003d description;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 9,
      "yuxianglim": 138
    }
  },
  {
    "path": "src/main/java/Duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + getDeadline() + \")\" ;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxianglim": 20
    }
  },
  {
    "path": "src/main/java/Duke/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public Events(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public String getEvent(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + getEvent() + \")\" ;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxianglim": 20
    }
  },
  {
    "path": "src/main/java/Duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public void markAsDone(Task description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + getDescription();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxianglim": 29
    }
  },
  {
    "path": "src/main/java/Duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public Todo(String description){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "yuxianglim": 16
    }
  },
  {
    "path": "src/main/java/Exceptions/MissingDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "public class MissingDescriptionException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    String errorDescriptions;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public MissingDescriptionException(String errorDescriptions){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        this.errorDescriptions \u003d errorDescriptions;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public void printDescr(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        System.out.println(errorDescriptions);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxianglim": 14
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "Potatochips"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "todo borrow book list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "yuxianglim": 13
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "REM java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "REM java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "yuxianglim": 24
    }
  }
]

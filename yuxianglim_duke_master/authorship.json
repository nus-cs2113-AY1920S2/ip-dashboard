[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "Duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for Duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "yuxianglim": 2
    }
  },
  {
    "path": "data/Tasklist.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "yuxianglim": 3
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "import java.lang.NullPointerException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "import Duke.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "import Exceptions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "import java.nio.file.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    private static int size \u003d 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        importTaskFromFile();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        Scanner myScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        String userName \u003d GreetingsAndFunctions(myScanner); //Greetings and list of Functions"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        boolean flag \u003d true; //Boolean flag for while loop"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        String function \u003d null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        while (flag \u003d\u003d true) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                function \u003d myScanner.next();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                String line \u003d myScanner.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                switch (function) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        if(line.equals(\"\")){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            throw new MissingDescriptionException(\"☹ OOPS!!! The todo description cannot be empty!!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        addtask(new Todo(line));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        writeToFile(function,line);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        printAddedTask(\"New To-Do Task added:\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        String[] description \u003d line.split(\"/\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        if(description[0].equals(\"\")){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            throw new MissingDescriptionException(\"☹ OOPS!!! The deadline description cannot be empty!!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        String[] deadLine \u003d description[1].split(\"by \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        if(description[0] \u003d\u003d null){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            throw new ArrayIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        addtask(new Deadline(description[0], deadLine[1]));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        writeToFile(function,line);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        printAddedTask(\"New Task with deadline added:\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        String[] eventName \u003d line.split(\"/\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        if(eventName[0].equals(\"\")){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            throw new MissingDescriptionException(\"☹ OOPS!!! The event description cannot be empty!!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        String[] event \u003d eventName[1].split(\"at \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        if(event[0].equals(null)){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            throw new ArrayIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        addtask(new Events(eventName[0], event[1]));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        writeToFile(function,line);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        printAddedTask(\"New event added:\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                    case \"bye\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        System.out.println(\"Bye \" + userName + \"! Hope to see you again soon!\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        flag \u003d false;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        if(tasks.size() !\u003d 0) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            System.out.println(\"Here are your task(s) currently in your planner:\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                                System.out.println(i + 1 + \".\" + tasks.get(i));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            System.out.println(\"Wow! your planner is empty currently! Try adding some tasks first!\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        String l \u003d line.replace(\" \", \"\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        if(l \u003d\u003d \"\"){"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        int taskNumber \u003d Integer.parseInt(l) - 1;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        if(taskNumber \u003e\u003d tasks.size() || taskNumber \u003c 0){"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                                throw new NullPointerException();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        tasks.get(taskNumber).markAsDone(tasks.get(taskNumber));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        String str \u003d tasks.get(taskNumber).toString();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        String str2 \u003d str.substring(6,str.length());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        appendToFile(str2);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        System.out.println(\"Great job! I\u0027ve marked this task as done in your planner:\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        System.out.println(tasks.get(taskNumber));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                    case \"delete\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        l \u003d line.replace(\" \",\"\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        taskNumber \u003d Integer.parseInt(l) - 1;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        if(l \u003d\u003d \"\"){"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        if(taskNumber \u003e\u003d tasks.size() || taskNumber \u003c 0){"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            throw new NullPointerException();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        System.out.println(tasks.get(taskNumber));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        str \u003d tasks.get(taskNumber).toString();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        str2 \u003d str.substring(6,str.length());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        deleteToFile(str2);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        tasks.remove(taskNumber);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        System.out.println(\"Now you have \" + tasks.size() + \" tasks in your list.\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        System.out.println(\"Please key in a valid function\"); //loop till valid function entered"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            } catch (MissingDescriptionException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "               e.printDescr();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                System.out.println(\"☹ OOPS! Error storing date and time!! Please try again.\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                System.out.println(\"☹ OH NO! task number is missing!! Please try storing a task first.\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                System.out.println(\"☹ OOPS! Missing command! Please try command: done [task number] \");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            } catch (WhitespaceExceptions e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                System.out.println(\"Error while appending to file. Please check your white spaces and symbols.\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    private static void writeToFile(String str1, String str2) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        String filePath \u003d \"data/Tasklist.txt\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            if (str1.contains(\"todo\")) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                String newLineFormatted \u003d str2.stripLeading();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                fw.write(\"T//0//\" + newLineFormatted + System.lineSeparator());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                fw.close();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            if (str1.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                String[] newLineFormatted \u003d str2.split(\"/by\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                fw.write(\"D//0//\" + newLineFormatted[0].trim() + \"//\" + newLineFormatted[1].trim() + System.lineSeparator());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                fw.close();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            if (str1.contains(\"event\")){"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                String[] newLineFormatted \u003d str2.split(\"/at\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                fw.write(\"E//0//\" + newLineFormatted[0].trim() + \"//\" + newLineFormatted[1].trim() + System.lineSeparator());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                fw.close();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            System.out.println(\"Error while writing into file. Please try again\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    private static void appendToFile(String newLine) throws WhitespaceExceptions {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        String taskSymbol;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        String [] strArr;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        String timeDate;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    //    System.out.println(\"input:\"+newLine);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        if(newLine.contains(\"(by:\")){"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            String newline2 \u003d newLine.replace(\"(by:\", \":\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            strArr \u003d newline2.split(\":\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            description \u003d strArr[0].trim();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            System.out.println(description);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            timeDate \u003d strArr[1].replace(\")\",\"\").trim();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            taskSymbol \u003d \"D//\";"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "         //   System.out.println(\"D Formatted: \" + description + timeDate);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        } else if (newLine.contains(\"(at:\")) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            String newline2 \u003d newLine.replace(\"(at:\", \":\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            strArr \u003d newline2.split(\":\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            description \u003d strArr[0].trim();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            timeDate \u003d strArr[1].replace(\")\",\"\").trim();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            taskSymbol \u003d \"E//\";"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "         //   System.out.println(\" E Formatted: \" + description + timeDate);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            description \u003d newLine.trim();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            timeDate \u003d \"\";"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            taskSymbol \u003d \"T//\";"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "         //   System.out.println(\"T Formatted: \" + description);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        if(description.isBlank()){"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            throw new WhitespaceExceptions();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        String filePath \u003d \"data/Tasklist.txt\";"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        File fileToBeModified \u003d new File(filePath);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        String originalFileContent \u003d \"\";"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        BufferedReader reader \u003d null;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        FileWriter writer \u003d null;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            reader \u003d new BufferedReader(new FileReader(fileToBeModified));"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            String currentReadingLine \u003d reader.readLine();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            String oldString \u003d null;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            String newString \u003d null;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            while (currentReadingLine !\u003d null) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                if(currentReadingLine.contains(description)){"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                    oldString \u003d currentReadingLine;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                    newString \u003d taskSymbol + 1 + \"//\" + description + \"//\" + timeDate;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                originalFileContent +\u003d currentReadingLine + System.lineSeparator();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                currentReadingLine \u003d reader.readLine();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            String newFileContent \u003d originalFileContent.replace(oldString, newString);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            writer \u003d new FileWriter(fileToBeModified);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            writer.write(newFileContent);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            System.out.println(\"Error appending to file! Please try again!\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                reader.close();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                writer.close();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            } catch (IOException e){"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    private static void deleteToFile(String newLine) throws WhitespaceExceptions {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        String taskSymbol;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        String [] strArr;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        String timeDate;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    //    System.out.println(\"input:\"+newLine);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        if(newLine.contains(\"(by:\")){"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            String newline2 \u003d newLine.replace(\"(by:\", \":\");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            strArr \u003d newline2.split(\":\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            description \u003d strArr[0].trim();"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            timeDate \u003d strArr[1].replace(\")\",\"\").trim();"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            taskSymbol \u003d \"D//\";"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "         //   System.out.println(\"D Formatted: \" + description + timeDate);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        } else if (newLine.contains(\"(at:\")) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            String newline2 \u003d newLine.replace(\"(at:\", \":\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            strArr \u003d newline2.split(\":\");"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            description \u003d strArr[0].trim();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            timeDate \u003d strArr[1].replace(\")\",\"\").trim();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            taskSymbol \u003d \"E//\";"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "         //   System.out.println(\" E Formatted: \" + description + timeDate);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            description \u003d newLine.trim();"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            timeDate \u003d \"\";"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            taskSymbol \u003d \"T//\";"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "         //   System.out.println(\"T Formatted: \" + description);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        if(description.isBlank()){"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            throw new WhitespaceExceptions();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        String filePath \u003d \"data/Tasklist.txt\";"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        File fileToBeModified \u003d new File(filePath);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        String originalFileContent \u003d \"\";"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        BufferedReader reader \u003d null;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        FileWriter writer \u003d null;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            reader \u003d new BufferedReader(new FileReader(fileToBeModified));"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            String currentReadingLine \u003d reader.readLine();"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            String oldString \u003d null;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            String newString \u003d null;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            while (currentReadingLine !\u003d null) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                if(currentReadingLine.contains(description)){"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                    oldString \u003d currentReadingLine;"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                    newString \u003d \"\";"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                originalFileContent +\u003d currentReadingLine + System.lineSeparator();"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                currentReadingLine \u003d reader.readLine();"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            String newFileContent \u003d originalFileContent.replace(oldString, newString);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            writer \u003d new FileWriter(fileToBeModified);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            writer.write(newFileContent);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            System.out.println(\"Error appending to file! Please try again!\");"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                reader.close();"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                writer.close();"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            } catch (IOException e){"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    "
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    private static void importTaskFromFile() {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            Path path \u003d Paths.get(\"data\");"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            if(!Files.exists(path)) {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                Files.createDirectory(path);"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                File f \u003d new File(\"data/Tasklist.txt\");"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                File f \u003d new File(\"data/Tasklist.txt\");"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                Scanner fileScanner \u003d new Scanner(f);"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                while (fileScanner.hasNextLine()) {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                    String line \u003d fileScanner.nextLine();"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                    String[] singleTaskDescriptions \u003d line.split(\"//\");"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                    switch (singleTaskDescriptions[0]) {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        case \"T\":"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            addtask(new Todo(singleTaskDescriptions[2]));"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            if(Integer.parseInt(singleTaskDescriptions[1]) \u003d\u003d 1){"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                                tasks.get(size - 1).importDone();"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        case \"D\":"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            addtask(new Deadline(singleTaskDescriptions[2], singleTaskDescriptions[3]));"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            if(Integer.parseInt(singleTaskDescriptions[1]) \u003d\u003d 1){"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                                tasks.get(size - 1).importDone();"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        case \"E\":"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            addtask(new Events(singleTaskDescriptions[2], singleTaskDescriptions[3]));"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            if(Integer.parseInt(singleTaskDescriptions[1]) \u003d\u003d 1){"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                                tasks.get(size - 1).importDone();"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            System.out.println(\"Error occurred. Please try again!\");"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    // method for printing the last type of task entered"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public static void printAddedTask(String s) {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        System.out.println(\"Total number of tasks in the list:  \" + tasks.size());"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    // method for greeting and displaying of all available functions"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public static String GreetingsAndFunctions(Scanner myScanner) {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            String logo \u003d \" _____     _      ______ ______\\n\""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        + \"|  _  \\\\   / \\\\    |  __  |  ____|\\n\""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        + \"| |_| |  / _ \\\\   | |__| | |___\\n\""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        + \"|  _  | / /_\\\\ \\\\  |  ____|  ___|\\n\""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        + \"| |_| |/ _____ \\\\ | |    | |____\\n\""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "                        + \"|_____/_/     \\\\_\\\\|_|    |______|\\n\";"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            System.out.println(logo);"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            System.out.println(\"Hey there! BAPE, your scheduler\");"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            System.out.println(\"How do i call you? \");"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            String userName \u003d myScanner.nextLine();"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            System.out.println(\"Hi \" + userName + \"!\" + \" What can i do for you?\");"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            System.out.println(\" ___________________________________________________________________________________________________________\");"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            System.out.println(\"|  Functions:  |                 Descriptions:                      |               Example:                |\");"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            System.out.println(\"|______________|____________________________________________________|_______________________________________|\");"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            System.out.println(\"|   todo       |                Create a To-do task                 | (eg. todo borrow books)               |\");"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            System.out.println(\"|   deadline   |                Create a task with a deadline       | (eg. deadline bathe /by 9PM)          |\");"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            System.out.println(\"|   event      |                Create an event task                | (eg. event Meeting /at Library, 12PM) |\");"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            System.out.println(\"|   list       |                List all the task in your planner   |                                       |\");"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            System.out.println(\"|   done       |                Mark a task as completed            |                                       |\");"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            System.out.println(\"|   bye        |                Exit Planner                        |                                       |\");"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            System.out.println(\"|______________|____________________________________________________|_______________________________________|\");"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            System.out.println(\"Please key in your command: \");"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "            return userName;"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    //method for adding adding newly created task into tasks array"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public static void addtask(Task description) {"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        tasks.add(description);"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        size++;"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "yuxianglim": 376
    }
  },
  {
    "path": "src/main/java/Duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + getDeadline() + \")\" ;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxianglim": 20
    }
  },
  {
    "path": "src/main/java/Duke/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public Events(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public String getEvent(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + getEvent() + \")\" ;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxianglim": 20
    }
  },
  {
    "path": "src/main/java/Duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public void markAsDone(Task description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public void importDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + getDescription();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxianglim": 33
    }
  },
  {
    "path": "src/main/java/Duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public Todo(String description){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "yuxianglim": 16
    }
  },
  {
    "path": "src/main/java/Exceptions/MissingDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "public class MissingDescriptionException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    String errorDescriptions;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public MissingDescriptionException(String errorDescriptions){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        this.errorDescriptions \u003d errorDescriptions;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    public void printDescr(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "        System.out.println(errorDescriptions);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxianglim": 14
    }
  },
  {
    "path": "src/main/java/Exceptions/WhitespaceExceptions.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "public class WhitespaceExceptions extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxianglim": 5
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "Potatochips"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "todo borrow book list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "todo watch movie"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "yuxianglim": 20
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Exceptions\\*.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "REM java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": " java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e EXPECTED.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxianglim"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "yuxianglim": 27
    }
  }
]

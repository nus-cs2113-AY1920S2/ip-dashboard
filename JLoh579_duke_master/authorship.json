[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "JLoh579": 2,
      "-": 37
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 15
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static final String FOUR_SPACE_INDENT \u003d \"    \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static final String SIX_SPACE_INDENT \u003d \"      \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static final String BORDER \u003d FOUR_SPACE_INDENT + \"_______________________________________________________\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            \"____________\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static int taskIndex;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static boolean isExiting \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            loadDataFromDisk();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            greet();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            takeCommands();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            exit();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static void loadDataFromDisk() throws IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        int dividerIndex;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        File dir \u003d new File(\"data\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        if (!dir.exists()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            System.out.println(FOUR_SPACE_INDENT + \"Making directory: \\\"data\\\"\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            dir.mkdir();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        File file \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            System.out.println(FOUR_SPACE_INDENT + \"Creating file: \\\"duke.txt\\\"\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        file.createNewFile();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + \"Loading tasks from \\\"data/duke.txt\\\", if there are any...\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        Scanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            switch (line.charAt(1)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            case \u0027T\u0027:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                description \u003d line.substring(7);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                tasks.add(new ToDo(description));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            case \u0027D\u0027:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                dividerIndex \u003d line.indexOf(\"(by\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                description \u003d line.substring(7, (dividerIndex - 1));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                String by \u003d line.substring(dividerIndex + 5, line.length() - 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                tasks.add(new Deadline(description, by));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            case \u0027E\u0027:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                dividerIndex \u003d line.indexOf(\"(at\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                description \u003d line.substring(7, (dividerIndex - 1));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                String at \u003d line.substring(dividerIndex + 5, line.length() - 1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                tasks.add(new Event(description, at));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            if (line.charAt(4) \u003d\u003d \u00271\u0027) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                tasks.get(tasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + \"Loading done.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static void takeCommands() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        while(!isExiting) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                command \u003d getCommand();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                executeCommand(command);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                System.out.println(BORDER);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                System.out.println(FOUR_SPACE_INDENT + \"Sorry, me don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                if (e.getMessage() !\u003d null) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    System.out.println(FOUR_SPACE_INDENT + e.getMessage());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                System.out.println(BORDER);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                System.out.println(BORDER);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                System.out.println(FOUR_SPACE_INDENT + \"Index must be an integer, like \\\"1\\\", but not \\\"one\\\".\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                System.out.println(BORDER);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            } catch (TaskIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                System.out.println(BORDER);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                System.out.println(FOUR_SPACE_INDENT + \"That index is outta range!\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                System.out.println(BORDER);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static void executeCommand(String command) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String[] commandSubstrings \u003d command.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            isExiting \u003d true;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            listTasks();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } else if (command.equals(\"thanks\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            printThanksResponse();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } else if (commandSubstrings[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            checkOffTask();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            saveTaskstoDisk();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } else if (commandSubstrings[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            deleteTask();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            saveTaskstoDisk();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } else if (commandSubstrings[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            addTodo(command.substring(5).trim());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            saveTaskstoDisk();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } else if (commandSubstrings[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            addDeadline(command.substring(9));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            saveTaskstoDisk();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } else if (commandSubstrings[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            addEvent(command.substring(6));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            saveTaskstoDisk();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static void printThanksResponse() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + \"The great Taskmaster Yipyap appreciates your gratitude :-)\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static void saveTaskstoDisk() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"data/duke.txt\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                fw.write(task.toString() + System.lineSeparator());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static void deleteTask() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + \"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(SIX_SPACE_INDENT + tasks.get(taskIndex - 1).toString());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        tasks.remove(taskIndex - 1);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static void addEvent(String info) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        int dividerIndex \u003d info.indexOf(\"/at\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String description \u003d info.substring(0, (dividerIndex - 1)).trim();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String at \u003d info.substring(dividerIndex + 4).trim();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        tasks.add(new Event(description, at));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        printAddedTask();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static void addDeadline(String info) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        int dividerIndex \u003d info.indexOf(\"/by\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String description \u003d info.substring(0, (dividerIndex - 1)).trim();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String by \u003d info.substring(dividerIndex + 4).trim();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        tasks.add(new Deadline(description, by));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        printAddedTask();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static void addTodo(String description) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        tasks.add(new ToDo(description));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        printAddedTask();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static void printAddedTask() {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(SIX_SPACE_INDENT + tasks.get(tasks.size() - 1).toString());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static void checkOffTask() {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        tasks.get(taskIndex - 1).markAsDone();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + \"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(SIX_SPACE_INDENT + tasks.get(taskIndex - 1).toString());"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static void listTasks() {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        int bulletNum \u003d 1;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            System.out.println(FOUR_SPACE_INDENT + \"No tasks found.\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            System.out.println(FOUR_SPACE_INDENT + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                System.out.println(FOUR_SPACE_INDENT + bulletNum + \".\" + task.toString());"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                bulletNum++;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static String getCommand() throws InvalidCommandException, TaskIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        while (input.isEmpty()) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            input \u003d in.nextLine();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            input \u003d input.trim();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        // Input is not empty"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String[] inputSubstrings \u003d input.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        if (inputSubstrings.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            if (!inputSubstrings[0].equals(\"list\") \u0026\u0026 !inputSubstrings[0].equals(\"bye\") \u0026\u0026"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    !inputSubstrings[0].equals(\"thanks\")) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                throw new InvalidCommandException();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } else if (!inputSubstrings[0].equals(\"done\") \u0026\u0026 !inputSubstrings[0].equals(\"todo\") \u0026\u0026"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                !inputSubstrings[0].equals(\"deadline\") \u0026\u0026 !inputSubstrings[0].equals(\"event\") \u0026\u0026"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                !inputSubstrings[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } else if (inputSubstrings[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            if (inputSubstrings.length \u003e 2) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                throw new InvalidCommandException(\"Format: \\\"done \u003ctask index\u003e\\\"\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "               taskIndex \u003d Integer.parseInt(inputSubstrings[1]);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "               if (taskIndex \u003c 1 || taskIndex \u003e tasks.size()) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                   throw new TaskIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "               }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } else if (inputSubstrings[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            if (inputSubstrings.length \u003e 2) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                throw new InvalidCommandException(\"Format: \\\"delete \u003ctask index\u003e\\\"\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                taskIndex \u003d Integer.parseInt(inputSubstrings[1]);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                if (taskIndex \u003c 1 || taskIndex \u003e tasks.size()) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    throw new TaskIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } else if (inputSubstrings[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            if (inputSubstrings.length \u003c 4) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                throw new InvalidCommandException(\"Format: \\\"deadline \u003cdescription\u003e /by \u003cdeadline\u003e\\\"\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            for (int i \u003d 1; i \u003c inputSubstrings.length; i++) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                if (i \u003d\u003d (inputSubstrings.length - 1)) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    throw new InvalidCommandException(\"Format: \\\"deadline \u003cdescription\u003e /by \u003cdeadline\u003e\\\"\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                if (inputSubstrings[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    if (i \u003d\u003d 1) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                        throw new InvalidCommandException(\"Format: \\\"deadline \u003cdescription\u003e /by \u003cdeadline\u003e\\\"\");"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } else if (inputSubstrings[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            if (inputSubstrings.length \u003c 4) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                throw new InvalidCommandException(\"Format: \\\"event \u003cdescription\u003e /at \u003cdate/time\u003e\\\"\");"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            for (int i \u003d 1; i \u003c inputSubstrings.length; i++) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                if (i \u003d\u003d (inputSubstrings.length - 1)) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    throw new InvalidCommandException(\"Format: \\\"event \u003cdescription\u003e /at \u003cdate/time\u003e\\\"\");"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                if (inputSubstrings[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    if (i \u003d\u003d 1) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                        throw new InvalidCommandException(\"Format: \\\"event \u003cdescription\u003e /at \u003cdate/time\u003e\\\"\");"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static void exit() {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + \"Ok, see ya!\");"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static void greet() {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + \"Hello, I\u0027m Taskmaster Yipyap.\");"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + \"I can manage your tasks, and save them automatically!\");"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + \"So what can I do for you, human?\");"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 286,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 15
    }
  },
  {
    "path": "src/main/java/duke/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    InvalidCommandException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    InvalidCommandException(String s) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 9
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return (isDone ? \"1\" : \"0\"); //\"1\" for done, \"0\" for not done"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 28
    }
  },
  {
    "path": "src/main/java/duke/TaskIndexOutOfBoundsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "public class TaskIndexOutOfBoundsException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 5
    }
  },
  {
    "path": "src/main/java/duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 13
    }
  },
  {
    "path": "src/main/java/text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Hello, I\u0027m Taskmaster Yipyap."
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "      [T][✘] read book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "      [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "      [E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    1.[T][✘] read book"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    2.[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    3.[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "      [T][✓] read book"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    1.[T][✓] read book"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    2.[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    3.[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "      [T][✘] join sports club"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    1.[T][✓] read book"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    2.[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    3.[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    4.[T][✘] join sports club"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 30
    }
  },
  {
    "path": "src/main/java/text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 9
    }
  },
  {
    "path": "src/main/java/text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\duke.Duke.java ..\\duke.Deadline.java ..\\duke.Event.java ..\\duke.Task.java ..\\duke.ToDo.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "java -Dfile.encoding\u003dUTF8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 21
    }
  }
]

[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "JLoh579": 2,
      "-": 37
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 15
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            taskList \u003d new TaskList(storage.load(ui));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            ui.printLine(e.getMessage());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        takeCommands(ui, taskList, storage);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        ui.exit();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static void takeCommands(Ui ui, TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        boolean isExiting \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        while(!isExiting) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                input \u003d ui.readCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                command \u003d Parser.parse(input, taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                isExiting \u003d executeCommand(command, ui, taskList, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                ui.printFormattedMessage(e.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                ui.printFormattedMessage(Ui.NUM_FORMAT_ERROR);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static boolean executeCommand(String command, Ui ui, TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String[] commandSubstrings \u003d command.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            taskList.listTasks(ui);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } else if (command.equals(\"thanks\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            ui.printFormattedMessage(Ui.THANKS_RESPONSE);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } else if (commandSubstrings[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            taskList.checkOffTask(ui, Integer.parseInt(commandSubstrings[1]));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            storage.saveTaskstoDisk(ui, taskList);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } else if (commandSubstrings[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            taskList.deleteTask(ui, Integer.parseInt(commandSubstrings[1]));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            storage.saveTaskstoDisk(ui, taskList);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } else if (commandSubstrings[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            taskList.addTodo(command.substring(5), ui);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            storage.saveTaskstoDisk(ui, taskList);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } else if (commandSubstrings[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            taskList.addDeadline(command.substring(9), ui);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            storage.saveTaskstoDisk(ui, taskList);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            taskList.addEvent(command.substring(6), ui);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            storage.saveTaskstoDisk(ui, taskList);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 72,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 7
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 15
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public static String parse(String input, TaskList taskList) throws DukeException, NumberFormatException{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        int taskIndex;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String[] inputSubstrings \u003d input.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        inputSubstrings[0] \u003d inputSubstrings[0].toLowerCase();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        if (inputSubstrings.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            if (!inputSubstrings[0].equals(\"list\") \u0026\u0026 !inputSubstrings[0].equals(\"bye\") \u0026\u0026"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    !inputSubstrings[0].equals(\"thanks\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                throw new DukeException(\"Invalid command.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } else if (!inputSubstrings[0].equals(\"done\") \u0026\u0026 !inputSubstrings[0].equals(\"todo\") \u0026\u0026"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                !inputSubstrings[0].equals(\"deadline\") \u0026\u0026 !inputSubstrings[0].equals(\"event\") \u0026\u0026"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                !inputSubstrings[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            throw new DukeException(\"Invalid command.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } else if (inputSubstrings[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            if (inputSubstrings.length \u003e 2) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                throw new DukeException(\"Invalid command. Format: \\\"done \u003ctask index\u003e\\\"\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                taskIndex \u003d Integer.parseInt(inputSubstrings[1]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                if (taskIndex \u003c 1 || taskIndex \u003e taskList.getTaskList().size()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    throw new DukeException(\"That index is outta range!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } else if (inputSubstrings[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            if (inputSubstrings.length \u003e 2) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                throw new DukeException(\"Invalid command. Format: \\\"delete \u003ctask index\u003e\\\"\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                taskIndex \u003d Integer.parseInt(inputSubstrings[1]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                if (taskIndex \u003c 1 || taskIndex \u003e taskList.getTaskList().size()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    throw new DukeException(\"That index is outta range!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } else if (inputSubstrings[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            if (inputSubstrings.length \u003c 4) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                throw new DukeException(\"Invalid command. Format: \\\"deadline \u003cdescription\u003e /by \u003cdeadline\u003e\\\"\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            for (int i \u003d 1; i \u003c inputSubstrings.length; i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                if (i \u003d\u003d (inputSubstrings.length - 1)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    throw new DukeException(\"Invalid command. Format: \\\"deadline \u003cdescription\u003e /by \u003cdeadline\u003e\\\"\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                if (inputSubstrings[i].toLowerCase().equals(\"/by\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    if (i \u003d\u003d 1) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                        throw new DukeException(\"Invalid command. Format: \\\"deadline \u003cdescription\u003e /by \u003cdeadline\u003e\\\"\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                        inputSubstrings[i] \u003d inputSubstrings[i].toLowerCase();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } else if (inputSubstrings[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            if (inputSubstrings.length \u003c 4) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                throw new DukeException(\"Invalid command. Format: \\\"event \u003cdescription\u003e /at \u003cdate/time\u003e\\\"\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            for (int i \u003d 1; i \u003c inputSubstrings.length; i++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                if (i \u003d\u003d (inputSubstrings.length - 1)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    throw new DukeException(\"Invalid command. Format: \\\"event \u003cdescription\u003e /at \u003cdate/time\u003e\\\"\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                if (inputSubstrings[i].toLowerCase().equals(\"/at\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    if (i \u003d\u003d 1) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                        throw new DukeException(\"Invalid command. Format: \\\"event \u003cdescription\u003e /at \u003cdate/time\u003e\\\"\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                        inputSubstrings[i] \u003d inputSubstrings[i].toLowerCase();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        StringBuilder comm \u003d new StringBuilder();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        for (String substring : inputSubstrings) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            comm.append(substring).append(\" \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String command \u003d comm.toString().trim();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 79
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public ArrayList\u003cTask\u003e load(Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        int dividerIndex;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        File dir \u003d new File(\"data\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        if (!dir.exists()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            ui.printLine(Ui.MAKING_DIRECTORY);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            dir.mkdir();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        File file \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            ui.printLine(Ui.CREATING_FILE);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            throw new DukeException(\"File could not be created.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        ui.printLine(Ui.LOADING_TASKS);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        Scanner s;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            throw new DukeException(\"File not found.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            switch (line.charAt(1)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            case \u0027T\u0027:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                description \u003d line.substring(7);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                tasks.add(new ToDo(description));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            case \u0027D\u0027:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                dividerIndex \u003d line.indexOf(\"(by\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                description \u003d line.substring(7, (dividerIndex - 1));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                String by \u003d line.substring(dividerIndex + 5, line.length() - 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                tasks.add(new Deadline(description, by));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            case \u0027E\u0027:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                dividerIndex \u003d line.indexOf(\"(at\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                description \u003d line.substring(7, (dividerIndex - 1));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                String at \u003d line.substring(dividerIndex + 5, line.length() - 1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                tasks.add(new Event(description, at));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            if (line.charAt(4) \u003d\u003d \u00271\u0027) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                tasks.get(tasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        ui.printLine(Ui.LOADING_DONE);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void saveTaskstoDisk(Ui ui, TaskList taskList) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"data/duke.txt\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            for (Task task : taskList.getTaskList()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                fw.write(task.toString() + System.lineSeparator());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            ui.printLine(Ui.SAVE_ERROR);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 83
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return (isDone ? \"1\" : \"0\"); //\"1\" for done, \"0\" for not done"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 28
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void listTasks(Ui ui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            ui.printFormattedMessage(\"No tasks found.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            ui.printList(tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void checkOffTask(Ui ui, int taskIndex) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        tasks.get(taskIndex - 1).markAsDone();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        ui.printDoneTask(tasks, taskIndex);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void deleteTask(Ui ui, int taskIndex) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        ui.printDeletedTask(tasks, taskIndex);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void addTodo(String description, Ui ui) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        tasks.add(new ToDo(description));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        ui.printAddedTask(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void addDeadline(String info, Ui ui) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        int dividerIndex \u003d info.indexOf(\"/by\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String description \u003d info.substring(0, (dividerIndex - 1));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String by \u003d info.substring(dividerIndex + 4);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        tasks.add(new Deadline(description, by));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        ui.printAddedTask(tasks);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void addEvent(String info, Ui ui) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        int dividerIndex \u003d info.indexOf(\"/at\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String description \u003d info.substring(0, (dividerIndex - 1));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String at \u003d info.substring(dividerIndex + 4);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        tasks.add(new Event(description, at));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        ui.printAddedTask(tasks);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 58
    }
  },
  {
    "path": "src/main/java/duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 13
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static final String FOUR_SPACE_INDENT \u003d \"    \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static final String SIX_SPACE_INDENT \u003d \"      \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static final String BORDER \u003d FOUR_SPACE_INDENT +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            \"___________________________________________________________________\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public static final String MAKING_DIRECTORY \u003d \"Making directory: \\\"data\\\"\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public static final String CREATING_FILE \u003d \"Creating file: \\\"duke.txt\\\"\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public static final String LOADING_TASKS \u003d \"Loading tasks from \\\"data/duke.txt\\\", if there are any...\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public static final String LOADING_DONE \u003d \"Loading done.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public static final String EXIT_MESSAGE \u003d \"Ok, see ya!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public static final String THANKS_RESPONSE \u003d \"The great Taskmaster Yipyap appreciates your gratitude :-)\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public static final String NUM_FORMAT_ERROR \u003d \"Index must be an integer, like \\\"1\\\", but not \\\"one\\\".\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public static final String SAVE_ERROR \u003d \"An IO error was encountered while saving.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        while (input.isEmpty()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            input \u003d in.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            input \u003d input.trim();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return input; // Input is not empty"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + \"Hello, I\u0027m Taskmaster Yipyap.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + \"I can manage your tasks, and save them automatically!\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + \"So what can I do for you, human?\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        printFormattedMessage(EXIT_MESSAGE);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void printAddedTask(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(SIX_SPACE_INDENT + tasks.get(tasks.size() - 1).toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void printDoneTask(ArrayList\u003cTask\u003e tasks, int taskIndex) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + \"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(SIX_SPACE_INDENT + tasks.get(taskIndex - 1).toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void printDeletedTask(ArrayList\u003cTask\u003e tasks, int taskIndex) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + \"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(SIX_SPACE_INDENT + tasks.get(taskIndex - 1).toString());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        tasks.remove(taskIndex - 1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void printFormattedMessage(String str) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + str);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void printLine(String str) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + str);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void printList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        int bulletNum \u003d 1;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            System.out.println(FOUR_SPACE_INDENT + bulletNum + \".\" + task.toString());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            bulletNum++;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 95
    }
  },
  {
    "path": "src/main/java/text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Hello, I\u0027m Taskmaster Yipyap."
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "      [T][✘] read book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "      [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "      [E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    1.[T][✘] read book"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    2.[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    3.[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "      [T][✓] read book"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    1.[T][✓] read book"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    2.[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    3.[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "      [T][✘] join sports club"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    1.[T][✓] read book"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    2.[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    3.[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    4.[T][✘] join sports club"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 30
    }
  },
  {
    "path": "src/main/java/text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 9
    }
  },
  {
    "path": "src/main/java/text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\duke.Duke.java ..\\duke.Deadline.java ..\\duke.Event.java ..\\duke.Task.java ..\\duke.ToDo.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "java -Dfile.encoding\u003dUTF8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 21
    }
  }
]

[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "JLoh579": 2,
      "-": 33
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "## About the program"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "This is a lightweight command-line interface (CLI) program for managing your tasks. "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "## Running the program"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "1. Make sure your computer has Java 11."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "2. Copy the jar file into an empty folder."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "3. Open a command window in that folder."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "4. Run the command `java -jar Duke.jar` (i.e. run the command in the same folder as the jar file)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "### 1. Task management"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "Tasks can be added, removed and marked as done."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "### 2. Search "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "Find tasks by searching for a keyword in the task description."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "### 3. Auto-load"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "Tasks are loaded from a file called `duke.txt` in a directory called `data` upon start-up."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "If no such file or directory exists, they are created."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "### 4. Auto-save"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "Any change to the tasks in memory results in a save to the `duke.txt` file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "## Commands"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "### 1. help  "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "#### Displays a list of commands  "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "### 2. list "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "#### Shows the current tasks in the list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "Example outcome:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        1.[T][0] read book"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        2.[D][0] return book (by: 1 March)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        3.[E][0] meeting (at: 4 March)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "### 3. todo \\\u003cdescription\u003e "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "#### Adds a todo to the list"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "Example usage: `todo read book`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "Example outcome:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "      [T][0] read book"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "### 4. deadline \\\u003cdescription\u003e /by \\\u003cdeadline\u003e "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "#### Adds a deadline to the list"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "Example usage: `deadline return book /by 1 March`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "Example outcome:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "      [D][0] return book (by: 1 March)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "### 5. event \\\u003cdescription\u003e /at \\\u003ctimeslot\u003e "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "#### Adds an event to the list"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "Example usage: `event meeting /at 4 March`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "Example outcome:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "      [E][0] meeting (at: 4 March)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "### 6. done \\\u003ctask index\u003e "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "#### Mark a task as done"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "Example usage: `done 1`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "Example outcome:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "      [T][1] read book"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "### 7. delete \\\u003ctask index\u003e "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "#### Delete a task"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "Example usage: `delete 1`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "Example outcome:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "      [T][1] read book"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "### 8. find \\\u003ckeyword\u003e "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "#### Search for tasks using a keyword"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "Example usage: `find book`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "Example outcome:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    1.[D][0] return book (by: 1 March)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    3.[T][0] read textbook"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "### 9. clear "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "#### Delete all tasks, after confirmation by user"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "### 10. thanks"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "#### If you\u0027re feeling thankful"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "### 11. bye "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "#### Exit program"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 104,
      "-": 16
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": " * Represents tasks with a deadline."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * Returns a string representation of the deadline task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @return String representing the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 22
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": " * The Duke program is a simple chatbot that helps a user manage tasks. It"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": " * also saves the tasks to a text file automatically."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * This is the constructor for the Duke class that creates objects that are"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * used to run the program."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            taskList \u003d new TaskList(storage.load(ui));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            ui.printLine(e.getMessage());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * This method runs the bulk of the program."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        takeCommands(ui, taskList, storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        ui.exit();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * This is the main method which makes use of the run method."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @param args Not used."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * The main loop of the program. Involves getting user input, parsing, and"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * executing commands."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @param ui The ui object used to interact with the user."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @param taskList The object being used to manipulate the tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @param storage The object used to save tasks to disk."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static void takeCommands(Ui ui, TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        boolean isExiting \u003d false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        while(!isExiting) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                input \u003d ui.readCommand();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                command \u003d Parser.parse(input, taskList.getTaskList().size());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                isExiting \u003d executeCommand(command, ui, taskList, storage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                ui.printFormattedString(e.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                ui.printFormattedString(Ui.NUM_FORMAT_ERROR);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * Executes a given command. The tasks are saved to a file every-time"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * changes are made."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @param command The command executed."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @param ui The ui object used to interact with the user."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @param taskList The object being used to manipulate the tasks."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @param storage The object used to save tasks to disk."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @return Whether the program is exiting."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static boolean executeCommand(String command, Ui ui, TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String[] commandSubstrings \u003d command.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        switch (commandSubstrings[0]) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        case \"clear\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            taskList.clearTasks(ui, taskList, storage);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            ui.helpUser();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            taskList.listTasks(ui);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        case \"thanks\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            ui.printFormattedString(Ui.THANKS_RESPONSE);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            taskList.findTasks(ui, commandSubstrings[1]);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            taskList.checkOffTask(ui, Integer.parseInt(commandSubstrings[1]));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            storage.saveTaskstoDisk(ui, taskList);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            taskList.deleteTask(ui, Integer.parseInt(commandSubstrings[1]));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            storage.saveTaskstoDisk(ui, taskList);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            taskList.addTodo(command.substring(5), ui);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            storage.saveTaskstoDisk(ui, taskList);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            taskList.addDeadline(command.substring(9), ui);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            storage.saveTaskstoDisk(ui, taskList);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            taskList.addEvent(command.substring(6), ui);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            storage.saveTaskstoDisk(ui, taskList);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 121,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": " * Represents exceptions used in this program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 10
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": " * Represents events at a certain time-slot."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * Returns a string representation of the event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @return String representing event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 22
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": " * Deals with making sense of the user command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * This method checks if an input is a valid command. It also formats the"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * input to make processing easier later on."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @param input The input given."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @param listSize The size of the task list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @return Formatted and valid command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @throws DukeException If the command is invalid."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @throws NumberFormatException If the index given cannot be parsed to an Integer."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public static String parse(String input, int listSize) throws DukeException, NumberFormatException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        int taskIndex;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String[] inputSubstrings \u003d input.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        inputSubstrings[0] \u003d inputSubstrings[0].toLowerCase();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        if (inputSubstrings.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            if (!inputSubstrings[0].equals(\"list\") \u0026\u0026 !inputSubstrings[0].equals(\"bye\") \u0026\u0026"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    !inputSubstrings[0].equals(\"help\") \u0026\u0026 !inputSubstrings[0].equals(\"thanks\") \u0026\u0026"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    !inputSubstrings[0].equals(\"clear\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                throw new DukeException(\"Invalid command.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } else if (!inputSubstrings[0].equals(\"done\") \u0026\u0026 !inputSubstrings[0].equals(\"todo\") \u0026\u0026"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                !inputSubstrings[0].equals(\"deadline\") \u0026\u0026 !inputSubstrings[0].equals(\"event\") \u0026\u0026"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                !inputSubstrings[0].equals(\"delete\") \u0026\u0026 !inputSubstrings[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            throw new DukeException(\"Invalid command.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } else if (inputSubstrings[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            if (inputSubstrings.length \u003e 2) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                throw new DukeException(\"Invalid command. Format: \\\"find \u003ckeyword\u003e\\\"\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } else if (inputSubstrings[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            if (inputSubstrings.length \u003e 2) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                throw new DukeException(\"Invalid command. Format: \\\"done \u003ctask index\u003e\\\"\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                taskIndex \u003d Integer.parseInt(inputSubstrings[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                if (taskIndex \u003c 1 || taskIndex \u003e listSize) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    throw new DukeException(\"That index is outta range!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } else if (inputSubstrings[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            if (inputSubstrings.length \u003e 2) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                throw new DukeException(\"Invalid command. Format: \\\"delete \u003ctask index\u003e\\\"\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                taskIndex \u003d Integer.parseInt(inputSubstrings[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                if (taskIndex \u003c 1 || taskIndex \u003e listSize) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    throw new DukeException(\"That index is outta range!\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } else if (inputSubstrings[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            if (inputSubstrings.length \u003c 4) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                throw new DukeException(\"Invalid command. Format: \\\"deadline \u003cdescription\u003e /by \u003cdeadline\u003e\\\"\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            for (int i \u003d 1; i \u003c inputSubstrings.length; i++) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                if (i \u003d\u003d (inputSubstrings.length - 1)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    throw new DukeException(\"Invalid command. Format: \\\"deadline \u003cdescription\u003e /by \u003cdeadline\u003e\\\"\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                if (inputSubstrings[i].toLowerCase().equals(\"/by\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    if (i \u003d\u003d 1) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                        throw new DukeException(\"Invalid command. Format: \\\"deadline \u003cdescription\u003e /by \u003cdeadline\u003e\\\"\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                        inputSubstrings[i] \u003d inputSubstrings[i].toLowerCase();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } else if (inputSubstrings[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            if (inputSubstrings.length \u003c 4) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                throw new DukeException(\"Invalid command. Format: \\\"event \u003cdescription\u003e /at \u003ctime-slot\u003e\\\"\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            for (int i \u003d 1; i \u003c inputSubstrings.length; i++) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                if (i \u003d\u003d (inputSubstrings.length - 1)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    throw new DukeException(\"Invalid command. Format: \\\"event \u003cdescription\u003e /at \u003ctime-slot\u003e\\\"\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                if (inputSubstrings[i].toLowerCase().equals(\"/at\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    if (i \u003d\u003d 1) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                        throw new DukeException(\"Invalid command. Format: \\\"event \u003cdescription\u003e /at \u003ctime-slot\u003e\\\"\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                        inputSubstrings[i] \u003d inputSubstrings[i].toLowerCase();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        StringBuilder command \u003d new StringBuilder();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        for (String substring : inputSubstrings) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            command.append(substring).append(\" \");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return command.toString().trim();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 96
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * Create a task list from the information stored on a text file. Keeps the"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * user informed of what is happening."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @param ui The ui object used to communicate with the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @return A task list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @throws DukeException If there are problems with loading."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public ArrayList\u003cTask\u003e load(Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        int dividerIndex;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        File dir \u003d new File(\"data\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        if (!dir.exists()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            ui.printLine(Ui.MAKING_DIRECTORY);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            dir.mkdir();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        File file \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            ui.printLine(Ui.CREATING_FILE);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            throw new DukeException(\"File could not be created.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        ui.printLine(Ui.LOADING_TASKS);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        Scanner s;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            throw new DukeException(\"File not found.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            switch (line.charAt(1)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            case \u0027T\u0027:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                description \u003d line.substring(7);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                tasks.add(new ToDo(description));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            case \u0027D\u0027:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                dividerIndex \u003d line.indexOf(\"(by\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                description \u003d line.substring(7, (dividerIndex - 1));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                String by \u003d line.substring(dividerIndex + 5, line.length() - 1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                tasks.add(new Deadline(description, by));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            case \u0027E\u0027:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                dividerIndex \u003d line.indexOf(\"(at\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                description \u003d line.substring(7, (dividerIndex - 1));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                String at \u003d line.substring(dividerIndex + 5, line.length() - 1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                tasks.add(new Event(description, at));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            if (line.charAt(4) \u003d\u003d \u00271\u0027) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                tasks.get(tasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        ui.printLine(Ui.LOADING_DONE);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * Save the tasks to a text file."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @param ui The ui object used to report an error while saving."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void saveTaskstoDisk(Ui ui, TaskList taskList) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"data/duke.txt\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            for (Task task : taskList.getTaskList()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                fw.write(task.toString() + System.lineSeparator());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            ui.printLine(Ui.SAVE_ERROR);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 97
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": " * This class represents a task. It contains a description and can be marked as"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": " * done."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * This is the constructor of the task. Tasks are not marked as done when"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * first created."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * This method returns either a 1, or a 0 as a string, which is used to"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * mark a task as done or not."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @return Status of task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return (isDone ? \"1\" : \"0\"); //\"1\" for done, \"0\" for not done"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * This method gives a string representation of the task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @return String representing the task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 46
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": " * Contains the task list and the operations used to manipulate the list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * Initialise the list with the given task list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @param tasks A given task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * Initialise an empty task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * List the tasks on the screen."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @param ui The ui object used to show the tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void listTasks(Ui ui) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            ui.printFormattedString(Ui.NO_TASKS);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            ui.printTasks(tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * Mark a task as done and inform the user of the change."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @param ui The ui object used to inform the user."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @param taskIndex The index of the task being marked as done."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void checkOffTask(Ui ui, int taskIndex) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        tasks.get(taskIndex - 1).markAsDone();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        ui.printDoneTask(tasks, taskIndex);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void deleteTask(Ui ui, int taskIndex) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        ui.printDeletedTask(tasks, taskIndex);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * Add a todo to the list and inform the user."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @param description The description of the todo."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @param ui The ui object used to inform the user."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void addTodo(String description, Ui ui) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        tasks.add(new ToDo(description));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        ui.printAddedTask(tasks);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * Add a deadline to the list and inform the user. The description and"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * deadline are retrieved from the string given."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @param info The string containing the description and deadline."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @param ui The ui object used to inform the user."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void addDeadline(String info, Ui ui) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        int dividerIndex \u003d info.indexOf(\"/by\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String description \u003d info.substring(0, (dividerIndex - 1));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String by \u003d info.substring(dividerIndex + 4);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        tasks.add(new Deadline(description, by));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        ui.printAddedTask(tasks);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * Add an event to the list and inform the user. The description and"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * timeslot are retrieved from the string given."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @param info The string containing the description and timeslot."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @param ui The ui object used to inform the user."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void addEvent(String info, Ui ui) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        int dividerIndex \u003d info.indexOf(\"/at\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String description \u003d info.substring(0, (dividerIndex - 1));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String at \u003d info.substring(dividerIndex + 4);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        tasks.add(new Event(description, at));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        ui.printAddedTask(tasks);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void findTasks(Ui ui, String keyword) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        ArrayList\u003cString\u003e foundTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                foundTasks.add(i + \".\" + task.toString());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        if (foundTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            ui.printFormattedString(Ui.NO_TASKS);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            ui.printFoundTasks(foundTasks);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void clearTasks(Ui ui, TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        if (ui.isClear()) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            tasks.clear();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            storage.saveTaskstoDisk(ui, taskList);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 117
    }
  },
  {
    "path": "src/main/java/duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": " * Represents a simple todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * Returns a string representation of the todo."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @return String representing the todo."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 20
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": " * Deals with interactions with the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static final String FOUR_SPACE_INDENT \u003d \"    \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static final String SIX_SPACE_INDENT \u003d \"      \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static final String BORDER \u003d FOUR_SPACE_INDENT +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            \"___________________________________________________________________\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public static final String MAKING_DIRECTORY \u003d \"Making directory: \\\"data\\\"\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public static final String CREATING_FILE \u003d \"Creating file: \\\"duke.txt\\\"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public static final String LOADING_TASKS \u003d \"Loading tasks from \\\"data/duke.txt\\\", if there are any...\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public static final String LOADING_DONE \u003d \"Loading done.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public static final String EXIT_MESSAGE \u003d \"Ok, see ya!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public static final String THANKS_RESPONSE \u003d \"The great Taskmaster Yipyap appreciates your gratitude :-)\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public static final String NUM_FORMAT_ERROR \u003d \"Index must be an integer, like \\\"1\\\", but not \\\"one\\\".\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public static final String SAVE_ERROR \u003d \"An IO error was encountered while saving.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public static final String NO_TASKS \u003d \"No tasks found.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static final String HELP_RESPONSE \u003d \"Here are the list of commands:\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static final String CONFIRM_CLEAR \u003d \"Are you sure?\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static final String ANSWER_FORMAT \u003d \"Answer y/n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static final String LIST_CLEARED \u003d \"Ok, list cleared.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static final String LIST_NOT_CLEARED \u003d \"Ok, list not cleared.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    private static final String[] COMMAND_LIST \u003d new String[] {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            \"\\\"bye\\\": exit program\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            \"\\\"list\\\": show a list of tasks\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            \"\\\"find \u003ckeyword\u003e\\\": search for tasks using a keyword\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            \"\\\"done \u003ctask index\u003e\\\": mark a task as done\","
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            \"\\\"delete \u003ctask index\u003e\\\": delete a task\","
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            \"\\\"clear\\\": delete all tasks in the list\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            \"\\\"todo \u003cdescription\u003e\\\": add a todo\","
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            \"\\\"deadline \u003cdescription\u003e /by \u003cdeadline\u003e\\\": add a deadline\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            \"\\\"event \u003cdescription\u003e /at \u003ctime-slot\u003e\\\": add an event\","
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            \"\\\"thanks\\\": if you\u0027re feeling thankful\"};"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * Get an input from the user that is not empty (an input of only"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * whitespaces is considered empty)."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @return User input."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        while (input.isEmpty()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            input \u003d in.nextLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            input \u003d input.trim();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return input; // Input is not empty"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + \"Hello, I\u0027m Taskmaster Yipyap.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + \"I can manage your tasks, and save them automatically!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + \"Type \\\"help\\\" to see exactly what I can do!\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        printFormattedString(EXIT_MESSAGE);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * Inform the user that a task has been added."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @param tasks The list to which the task was added."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void printAddedTask(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(SIX_SPACE_INDENT + tasks.get(tasks.size() - 1).toString());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * Inform the user that a task has been marked as done."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @param tasks The list in which the task resides."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @param taskIndex The index of the task being marked."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void printDoneTask(ArrayList\u003cTask\u003e tasks, int taskIndex) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + \"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(SIX_SPACE_INDENT + tasks.get(taskIndex - 1).toString());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * Inform the user that a task has been deleted."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @param tasks The list from which the task was deleted."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @param taskIndex The index of the deleted task."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void printDeletedTask(ArrayList\u003cTask\u003e tasks, int taskIndex) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + \"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(SIX_SPACE_INDENT + tasks.get(taskIndex - 1).toString());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        tasks.remove(taskIndex - 1);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void printFormattedString(String str) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + str);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void printLine(String str) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + str);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * Show the list of tasks in memory."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @param tasks The task list."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void printTasks(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        int bulletNum \u003d 1;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            System.out.println(FOUR_SPACE_INDENT + bulletNum + \".\" + task.toString());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            bulletNum++;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * Show the list of tasks that were found."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * @param foundTasks The list of found tasks."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void printFoundTasks(ArrayList\u003cString\u003e foundTasks) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + \"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        for (String indexedTask : foundTasks) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            System.out.println(FOUR_SPACE_INDENT + indexedTask);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     * Provides a list of commands."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public void helpUser() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(FOUR_SPACE_INDENT + HELP_RESPONSE);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        for (String command : COMMAND_LIST) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            System.out.println(FOUR_SPACE_INDENT + command);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    public boolean isClear() {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        printFormattedString(CONFIRM_CLEAR + \" \" + ANSWER_FORMAT);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        String input \u003d in.nextLine();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        input \u003d input.trim().toLowerCase();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        while (!input.equals(\"y\") \u0026\u0026 !input.equals(\"n\") \u0026\u0026"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "                !input.equals(\"yes\") \u0026\u0026 !input.equals(\"no\")) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            printFormattedString(ANSWER_FORMAT);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            input \u003d in.nextLine();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            input \u003d input.trim().toLowerCase();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        if (input.equals(\"y\") || input.equals(\"yes\")) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            printFormattedString(LIST_CLEARED);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        printFormattedString(LIST_NOT_CLEARED);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 182
    }
  },
  {
    "path": "src/main/java/text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Hello, I\u0027m Taskmaster Yipyap."
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "      [T][✘] read book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "      [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "      [E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    1.[T][✘] read book"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    2.[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    3.[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "      [T][✓] read book"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    1.[T][✓] read book"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    2.[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    3.[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "      [T][✘] join sports club"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    1.[T][✓] read book"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    2.[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    3.[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    4.[T][✘] join sports club"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 30
    }
  },
  {
    "path": "src/main/java/text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 9
    }
  },
  {
    "path": "src/main/java/text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\duke.Duke.java ..\\duke.Deadline.java ..\\duke.Event.java ..\\duke.Task.java ..\\duke.ToDo.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "java -Dfile.encoding\u003dUTF8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JLoh579"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JLoh579"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "JLoh579": 21
    }
  }
]

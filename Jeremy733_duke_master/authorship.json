[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "[T][✓]sleep"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "[D][✘]getup (by: mon)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "[E][✓]lol (at: mon 1)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "[E][✘]lmao (at: fri 2)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "[D][✘]23333 (by: tue)"
      }
    ],
    "authorContributionMap": {
      "Jeremy733": 5
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "### Feature 1 "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "Echo user input"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "### Feature 2 "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "Add upcoming tasks"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "### Feature 3 "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "Mark tasks done"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "### Feature 4 "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "Delete tasks from the list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "### Feature 5 "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "Find tasks using keywords"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "### Feature 6 "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "Export tasks to a local file"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "### Echo input"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "The duke programme echos input of the user"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "`hello`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "`hello`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "### `add task` - Evoke the task management mode"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "This command triggers the task management mode."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "Once triggered, the duke programmes awaits task details "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "to be entered and will store the tasks in a list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "Caution: Once this command is entered, all inputs will be put through strict checking to avoid illegal inputs. Echo function will be disabled."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "Commands allowed after \"add task\" are: adding task items, list, delete, find, done, bye."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`add task`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`todo meeting`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`deadline call david/by 2020-04-01`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`event party/at 2020-04-02 1800`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`Please add tasks`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`Got it. I\u0027ve added this task: meeting`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`added : [T][✘]meeting`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`Now you have 1 tasks in the list`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`Got it. I\u0027ve added this task: call david`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`added : [D][✘]call david (by: 2020-04-01)`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`Now you have 2 tasks in the list`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`Got it. I\u0027ve added this task: party`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`added : [E][✘]party (at: 2020-04-02 1800)`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`Now you have 3 tasks in the list`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "Format for task items:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`todo [DISCRIPITION]`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`deadline [DISCRIPITION]/by [DATE IN YYYY_MM_DD]`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`event [DISCRIPITION]/at [DATE IN YYYY_MM_DD] [TIME IN HH_MM]`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "### `list` -List the current tasks"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "This command lists all the current tasks in the list"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "with reepective date and time details."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`list`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`1 .[T][✘]dinner`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`2 .[T][✘]football`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`3 .[E][✘]meeting (at: Nov. 11 2020 1800)`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "### `delete index` -Delete a task according to the index"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "This command deletes a task at the given index"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`list`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`delete 1`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`1 .[T][✘]dinner`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`2 .[T][✘]football`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`3 .[E][✘]meeting (at: Nov. 11 2020 1800)`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`Noted. I\u0027ve removed this task:` "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`Removed : [T][✘]dinner`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`Now you have 2 tasks in the list`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "### `done index` -Mark a task done according to the index"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "This command marks a task done at the given index"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`1 .[T][✓]dinner`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`2 .[T][✘]football`"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`3 .[E][✘]meeting (at: Nov. 11 2020 1800)`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`Mark task done` "
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "### `find keyword` -fina a list of tasks containing the keyword"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "This command finds a list of tasks containing the keyword"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "Or it returns a error message"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`list`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`find dinner`"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`find lunch`"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`1 .[T][✓]dinner`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`2 .[T][✘]football`"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`3 .[E][✘]meeting (at: Nov. 11 2020 1800)`"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e` Here are the matching tasks in your list:`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`1 .[T][✓]dinner`"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`Here are the matching tasks in your list:`"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`No matching results `"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "### `bye` -Close the programme and saves to a local file"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "This command terminates the programme and automatically saves "
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "tasks into a local file. If such a file does not exist, it creates a new one."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`Tasks are being saved now`"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "\u003cbr /\u003e`Bye. Hope to see you again soon!`"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "## Matters needing attention"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "For the first time the programme is run, it displays a message saying file not found. "
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "This is normal and does not require attention. Once a new file is created by the"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "programme, please do not move the file into other folders."
      }
    ],
    "authorContributionMap": {
      "Jeremy733": 148,
      "-": 17
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "[T][✓]lol"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "[T][✘]sleep"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "[E][✘]lol (at: 2020-11-11 1800)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "[D][✓]ppp (by: 2020-11-12)"
      }
    ],
    "authorContributionMap": {
      "Jeremy733": 4
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": " * Main class of the Duke project containing UI display, storage handling, input handling"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": " * and task list operations."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public static void main(String[] args) throws IOException, DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        welcomeMessage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        loadFile();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        greetUser();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        conversation();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public static void welcomeMessage(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public static void greetUser() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        System.out.println(\"What can I do for you\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public static void finishConversation() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * Takes in input string from terminal and calls various"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * functions according to different keywords.This function uses recursion."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * @throws IOException or DukeException If input does not match format."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public static void conversation() throws IOException, DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        String str \u003d readCommand();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        if (str.equals(\"bye\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            saveTask();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            finishConversation();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        } else if (str.contains(\"delete\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            deleteTask(str);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            conversation();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        } else if (str.equals(\"add task\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            addTaskScreen();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        } else if (str.equals(\"list\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            listTask();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            conversation();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        }else if (str.contains(\"done\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            markDone(str);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            System.out.println(\"Mark task done\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            conversation();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        }else if(str.contains(\"find\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            findTask(str);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            conversation();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        }else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            System.out.println(str);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            conversation();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    private static String readCommand() throws IOException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        String str \u003d null;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        System.out.println(\"Type something\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        str \u003d br.readLine().toLowerCase();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * Takes a string pre-processed from other functions"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * and turns it into a LocalDate object"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * @param input A string from the duke.txt file"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    private static LocalDate extractDate(String input){"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        LocalDate date;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        date \u003d LocalDate.parse(input);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * Triggered after entering \"add task\" in terminal"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * In adding Task mode, keywords are used to put tasks in different categories"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * and handle the status of the task list."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * @throws IOException or DukeException If input does not match format."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public static void addTaskScreen() throws IOException, DukeException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        System.out.println(\"Please add tasks\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        String str \u003d readCommand();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        if (str.equals(\"bye\")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            saveTask();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            finishConversation();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        } else if (str.contains(\"done\")) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            markDone(str);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            System.out.println(\"Mark task done\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            addTaskScreen();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        }else if(str.contains(\"find\")){"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            findTask(str);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            addTaskScreen();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        } else if (str.equals(\"list\")) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            listTask();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            addTaskScreen();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        } else if ((str.contains(\"todo\"))) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            missingTaskError(str);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            int dividerPosition \u003d str.indexOf(\" \");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            String task \u003d str.substring(dividerPosition + 1);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            ToDos newTask \u003d new ToDos(task);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            addTask(newTask);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            addTaskScreen();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        } else if ((str.contains(\"deadline\"))) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            missingTaskError(str);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            missingDateTimeError(str);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            int dividerPosition \u003d str.indexOf(\" \");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            int dividerPositionSlash \u003d str.indexOf(\"/\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            String task \u003d str.substring(dividerPosition + 1, dividerPositionSlash);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            String by \u003d str.substring(dividerPositionSlash + 4);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            LocalDate date \u003d extractDate(by);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            Deadlines newTask \u003d new Deadlines(task, date);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            addTask(newTask);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            addTaskScreen();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        } else if ((str.contains(\"event\"))) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            missingTaskError(str);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            missingDateTimeError(str);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            int dividerPosition \u003d str.indexOf(\" \");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            int dividerPositionSlash \u003d str.indexOf(\"/\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            String task \u003d str.substring(dividerPosition + 1, dividerPositionSlash);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            String calender \u003d str.substring(dividerPositionSlash + 4);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            int dateAndTime \u003d calender.indexOf(\" \");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            String at \u003d calender.substring(0, dateAndTime);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            LocalDate date \u003d extractDate(at);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            String time \u003d calender.substring(dateAndTime + 1);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            Events newTask \u003d new Events(task, date, time);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            addTask(newTask);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            addTaskScreen();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        } else if (str.contains(\"delete\")) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            deleteTask(str);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            addTaskScreen();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            wrongInputFormatError(str);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * Add a task item into taskList"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * and prints a message"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     *"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public static void addTask(Task newTask) throws IOException {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \" + newTask.description);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        taskList.add(newTask);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        System.out.println(\"added : \" + newTask);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * Deletes a task according to the index"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * Raises error if index is missing or out of range"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     *"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * @param str A string from the terminal"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * @throws IOException DukeException if index is missing or out of range"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public static void deleteTask(String str) throws IOException, DukeException {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        if (str.equals(\"delete\")) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            missingIndexError();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        int dividerPosition \u003d str.indexOf(\" \");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        String index \u003d str.substring(dividerPosition + 1);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        int i \u003d Integer.parseInt(index);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        deleteError(i, taskList);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        Task toRemove \u003d taskList.get(i - 1);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        taskList.remove(i - 1);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        System.out.println(\"Removed : \" + toRemove);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * Takes in the list in taskList"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * and list the input to the terminal."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     */"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public static void listTask() {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        while (i \u003c taskList.size()) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            int j \u003d i + 1;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            System.out.println(j + \" .\" + taskList.get(i).showSearch());"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * finds tasks  according to the index."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * Raises errors if keyword is missing"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * Return a emppty list if no match"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * @param input A string from the terminal"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     */"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public static void findTask(String input){"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        System.out.println(\" Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        ArrayList\u003cTask\u003e searchResult \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        String keyword \u003d input.substring(5);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        for(Task task: taskList){"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            if(task.description.contains(keyword)){"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "                searchResult.add(task);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        if(searchResult.size() \u003d\u003d 0){"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            System.out.println(\" No matching results \");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        listSearchResult(searchResult);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * Takes in the list generated using findTask instead of the taskList"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * and list the input to the terminal."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * @param  input A list of tasks found using keywords"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     */"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public static void listSearchResult(ArrayList\u003cTask\u003e input) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        while (i \u003c input.size()) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            int j \u003d i + 1;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            System.out.println(j + \" .\" + input.get(i).showSearch());"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * Mark a task done according to the index."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * Raises errors if index is missing or index out of range"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     *"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * @throws IOException DukeException if index is missing or out of range"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     */"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public static void markDone(String str) throws IOException, DukeException {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        if (str.equals(\"done\")) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            missingIndexError();"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        int dividerPosition \u003d str.indexOf(\" \");"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        String index \u003d str.substring(dividerPosition + 1);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        int i \u003d Integer.parseInt(index);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        markDoneError(i, taskList);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        taskList.get(i - 1).markDone();"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        listTask();"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public static void missingDateTimeError(String input) throws DukeException {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        if (!input.contains(\"/\")) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            throw new DukeException(\"OOPS!!!Please specify more details\");"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public static void missingTaskError(String input) throws DukeException {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        if (input.equals(\"todo\") || input.equals(\"deadline\") || input.equals(\"event\")) {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public static void wrongInputFormatError(String input) throws DukeException {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        throw new DukeException(\"OOPS!!!Wrong input format.\");"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public static void markDoneError(int index, ArrayList\u003cTask\u003e taskList) throws DukeException {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        if (index \u003d\u003d 0) {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            throw new DukeException(\"OOPS!!!Invalid input index\");"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        } else if (index \u003e taskList.size()) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            throw new DukeException(\"OOPS!!!Index out of range\");"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public static void deleteError(int index, ArrayList\u003cTask\u003e taskList) throws DukeException {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        if (index \u003d\u003d 0) {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            throw new DukeException(\"OOPS!!!Invalid input index\");"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        } else if (index \u003e taskList.size()) {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            throw new DukeException(\"OOPS!!!Index out of range\");"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public static void missingIndexError() throws DukeException {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        throw new DukeException(\"OOPS!!! The index cannot be empty.\");"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * Save the task items in taskList one by one."
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * It calls writeToFile every time it finds a valid task item."
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     *"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * @throws IOException if new file can not be created."
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     */"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public static void saveTask() throws IOException {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        System.out.println(\"Tasks are being saved now\");"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            for (Task ignored : taskList) {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "                writeToFile();"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            System.out.println(\"Task can not be saved\");"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * Write taskList into a txt file named Duke.txt"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * A new blank file will be created if the programme"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * can not fina a existing one."
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     *"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * @throws IOException if new file can not be created."
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     */"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    private static void writeToFile() throws IOException {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        File duke \u003d new File(\"duke.txt\");"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        if (!duke.exists()) {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "                duke.createNewFile();"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            System.out.println(\"New duke file has been created\");"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"duke.txt\");"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            fw.write(task.toString() + System.lineSeparator());"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * Searches for a duke.txt file."
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * Display a message if such file does not exist"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * but does not terminate the programme"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     *"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     */"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public static void loadFile() {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            readFromFile();"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            System.out.println(\"IO error\");"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        }"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * Read from a duke.txt file using a scanner to capture"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * the strings and calls loadTaskList."
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     *"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * @throws IOException if new file can not be read."
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     */"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public static void readFromFile() throws IOException {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        File file \u003d new File(\"duke.txt\");"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            String raw \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            loadTaskList(raw, taskList);"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        }"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * Handle raw string inputs from the duke.txt"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * and creates respective task items with details"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * and stores in a list"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     *"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * @param raw A string from the duke file containing task details"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * @param  tasks A list used to store task items"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     * @throws IOException if new file can not be read."
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "     */"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    private static void loadTaskList(String raw, ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        if (raw.contains(\"[T]\")) {"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            if (raw.contains(\"\\u2713\")) {"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "                String taskDescription \u003d raw.substring(6);"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "                ToDos newTask \u003d new ToDos(taskDescription);"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "                newTask.isDone \u003d true;"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "                taskList.add(newTask);"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "                String taskDescription \u003d raw.substring(6);"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "                ToDos newTask \u003d new ToDos(taskDescription);"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "                newTask.isDone \u003d false;"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "                taskList.add(newTask);"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            }"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        } else if (raw.contains(\"[D]\")) {"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            int timeSectionStart \u003d raw.indexOf(\"(\");"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            int timeSectionEnd \u003d raw.indexOf(\")\");"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            String taskDescription \u003d raw.substring(6, timeSectionStart - 1);"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            String timePeriod \u003d raw.substring(timeSectionStart + 5, timeSectionEnd);"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            LocalDate date \u003d extractDate(timePeriod);"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            Deadlines newTask \u003d new Deadlines(taskDescription, date);"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            if (raw.contains(\"\\u2713\")) {"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "                newTask.isDone \u003d true;"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            }"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            taskList.add(newTask);"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        } else if (raw.contains(\"[E]\")) {"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            int timeSectionStart \u003d raw.indexOf(\"(\");"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            int timeSectionEnd \u003d raw.indexOf(\")\");"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            String taskDescription \u003d raw.substring(6, timeSectionStart-1);"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            int colon \u003d raw.indexOf(\":\");"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            String timePeriod \u003d raw.substring(colon + 2  , timeSectionEnd);"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            int space \u003d timePeriod.indexOf(\" \");"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            String on \u003d timePeriod.substring(0 , space );"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            String at \u003d timePeriod.substring(space+1);"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            LocalDate date \u003d extractDate(on);"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            Events newTask \u003d new Events(taskDescription, date, at);"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            if (raw.contains(\"\\u2713\")) {"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "                newTask.isDone \u003d true;"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            }"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "            taskList.add(newTask);"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        }"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jeremy733": 432,
      "-": 9
    }
  },
  {
    "path": "src/main/java/duke/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": " * Task item class of the Duke project"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": " * Extends Task class contains fields: name by"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public Deadlines(String description, LocalDate by) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public String showSearch() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jeremy733": 27
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": " * Exception class of the Duke project"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": " * prints a error message"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public DukeException () {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        super ();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public DukeException (String errorMessage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        super (errorMessage);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jeremy733": 16
    }
  },
  {
    "path": "src/main/java/duke/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": " * Task item class of the Duke project"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": " * Extends Task class contains fields: name by"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public Events(String description, LocalDate date,String time) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date + \" \" +time + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public String showSearch() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))  + \" \" + time +\")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Jeremy733": 30
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": " * Task item class of the Duke project"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": " *  Has three extensions"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public void markDone(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public String displayTask(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + this.description ;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public String showSearch() { return \"[\" + getStatusIcon() + \"]\" + this.description ;}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jeremy733": 34
    }
  },
  {
    "path": "src/main/java/duke/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": " * Task item class of the Duke project"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": " * Extends Task class contains a field name"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "public class ToDos extends  Task{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    private  String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public  ToDos(String name){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        return \"[T]\" + super.toString() ;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    public String showSearch() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "        return \"[T]\" + super.toString() ;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Jeremy733": 26
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "add task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "todo sleep"
      }
    ],
    "authorContributionMap": {
      "Jeremy733": 3
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jeremy733"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Jeremy733": 34
    }
  }
]

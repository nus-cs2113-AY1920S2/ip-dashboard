[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "A11riseforme": 2,
      "-": 37
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    archiveVersion \u003d \"v0.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    implementation \u0027com.google.code.gson:gson:2.8.6\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A11riseforme": 18,
      "-": 19
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "# [Project Duke] (https://www.github.com/A11riseforme/duke) - User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "By: `A11riseforme`      Since: `Feb 2020`      Licence: `MIT`      Course: `CS2113T`"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "* [1. Introduction](#introduction)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "* [2. Quick Start](#quick-start)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "* [3. Features](#features)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    + [3.1 View the help message:](#help)`help`"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    + [3.2. Add a Todo task:](#todo) `todo`/`td`"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    + [3.3. Add a Deadline task:](#deadline) `deadline`/`ddl`"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    + [3.4. Add a Event task:](#event) `event`/`evt`"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    + [3.5. List all tasks:](#list) `list`/`ls`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    + [3.6. Mark a task as done:](#done) `done`"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    + [3.7. Delete a task:](#delete) `delete`/`del`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    + [3.8. Search for specific tasks by keywords:](#find) `find`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    + [3.9. Exit the program:](#exit) `bye`"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    + [3.10. Save the data:](#save)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "* [4. Command Summary](#command-summary)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "\u003ca name\u003d\"introduction\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "Duke is a *task management system* which aims to help you to keep track of various tasks. It is a java application based on **Command Line Interface(CLI)**."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "\u003ca name\u003d\"quick-start\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "## 2. Quick Start"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "1. Ensure you have **`Java 11`** installed in your computer, it may work with other versions, but with no guarantee."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "1. Download the latest **`duke.jar`** from the [release page](https://github.com/A11riseforme/duke/releases)."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "1. Copy the file to the folder you want to use as the working directory for your Duke."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "1. Launch the terminal(cmd.exe for windows), and navigate to the working directory of Duke."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "1. Type the command **`java -jar duke.jar`** to launch the program."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "1. Type the command to manage your tasks in Duke."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "1. Some example commands you can try:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "   * **`help`**: show a simple user guide."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "   * **`list`**: list all tasks in the task list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "   * **`todo read book`**: add a todo task with the description of **`read book`** into the task list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "   * **`delete 3`**: delete the task with the task id 3 in the task list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "   * **`bye`**: exit the software."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "\u003ca name\u003d\"features\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "## 3. Features"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "**Command Format**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "- Words in the format of `\u003cUPPER_CASE\u003e` are the parameters to be supplied by the user e.g. in `todo \u003cTASK_DESCRIPTION\u003e`, `\u003cTASK_DESCRIPTION\u003e` is a parameter which can be used as `todo revise cs3230`."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "- Items in square brackets are optional e.g., `help [\u003cCOMMAND_WORD\u003e]`can be used as`help \u003cCOMMAND_WORD\u003e` or `help`."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "\u003ca name\u003d\"help\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "### 3.1 View the help message: `help`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "Format: `help [\u003cCOMMAND_WORD\u003e]`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "\u003ca name\u003d\"todo\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "### 3.2 Add a Todo task: `todo` or `td`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "Format: `todo \u003cTASK_DESCRIPTION\u003e` or `td \u003cTASK_DESCRIPTION\u003e`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "\u003ca name\u003d\"deadline\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "### 3.3 Add a Deadline task: `deadline` or `ddl`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "Format: `deadline \u003cTASK_DESCRIPTION\u003e /by \u003cDEADLINE_DATE\u003e` or `ddl \u003cTASK_DESCRIPTION\u003e /by \u003cDEADLINE_DATE\u003e`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "*note that the `\u003cDEADLINE_DATE\u003e` should be in the form of yyyy-mm-dd (e.g., 2020-02-29).*"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "\u003ca name\u003d\"event\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "### 3.4 Add a Event task: `event` or `evt`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "Format: `event \u003cTASK_DESCRIPTION\u003e /at \u003cEVENT_DATE\u003e` or `evt \u003cTASK_DESCRIPTION\u003e /at \u003cEVENT_DATE\u003e`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "*note that the `\u003cEVENT_DATE\u003e` should be in the form of yyyy-mm-dd (e.g., 2020-02-29).*"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "\u003ca name\u003d\"list\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "### 3.5 List all tasks: `list` or `ls`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "Format: `list` or `ls`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "\u003ca name\u003d\"done\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "### 3.6 Mark a task as done: `done`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "Format: `done \u003cTASK_ID\u003e`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "*the task id corresponds to the id of the task listed in the `list` command*"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "\u003ca name\u003d\"delete\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "### 3.7 Delete a task: `delete` or `del`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "Format: `delete \u003cTASK_ID\u003e` or `del \u003cTASK_ID\u003e`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "*the task id corresponds to the id of the task listed in the `list` command*"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "\u003ca name\u003d\"find\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "### 3.8 Search for specific tasks by keywords: **`find`**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "Format: `find \u003cKEYWORD\u003e`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "*This is function is case insensitive, so \u0027asdf\u0027 will match \u0027AsdF\u0027*"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "\u003ca name\u003d\"exit\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "### 3.9 Exit the program: `bye` or `quit` or `exit`"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "Format: `bye` or `quit` or `exit`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "\u003ca name\u003d\"save\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "### 3.10 Save the data"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "The tasks will be saved in the hard disk automatically before the program exits, and the saved data will be loaded up when launching the program. If the program exits unexpectedly, the file will not be changed, and the newly added tasks will not be saved."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "\u003ca name\u003d\"command-summary\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "# 4. Command Summary"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "* **todo**: `todo \u003cTASK_DESCRIPTION\u003e`"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "  e.g. `todo cs3235 assignment` or `td cs3235 assignment`"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "* **deadline**: `deadline \u003cTASK_DESCRIPTION\u003e /by \u003cDEADLINE_DATE\u003e` or `ddl \u003cTASK_DESCRIPTION\u003e /by \u003cDEADLINE_DATE\u003e`"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "  e.g. `deadline cs3230 assignment /by 2020/03/06`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "* **event**: `event \u003cTASK_DESCRIPTION\u003e /at \u003cEVENT_DATE\u003e` or `evt \u003cTASK_DESCRIPTION\u003e /at \u003cEVENT_DATE\u003e`"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "  e.g. `event project meeting /at 2020/03/02`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "* **list**: `list`"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "* **done**: `done \u003cTASK_ID\u003e`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "  e.g. `done 3`"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "* **delete**: `delete \u003cTASK_ID\u003e` or `del \u003cTASK_ID\u003e`"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "  e.g. `delete 2`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "* **find**: `find \u003cKEYWORD\u003e`"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "  e.g. `find book`"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "* **help**: `help`"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "  e.g. `help deadline` or `help`"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "* **bye**: `bye` or `quit` or `exit`"
      }
    ],
    "authorContributionMap": {
      "A11riseforme": 124,
      "-": 12
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.util.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.DATA_FILE_NAME;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * The main entrance of the programme."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * @author A11riseforme"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Duke constructor."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public Duke()  {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        storage \u003d new Storage(DATA_FILE_NAME);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Run the programme by receiving and executing users\u0027 command,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * until receiving the exit command from user."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "                c.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Initializes new Duke user and runs the programme."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param args arguments of the programme"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A11riseforme": 63,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.exception.DukeWritingException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * This is a command interface to handle the user\u0027s actual command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * @author A11riseforme"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Decide whether the user wants to stop the programme."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return return true if the user enters `exit`, `bye` or `quit`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    boolean isExit();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Execute the actual command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param taskList the Tasklist object which contains the Task objects."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param ui the user interface to output message."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param storage the Storage object to handle the file related operation."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @throws DukeException exception is thrown when error occurs during the runtime."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A11riseforme": 31
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * This class handles the deadline command, implements the Command interface."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * @author A11riseforme"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "public class DeadlineCommand implements Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    private LocalDate byDate;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Constructor with two arguments."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param taskDescription the description of the deadline task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param byDate the date of the deadline task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public DeadlineCommand(String taskDescription, LocalDate byDate) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        this.byDate \u003d byDate;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Return false because user does not want to exit the programme."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Add a deadline task to the taskList."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param taskList the TaskList object which contains the Task objects."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param ui the user interface to output message."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param storage the Storage object to handle the file related operation."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @throws DukeException exception is thrown if error occurs, usually because the task description or date is empty."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        Deadline deadlineTask \u003d new Deadline(taskDescription, byDate);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        taskList.add(deadlineTask);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        ui.showAddTaskSuccessfulPrompt(taskList, deadlineTask);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A11riseforme": 56
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.exception.DukeTaskIdInvalidException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * This class handles the delete command, implements the Command interface."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * @author A11riseforme"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "public class DeleteCommand implements Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    int taskId;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param taskId the id of the task which the user wants to delete."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public DeleteCommand(int taskId) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        this.taskId \u003d taskId;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Return false because user does not want to exit the programme."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Delete a task from the taskList."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param taskList the TaskList object which contains the Task objects."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param ui the user interface to output message."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param storage the Storage object to handle the file related operation."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @throws DukeTaskIdInvalidException exception is thrown if the task id provided by the user is not valid."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeTaskIdInvalidException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            Task deletedTask \u003d taskList.getTask(taskId);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            taskList.delete(taskId);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            ui.showDeleteTaskSuccessfulPrompt(taskList, deletedTask);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            throw new DukeTaskIdInvalidException();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A11riseforme": 55
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.exception.DukeTaskIdInvalidException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * This class handles the done command, implements the Command interface."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * @author A11riseforme"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "public class DoneCommand implements Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    int taskId;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param taskId the id of the task which the user wants to mark as done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public DoneCommand(int taskId) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        this.taskId \u003d taskId;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Return false because user does not want to exit the programme."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * mark a task from the taskList as done."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param taskList the TaskList object which contains the Task objects."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param ui the user interface to output message."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param storage the Storage object to handle the file related operation."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @throws DukeTaskIdInvalidException exception is thrown if the task id provided by the user is not valid."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeTaskIdInvalidException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            taskList.getTask(taskId).markAsDone();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            ui.showMarkAsDoneSuccessfulPrompt(taskList.getTask(taskId));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            throw new DukeTaskIdInvalidException();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A11riseforme": 52
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * This class handles the event command, implements the Command interface."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * @author A11riseforme"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "public class EventCommand implements Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    private LocalDate atDate;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Constructor with two arguments."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param taskDescription the description of the event task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param atDate the date of the event task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public EventCommand(String taskDescription, LocalDate atDate) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        this.atDate \u003d atDate;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Return false because user does not want to exit the programme."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Add an event task to the taskList."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param taskList the TaskList object which contains the Task objects."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param ui the user interface to output message."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param storage the Storage object to handle the file related operation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @throws DukeException exception is thrown if error occurs, usually because the task description or date is empty."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        Event eventTask \u003d new Event(taskDescription, atDate);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        taskList.add(eventTask);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        ui.showAddTaskSuccessfulPrompt(taskList, eventTask);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A11riseforme": 55
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.exception.DukeWritingException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * This class handles the exit, bye or quit command, implements the Command interface."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * @author A11riseforme"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "public class ExitCommand implements Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Return true bacause the user enters `exit`, `bye` or `quit`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return true."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Save the data to the file and show the goodbye message to the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Exception will be thrown if unable to save to the file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param taskList the TaskList object which contains the Task objects."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param ui the user interface to output message."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param storage the Storage object to handle the file related operation."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @throws DukeWritingException exception will be thrown if error occurs when writing date to the file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeWritingException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        storage.save(taskList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        ui.showGoodbyeMessage();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A11riseforme": 37
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * This class handles the find command, implements the Command interface."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * @author A11riseforme"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "public class FindCommand implements Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    private String searchTerm;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param searchTerm the search pattern provided by the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public FindCommand(String searchTerm) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        this.searchTerm \u003d searchTerm;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Return false because user does not want to exit the programme."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * show all the task with whose description contains the search term the user provided."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * This is function is case insensitive, so \u0027asdf\u0027 will match \u0027AsdF\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param taskList the TaskList object which contains the Task objects."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param ui the user interface to output message."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param storage the Storage object to handle the file related operation."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        for (Task i: taskList.getList()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            if (i.getTaskDescription().toLowerCase().contains(searchTerm.toLowerCase())) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "                foundTasks.add(i);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        ui.showFind(foundTasks);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A11riseforme": 55
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * This class handles the help command, implements the Command interface."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * @author A11riseforme"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "public class HelpCommand implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    private String commandWord;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param commandWord the string after the `help` command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public HelpCommand(String commandWord) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        this.commandWord \u003d commandWord;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Return false because user does not want to exit the programme."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Show the help message to the user. if no command specified, show all the commands."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param taskList the TaskList object which contains the Task objects."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param ui the user interface to output message."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param storage the Storage object to handle the file related operation."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        ui.showHelpMessage(commandWord);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A11riseforme": 45
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * This class handles the list command, implements the Command interface."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * @author A11riseforme"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "public class ListCommand implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Return false because user does not want to exit the programme."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * show all the task the user has added."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param taskList the TaskList object which contains the Task objects."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param ui the user interface to output message."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param storage the Storage object to handle the file related operation."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        ui.showList(taskList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A11riseforme": 34
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * This class handles the todo command, implements the Command interface."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * @author A11riseforme"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "public class TodoCommand implements Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param taskDescription the description of the event task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public TodoCommand(String taskDescription) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Return false because user does not want to exit the programme."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Add an todo task to the taskList."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param taskList the TaskList object which contains the Task objects."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param ui the user interface to output message."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param storage the Storage object to handle the file related operation."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @throws DukeException exception is thrown if error occurs, usually because the task description is empty."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        Todo todoTask \u003d new Todo(taskDescription);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        taskList.add(todoTask);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        ui.showAddTaskSuccessfulPrompt(taskList, todoTask);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A11riseforme": 50
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeDateFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.TASK_DATE_FORMAT_ERROR_MESSAGE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "public class DukeDateFormatException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public DukeDateFormatException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        super(TASK_DATE_FORMAT_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A11riseforme": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.FIVE_SPACES;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * The parent exception class that handles the general exception."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * @author A11riseforme"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Constructor with one argument as the error message."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param errorMsg the message to be shown when exception is raised."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public DukeException(String errorMsg) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        super(FIVE_SPACES + errorMsg);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A11riseforme": 28
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeLoadingException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.FILE_OPERATION_IO_ERROR_MESSAGE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * This is an exception class inherited from DukeException class. It is raised if error occurs when trying to"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * accessing the data file."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * @author A11riseforme"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "public class DukeLoadingException extends DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public DukeLoadingException() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        super(FILE_OPERATION_IO_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A11riseforme": 18
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeNullDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.TASK_DESCRIPTION_EMPTY_ERROR_MESSAGE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * This is an exception class inherited from DukeException class. It is raised if the user inputs a task with empty"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * task description."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * @author A11riseforme"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "public class DukeNullDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public DukeNullDescriptionException() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        super(TASK_DESCRIPTION_EMPTY_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A11riseforme": 18
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeTaskIdInvalidException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.TASK_ID_NOT_PROVIDED_OR_INVALID_ERROR_MESSAGE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * This is an exception class inherited from DukeException class. It is raised if the task id provided by the user"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * when calling a `delete` or `done` command is invalid."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * @author A11riseforme"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "public class DukeTaskIdInvalidException extends DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public DukeTaskIdInvalidException() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        super(TASK_ID_NOT_PROVIDED_OR_INVALID_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A11riseforme": 18
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeWritingException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.DATA_FILE_NAME;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * This is an exception class inherited from DukeException class. It is raised if error occurs when trying to"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * accessing the data file."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * @author A11riseforme"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "public class DukeWritingException extends DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public DukeWritingException() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        super(DATA_FILE_NAME);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A11riseforme": 18
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.exception.DukeNullDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.DEADLINE_ICON;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * This is the Deadline class inherited from the Task class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * @author A11riseforme"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    protected LocalDate byDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    protected  String typeIcon;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Default constructor of Deadline class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param description the description of the deadline task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param byDate the date of the deadline task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @throws DukeNullDescriptionException exception is thrown if the description is empty."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public Deadline(String description, LocalDate byDate) throws DukeNullDescriptionException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        typeIcon \u003d DEADLINE_ICON;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        this.byDate \u003d byDate;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Get the Icon representation of the deadline task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return a icon string `[D]` which represents the deadline task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public String getIcon() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return typeIcon;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Get the date of the deadline task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return a String of the date of the deadline task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public LocalDate getByDate() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return byDate;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Cast the task to String type when called by System.out.println() or other similar methods."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return the String printout of the task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return typeIcon + super.toString() + \" (by: \" + byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A11riseforme": 59
    }
  },
  {
    "path": "src/main/java/duke/task/DummyTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.NO_ICON;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.YES_ICON;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * This is a compromised way of converting json strings of different objects into their"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * respective actual objects by creating an `super` objects which contains all possible attributes"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * so as to prevent any loss of attributes after conversion. If there is any better way, please tell me."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * @author A11riseforme"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "public class DummyTask {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    private String typeIcon;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    private LocalDate atDate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    private LocalDate byDate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Get the Icon representation of the event task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return a icon string which represents the event task. `[E]` for event, `[D]` for deadline, `[D]` for todo."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public String getIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return typeIcon;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Get the date of the event task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return a LocalDate of the date of the event task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public LocalDate getAtDate() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return atDate;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Get the date of the deadline task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return a LocalDate of the date of the deadline task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public LocalDate getByDate() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return byDate;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Get the icon representation for the task status. `[v]` for not done, `[v]` for done."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return a String of icon."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return (isDone ? YES_ICON : NO_ICON);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Cast the task to String type by returning a string of its description."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return the description of the task in String."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public String getTaskDescription() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A11riseforme": 66
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.exception.DukeNullDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.EVENT_ICON;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * This is the Event class inherited from the Task class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * @author A11riseforme"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    protected LocalDate atDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    protected String typeIcon;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Default constructor of Event class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param description the description of the event task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param atDate the date of the event task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @throws DukeNullDescriptionException exception is thrown if the description is empty."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public Event(String description, LocalDate atDate) throws DukeNullDescriptionException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        typeIcon \u003d EVENT_ICON;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        this.atDate \u003d atDate;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Get the Icon representation of the event task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return a icon string `[E]` which represents the event task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public String getIcon() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return typeIcon;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Get the date of the event task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return a LocalDate of the date of the event task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public LocalDate getAtDate() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return atDate;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Cast the task to String type when called by System.out.println() or other similar methods."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return the String printout of the task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return typeIcon + super.toString() + \" (at: \" + atDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A11riseforme": 60
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.exception.DukeNullDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.NO_ICON;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.YES_ICON;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * This is the Task class to serve as a parent class for all types of tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * @author A11riseforme"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Default constructor, set isDone to false by default as newly added tasks are all not done by its nature."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param description the description of the task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @throws DukeNullDescriptionException exception is thrown if description is empty."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public Task(String description) throws DukeNullDescriptionException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        if (description.length() \u003e 0) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            this.isDone \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            throw new DukeNullDescriptionException();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Get the icon representation for the task status. `[v]` for not done, `[v]` for done."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return a String of icon."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return (isDone ? YES_ICON : NO_ICON);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Cast the task to String type by returning a string of its description."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return the description of the task in String."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public String getTaskDescription() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Set the task as done."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Cast the task to String type when called by System.out.println() or other similar methods."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return the String printout of the task."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return getStatusIcon() + \" \" + getTaskDescription();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A11riseforme": 66
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.exception.DukeTaskIdInvalidException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " *  A container class which contains the a list of Task objects."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Initialize a new ArrayList of Task objects, initially empty."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Return an ArrayList of Task objects."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return an ArrayList of Task objects."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Constructor with an ArrayList of Task objects provided."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param list a list of the Task objects."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Add new task to the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param task the Task object to be added."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Delete a task from the list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param taskId the id of the task which the user intends to delete"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @throws DukeTaskIdInvalidException exception is thrown when the task id provided by the user is invalid."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public void delete(int taskId) throws DukeTaskIdInvalidException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            list.remove(taskId);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            throw new DukeTaskIdInvalidException();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Get the specific Task object with the given task id."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param taskId the id the the specific task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return the Task object whichever is looking for."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public Task getTask(int taskId) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return list.get(taskId);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Get the number of tasks the user has."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return the size of the task list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A11riseforme": 79
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.exception.DukeNullDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.TODO_ICON;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * This is the Todo class inherited from the Task class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * @author A11riseforme"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    protected String typeIcon;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Default constructor of Todo class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param description the description of the todo task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @throws DukeNullDescriptionException exception is thrown if description is empty."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public Todo(String description) throws DukeNullDescriptionException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        this.typeIcon \u003d TODO_ICON;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Get the Icon representation of the todo task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return a icon string `[T]` which represents the todo task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public String getIcon() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return typeIcon;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Cast the task to String type when called by System.out.println() or other similar methods."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return the String printout of the task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return typeIcon + super.toString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A11riseforme": 44
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.ADD_OR_DELETE_TASK_POST_PROMPT;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.ADD_TASK_PROMPT;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.BYE_WORD;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.DATA_LOADED_SUCCESSFULLY_PROMPT;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.DATA_SAVED_SUCCESSFULLY_PROMPT;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.DEADLINE_COMMAND;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.DEADLINE_COMMAND_HELP_MESSAGE;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.DEADLINE_COMMAND_SHORTCUT;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.DELETE_COMMAND;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.DELETE_COMMAND_HELP_MESSAGE;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.DELETE_COMMAND_SHORTCUT;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.DELETE_TASKS_PROMPT;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.DONE_COMMAND;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.DONE_COMMAND_HELP_MESSAGE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.DONE_TASK_PROMPT;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.EVENT_COMMAND;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.EVENT_COMMAND_HELP_MESSAGE;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.EVENT_COMMAND_SHORTCUT;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.EXIT_COMMAND_BYE;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.EXIT_COMMAND_EXIT;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.EXIT_COMMAND_HELP_MESSAGE;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.EXIT_COMMAND_QUIT;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.FIND_COMMAND_HELP_MESSAGE;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.FIVE_SPACES;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.FOUND_TASK_PROMPT;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.GREETING_WORD;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.LINE_DIVIDER;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.LIST_COMMAND;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.LIST_COMMAND_HELP_MESSAGE;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.LIST_COMMAND_SHORTCUT;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.LIST_SINGLE_TASK_MESSAGE_FORMAT_STRING;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.LIST_TASKS_PROMPT;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.LOAD_DATA_FROM_FILE_PROMPT;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.LOGO;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.NOT_FOUND_TASK_PROMPT;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.SAVE_DATA_TO_FILE_PROMPT;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.SEVEN_SPACES;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.TODO_COMMAND;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.TODO_COMMAND_HELP_MESSAGE;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.TODO_COMMAND_SHORTCUT;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "/**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * This class is used as an interface to interact with the user. It can read the input from the user as well as print"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * message to the user."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * @author A11riseforme"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    private Scanner in;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Constructor to initialize `in` as a scanner object for reading the input from the user."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Read the input from the user."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return a String, which contains a line of input from the user."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Show the user that the programme is about to load the data file."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static void showLoadDataPrompt() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        System.out.println(FIVE_SPACES + LOAD_DATA_FROM_FILE_PROMPT);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * After successfully loading the data file, prompt user."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static void showLoadDataSuccessfulPrompt() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        System.out.println(FIVE_SPACES + DATA_LOADED_SUCCESSFULLY_PROMPT);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Show the user that the programme is about to save the data into the file."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static void showSaveDataToFilePrompt() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        System.out.println(FIVE_SPACES + SAVE_DATA_TO_FILE_PROMPT);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * After successfully save the data into the data file, prompt user."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static void showSaveDataToFileSuccessfulPrompt() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        System.out.println(FIVE_SPACES + DATA_SAVED_SUCCESSFULLY_PROMPT);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Show the welcome message to user when programme starts."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        System.out.println(LOGO);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        System.out.println(FIVE_SPACES + GREETING_WORD);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Show the exit message when user exit the programme."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public void showGoodbyeMessage() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        System.out.println(FIVE_SPACES + BYE_WORD);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Show a line-divider to separate each command and output."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * After successfully adding one task, prompt the user."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param taskList the TaskList object used by the programme to store the tasks."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param addedTask the Task object which refers to the newly added task."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public void showAddTaskSuccessfulPrompt(TaskList taskList, Task addedTask) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        System.out.println(FIVE_SPACES + ADD_TASK_PROMPT);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        System.out.println(SEVEN_SPACES + addedTask);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        System.out.printf(FIVE_SPACES + ADD_OR_DELETE_TASK_POST_PROMPT, taskList.getSize());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * After successfully mark the task as done, prompt the user."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param doneTask the Task object which refers to the task which the user wishes to mark as done."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public void showMarkAsDoneSuccessfulPrompt(Task doneTask) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        System.out.println(FIVE_SPACES + DONE_TASK_PROMPT);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        System.out.println(SEVEN_SPACES + doneTask);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Print every task in taskList."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param taskList the TaskList object used by the programme to store the tasks."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public void showList(TaskList taskList) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        System.out.println(FIVE_SPACES + LIST_TASKS_PROMPT);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        int taskCount \u003d taskList.getSize();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        for (int i \u003d 0; i \u003c taskCount; ++i) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            System.out.printf(SEVEN_SPACES + LIST_SINGLE_TASK_MESSAGE_FORMAT_STRING, i, taskList.getTask(i));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Print all the tasks which matches the key word provided by the user."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param foundTasks ArrayList of Task objects that match the key word provided by the user."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public void showFind(ArrayList\u003cTask\u003e foundTasks) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        if (foundTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            System.out.println(FIVE_SPACES + NOT_FOUND_TASK_PROMPT);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            System.out.println(FIVE_SPACES + FOUND_TASK_PROMPT);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            int taskCount \u003d foundTasks.size();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            for (int i \u003d 0; i \u003c taskCount; ++i) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "                System.out.printf(SEVEN_SPACES + LIST_SINGLE_TASK_MESSAGE_FORMAT_STRING, i, foundTasks.get(i));"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * After successfully deleting one task, prompt the user."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param taskList the TaskList object used by the programme to store the tasks."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param deletedTask the Task object which refers to the newly deleted task."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public void showDeleteTaskSuccessfulPrompt(TaskList taskList, Task deletedTask) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        System.out.println(FIVE_SPACES + DELETE_TASKS_PROMPT);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        System.out.println(SEVEN_SPACES + deletedTask);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        System.out.printf(FIVE_SPACES + ADD_OR_DELETE_TASK_POST_PROMPT, taskList.getSize());"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Show the usage of a specific command, if no argument or wrong argument provided, show all the commands\u0027 usage."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param commandWord the command which the user want to know about how to use."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public void showHelpMessage(String commandWord) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        case EXIT_COMMAND_BYE:"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        case EXIT_COMMAND_EXIT:"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        case EXIT_COMMAND_QUIT:"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            System.out.println(FIVE_SPACES + EXIT_COMMAND_HELP_MESSAGE);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        case LIST_COMMAND:"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        case LIST_COMMAND_SHORTCUT:"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            System.out.println(FIVE_SPACES + LIST_COMMAND_HELP_MESSAGE);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        case DONE_COMMAND:"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            System.out.println(FIVE_SPACES + DONE_COMMAND_HELP_MESSAGE);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        case TODO_COMMAND:"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        case TODO_COMMAND_SHORTCUT:"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            System.out.println(FIVE_SPACES + TODO_COMMAND_HELP_MESSAGE);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        case DEADLINE_COMMAND:"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        case DEADLINE_COMMAND_SHORTCUT:"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            System.out.println(FIVE_SPACES + DEADLINE_COMMAND_HELP_MESSAGE);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        case EVENT_COMMAND:"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        case EVENT_COMMAND_SHORTCUT:"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            System.out.println(FIVE_SPACES + EVENT_COMMAND_HELP_MESSAGE);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        case DELETE_COMMAND:"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        case DELETE_COMMAND_SHORTCUT:"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            System.out.println(FIVE_SPACES + DELETE_COMMAND_HELP_MESSAGE);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        case FIND_COMMAND_HELP_MESSAGE:"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            System.out.println(FIVE_SPACES + FIND_COMMAND_HELP_MESSAGE);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            showAllHelpMessage();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Show all the available commands and their respective usage."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    private void showAllHelpMessage() {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        System.out.println(FIVE_SPACES + EXIT_COMMAND_HELP_MESSAGE);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        System.out.println(FIVE_SPACES + LIST_COMMAND_HELP_MESSAGE);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        System.out.println(FIVE_SPACES + DONE_COMMAND_HELP_MESSAGE);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        System.out.println(FIVE_SPACES + TODO_COMMAND_HELP_MESSAGE);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        System.out.println(FIVE_SPACES + DEADLINE_COMMAND_HELP_MESSAGE);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        System.out.println(FIVE_SPACES + EVENT_COMMAND_HELP_MESSAGE);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        System.out.println(FIVE_SPACES + DELETE_COMMAND_HELP_MESSAGE);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        System.out.println(FIVE_SPACES + FIND_COMMAND_HELP_MESSAGE);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Print the error message."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param message the error message."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A11riseforme": 255
    }
  },
  {
    "path": "src/main/java/duke/util/Constants.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * This class contains all the constants involved in interaction with users."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * @author A11riseforme"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "public class Constants {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String LOGO \u003d \"          __ __      _           __                          \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "                                    + \"     /\\\\  /_ /_ |    (_)         / _|                         \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "                                    + \"    /  \\\\  | || |_ __ _ ___  ___| |_ ___  _ __ _ __ ___   ___ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "                                    + \"   / /\\\\ \\\\ | || | \u0027__| / __|/ _ \\\\  _/ _ \\\\| \u0027__| \u0027_ ` _ \\\\ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "                                    + \"  / ____ \\\\| || | |  | \\\\__ \\\\  __/ || (_) | |  | | | | | |  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "                                    + \" /_/    \\\\_\\\\_||_|_|  |_|___/\\\\___|_| \\\\___/|_|  |_| |_| |_|\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String LINE_DIVIDER \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String FIVE_SPACES \u003d \"     \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String SEVEN_SPACES \u003d \"       \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String GREETING_WORD \u003d \"Hello! I\u0027m A11riseforme\\n     What can I do for you?\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String BYE_WORD \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String EXIT_COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String EXIT_COMMAND_QUIT \u003d \"quit\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String EXIT_COMMAND_EXIT \u003d \"exit\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String LIST_COMMAND_SHORTCUT \u003d \"ls\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String DONE_COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String TODO_COMMAND \u003d \"todo\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String TODO_COMMAND_SHORTCUT \u003d \"td\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String DEADLINE_COMMAND \u003d \"deadline\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String DEADLINE_COMMAND_SHORTCUT \u003d \"ddl\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String EVENT_COMMAND \u003d \"event\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String EVENT_COMMAND_SHORTCUT \u003d \"evt\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String DELETE_COMMAND \u003d \"delete\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String DELETE_COMMAND_SHORTCUT \u003d \"del\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String FIND_COMMAND \u003d \"find\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String HELP_COMMAND \u003d \"help\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String DEADLINE_TIME_DELIMITER \u003d \" /by \";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String EVENT_TIME_DELIMITER \u003d \" /at \";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String UNKNOWN_COMMAND_RESPONSE \u003d \"OOPS!!! I don\u0027t know what that means\\n\" + FIVE_SPACES"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            + \"You may enter `help` to check available commands!\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String LIST_TASKS_PROMPT \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String DONE_TASK_PROMPT \u003d \"Nice! I\u0027ve marked this duke.task as done:\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String ADD_TASK_PROMPT \u003d \"Got it. I\u0027ve added this duke.task:\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String ADD_OR_DELETE_TASK_POST_PROMPT \u003d \"Now you have %d tasks in the list.\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String DELETE_TASKS_PROMPT \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String NOT_FOUND_TASK_PROMPT \u003d \"There are no matching tasks in your list!\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String FOUND_TASK_PROMPT \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String LIST_SINGLE_TASK_MESSAGE_FORMAT_STRING \u003d \"%d.%s\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String TASK_ID_NOT_PROVIDED_OR_INVALID_ERROR_MESSAGE \u003d \"OOPS!!! The task id is not provided \""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            + \"or invalid!\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String DEADLINE_FORMAT_ERROR_MESSAGE \u003d \"OOPS!!! The deadline format is not correct!\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String EVENT_FORMAT_ERROR_MESSAGE \u003d \"OOPS!!! The event format is not correct!\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String TASK_DESCRIPTION_EMPTY_ERROR_MESSAGE \u003d \"OOPS!!! The task description cannot be empty!\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String TASK_DATE_FORMAT_ERROR_MESSAGE \u003d \"OOPS!!! The task date should be in the format of \""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            + \"yyyy-mm-dd (e.g., 2020-02-29).\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String DONE_COMMAND_HELP_MESSAGE \u003d \"key in `done \u003ctask_id\u003e` to mark the task of \u003ctask_id\u003e as \""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            + \"done.\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String LIST_COMMAND_HELP_MESSAGE \u003d \"key in `list` or `ls` to list all the tasks.\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String TODO_COMMAND_HELP_MESSAGE \u003d \"key in `todo/td \u003ctask_description\u003e` to add a todo task.\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String DEADLINE_COMMAND_HELP_MESSAGE \u003d \"key in `deadline/ddl \u003ctask_description\u003e /by \""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            + \"\u003cdeadline\u003e` to add a deadline task.\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String EVENT_COMMAND_HELP_MESSAGE \u003d \"key in `event/evt \u003ctask_description\u003e /at \u003cevent_date\u003e` \""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            + \"to add an event task.\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String DELETE_COMMAND_HELP_MESSAGE \u003d \"key in `delete/del \u003ctask_id\u003e` to delete the task of \""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            + \"\u003ctask_id\u003e.\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String EXIT_COMMAND_HELP_MESSAGE \u003d \"key in `exit/bye/quit` to exit the programme.\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String FIND_COMMAND_HELP_MESSAGE \u003d \"key in `find \u003csearch_term\u003e` to find the tasks which \""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            + \"contain the keyword \u003csearch_term\u003e. This function is case-insensitive\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String YES_ICON \u003d \"[v]\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String NO_ICON \u003d \"[x]\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String DEADLINE_ICON \u003d \"[D]\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String EVENT_ICON \u003d \"[E]\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String TODO_ICON \u003d \"[T]\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String DATA_FILE_NAME \u003d \"tasks.json\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String FILE_OPERATION_IO_ERROR_MESSAGE \u003d"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            \"OOPS!!! Something went wrong when accessing \" + DATA_FILE_NAME + \" !\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String LOAD_DATA_FROM_FILE_PROMPT \u003d \"Loading data from \" + DATA_FILE_NAME + \", please wait...\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String DATA_LOADED_SUCCESSFULLY_PROMPT \u003d \"Data loaded successfully!\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String SAVE_DATA_TO_FILE_PROMPT \u003d \"Saving data to \" + DATA_FILE_NAME + \", please wait...\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static final String DATA_SAVED_SUCCESSFULLY_PROMPT \u003d \"Data saved successfully!\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A11riseforme": 80
    }
  },
  {
    "path": "src/main/java/duke/util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.command.HelpCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.exception.DukeDateFormatException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.exception.DukeNullDescriptionException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.DEADLINE_COMMAND;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.DEADLINE_COMMAND_SHORTCUT;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.DEADLINE_FORMAT_ERROR_MESSAGE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.DEADLINE_TIME_DELIMITER;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.DELETE_COMMAND;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.DELETE_COMMAND_SHORTCUT;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.DONE_COMMAND;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.EVENT_COMMAND;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.EVENT_COMMAND_SHORTCUT;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.EVENT_FORMAT_ERROR_MESSAGE;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.EVENT_TIME_DELIMITER;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.EXIT_COMMAND_BYE;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.EXIT_COMMAND_EXIT;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.EXIT_COMMAND_QUIT;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.FIND_COMMAND;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.HELP_COMMAND;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.LIST_COMMAND;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.LIST_COMMAND_SHORTCUT;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.TODO_COMMAND;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.TODO_COMMAND_SHORTCUT;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.UNKNOWN_COMMAND_RESPONSE;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "/**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * Parser class to parse the users\u0027 input."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * @author A11riseforme"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * parse the users\u0027 input."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * This method try to identify the command user intends to call, and parse the full command into different parts."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Then pass required arguments to the command."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param userInput the entire input from the user."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return a Command object corresponding to the command the user intends to call."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @throws DukeException exception is thrown when task description or required date is empty or format is wrong."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public static Command parse(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        String[] commands \u003d splitCommand(userInput);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        String commandWord \u003d commands[0];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        String afterCommand \u003d commands[1];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        case EXIT_COMMAND_BYE:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        case EXIT_COMMAND_EXIT:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        case EXIT_COMMAND_QUIT:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        case LIST_COMMAND:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        case LIST_COMMAND_SHORTCUT:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        case DONE_COMMAND:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            int doneTaskId \u003d extractTaskId(userInput);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            return new DoneCommand(doneTaskId);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        case TODO_COMMAND:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        case TODO_COMMAND_SHORTCUT:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            return new TodoCommand(afterCommand.trim());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        case DEADLINE_COMMAND:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        case DEADLINE_COMMAND_SHORTCUT:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "                String taskDescriptions \u003d extractTaskDescription(afterCommand, DEADLINE_TIME_DELIMITER);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "                String taskDateString \u003d extractTaskDate(afterCommand, DEADLINE_TIME_DELIMITER);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "                LocalDate taskDate \u003d parseStringToDate(taskDateString);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "                return new DeadlineCommand(taskDescriptions, taskDate);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            } catch (DukeNullDescriptionException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "                throw new DukeNullDescriptionException();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            } catch (DukeDateFormatException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "                throw new DukeDateFormatException();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "                throw new DukeException(DEADLINE_FORMAT_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        case EVENT_COMMAND:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        case EVENT_COMMAND_SHORTCUT:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "                String taskDescriptions \u003d extractTaskDescription(afterCommand, EVENT_TIME_DELIMITER);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "                String taskDateString \u003d extractTaskDate(afterCommand, EVENT_TIME_DELIMITER);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "                LocalDate taskDate \u003d parseStringToDate(taskDateString);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "                return new EventCommand(taskDescriptions, taskDate);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            } catch (DukeNullDescriptionException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "                throw new DukeNullDescriptionException();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            } catch (DukeDateFormatException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "                throw new DukeDateFormatException();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "                throw new DukeException(EVENT_FORMAT_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        case DELETE_COMMAND:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        case DELETE_COMMAND_SHORTCUT:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            int delTaskId \u003d extractTaskId(userInput);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            return new DeleteCommand(delTaskId);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        case FIND_COMMAND:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            return new FindCommand(afterCommand.trim());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        case HELP_COMMAND:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            return new HelpCommand(afterCommand.trim());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            throw new DukeException(UNKNOWN_COMMAND_RESPONSE);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Split user\u0027s input into two parts, the first part is the command word, the second part is the rest."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param userInput the entire input from the user."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return an array of two Strings, command word and the rest."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    private static String[] splitCommand(String userInput) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        String commandWord \u003d extractCommandWord(userInput);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        String afterCommand \u003d userInput.substring(commandWord.length());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        String[] commands \u003d new String[]{commandWord, afterCommand};"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return commands;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Extract the command word from the user input."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param userInput the entire input from the user."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return the command word which the user intend to call."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    private static String extractCommandWord(String userInput) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        int spaceIndex \u003d userInput.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        if (spaceIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            return userInput;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return userInput.substring(0, spaceIndex);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Extract the task id from the user input which intends to call `done` command."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param userInput the entire input from the user."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return the task id which user intends to mark as done."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    private static int extractTaskId(String userInput) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        int taskIdIndex \u003d userInput.indexOf(\" \") + 1;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        String doneTaskIdString \u003d userInput.substring(taskIdIndex);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            return Integer.parseInt(doneTaskIdString);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Extract the task description from the user input."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param taskInfo the second part of the user input."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param delimiter the delimiter for the date in the user input."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return the description of the task which user intends to add."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @throws DukeException exception is thrown when can\u0027t extract the task description."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    private static String extractTaskDescription(String taskInfo, String delimiter) throws DukeException {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        int taskTimeIndex \u003d taskInfo.indexOf(delimiter);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            return taskInfo.substring(0, taskTimeIndex).trim();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Extract the task date from the user input when the user intend to call `deadline` or `event`."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param taskInfo the second part of the user input."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param delimiter the delimiter for the date in the user input."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return a String of the task date."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    private static String extractTaskDate(String taskInfo, String delimiter) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        int taskTimeIndex \u003d taskInfo.indexOf(delimiter) + delimiter.length();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return taskInfo.substring(taskTimeIndex).trim();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Cast a String of date in the format of \"yyyy-mm-dd\" to the LocalDate type."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param dateString a String of the task date. in the format of \"yyyy-mm-dd\"."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return a LocalDate type date."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @throws DukeDateFormatException exception is thrown when the String of the date is of wrong format."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    private static LocalDate parseStringToDate(String dateString) throws DukeDateFormatException {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(dateString);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            return date;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            throw new DukeDateFormatException();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A11riseforme": 202
    }
  },
  {
    "path": "src/main/java/duke/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import com.google.gson.reflect.TypeToken;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.exception.DukeLoadingException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.exception.DukeWritingException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.exception.DukeNullDescriptionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.task.DummyTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import java.lang.reflect.Type;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.DEADLINE_ICON;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.EVENT_ICON;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "import static duke.util.Constants.YES_ICON;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * This class handles the storage related operation in the programme."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " * @author A11riseforme"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    private String dataFileName;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Constructor with name of the data file as argument."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param dataFileName the name of the file in which the data is stored."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public Storage(String dataFileName) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        this.dataFileName \u003d dataFileName;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Load the json string from the file and convert into an ArrayList of Tasks."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return a list of Task objects, which represents the tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @throws DukeLoadingException exception is thrown if error occurs when loading from the file."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @throws DukeNullDescriptionException exception is thrown if error occurs when parsing the json string and any"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *      task with empty description."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeLoadingException, DukeNullDescriptionException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        Ui.showLoadDataPrompt();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        String jsonStr;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            jsonStr \u003d loadJsonStringFromFile();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        } catch (DukeLoadingException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            throw new DukeLoadingException();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        List\u003cDummyTask\u003e dummyTaskList \u003d extractDummyTasks(jsonStr);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        ArrayList\u003cTask\u003e tasksList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        Task currentTask;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        for (DummyTask i : dummyTaskList) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "                currentTask \u003d convertDummyTaskToSpecificTask(i);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "                tasksList.add(currentTask);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            } catch (DukeNullDescriptionException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "                throw new DukeNullDescriptionException();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        Ui.showLoadDataSuccessfulPrompt();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return tasksList;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Read the file and return its content, which is a json string."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return the content of the date file, which is a json string."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @throws DukeLoadingException exception is thrown if error occurs when loading from the file."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    private String loadJsonStringFromFile() throws DukeLoadingException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        String jsonStr;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            File f \u003d new File(dataFileName);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            jsonStr \u003d s.nextLine();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            s.close();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            throw new DukeLoadingException();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return jsonStr;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Extract the DummyTask objects from the jsonstr, and return as a List."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param jsonStr the content of the date file, which is a json string."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return a List of DummyTask objects, which will be further converted into specific tasks."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    private List\u003cDummyTask\u003e extractDummyTasks(String jsonStr) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        Type listType \u003d new TypeToken\u003cList\u003cDummyTask\u003e\u003e(){}.getType();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        Gson gson \u003d new Gson();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return gson.fromJson(jsonStr, listType);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Convert a DummyTask to its actual task type."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param task the DummyTask object to be converted."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @return the actual task object"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @throws DukeNullDescriptionException exception is thrown when the task has empty description."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    private Task convertDummyTaskToSpecificTask(DummyTask task) throws DukeNullDescriptionException {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        Task convertedTask;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        switch (task.getIcon()) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        case DEADLINE_ICON:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            convertedTask \u003d new Deadline(task.getTaskDescription(), task.getByDate());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        case EVENT_ICON:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            convertedTask \u003d new Event(task.getTaskDescription(), task.getAtDate());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            convertedTask \u003d new Todo(task.getTaskDescription());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        if (convertedTask.getStatusIcon().equals(YES_ICON)) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            convertedTask.markAsDone();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        return convertedTask;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Save the whole list of tasks into the date file."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param tasksList the TaskList object used to store the task information."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @throws DukeWritingException exception is thrown if error occurs when writing to the file."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    public void save(TaskList tasksList) throws DukeWritingException {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        Ui.showSaveDataToFilePrompt();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            saveObjectsAsJsonStringToFile(dataFileName, tasksList.getList());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            Ui.showSaveDataToFileSuccessfulPrompt();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "            throw new DukeWritingException();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * Save a list of Task objects as json string into the file."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     *"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param dataFileName the name of the file in which the data is stored."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @param list a list of the Task objects which represents the tasks."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     * @throws IOException exception is thrown if error occurs when writing to the file."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    static void saveObjectsAsJsonStringToFile(String dataFileName, ArrayList\u003cTask\u003e list) throws IOException {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        Gson gson \u003d new Gson();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        FileWriter fw \u003d new FileWriter(dataFileName);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        String json \u003d gson.toJson(list);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        fw.write(json);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        fw.flush();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A11riseforme": 171
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "          __ __      _           __                          "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     /\\  /_ /_ |    (_)         / _|                         "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    /  \\  | || |_ __ _ ___  ___| |_ ___  _ __ _ __ ___   ___ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "   / /\\ \\ | || | \u0027__| / __|/ _ \\  _/ _ \\| \u0027__| \u0027_ ` _ \\ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "  / ____ \\| || | |  | \\__ \\  __/ || (_) | |  | | | | | |  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": " /_/    \\_\\_||_|_|  |_|___/\\___|_| \\___/|_|  |_| |_| |_|\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     Hello! I\u0027m A11riseforme"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     Got it. I\u0027ve added this duke.task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "       [T][✘] borrow book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     0.[T][✘] borrow book"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     Got it. I\u0027ve added this duke.task:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "       [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     0.[T][✘] borrow book"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     1.[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     Got it. I\u0027ve added this duke.task:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "       [E][✘] project meeting (at : Mon 2-4pm)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     0.[T][✘] borrow book"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     1.[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     2.[E][✘] project meeting (at : Mon 2-4pm)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     Nice! I\u0027ve marked this duke.task as done:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "       [D][✓] return book (by: Sunday)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     0.[T][✘] borrow book"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     1.[D][✓] return book (by: Sunday)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     2.[E][✘] project meeting (at : Mon 2-4pm)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "A11riseforme": 54
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "A11riseforme": 9
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "java11 -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A11riseforme"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "A11riseforme": 21
    }
  }
]

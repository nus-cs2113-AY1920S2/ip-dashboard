[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "quinnyyy": 2,
      "-": 37
    }
  },
  {
    "path": "src/main/java/duke/BadDeleteFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "public class BadDeleteFormatException extends BadTaskChoiceFormatException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public BadDeleteFormatException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        super(\"Bad format for keyword delete: \" + errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "quinnyyy": 7
    }
  },
  {
    "path": "src/main/java/duke/BadDoneFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "public class BadDoneFormatException extends BadTaskChoiceFormatException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public BadDoneFormatException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        super(\"Bad format for keyword done: \" + errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "quinnyyy": 7
    }
  },
  {
    "path": "src/main/java/duke/BadFileFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "public class BadFileFormatException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public BadFileFormatException(String errorMessage){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        super(\"Bad file format: \" + errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "quinnyyy": 7
    }
  },
  {
    "path": "src/main/java/duke/BadTaskChoiceFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "public class BadTaskChoiceFormatException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public BadTaskChoiceFormatException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "quinnyyy": 7
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    protected Keyword keyword;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    protected String[] tokens;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public Command(String userInput) throws InvalidKeywordException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        if (userInput.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            throw new InvalidKeywordException(\"Empty line\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        tokens \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        keyword \u003d getKeywordFromString(tokens[0]);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    protected Keyword getKeywordFromString(String keyword) throws InvalidKeywordException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            return Keyword.valueOf(keyword.toUpperCase());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        } catch (IllegalArgumentException e){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            throw new InvalidKeywordException(keyword);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public Keyword getKeyword() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        return keyword;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public String[] getTokens() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        return tokens;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "quinnyyy": 29
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public static final String END_STRING \u003d \"bye\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        Ui.initializeUi();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        Ui.greet();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        TaskManager myTaskManager \u003d new TaskManager();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        String userInput \u003d Ui.getNextLine();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        while (!userInput.equals(END_STRING)) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            myTaskManager.executeUserInput(userInput);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            userInput \u003d Ui.getNextLine();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        Ui.sayGoodbye();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "quinnyyy": 17,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/InvalidKeywordException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "public class InvalidKeywordException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public InvalidKeywordException(String badKeyword) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        super(\"Invalid keyword: \" + badKeyword);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "quinnyyy": 7
    }
  },
  {
    "path": "src/main/java/duke/Keyword.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "public enum Keyword {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    EVENT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "quinnyyy": 10
    }
  },
  {
    "path": "src/main/java/duke/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import duke.tasks.exceptions.BadTaskFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    protected final String filePath \u003d \"data/tasks.txt\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public TaskManager() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        loadFromFile();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        listTasks();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public void executeUserInput(String userInput) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            command \u003d new Command(userInput);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        } catch (InvalidKeywordException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            Ui.printPretty(e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        executeCommand(command);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    protected void executeCommand(Command command) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            switch (command.getKeyword()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            case LIST:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                listTasks();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                markAsDone(command);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                saveToFile();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                deleteTask(command);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                saveToFile();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                addTask(new Deadline(command));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                saveToFile();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                addTask(new Event(command));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                saveToFile();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                addTask(new ToDo(command));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                saveToFile();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                // Should never reach default case b/c check for invalid keyword when creating command object"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        } catch (BadTaskFormatException | BadTaskChoiceFormatException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            Ui.printPretty(e.getMessage());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    protected void addTask(Task newTask) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        String message \u003d \"Added this task:\" + System.lineSeparator() + newTask.toString() + System.lineSeparator() +"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                \"Now you have \" + tasks.size() + \" tasks in the list\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        Ui.printPretty(message);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    protected void listTasks() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        String message \u003d \"These are your tasks:\" + System.lineSeparator();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            String lineEnd \u003d i \u003d\u003d tasks.size() - 1 ? \"\" : System.lineSeparator(); // Do this so no extra newline"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            message +\u003d (String.format(\"%d. %s\", i + 1, tasks.get(i).toString()) + lineEnd);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        Ui.printPretty(message);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    protected int getTaskIndex(Command command) throws BadTaskChoiceFormatException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        String[] tokens \u003d command.getTokens();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        if (tokens.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            throw new BadTaskChoiceFormatException(\"Specify a task by entering a task number\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        } else if (tokens.length \u003e 2) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            throw new BadTaskChoiceFormatException(\"Too many tokens\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        int taskIndex;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            taskIndex \u003d Integer.parseInt(tokens[1]) - 1;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            throw new BadTaskChoiceFormatException(\"Task number is not parsable\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        if (taskIndex \u003e tasks.size() - 1 || taskIndex \u003c 0) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            throw new BadTaskChoiceFormatException(\"Task number is invalid\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        return taskIndex;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    protected void deleteTask(Command command) throws BadDeleteFormatException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        int taskIndex;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            taskIndex \u003d getTaskIndex(command);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        } catch (BadTaskChoiceFormatException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            throw new BadDeleteFormatException(e.getMessage());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        Task t \u003d tasks.get(taskIndex);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        Ui.printPretty(\"Deleted task \" + (taskIndex + 1) + \":\\n\" + t.toString() + \"\\nNow you have \" + tasks.size() +"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                \" tasks left in your list\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    protected void markAsDone(Command command) throws BadDoneFormatException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        int taskIndex;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            taskIndex \u003d getTaskIndex(command);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        } catch (BadTaskChoiceFormatException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            throw new BadDoneFormatException(e.getMessage());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        Task t \u003d tasks.get(taskIndex);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        t.setIsDone(true);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        Ui.printPretty(\"Task \" + (taskIndex + 1) + \" has been marked as done\\n\" + t.toString());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    protected void saveToFile() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            if (!f.exists()) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            String formattedTasks \u003d \"\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            for (Task t : tasks) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                formattedTasks +\u003d t.toFormattedString() + System.lineSeparator();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            fw.write(formattedTasks);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            Ui.printPretty(e.getMessage());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            Ui.printPretty(\"*** Writing to file failed. Your task list may not have been saved. ***\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    protected void loadFromFile() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            String errors \u003d \"\";"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                    tasks.add(getTaskFromFormattedLine(s.nextLine()));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                } catch (BadFileFormatException e){"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                    errors +\u003d e.getMessage() + \" on line \" + counter + \" of \" + filePath + System.lineSeparator();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            if (!errors.equals(\"\")) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                Ui.printPretty(errors.substring(0, errors.length() - 1));"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            Ui.printPretty(\"Couldn\u0027t locate a save file. Starting with an empty list of tasks\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    protected Task getTaskFromFormattedLine(String line) throws BadFileFormatException {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        String[] tokens \u003d line.split(\",\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        if (tokens.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            throw new BadFileFormatException(\"Empty line\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        } else if (tokens.length \u003c 3) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            throw new BadFileFormatException(\"Not enough tokens\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        } else if ((tokens[0].equals(\"D\") || tokens[0].equals(\"E\")) \u0026\u0026 tokens.length \u003c 4) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            throw new BadFileFormatException(\"Not enough tokens\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        } else if (!(tokens[1].equals(\"y\") || tokens[1].equals(\"n\"))) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            throw new BadFileFormatException(\"Second token must be y or n\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        switch(tokens[0]) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            return new ToDo(tokens[1].equals(\"y\") ? true : false, tokens[2]);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            return new Deadline(tokens[1].equals(\"y\") ? true : false, tokens[2], tokens[3]);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            return new Event(tokens[1].equals(\"y\") ? true : false, tokens[2], tokens[3]);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            throw new BadFileFormatException(\"First token must be T, D, or E\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "}"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "quinnyyy": 206
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    protected static Scanner scannerObject;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public static void initializeUi() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        scannerObject \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    protected static void displayLineSeparator() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        System.out.println(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        System.out.println(\"Hello! This is Quinn\u0027s chat bot\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        System.out.println(\"Currently supported task types: todo, deadline, event\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        System.out.println(\"Currently supported commands: list, done, delete\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        System.out.println(\"Example usage:\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        System.out.println(\"todo math homework\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        System.out.println(\"deadline finish math homework /by Monday\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        System.out.println(\"event math class /at Monday 8am-10am\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        System.out.println(\"list\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        System.out.println(\"done \u003cTask Number\u003e\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        System.out.println(\"delete \u003cTask Number\u003e\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        System.out.println(\"Type \\\"\" + Duke.END_STRING + \"\\\" to exit\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public static void sayGoodbye() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        System.out.println(\"Leaving so soon? :(\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public static void printPretty(String message) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public static String getNextLine() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        return scannerObject.nextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "quinnyyy": 53
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import duke.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import duke.tasks.exceptions.BadDeadlineFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    protected String dueDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public Deadline(boolean isDone, String description, String dueDateTime) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        this.dueDateTime \u003d dueDateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public Deadline(Command command) throws BadDeadlineFormatException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        String[] tokens \u003d command.getTokens();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        if (!Arrays.asList(tokens).contains(\"/by\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            throw new BadDeadlineFormatException(\"Input does not contain \\\" /by \\\"\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        int byIndex \u003d -1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        for (int i \u003d 0; i \u003c tokens.length; i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            if (tokens[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                byIndex \u003d i;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        if (byIndex \u003d\u003d tokens.length - 1) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            throw new BadDeadlineFormatException(\"Input does not contain a due date\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        } else if (byIndex \u003d\u003d 1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            throw new BadDeadlineFormatException(\"Input does not contain a description\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        this.description \u003d String.join(\" \", Arrays.copyOfRange(tokens, 1, byIndex));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        this.dueDateTime \u003d String.join(\" \", Arrays.copyOfRange(tokens, byIndex + 1, tokens.length));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        return \"[D][\" + getStatusIcon() + \"] \" + description + \" (by: \" + dueDateTime + \")\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public String toFormattedString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        String done \u003d isDone ? \"y\" : \"n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        return \"D,\" + done + \",\" + description + \",\" + dueDateTime;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "quinnyyy": 50
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import duke.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import duke.tasks.exceptions.BadEventFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    protected String startEndDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public Event(boolean isDone, String description, String startEndDateTime) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        this.startEndDateTime \u003d startEndDateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public Event(Command command) throws BadEventFormatException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        String[] tokens \u003d command.getTokens();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        if (!Arrays.asList(tokens).contains(\"/at\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            throw new BadEventFormatException(\"Input does not contain \\\" /at \\\"\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        int atIndex \u003d -1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        for (int i \u003d 0; i \u003c tokens.length; i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            if (tokens[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                atIndex \u003d i;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        if (atIndex \u003d\u003d tokens.length - 1) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            throw new BadEventFormatException(\"Input does not contain a date/time\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        } else if (atIndex \u003d\u003d 1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            throw new BadEventFormatException(\"Input does not contain a description\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        this.description \u003d String.join(\" \", Arrays.copyOfRange(tokens, 1, atIndex));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        this.startEndDateTime \u003d String.join(\" \", Arrays.copyOfRange(tokens, atIndex + 1, tokens.length));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        return \"[E][\" + getStatusIcon() + \"] \" + description + \" (at: \" + startEndDateTime + \")\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public String toFormattedString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        String done \u003d isDone ? \"y\" : \"n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        return \"E,\" + done + \",\" + description + \",\" + startEndDateTime;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "quinnyyy": 50
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        setIsDone(false);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        setDescription(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        setIsDone(false);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    // getStatusIcon() is from the website"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public void setIsDone(boolean isDone) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public abstract String toFormattedString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "quinnyyy": 38
    }
  },
  {
    "path": "src/main/java/duke/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import duke.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import duke.tasks.exceptions.BadToDoFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public ToDo(boolean isDone, String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public ToDo(Command command) throws BadToDoFormatException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        String[] tokens \u003d command.getTokens();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        if (tokens.length \u003c 2) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "            throw new BadToDoFormatException(\"Input does not contain a description\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        this.description \u003d String.join(\" \", Arrays.copyOfRange(tokens, 1, tokens.length));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public String toFormattedString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        String done \u003d isDone ? \"y\" : \"n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        return \"T,\" + done + \",\" + description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "quinnyyy": 32
    }
  },
  {
    "path": "src/main/java/duke/tasks/exceptions/BadDeadlineFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "package duke.tasks.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "public class BadDeadlineFormatException extends BadTaskFormatException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public BadDeadlineFormatException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        super(\"Bad format for deadline: \" + message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "quinnyyy": 7
    }
  },
  {
    "path": "src/main/java/duke/tasks/exceptions/BadEventFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "package duke.tasks.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "public class BadEventFormatException extends BadTaskFormatException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public BadEventFormatException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        super(\"Bad format for event: \" + message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "quinnyyy": 7
    }
  },
  {
    "path": "src/main/java/duke/tasks/exceptions/BadTaskFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "package duke.tasks.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "public class BadTaskFormatException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public BadTaskFormatException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "quinnyyy": 7
    }
  },
  {
    "path": "src/main/java/duke/tasks/exceptions/BadToDoFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "package duke.tasks.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "public class BadToDoFormatException extends BadTaskFormatException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    public BadToDoFormatException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "        super(\"Bad format for todo: \" + message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "quinnyyy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "quinnyyy": 7
    }
  }
]

[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": "## About Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": "Duke is a personal assistant chat bot with a **command line interface** to manage all your upcoming tasks"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": "## Quick Guide"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "benchan911"
        },
        "content": "1. Ensure you have `Java 11` or above installed in your computer."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": "1. Download the latest `Duke.jar` [here](https://github.com/benchan911/duke/releases)."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "benchan911"
        },
        "content": "1. Store `Duke.jar` at the folder you intend to use as your home folder."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "benchan911"
        },
        "content": "1. Navigate to the folder in your Command Prompt (Windows) or Terminal (MacOS \u0026 Linux)."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "benchan911"
        },
        "content": "1. Type `java -jar Duke.jar` to start the app."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "benchan911"
        },
        "content": "Refer to the next section [Features](#features) for details of each command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "benchan911"
        },
        "content": "- [Create a todo](#feature-1-create-new-todo-todo)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "benchan911"
        },
        "content": "- [Create a deadline](#feature-2-create-new-deadline-deadline)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "benchan911"
        },
        "content": "- [Create an event](#feature-3-create-new-event-event)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "benchan911"
        },
        "content": "- [List all tasks](#feature-4-list-all-tasks-list)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "benchan911"
        },
        "content": "- [Mark task](#feature-5-mark-existing-tasks-mark)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "benchan911"
        },
        "content": "- [Delete task](#feature-6-delete-existing-tasks-delete)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "benchan911"
        },
        "content": "- [Find task](#feature-7-find-existing-tasks-find)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "benchan911"
        },
        "content": "- [Exit Duke](#feature-8-exit-the-program-exit)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "benchan911"
        },
        "content": "- [Saving](#feature-9-saving-information)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "benchan911"
        },
        "content": "### Feature 1. Create new Todo: `Todo`"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "benchan911"
        },
        "content": "Adds a new Todo to the TaskList"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "benchan911"
        },
        "content": "#### Syntax: todo DESCRIPTION"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "benchan911"
        },
        "content": "#### Example of usage:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    todo buy lunch"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "benchan911"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        1. [T][N] buy lunch"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "benchan911"
        },
        "content": "### Feature 2. Create new Deadline: `Deadline`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "benchan911"
        },
        "content": "Adds a new deadline to the TaskList"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "benchan911"
        },
        "content": "#### Syntax: deadline DESCRIPTION /by DATE"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "benchan911"
        },
        "content": "#### Example of usage:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    deadline complete CS1010 Assignment \\by 10-03-2022"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "benchan911"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        2. [D][N] complete CS1010 Assignment ( by: 10-03-2022 ) "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "benchan911"
        },
        "content": "### Feature 3. Create new Event: `Event` "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "benchan911"
        },
        "content": "Adds a new event to the TaskList."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                               "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "benchan911"
        },
        "content": "#### Syntax: event DESCRIPTION /at DATE                        "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                               "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "benchan911"
        },
        "content": "#### Example of usage:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    event attend cousin wedding \\at 01-04-2022"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "benchan911"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        3. [E][N] attend cousin wedding  ( at: 01-04-2022 ) "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "benchan911"
        },
        "content": "### Feature 4. List all tasks: `List`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "benchan911"
        },
        "content": "List out all the existing tasks in the TaskList"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "benchan911"
        },
        "content": "#### Syntax: List"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "benchan911"
        },
        "content": "#### If there are existing tasks"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "benchan911"
        },
        "content": "#### Example of usage:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    list"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "benchan911"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        1. [T][N] buy lunch"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        2. [D][N] complete CS1010 Assignment ( by: 10-03-2022 ) "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        3. [E][N] attend cousin wedding  ( at: 01-04-2022 ) "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "benchan911"
        },
        "content": "#### If there are no existing tasks"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "benchan911"
        },
        "content": "##### Example of usage:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    list"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "benchan911"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        Empty!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "benchan911"
        },
        "content": "### Feature 5. Mark existing tasks: `Mark`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "benchan911"
        },
        "content": "Marks an existing task in the TaskList"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "benchan911"
        },
        "content": "#### Syntax: mark INDEX"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "benchan911"
        },
        "content": "#### If there are existing tasks"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "benchan911"
        },
        "content": "##### Example of usage:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    mark 1"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "benchan911"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        You have marked -- [T][Y] buy lunch"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "benchan911"
        },
        "content": "#### If there are no existing tasks"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "benchan911"
        },
        "content": "##### Example of usage:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    mark 1"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "benchan911"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        Out of Bound!"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "benchan911"
        },
        "content": "### Feature 6. Delete existing tasks: `Delete`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "benchan911"
        },
        "content": "Deletes an existing task in the TaskList"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "benchan911"
        },
        "content": "#### Syntax: delete INDEX"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "benchan911"
        },
        "content": "#### If there are existing tasks"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "benchan911"
        },
        "content": "##### Example of usage:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    delete 1"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "benchan911"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        You have deleted -- [T][Y] buy lunch"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "benchan911"
        },
        "content": "#### If there are no existing tasks"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "benchan911"
        },
        "content": "##### Example of usage:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    delete 1"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "benchan911"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        Out of Bound!"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "benchan911"
        },
        "content": "### Feature 7. Find existing tasks: `Find`"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "benchan911"
        },
        "content": "Find an item using a keyword in the TaskList"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "benchan911"
        },
        "content": "#### Syntax: find KEYWORD"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "benchan911"
        },
        "content": "#### If there are existing tasks"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "benchan911"
        },
        "content": "##### Example of usage:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    find lunch"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "benchan911"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        1. [T][N]buy lunch"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        There are 1 items found."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "benchan911"
        },
        "content": "#### If there are no existing tasks"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "benchan911"
        },
        "content": "##### Example of usage:"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        find boy"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        "
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "benchan911"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        Item not found!!!"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "benchan911"
        },
        "content": "### Feature 8. Exit the program: `Exit`"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "benchan911"
        },
        "content": "Exits the program"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "benchan911"
        },
        "content": "#### Syntax: bye"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "benchan911"
        },
        "content": "#### Example of usage:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    bye"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "benchan911"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        "
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "benchan911"
        },
        "content": "### Feature 9. Saving information"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "benchan911"
        },
        "content": "* Duke automatically saves the task list into your OS home directory under \u003ccode\u003e/Duke.txt\u003c/code\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "benchan911"
        },
        "content": "* Duke automatically loads the task list from previous session if the file \u003ccode\u003e/Duke.txt\u003c/code\u003e exist in your home directory."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "benchan911"
        },
        "content": "* If the file \u003ccode\u003e/Duke.txt\u003c/code\u003e does not exist in your home directory, Duke automatically creates a new \u003ccode\u003e/Duke.txt\u003c/code\u003e in your home directory."
      }
    ],
    "authorContributionMap": {
      "benchan911": 173,
      "-": 15
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "benchan911"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "benchan911"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "benchan911"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "benchan911"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "benchan911"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "benchan911"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "benchan911"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "benchan911"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "benchan911"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "benchan911"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "benchan911"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "benchan911"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "benchan911"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "benchan911"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "benchan911"
        },
        "content": "echo."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "benchan911"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "benchan911"
        },
        "content": "echo."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "benchan911"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "benchan911"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "benchan911"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "benchan911"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "benchan911"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "benchan911"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "benchan911"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "benchan911"
        },
        "content": "echo."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "benchan911"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "benchan911"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "benchan911"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "benchan911"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "benchan911"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "benchan911"
        },
        "content": ":init"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "benchan911"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "benchan911"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "benchan911"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "benchan911"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "benchan911"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "benchan911"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "benchan911"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "benchan911"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "benchan911"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "benchan911"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "benchan911"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "benchan911"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "benchan911"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "benchan911"
        },
        "content": ":end"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "benchan911"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "benchan911"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "benchan911"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "benchan911"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "benchan911"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "benchan911"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "benchan911"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "benchan911"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "benchan911"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "benchan911"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "benchan911": 84
    }
  },
  {
    "path": "src/main/java/Duke/Commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "benchan911"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "benchan911"
        },
        "content": " * Class representing a command to add a new task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "benchan911"
        },
        "content": " * Types of task that can be created - Todo, Deadline, Event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "benchan911"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "benchan911"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    private final Task task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Creates a new AddCommand with the given task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param task The task to add."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Executes this command on the given task list and user interface."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param ui The user interface displaying events on the task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param storage The duke.storage object containing task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public void execute(Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        storage.getTasks().add(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        Ui.displayAddedTask(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        storage.write();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "benchan911"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "benchan911": 37
    }
  },
  {
    "path": "src/main/java/Duke/Commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "benchan911"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "benchan911"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": " * Abstract class for all commands"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "benchan911"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "benchan911"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Executes this command on the given task list and user interface."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param ui The user interface displaying events on the task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param storage The duke.storage object containing task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public abstract void execute(Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "benchan911"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "benchan911": 19
    }
  },
  {
    "path": "src/main/java/Duke/Commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "benchan911"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Library.ErrorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "benchan911"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "benchan911"
        },
        "content": " * Class representing a command to delete an existing task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "benchan911"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "benchan911"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Creates a new DeleteCommand with the given task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param index The index of the task to be deleted."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Executes this command on the given task list and user interface."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param ui The user interface displaying events on the task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param storage The duke.storage object containing task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public void execute(Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            Task task \u003d storage.getTasks().remove(index);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            Ui.displayDeletedTask(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            throw new DukeException(ErrorMessage.OUT_OF_BOUNDS);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        storage.write();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "benchan911"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "benchan911": 40
    }
  },
  {
    "path": "src/main/java/Duke/Commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "benchan911"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "benchan911"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": " * Class representing a command to exit the program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "benchan911"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "benchan911"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Executes this command on the given task list and user interface."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param ui The user interface displaying events on the task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param storage The duke.storage object containing task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public void execute(Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        Ui.displayExitMessage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "benchan911"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "benchan911": 21
    }
  },
  {
    "path": "src/main/java/Duke/Commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "benchan911"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "benchan911"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "benchan911"
        },
        "content": " * Class representing a command to find task by keyword"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "benchan911"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "benchan911"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Creates a new FindCommand with the given keyword."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param keyword The keyword to find."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Executes this command on the given task list and user interface."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param ui The user interface displaying events on the task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param storage The duke.storage object containing task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public void execute(Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d storage.getTasks();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            if (task.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                result.add(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        Ui.displaySearchResults(result);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "benchan911"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "benchan911": 41
    }
  },
  {
    "path": "src/main/java/Duke/Commands/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "benchan911"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "benchan911"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": " * Class representing a command to display Help Menu."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "benchan911"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "benchan911"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Executes this command on the given task list and user interface."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param ui The user interface displaying events on the task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param storage The duke.storage object containing task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public void execute(Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        Ui.displayHelpMenu();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "benchan911"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "benchan911": 21
    }
  },
  {
    "path": "src/main/java/Duke/Commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "benchan911"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "benchan911"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": " * Class representing a command to display existing task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "benchan911"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "benchan911"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Executes this command on the given task list and user interface."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param ui The user interface displaying events on the task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param storage The duke.storage object containing task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public void execute(Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        Ui.displayTaskList(storage.getTasks());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "benchan911"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "benchan911": 21
    }
  },
  {
    "path": "src/main/java/Duke/Commands/MarkDoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "benchan911"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Library.ErrorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "benchan911"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "benchan911"
        },
        "content": " * Class representing a command to mark an existing task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "benchan911"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "benchan911"
        },
        "content": "public class MarkDoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Creates a new MarkDoneCommand with the given task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param index The index of the task to be marked."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public MarkDoneCommand(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Executes this command on the given task list and user interface."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param ui The user interface displaying events on the task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param storage The duke.storage object containing task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public void execute(Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            Task task \u003d storage.getTasks().get(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            if (!task.isDone()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                task.setDone(true);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                ui.displayMarkDone(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                ui.displayDone(task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            throw new DukeException(ErrorMessage.OUT_OF_BOUNDS);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        storage.write();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "benchan911"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "benchan911": 44
    }
  },
  {
    "path": "src/main/java/Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "benchan911"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Commands.ExitCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import static Duke.Task.TaskList.executeCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "benchan911"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "benchan911"
        },
        "content": " * This Duke program, Edith, is a Personal Assistant Chat Bot"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "benchan911"
        },
        "content": " * that helps a person to keep track of various task in a list format."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "benchan911"
        },
        "content": " * Duke program uses a command line interface,."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "benchan911"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "benchan911"
        },
        "content": " * @author  Benchan911"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "benchan911"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "benchan911"
        },
        "content": "public class Duke{"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    private static final String FILE_PATH \u003d \"Duke.txt\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        new Duke();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    private Duke() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        Ui.displayWelcomeMessage();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        Storage storage \u003d new Storage(FILE_PATH, ui);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "benchan911"
        },
        "content": "         while (true) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            String userInput \u003d ui.readCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                Command command \u003d executeCommand(userInput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                command.execute(ui, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                if (command instanceof ExitCommand) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                Ui.displayError(e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "         }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "benchan911"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "benchan911": 44,
      "-": 1
    }
  },
  {
    "path": "src/main/java/Duke/Exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "benchan911"
        },
        "content": "package Duke.Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": " * Represents an error during operation of duke.Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "benchan911"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "benchan911"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "benchan911": 10
    }
  },
  {
    "path": "src/main/java/Duke/Library/ErrorMessage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "benchan911"
        },
        "content": "package Duke.Library;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": " * Error Messages used by duke.Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "benchan911"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": "public class ErrorMessage {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final String FILE_NOT_FOUND \u003d \"\\tFile not found!\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final String FILE_NOT_SAVE \u003d \"\\tFile not saved!\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final String CORRUPTED_TASK \u003d \"\\tCorrupted Task!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final String UNKNOWN_COMMAND \u003d \"\\tUnknown Command\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final String INVALID_FORMAT \u003d \"\\tInvalid Format\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final String EMPTY_DESCRIPTION \u003d \"\\tEmpty Description\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final String OUT_OF_BOUNDS \u003d \"\\tOut of Bound\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final String NEW_FILE_CREATED \u003d \"\\tNew File Created\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "benchan911"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "benchan911": 15
    }
  },
  {
    "path": "src/main/java/Duke/Library/Message.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "benchan911"
        },
        "content": "package Duke.Library;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": " * Messages used by duke.Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "benchan911"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": "public class Message {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final String BOT_NAME \u003d \"E.D.I.T.H.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final String BOT_LOGO \u003d \"\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            + \" _______         ______           _________        __________          __     __                \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            + \"|   ____|       |    _  |         |__    __|      |___    ___|        |  |   |  |               \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            + \"|   |___        |   | |  |           |  |             |  |            |  |___|  |               \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            + \"|    ___|       |   | |  |           |  |             |  |            |   ___   |               \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            + \"|   |___    _   |   |_|  |   _     __|  |__     _     |  |       _    |  |   |  |    _          \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            + \"|_______|  |_|  |_______/   |_|   |________|   |_|    |__|      |_|   |__|   |__|   |_|         \\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final String BOT_DESC \u003d \"\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            + \"\\tHi There! My Name is E.D.I.T.H, your personal assistant\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final String MESSAGE_WELCOME \u003d \"\\n\\tHello! I\u0027m \" + BOT_NAME + \"\\n\\tWhat can I do for you?\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final String MESSAGE_EXIT \u003d \"\\tBye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final String MESSAGE_ADD \u003d \"\\tGot it. I\u0027ve added this \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final String MESSAGE_MARK \u003d \"\\tYou have marked -- \";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final String MESSAGE_DELETE \u003d \"\\tYou have deleted --\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final String LINE_DIVIDER \u003d \"\\n\\t_______________________________________________________________________\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final String COMMAND_HELP_WORD \u003d \"HELP\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final String COMMAND_HELP_DESC \u003d \"\\tFor more information, please read the user guide!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final String COMMAND_LIST_WORD \u003d \"LIST\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final String COMMAND_MARK_WORD \u003d \"MARK\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final String COMMAND_DEADLINE_WORD \u003d \"DEADLINE\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final String COMMAND_DELETE_WORD \u003d \"DELETE\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final String COMMAND_BYE_WORD \u003d \"BYE\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final String COMMAND_EVENT_WORD \u003d \"EVENT\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final String COMMAND_TODO_WORD \u003d \"TODO\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final String COMMAND_FIND_WORD \u003d \"FIND\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "benchan911"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "benchan911": 34
    }
  },
  {
    "path": "src/main/java/Duke/Parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "benchan911"
        },
        "content": "package Duke.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Library.ErrorMessage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "benchan911"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": " * Parser to read String words."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "benchan911"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "benchan911"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static String getCommandWord(String userInput) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        return userInput.strip().split(\" \")[0];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static String getWord(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            return userInput.strip().split(\" \")[1];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            throw new DukeException(ErrorMessage.INVALID_FORMAT);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static int getIndex(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            int index \u003d Integer.parseInt(userInput.replaceAll(\"\\\\D+\", \"\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            return index - 1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            throw new DukeException(ErrorMessage.INVALID_FORMAT);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "benchan911"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "benchan911": 47
    }
  },
  {
    "path": "src/main/java/Duke/Parser/ParserStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "benchan911"
        },
        "content": "package Duke.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Library.ErrorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import static Duke.Library.ErrorMessage.CORRUPTED_TASK;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "benchan911"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "benchan911"
        },
        "content": " * Parser for Storage related operations."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "benchan911"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "benchan911"
        },
        "content": "public class ParserStorage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static Task createTaskFromStorage(String line) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        String[] taskParts \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            String type \u003d taskParts[0].strip();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            String status \u003d taskParts[1].strip();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            String description \u003d taskParts[2].strip();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                    task \u003d new Deadline(description, taskParts[3].strip());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            } else if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                    task \u003d new Event(description, taskParts[3].strip());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                task \u003d new Todo(description);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            task.setDone(status.equals(\"true\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            throw new DukeException(CORRUPTED_TASK);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static String toStorageString(Task task) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            return \"D | \" + task.isDone() + \" | \" + task.getDescription() + \" | \" + ((Deadline) task).getDeadline();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        } else if (task instanceof Todo) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            return  \"T | \" + task.isDone() + \" | \" + task.getDescription();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            return \"E | \" + task.isDone() + \" | \" + task.getDescription() + \" | \" + ((Event) task).getEvent();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        throw new DukeException(ErrorMessage.CORRUPTED_TASK);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "benchan911"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "benchan911": 49
    }
  },
  {
    "path": "src/main/java/Duke/Parser/ParserUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "benchan911"
        },
        "content": "package Duke.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Library.ErrorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "benchan911"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "benchan911"
        },
        "content": " * Parser for utility functions."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "benchan911"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "benchan911"
        },
        "content": "public class ParserUtil {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static Todo createTodo(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        String description \u003d userInput.substring(\"todo\".length()).strip();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            throw new DukeException(ErrorMessage.EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        return new Todo(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static Deadline createDeadline(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        String[] deadlineDetails \u003d userInput.substring(\"deadline\".length()).strip().split(\"/by\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        if (deadlineDetails.length !\u003d 2 || deadlineDetails[1] \u003d\u003d null) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            throw new DukeException(ErrorMessage.INVALID_FORMAT);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        if (deadlineDetails[0].strip().isEmpty()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            throw new DukeException(ErrorMessage.EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        return new Deadline(deadlineDetails[0].strip(),deadlineDetails[1].strip());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static Event createEvent(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        String[] eventDetails \u003d userInput.substring(\"event\".length()).strip().split(\"/at\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        if (eventDetails.length !\u003d 2 || eventDetails[1] \u003d\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            throw new DukeException(ErrorMessage.INVALID_FORMAT);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        if (eventDetails[0].strip().isEmpty()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            throw new DukeException(ErrorMessage.EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        return new Event(eventDetails[0].strip(), eventDetails[1].strip());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "benchan911"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "benchan911": 46
    }
  },
  {
    "path": "src/main/java/Duke/Storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "benchan911"
        },
        "content": "package Duke.Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Library.ErrorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Parser.ParserStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "benchan911"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "benchan911"
        },
        "content": " * A class that manages duke.storage of duke.Duke data in local duke.storage."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "benchan911"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "benchan911"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Constructs a Storage object that contains duke.tasks and duke.storage related operations."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Mainly save duke.tasks and get duke.tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param filePath The filepath to the txt file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param ui The user interface displaying events on the task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public Storage(String filePath, Ui ui) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        read();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Reads duke.tasks from filepath. Creates empty duke.tasks if file cannot be read."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    private void read() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        ArrayList\u003cTask\u003e newTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            } catch (java.io.FileNotFoundException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                newTasks.add(ParserStorage.createTaskFromStorage(s.nextLine()));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            s.close();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        } catch (DukeException | FileNotFoundException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            Ui.displayError(ErrorMessage.FILE_NOT_FOUND);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            Ui.displayError(ErrorMessage.NEW_FILE_CREATED);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        tasks \u003d newTasks;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Writes the duke.tasks into a file of the given filepath."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public void write() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            FileWriter writer \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                writer.write(ParserStorage.toStorageString(task) + \"\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        } catch (IOException | DukeException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            Ui.displayError(ErrorMessage.FILE_NOT_SAVE);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Retrieves the existing tasks"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "benchan911"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "benchan911": 83
    }
  },
  {
    "path": "src/main/java/Duke/Task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "benchan911"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": " * Class representing a Deadline Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "benchan911"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    protected String deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Retrieves the Deadline Description"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @return description"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public String getDeadline(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        if (deadline.equals(\"\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            return \"[D]\" + super.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        return \"[D]\" + super.toString() + \" ( by: \" + deadline + \" )\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "benchan911"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "benchan911": 30
    }
  },
  {
    "path": "src/main/java/Duke/Task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "benchan911"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": " * Class representing an Event Task."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "benchan911"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    protected String event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public Event(String description, String event)  {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        this.event \u003d event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Retrieves the Event Description"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @return description"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public String getEvent(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        if (event.equals(\"\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            return \"[E]\" + super.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        return \"[E]\" + super.toString() + \"( at: \" + event + \" )\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "benchan911"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "benchan911": 29
    }
  },
  {
    "path": "src/main/java/Duke/Task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "benchan911"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": " * Class representing a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "benchan911"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Checks the task status"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @return isDone"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public boolean isDone(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Set the task status"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param isDone"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public void setDone(boolean isDone){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Checks the task status"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public String getTaskStatus() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        return (isDone ? \"Y\" : \"N\"); //return tick or X symbols"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Retrieves the Task Description"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @return description"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        return \"[\" + getTaskStatus() + \"]\" + description;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "benchan911"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "benchan911": 54
    }
  },
  {
    "path": "src/main/java/Duke/Task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "benchan911"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Library.ErrorMessage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Parser.ParserUtil;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import static Duke.Library.Message.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import static Duke.Parser.Parser.getCommandWord;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import static Duke.Parser.Parser.getWord;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "benchan911"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "benchan911"
        },
        "content": " * Class contains the operations for the TaskList"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "benchan911"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "benchan911"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * Reads the userInput and return a Command object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "benchan911"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static Command executeCommand(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        String commandWord \u003d getCommandWord(userInput);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        switch (commandWord.toUpperCase()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            case COMMAND_FIND_WORD:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                return new FindCommand(getWord(userInput));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            case COMMAND_HELP_WORD:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                return new HelpCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            case COMMAND_BYE_WORD:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            case COMMAND_TODO_WORD:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                return new AddCommand(ParserUtil.createTodo(userInput));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            case COMMAND_DEADLINE_WORD:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                return new AddCommand(ParserUtil.createDeadline(userInput));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            case COMMAND_EVENT_WORD:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                return new AddCommand(ParserUtil.createEvent(userInput));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            case COMMAND_LIST_WORD:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            case COMMAND_MARK_WORD:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                return new MarkDoneCommand(Parser.getIndex(userInput));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            case COMMAND_DELETE_WORD:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                return new DeleteCommand(Parser.getIndex(userInput));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                throw new DukeException(ErrorMessage.UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "benchan911"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "benchan911": 52
    }
  },
  {
    "path": "src/main/java/Duke/Task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "benchan911"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": " * Class representing a Todo Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "benchan911"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "benchan911"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "benchan911": 20
    }
  },
  {
    "path": "src/main/java/Duke/Ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "benchan911"
        },
        "content": "package Duke.Ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import Duke.Task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": "import static Duke.Library.Message.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "benchan911"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "benchan911"
        },
        "content": " * Class that handles user input and messages shown to user of this application."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "benchan911"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "benchan911"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public Ui (){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final void displayError(String Error){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        System.out.println(Error);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final void displayWelcomeMessage() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        System.out.println(\"\\n\" + LINE_DIVIDER + MESSAGE_WELCOME + LINE_DIVIDER + BOT_LOGO + LINE_DIVIDER + BOT_DESC + LINE_DIVIDER);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final void displayAddedTask(Task task) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        System.out.println(MESSAGE_ADD + task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final void displayDeletedTask(Task task){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        System.out.println(MESSAGE_DELETE + task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final void displayExitMessage() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        System.out.println(MESSAGE_EXIT);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final void displayMarkDone(Task task) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        System.out.println(MESSAGE_MARK + task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final void displayHelpMenu() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        System.out.println(COMMAND_HELP_DESC);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static final void displayNumberOfTasks(ArrayList TaskList) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        System.out.print(\"\\tNow you have \" + TaskList.size() + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public void displayDone(Task task) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        System.out.println(\"It is already marked!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static void displaySearchResults(ArrayList TaskList) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        if (!TaskList.isEmpty()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            for (int i \u003d 0; i \u003c TaskList.size(); i++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                System.out.print(\"\\t\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                System.out.print(i + 1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                System.out.print(\". \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                System.out.println(TaskList.get(i));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            displayNumberOfTasksFound(TaskList);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            System.out.println(\"\\tItem not found!!!\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    private static void displayNumberOfTasksFound(ArrayList TaskList) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        System.out.print(\"\\tThere are \" + TaskList.size() + \" items found.\\n\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public static void displayTaskList(ArrayList TaskList) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        if (!TaskList.isEmpty()) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            for (int i \u003d 0; i \u003c TaskList.size(); i++) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                System.out.print(\"\\t\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                System.out.print(i + 1);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                System.out.print(\". \");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "benchan911"
        },
        "content": "                System.out.println(TaskList.get(i));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            displayNumberOfTasks(TaskList);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "benchan911"
        },
        "content": "            System.out.println(\"\\tEMPTY!!\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "benchan911"
        },
        "content": "        return sc.nextLine().strip();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "benchan911"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "benchan911": 96
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\tHello! I\u0027m E.D.I.T.H."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\tWhat can I do for you?"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "benchan911"
        },
        "content": " _______         ______           _________        __________          __     __"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": "|   ____|       |    _  |         |__    __|      |___    ___|        |  |   |  |"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "benchan911"
        },
        "content": "|   |___        |   | |  |           |  |             |  |            |  |___|  |"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "benchan911"
        },
        "content": "|    ___|       |   | |  |           |  |             |  |            |   ___   |"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "benchan911"
        },
        "content": "|   |___    _   |   |_|  |   _     __|  |__     _     |  |       _    |  |   |  |    _"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "benchan911"
        },
        "content": "|_______|  |_|  |_______/   |_|   |________|   |_|    |__|      |_|   |__|   |__|   |_|"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t[Command entered: todo Assignments]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\tGot it. I\u0027ve added this Duke.Task:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\tNow you have 1 tasks in the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t[Command entered: deadline Complete CS2113 Homework /by 2359]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\tGot it. I\u0027ve added this Duke.Task:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\tNow you have 2 tasks in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t[Command entered: event Dinner with friends /at 24 June]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\tGot it. I\u0027ve added this Duke.Task:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\tNow you have 3 tasks in the list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t[Command entered: list]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\tHere are the tasks in your list:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t1. [T][N] Assignments"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t2. [D][N] Complete CS2113 Homework \t(by: 2359)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t3. [E][N] Dinner with friends \t(at: 24 June)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t[Command entered: mark 1]"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\tYou have marked -- 1"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t[Command entered: clear]"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\tYour list is cleared!"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t[Command entered: list]"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\tYour list is empty! Try adding to the list first :)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t[Command entered: clear]"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\tYour list is already empty!"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t[Command entered: deadline]"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\tInvalid Command! Description cannot be empty!"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t[Command entered: deadline to finish homework]"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\tInvalid Command! BY cannot be empty!"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t[Command entered: deadline to finish homework /by 2359]"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\tNow you have 1 tasks in the list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t[Command entered: event go out with friends]"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\tInvalid Command! AT cannot be empty!"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t[Command entered: event go out with friends /at 1st April]"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\tNow you have 2 tasks in the list."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t[Command entered: todo]"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\tInvalid Command! Description cannot be empty!"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t[Command entered: todo lab report]"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\tNow you have 3 tasks in the list."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t[Command entered: mark]"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\tInvalid Command! Nothing is marked!"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t[Command entered: mark 2]"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\tYou have marked -- 2"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t[Command entered: list]"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\tHere are the tasks in your list:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t1. [D][N] to finish homework \t(by: 2359)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t2. [E][Y] go out with friends \t(at: 1st April)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t3. [T][N] lab report"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t[Command entered: exit]"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\tBye. Hope to see you again soon!"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "benchan911"
        },
        "content": "\t____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "benchan911": 122
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "benchan911"
        },
        "content": "todo Assignments"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": "deadline Complete CS2113 Homework /by 2359"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": "event Dinner with friends /at 24 June"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "benchan911"
        },
        "content": "mark 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": "clear"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "benchan911"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": "clear"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "benchan911"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "benchan911"
        },
        "content": "deadline to finish homework"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "benchan911"
        },
        "content": "deadline to finish homework /by 2359"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "benchan911"
        },
        "content": "event go out with friends"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "benchan911"
        },
        "content": "event go out with friends /at 1st April"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "benchan911"
        },
        "content": "todo"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "benchan911"
        },
        "content": "todo lab report"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "benchan911"
        },
        "content": "mark"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "benchan911"
        },
        "content": "mark 2"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "benchan911"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "benchan911"
        },
        "content": "exit"
      }
    ],
    "authorContributionMap": {
      "benchan911": 19
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "benchan911"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "benchan911"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "benchan911"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "benchan911"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "benchan911"
        },
        "content": "del ACTUAL.txt"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "benchan911"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "benchan911"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "benchan911"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\task\\*.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "benchan911"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "benchan911"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "benchan911"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "benchan911"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "benchan911"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "benchan911"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "benchan911"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "benchan911"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "benchan911"
        },
        "content": "FC ACTUAL.txt EXPECTED.txt"
      }
    ],
    "authorContributionMap": {
      "benchan911": 22
    }
  }
]

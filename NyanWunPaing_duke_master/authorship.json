[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "Nyan chat bot allows users to take down their notes."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "# Table of Contents"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "- [Requirements](https://github.com/NyanWunPaing/duke/tree/master/docs#requirements)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "- [Features](https://github.com/NyanWunPaing/duke/tree/master/docs#features)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    - [Add a new task](https://github.com/NyanWunPaing/duke/tree/master/docs#add-a-new-task)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    - [Find your tasks](https://github.com/NyanWunPaing/duke/tree/master/docs#find-your-tasks)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    - [Remove a task in the list](https://github.com/NyanWunPaing/duke/tree/master/docs#remove-a-task-in-the-list)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    - [List all tasks](https://github.com/NyanWunPaing/duke/tree/master/docs#list-all-tasks)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    - [Mark tasks as done](https://github.com/NyanWunPaing/duke/tree/master/docs#marks-tasks-as-done)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "# Requirements "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "Java 11 or later."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "# Features"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "### Add a new task "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "Add a new task into task list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "##### Usage example:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "`todo [description]`"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "`deadline [description] /by [by details]`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "`event [description] /at [at details]`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "###### Example: "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " - `todo read book`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   Adds a new todo task with description `read book` to the task list. "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "  "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " - `event lecture /at school`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   Adds a new event task with description `lecture`. "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   The location of the event is at `school`."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "  - `deadline assignment /by tomorrow`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     Adds a deadline with description `assignment`. "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     The due date of the deadline is by `tomorrow`."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " ***Expected outcome:***"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    Got it! I\u0027ve added this task:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "       [T][âœ˜] read book"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    Now you have 4 task(s) in the list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                     "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "### Find your tasks"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "Find tasks that contain the relevant keyword."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "##### Usage example:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "`find [keyword]`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "###### Example: "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "- `find book`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "Used the keyword `book` to lookup for relevant tasks in the task list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "***Expected outcome:***"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "  "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "       1.[T][âœ˜] read book"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "       2.[D][âœ˜] return book (by: sunday)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "### Remove a task in the list"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "Remove a certain task from the task list."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "##### Usage example:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "`delete [index of the task]`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "###### Example: "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "- `delete 4`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "Delete the `4`th task in the task list. "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " ***Expected outcome:***"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "      [D][âœ˜] return book (by: sunday)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    Now you have 4 task(s) in the list."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "### List all tasks"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "Lists all the tasks in task list."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "##### Usage example:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "###### Example: "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "- `list`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " ***Expected outcome:***"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    1.[T][âœ˜] eat sleep"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    2.[T][âœ˜] sleep play"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    3.[E][âœ˜] play (at: home)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    4.[T][âœ˜] read book"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "### Marks tasks as done"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "Marks a particular task as done in the list of tasks."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "##### Usage example:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "`done [index of the task]`"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "###### Example: "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "- `done 4`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "Mark the `4`th task in the task list as completed."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " ***Expected outcome:***"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "      [T][âœ“] read book"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 127,
      "-": 10
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "T | 0 | bye"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 1
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.data.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.data.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    private TextUi ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Sets up the required objects, loads up the data from the storage file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            ui \u003d new TextUi();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            storage \u003d new Storage();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            tasks \u003d storage.load();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Runs the entire application and stores the task list before exit by calling relevant functions."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Catch any exception thrown in the following functions."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @see #TextUi#showWelcome()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @see #TextUi#readCommand()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @see #Parser#paser()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @see #Command#execute()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @see Ui#printByeMessage()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Runs the program until termination."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            while (!isExit) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                    String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                    System.out.println(Messages.DIVIDER);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                    Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                    c.execute(tasks);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                    isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                } catch (DukeException de) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                    System.out.println(de.getMessage());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                    System.out.println(Messages.MESSAGE_INDEX_NOT_AN_INTEGER);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                    System.out.println(\"    â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                } finally {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                    ui.showLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 76,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.data.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.data.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.data.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.data.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import static duke.ui.TextUi.printTask;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " * Handles the addition of new tasks to the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Contains information related to taskType."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    String taskType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Contains description related to the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Contains addition information related to the task\u0027s extension ."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    String extension;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Constructor for AddCommand Class."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * It creates a new AddCommand Object with the information provided."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param extension   Contains addition information related to the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param description Contains description on the task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param taskType    Denotes the type of the task to be added."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public AddCommand(String taskType, String description, String extension) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.extension \u003d extension;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Overload constructor for AddCommand Class."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * It creates a new AddCommand Object with the information provided."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Set extension to null."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param description Contains description on the task"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param taskType    Denotes the type of the task to be added"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public AddCommand(String taskType, String description) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.extension \u003d null;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Adds a new task to the list with the information provided by calling"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * {@code tasklist#add(new ToDo(description))} (or) {@code tasklist#add(new Event(description.trim(), extension.trim())}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * (or) {@code tasklist#add(new Deadline(description.trim(), extension.trim()))} as require"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param tasklist Contains the list of tasks on which the commands are executed on."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public void execute(TaskList tasklist) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        int taskCounter \u003d tasklist.size();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        case (\"todo\"):"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            tasklist.add(new ToDo(description));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            printTask(tasklist.get(taskCounter), taskCounter);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        case (\"event\"):"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            tasklist.add(new Event(description.trim(), extension.trim()));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            printTask(tasklist.get(taskCounter), taskCounter);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        case (\"deadline\"):"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            tasklist.add(new Deadline(description.trim(), extension.trim()));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            printTask(tasklist.get(taskCounter), taskCounter);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 81
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.data.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.data.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " * Used for execution of commands."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " * Contains both the information related to user commands and methods to execute them."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " * Implementation is done on child classes."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Contain boolean to check for exit condition"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Constructor for Command Class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Set isExit to false as default"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    protected Command() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Executes the command based on the information provided by the user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param tasklist Contains the list of tasks on which the commands are executed on."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @throws DukeException If issues are found during execution of command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public void execute(TaskList tasklist) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Returns exit condition."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @return isExit Contains information that allow the program to exit."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 43
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.data.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.data.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Contains the index of the task to be deleted."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Constructor for DeleteCommand Class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * It creates a new DeleteCommand Object with the information provided."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param index Contains the index of the task to be delete."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Marks the task at the specified index by calling {@link TextUi#printDelete(TaskList, int)}."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param tasklist Contains the list of tasks on which the commands are executed on."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @throws DukeException If the index provided is invalid."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @see TextUi#printDelete(TaskList, int)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public void execute(TaskList tasklist) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        if (index \u003e\u003d tasklist.size()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            throw new DukeException(Messages.MESSAGE_INDEX_OUT_OF_BOUND);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        TextUi.printDelete(tasklist, index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        tasklist.remove(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        int taskCounter \u003d tasklist.size();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        TextUi.printRemaining(taskCounter);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 41
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.data.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.data.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Contains the index of the task to be done."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Constructor for DoneCommand Class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * It creates a new DoneCommand Object with the information provided."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param index Contains the index of the task to be done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Marks the task at the specified index by calling {@link TextUi#printDone(TaskList, int)}."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param tasklist Contains the list of tasks on which the commands are executed on."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @throws DukeException If the index provided is invalid."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @see TextUi#printDone(TaskList, int)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public void execute(TaskList tasklist) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        if (index \u003e\u003d tasklist.size()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            throw new DukeException(Messages.MESSAGE_INDEX_OUT_OF_BOUND);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        tasklist.get(index).taskDone();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        TextUi.printDone(tasklist, index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        int taskCounter \u003d tasklist.size();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        //TextUi.printRemaining(taskCounter);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 43
    }
  },
  {
    "path": "src/main/java/duke/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.data.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Prints the exit message by calling {@link TextUi#printExit()}."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Set isExit to true."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param tasklist Contains the list of tasks to be searched on."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @see TextUi#printExit()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public void execute(TaskList tasklist) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        super.isExit \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        TextUi.printExit();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 21
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.data.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.data.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " * Handles the task of searching the list of tasks and prints those which contain the search keyword."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * The word used for search."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    String keyword;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Constructor for FindCommand Class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * It creates a new FindCommand Object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param keyword The word used for search."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Prints the list of tasks containing the keyword in their description."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * by calling {@link TaskList#findKeyword(String, TaskList)}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param tasklist Contains the list of tasks to be searched on."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @throws DukeException Never happens as format check is done when the constructor creates the command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public void execute(TaskList tasklist) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        boolean isFound \u003d tasklist.findKeyword(this.keyword, tasklist);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        if (isFound) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            TextUi.printTaskFound(keyword, tasklist);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            TextUi.printKeyNotFound(keyword);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 43
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.data.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " * Handles the task of exiting."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Prints the current list of tasks by calling {@link TextUi#printEmptyList()}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param taskList Contains the list of tasks on which the commands are executed on."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @see TextUi#printEmptyList()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public void execute(TaskList taskList) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            TextUi.printEmptyList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            TextUi.printList(taskList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 25
    }
  },
  {
    "path": "src/main/java/duke/common/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " * Container for user visible messages."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public static final String DIVIDER \u003d \"    \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public static final String MESSAGE_WELCOME \u003d"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            \"    â–’â–’â–’â–’â–’â–’â–’â–ˆâ–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–ˆ\\n\" +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                    \"    â–’â–’â–’â–’â–’â–’â–’â–ˆâ–‘â–’â–’â–’â–’â–’â–’â–’â–“â–’â–’â–“â–’â–’â–’â–’â–’â–’â–’â–‘â–ˆ\\n\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                    \"    â–’â–’â–’â–’â–’â–’â–’â–ˆâ–‘â–’â–’â–“â–’â–’â–’â–’â–’â–’â–’â–’â–’â–„â–„â–’â–“â–’â–’â–‘â–ˆâ–‘â–„â–„\\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                    \"    â–’â–’â–„â–€â–€â–„â–„â–ˆâ–‘â–’â–’â–’â–’â–’â–’â–“â–’â–’â–’â–’â–ˆâ–‘â–‘â–€â–„â–„â–„â–„â–„â–€â–‘â–‘â–ˆ\\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                    \"    â–’â–’â–ˆâ–‘â–‘â–‘â–‘â–ˆâ–‘â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–’â–ˆâ–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–ˆ\\n\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                    \"    â–’â–’â–’â–€â–€â–„â–„â–ˆâ–‘â–’â–’â–’â–’â–“â–’â–’â–’â–“â–’â–ˆâ–‘â–‘â–‘â–ˆâ–’â–‘â–‘â–‘â–‘â–ˆâ–’â–‘â–‘â–ˆ\\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                    \"    â–’â–’â–’â–’â–’â–’â–’â–ˆâ–‘â–’â–“â–’â–’â–’â–’â–“â–’â–’â–’â–ˆâ–‘â–‘â–‘â–‘â–‘â–‘â–‘â–€â–‘â–‘â–‘â–‘â–‘â–ˆ\\n\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                    \"    â–’â–’â–’â–’â–’â–„â–„â–ˆâ–‘â–’â–’â–’â–“â–’â–’â–’â–’â–’â–’â–’â–ˆâ–‘â–‘â–ˆâ–„â–„â–ˆâ–„â–„â–ˆâ–‘â–‘â–ˆ\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                    \"    â–’â–’â–’â–’â–ˆâ–‘â–‘â–‘â–ˆâ–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–ˆâ–‘â–ˆâ–„â–„â–„â–„â–„â–„â–„â–„â–„â–ˆ\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                    \"    â–’â–’â–’â–’â–ˆâ–„â–„â–ˆâ–‘â–‘â–ˆâ–„â–„â–ˆâ–‘â–‘â–‘â–‘â–‘â–‘â–ˆâ–„â–„â–ˆâ–‘â–‘â–ˆâ–„â–„â–ˆ\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                    \"    Hello Nyan Cat here!\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public static final String MESSAGE_INVALID_COMMAND \u003d \"    Invalid command!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public static final String MESSAGE_EMPTY_INDEX \u003d \"    Index is empty! Please input index.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public static final String MESSAGE_INDEX_NOT_AN_INTEGER \u003d \"    Input index is not an integer! Please input integer.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public static final String MESSAGE_EMPTY_DESCRIPTION \u003d \"    Description is empty! Please input description.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public static final String MESSAGE_EMPTY_AT \u003d \"    Detail is not complete! Please input detail (/at)\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public static final String MESSAGE_EMPTY_BY \u003d \"    Detail is not complete! Please input detail (/by)\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public static final String MESSAGE_EMPTY_LIST \u003d \"    The list is empty.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public static final String SPACER \u003d \"      \";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public static final String MESSAGE_TASK_DONE \u003d \"    Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public static final String MESSAGE_TASKS_LIST \u003d \"    Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public static final String MESSAGE_INDEX_OUT_OF_BOUND \u003d \"    Index out of bound :(\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public static final String MESSAGE_KEY_NOT_FOUND \u003d \" is not found in list :(\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public static final String MESSAGE_TASK_FOUND \u003d \"    Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public static final String MESSAGE_GOODBYE \u003d \"    Bye. Hope to see you soon!\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 35
    }
  },
  {
    "path": "src/main/java/duke/data/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package duke.data.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " * Signals that some given data does not fulfill some constraints."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param message Contain relevant information on the failed constraint(s)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 13
    }
  },
  {
    "path": "src/main/java/duke/data/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package duke.data.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " * Represents a Deadline task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Stores detail about the deadline"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Constructor for Deadline Task Class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * \u003cp\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * It creates a new Deadline task with the description provided by the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param description Contains the description of deadline."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param by          Contains detail additional of deadline."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Returns the string, description and deadline of the task in save-able format.\u003cbr\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Overrides the corresponding method in the parent class."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @return output Represents the information related to the task as save-able format."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public String toOutput() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        String output \u003d \"D | \" + (isDone ? \u00271\u0027 : \u00270\u0027) + \" | \" + description"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                + \" | \" + by;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Returns the string, description and deadline of the task.\u003cbr\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Overrides the corresponding method in the parent class."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @return info Represents the information related to the task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        String info \u003d \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        return info;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 51
    }
  },
  {
    "path": "src/main/java/duke/data/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package duke.data.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " * Represents a Event task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Stores additional detail about the event"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Constructor for Event Task Class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * \u003cp\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * It creates a new Event task with the description provided by the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param description Contains the description of event."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param at          Contains detail additional of event."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Returns the string, description and event of the task in save-able format.\u003cbr\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Overrides the corresponding method in the parent class."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @return output Represents the information related to the task as save-able format."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public String toOutput() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        String output \u003d \"E | \" + (isDone ? \u00271\u0027 : \u00270\u0027) + \" | \" + description"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                + \" | \" + at;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Returns the string, description and event of the task.\u003cbr\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Overrides the corresponding method in the parent class."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @return info Represents the information related to the task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        String info \u003d \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        return info;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 51
    }
  },
  {
    "path": "src/main/java/duke/data/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package duke.data.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " * It also functions as base class from which specialised tasks are inherited from."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Stores the description of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Denotes whether the task is done or not done."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Constructor for Task Class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * It creates a new task with the description provided by the user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * It also sets isDone to false as it is a newly created task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param description Description of the task to be created."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Returns the status of the task in form of an icon."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * \"\\u2713\" is returned to denote that the task is complete."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * \"\\u2718\" is returned to denote that the task is incomplete."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @return statusIcon Represents the current status of the task as described above."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        String statusIcon \u003d isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        return statusIcon; //return tick or X symbols"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Sets the task\u0027s current status done."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public void taskDone() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @return description Represents the description of the task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Abstract method for Inherited class to overwrite."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public abstract String toOutput();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Returns both the status and description of the task."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @return text Represents the status and description of the task."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        String text \u003d \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 75
    }
  },
  {
    "path": "src/main/java/duke/data/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package duke.data.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.commands.FindCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " * Handles the list of tasks by providing methods to interface with the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " * Extension of ArrayList"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "public class TaskList extends ArrayList\u003cTask\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Stores all the tasks provided."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Constructor for TaskList Class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * It creates a new TaskList."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Instructs {@link FindCommand#execute(TaskList)} to list the tasks with the search keyword"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * if the correct format is used."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param taskList Current list of tasks.."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param keyword  The word used for search."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public boolean findKeyword(String keyword, TaskList taskList) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 41
    }
  },
  {
    "path": "src/main/java/duke/data/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package duke.data.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " * Represents a ToDo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Constructor for ToDo Task Class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * \u003cp\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * It creates a new ToDo task with the description provided by the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param description Description of the task to be created."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Returns both the status and description of the task in save-able format.\u003cbr\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Overrides the corresponding method in the parent class."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @return output Represents the description of the task in save-able format."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public String toOutput() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        String output \u003d \"T | \" + (isDone ? \u00271\u0027 : \u00270\u0027) + \" | \" + description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Returns both the status and description of the task.\u003cbr\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Overrides the corresponding method in the parent class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @return text Represents the description of the task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        String text \u003d \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 44
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.data.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " * Parses user input."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param fullCommand Full user input string"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @return the command Based on the user input"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @throws DukeException Errors base on invalid input or insufficient input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        String[] userCommand \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        if (userCommand[0].equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        } else if (userCommand[0].equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        } else if (userCommand[0].equalsIgnoreCase(\"done\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            if (userCommand.length \u003d\u003d 1 || userCommand[1].trim().isEmpty()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                throw new DukeException(Messages.MESSAGE_EMPTY_INDEX);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            int index \u003d Integer.parseInt(userCommand[1]) - 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            return new DoneCommand(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        } else if (userCommand[0].equalsIgnoreCase(\"todo\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            if (userCommand.length \u003d\u003d 1 || userCommand[1].trim().isEmpty()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                throw new DukeException(Messages.MESSAGE_EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            return new AddCommand(\"todo\", userCommand[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        } else if (userCommand[0].equalsIgnoreCase(\"event\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            if (userCommand.length \u003d\u003d 1 || userCommand[1].trim().isEmpty()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                throw new DukeException(Messages.MESSAGE_EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            String[] buffer \u003d userCommand[1].split(\"/at\", 2);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            if (buffer.length \u003d\u003d 1 || buffer[1].trim().isEmpty()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                throw new DukeException(Messages.MESSAGE_EMPTY_AT);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            return new AddCommand(\"event\", buffer[0].trim(), buffer[1].trim());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        } else if (userCommand[0].equalsIgnoreCase(\"deadline\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            if (userCommand.length \u003d\u003d 1 || userCommand[1].trim().isEmpty()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                throw new DukeException(Messages.MESSAGE_EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            String[] buffer \u003d userCommand[1].split(\"/by\", 2);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            if (buffer.length \u003d\u003d 1 || buffer[1].trim().isEmpty()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                throw new DukeException(Messages.MESSAGE_EMPTY_BY);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            return new AddCommand(\"deadline\", buffer[0].trim(), buffer[1].trim());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        } else if (userCommand[0].equalsIgnoreCase(\"delete\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            if (userCommand.length \u003d\u003d 1 || userCommand[1].trim().isEmpty()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                throw new DukeException(Messages.MESSAGE_EMPTY_INDEX);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            int index \u003d Integer.parseInt(userCommand[1]) - 1;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            return new DeleteCommand(index);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        } else if (userCommand[0].equalsIgnoreCase(\"find\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            if (userCommand.length \u003d\u003d 1 || userCommand[1].trim().isEmpty()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                throw new DukeException(Messages.MESSAGE_EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            return new FindCommand(userCommand[1]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            throw new DukeException(Messages.MESSAGE_INVALID_COMMAND);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 79
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.data.task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " * Represents the file used to store duke data."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public static final String FILE_PATH \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Saves the {@code duke} data to the storage file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @throws IOException if there were errors converting and/or storing data to file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            File file \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            FileWriter fw \u003d new FileWriter(FILE_PATH, false);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            for (Task i : tasks) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                fw.write(i.toOutput());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                fw.write(System.lineSeparator());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Loads the {@code TaskList} data from this storage file, and then returns it."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Returns an empty {@code TaskList} if the file does not exist, or is not a regular file."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public TaskList load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        if (!Files.exists(Paths.get(FILE_PATH)) || !Files.isRegularFile(Paths.get(FILE_PATH))) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            return new TaskList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        File f \u003d new File(FILE_PATH); // create a File for the given file path"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            String fileInput \u003d s.nextLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            String[] fileData \u003d fileInput.split(\"[|]\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            switch (fileData[0].trim()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            case (\"E\"):"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                tasks.add(new Event(fileData[2].trim(), fileData[3].trim()));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            case (\"D\"):"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                tasks.add(new Deadline(fileData[2].trim(), fileData[3].trim()));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            case (\"T\"):"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                tasks.add(new ToDo(fileData[2].trim()));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            if (Boolean.parseBoolean(fileData[1])) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                tasks.get(tasks.size() - 1).taskDone();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 76
    }
  },
  {
    "path": "src/main/java/duke/ui/TextUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.data.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.data.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import static duke.common.Messages.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " * Text UI of the application."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "public class TextUi {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Read from user input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    private Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Print message to show user that the task list is empty."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public static void printEmptyList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        System.out.println(Messages.MESSAGE_EMPTY_LIST);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Shows a list of tasks to the user, formatted as an indexed list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public static void printList(TaskList taskList) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        System.out.println(MESSAGE_TASKS_LIST);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        int taskCounter \u003d taskList.size();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        for (int i \u003d 0; i \u003c taskCounter; i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            System.out.println(\"    \" + (i + 1) + \".\" + taskList.get(i));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Prints the exit message upon exiting the application."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public static void printExit() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        System.out.println(Messages.MESSAGE_GOODBYE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Prints the done task upon completion."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param tasklist Current list of tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param index    Index to indicate the done task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public static void printDone(TaskList tasklist, int index) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        System.out.println(Messages.MESSAGE_TASK_DONE);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        System.out.println(Messages.SPACER + tasklist.get(index));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Print the deleted task upon completion."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param tasklist Current list of tasks."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param index    Index to indicate the done task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public static void printDelete(TaskList tasklist, int index) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        System.out.println(\"    Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        System.out.println(\"      \" + tasklist.get(index));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Prints the reminding tasks."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param taskCounter index to indicate the reminding task."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public static void printRemaining(int taskCounter) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        System.out.println(\"    Now you have \" + taskCounter + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Prints the new task that is added in the task list."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param task        New task that is currently added."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param taskCounter Index to indicate the total number of tasks."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public static void printTask(Task task, int taskCounter) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        System.out.println(\"    Got it! I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        System.out.println(\"       \" + task);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        taskCounter++;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        printRemaining(taskCounter);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Prints to alert the user that keyword is not found in the task list."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public static void printKeyNotFound(String description) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        System.out.println(\"    \" + description + MESSAGE_KEY_NOT_FOUND);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Prints to show the user that keyword is found in the task list."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Generate a list of tasks to show the user which task are involved."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param keyword  The word used for search"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * @param tasklist Current list of tasks."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public static void printTaskFound(String keyword, TaskList tasklist) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        System.out.println(Messages.MESSAGE_TASK_FOUND);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        for (Task task : tasklist) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                System.out.println(\"       \" + counter + \".\" + task);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Prints the welcome message upon exiting the application."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        String logo \u003d MESSAGE_WELCOME;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        System.out.print(logo);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     * Read the next input line from user."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 135
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "todo homework"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "deadline tutorials /by today"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "event"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "deadline opps"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "add butterfly"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "event lecture /at i-cube"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " @ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\data\\task\\*.java ..\\src\\main\\java\\duke\\data\\exception\\*.java ..\\src\\main\\java\\duke\\parser\\*.java ..\\src\\main\\java\\duke\\commands\\*.java ..\\src\\main\\java\\duke\\common\\*.java ..\\src\\main\\java\\duke\\ui\\*.java ..\\src\\main\\java\\duke\\storage\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "       echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "       exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   )"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   java -Dfile.encoding\u003dUTF8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 21
    }
  }
]

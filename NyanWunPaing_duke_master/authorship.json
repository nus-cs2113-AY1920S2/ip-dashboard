[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "T | 1 | hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "E | 0 | lecture | hall"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "D | 1 | hw | 2359"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 3
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.task.DeadLine;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public static final String DIVIDER \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        printWelcomeMessage();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        runChatBot();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    private static void runChatBot() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        taskManager(input, tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    private static void taskManager(Scanner input, ArrayList\u003cTask\u003e Tasks) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                String userInput \u003d getInput(input.nextLine());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                String[] userCommands \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                if (userCommands[0].equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                    printByeMessage();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                    writeToFile(Tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                } else if (userCommands[0].equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                    printList(Tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                } else if (userCommands[0].equalsIgnoreCase(\"done\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                    printDone(userCommands, Tasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                } else if (userCommands[0].equalsIgnoreCase(\"todo\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                    addToDo(Tasks, userCommands);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                } else if (userCommands[0].equalsIgnoreCase(\"event\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                    addEvent(Tasks, userCommands);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                } else if (userCommands[0].equalsIgnoreCase(\"deadline\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                    addDeadline(Tasks, userCommands);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                } else if (userCommands[0].equalsIgnoreCase(\"remove\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                    printRemove(userCommands, Tasks);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                    throw new DukeException();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                System.out.println(\"    ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    private static void printRemove(String[] input, ArrayList\u003cTask\u003e Tasks) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            int num \u003d Integer.parseInt(input[1]) - 1;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            System.out.println(\"    Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            System.out.println(\"      \" + Tasks.get(num));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            Tasks.remove(num);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            int taskCounter \u003d Tasks.size();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            System.out.println(\"    Now you have \" + taskCounter + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            System.out.println(\"    Error: Given Index is out of bound\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            System.out.println(\"    Error: Insufficient detail\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    private static void writeToFile(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        Files.delete(Paths.get(\"C:\\\\Users\\\\nyanw\\\\Documents\\\\y2s2\\\\2113T\\\\duke\\\\data\\\\duke.txt\"));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"C:\\\\Users\\\\nyanw\\\\Documents\\\\y2s2\\\\2113T\\\\duke\\\\data\\\\duke.txt\", true);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        for (Task i : tasks) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            fw.write(i.toOutput());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            fw.write(System.lineSeparator());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    private static void addEvent(ArrayList\u003cTask\u003e tasks, String[] userCommand) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            if (userCommand.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            String[] buffer \u003d userCommand[1].split(\"/at\", 2);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            if (buffer[1].trim().isEmpty()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            int taskCounter \u003d tasks.size();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            tasks.add(new Event(buffer[0].trim(), buffer[1].trim()));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            printTask(tasks.get(taskCounter), taskCounter);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            System.out.println(\"    ☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            System.out.println(\"    ☹ OOPS!!! The place of a event cannot be empty.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    private static void addDeadline(ArrayList\u003cTask\u003e tasks, String[] userCommand) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            if (userCommand.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            String[] buffer \u003d userCommand[1].split(\"/by\", 2);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            if (buffer[1].trim().isEmpty()) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            int taskCounter \u003d tasks.size();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            tasks.add(new DeadLine(buffer[0].trim(), buffer[1].trim()));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            printTask(tasks.get(taskCounter), taskCounter);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            System.out.println(\"    ☹ OOPS!!! The description of a DeadLine cannot be empty.\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            System.out.println(\"    ☹ OOPS!!! The time/date of a DeadLine cannot be empty.\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    private static void addToDo(ArrayList\u003cTask\u003e tasks, String[] userCommands) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            int taskCounter \u003d tasks.size();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            if (userCommands[1].trim().isEmpty()) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            tasks.add(new ToDo(userCommands[1]));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            printTask(tasks.get(taskCounter), taskCounter);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            System.out.println(\"    ☹ OOPS!!! The description of a ToDo cannot be empty.\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            System.out.println(\"    ☹ OOPS!!! The description of a ToDo cannot be empty.\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    private static void printDone(String[] input, ArrayList\u003cTask\u003e Tasks) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            int num \u003d Integer.parseInt(input[1]) - 1;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            Tasks.get(num).taskDone();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            System.out.println(\"    Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            System.out.println(\"      \" + Tasks.get(num));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            System.out.println(\"    Error: Given Index is out of bound\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            System.out.println(\"    Error: Insufficient detail\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    private static void printTask(Task task, int taskCounter) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        System.out.println(\"    Got it! I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        System.out.println(\"       \" + task);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        taskCounter++;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        System.out.println(\"    Now you have \" + taskCounter + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    private static void printList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            System.out.println(\"    The list is empty.\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            System.out.println(\"    Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            int taskCounter \u003d tasks.size();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            for (int i \u003d 0; i \u003c taskCounter; i++) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                System.out.println(\"    \" + (i + 1) + \".\" + tasks.get(i));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    private static void printByeMessage() {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        System.out.println(\"    Bye. Hope to see you soon!\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    private static String getInput(String next) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        String input \u003d next;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    private static void printWelcomeMessage() {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        String logo \u003d \"    ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\\n\" +"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                \"    ░░░░░░░░░░▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄░░░░░░░░░\\n\" +"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                \"    ░░░░░░░░▄▀░░░░░░░░░░░░▄░░░░░░░▀▄░░░░░░░\\n\" +"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                \"    ░░░░░░░░█░░▄░░░░▄░░░░░░░░░░░░░░█░░░░░░░\\n\" +"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                \"    ░░░░░░░░█░░░░░░░░░░░░▄█▄▄░░▄░░░█░▄▄▄░░░\\n\" +"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                \"    ░▄▄▄▄▄░░█░░░░░░▀░░░░▀█░░▀▄░░░░░█▀▀░██░░\\n\" +"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                \"    ░██▄▀██▄█░░░▄░░░░░░░██░░░░▀▀▀▀▀░░░░██░░\\n\" +"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                \"    ░░▀██▄▀██░░░░░░░░▀░██▀░░░░░░░░░░░░░▀██░\\n\" +"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                \"    ░░░░▀████░▀░░░░▄░░░██░░░▄█░░░░▄░▄█░░██░\\n\" +"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                \"    ░░░░░░░▀█░░░░▄░░░░░██░░░░▄░░░▄░░▄░░░██░\\n\" +"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                \"    ░░░░░░░▄█▄░░░░░░░░░░░▀▄░░▀▀▀▀▀▀▀▀░░▄▀░░\\n\" +"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                \"    ░░░░░░█▀▀█████████▀▀▀▀████████████▀░░░░\\n\" +"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                \"    ░░░░░░████▀░░███▀░░░░░░▀███░░▀██▀░░░░░░\\n\" +"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                \"    ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\\n\";"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        System.out.print(logo);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        System.out.println(\"    Hello Nyan Cat here!\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "}"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 207,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 4
    }
  },
  {
    "path": "src/main/java/duke/task/DeadLine.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "public class DeadLine extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public DeadLine(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public String toOutput() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        return \"D | \" + (isDone ? \u00271\u0027 : \u00270\u0027) + \" | \" + description"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                + \" | \" + by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 21
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public String toOutput() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        return \"E | \" + (isDone ? \u00271\u0027 : \u00270\u0027) + \" | \" + description"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "                + \" | \" + at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 21
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public void taskDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public abstract String toOutput();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        return (\"[\" + getStatusIcon() + \"] \" + description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 26
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public String toOutput() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        return \"T | \" + (isDone ? \u00271\u0027 : \u00270\u0027) + \" | \" + description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 17
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "todo homework"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "deadline tutorials /by today"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "event"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "deadline opps"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "add butterfly"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "event lecture /at i-cube"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": " @ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "       echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "       exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   )"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NyanWunPaing"
        },
        "content": "   FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "NyanWunPaing": 21
    }
  }
]

[
  {
    "path": "output.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "T | 0 | rihfre f"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "D | 0 | deadline (by: ceiufhce)"
      }
    ],
    "authorContributionMap": {
      "zi-hui": 2
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "import commands.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "import commands.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "import commands.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "import commands.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "import exceptions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "import java.awt.image.AreaAveragingScaleFilter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public static void greeting() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        System.out.println(\"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public static void listCommand(ArrayList\u003cTask\u003e tasks) throws EmptyListException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        int sizeOfList \u003d tasks.size();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        if (sizeOfList !\u003d 0) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            for (int i \u003d 0; i \u003c sizeOfList ; i +\u003d 1) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                System.out.println(i + 1 + \". \" + tasks.get(i));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            throw new EmptyListException(\"No tasks in the list.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public static void doneCommand(ArrayList\u003cTask\u003e tasks, String userData) throws TaskNumberException, TaskDescriptionException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        if (!userData.trim().toLowerCase().equals(\"done\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            String[] newData \u003d userData.split(\" \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            int index \u003d Integer.parseInt(newData[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            int sizeOfList \u003d tasks.size();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            if (index \u003c\u003d sizeOfList) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                tasks.get(index - 1).updateIsDone();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                System.out.println(tasks.get(index - 1));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                throw new TaskNumberException(\"Task number does not exist in the list.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            throw new TaskDescriptionException(\"Add a task number after \\\u0027done\\\u0027 to mark task as done.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public static void deleteCommand(ArrayList\u003cTask\u003e tasks, String userData) throws TaskNumberException, TaskDescriptionException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        if (!userData.trim().toLowerCase().equals(\"delete\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            String[] newData \u003d userData.split(\" \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            int index \u003d Integer.parseInt(newData[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            int sizeOfList \u003d tasks.size();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            if (index \u003c\u003d sizeOfList) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                System.out.println(\"Got it! I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                System.out.println(tasks.get(index - 1));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                tasks.remove(index - 1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                System.out.println( \"You now have \" + tasks.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                throw new TaskNumberException(\"Task number does not exist in the list.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            throw new TaskDescriptionException(\"Add a task number after \\\u0027done\\\u0027 to mark task as done.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public static void deadlineCommand(ArrayList\u003cTask\u003e tasks, String userData) throws DeadlineTaskException, DeadlineDateException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        if (!userData.trim().toLowerCase().equals(\"deadline\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            int indexOfBy \u003d userData.indexOf(\"/by\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            if (indexOfBy \u003d\u003d -1) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                throw new DeadlineDateException(\"Please specify a date by using \\\u0027/by\\\u0027!\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            String[] newData \u003d userData.split(\" /by \");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            if(newData.length \u003d\u003d 1){"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                throw new DeadlineDateException(\"Please specify a date after \\\u0027/by\\\u0027!\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            Task deadline \u003d new Deadline(newData[0], newData[1]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            tasks.add(deadline);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\" + System.lineSeparator()"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                    + tasks.get(tasks.size() - 1) + System.lineSeparator()"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                    + \"You now have \" + tasks.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            throw new DeadlineTaskException(\"Add a task behind \u0027deadline\u0027, task cannot be left empty.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public static void eventCommand(ArrayList\u003cTask\u003e tasks, String userData) throws TaskException, EventDateException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        if (!userData.trim().toLowerCase().equals(\"event\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            int indexOfAt \u003d userData.indexOf(\"/at\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            if (indexOfAt \u003d\u003d -1) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                throw new EventDateException(\"Please specify a date for event by using \\\u0027at\\\u0027!\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            String[] newData \u003d userData.split(\" /at \");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            if(newData.length \u003d\u003d 1){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                throw new EventDateException(\"Please specify a date after \\\u0027/at\\\u0027!\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            Task event \u003d new Event(newData[0], newData[1]);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            tasks.add(event);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\" + System.lineSeparator()"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                    + tasks.get(tasks.size() - 1) + System.lineSeparator()"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                    + \"You now have \" + tasks.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            throw new TaskException(\"Add a task behind \u0027event\u0027, task cannot be left empty.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public static void todoCommand(ArrayList\u003cTask\u003e tasks, String userData) throws TaskException {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        if (!userData.trim().toLowerCase().equals(\"todo\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            String[] removeTodo \u003d userData.split(\" \", 2);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            Task todo \u003d new Todo(removeTodo[1]);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            tasks.add(todo);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\" + System.lineSeparator()"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                    + tasks.get(tasks.size() - 1) + System.lineSeparator()"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                    + \"You now have \" + tasks.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            throw new TaskException(\"Add a task behind \u0027todo\u0027, task cannot be left empty.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public static void executeCommand(ArrayList\u003cTask\u003e tasks, String userData) throws InvalidCommandException {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        String[] newData \u003d userData.split(\" \");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        if (newData[0].toLowerCase().equals(\"list\")) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                listCommand(tasks);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            } catch (DukeException err) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                System.out.println(err.toString());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        } else if (newData[0].toLowerCase().equals(\"done\")) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                doneCommand(tasks, userData);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            } catch (DukeException err) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                System.out.println(err.toString());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        } else if (newData[0].toLowerCase().equals(\"deadline\")) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                deadlineCommand(tasks, userData);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            } catch (DukeException err) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                System.out.println(err.toString());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        } else if (newData[0].toLowerCase().equals(\"event\")) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                eventCommand(tasks, userData);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            } catch (DukeException err) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                System.out.println(err.toString());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        } else if (newData[0].toLowerCase().equals(\"todo\")) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                todoCommand(tasks, userData);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            } catch (DukeException err) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                System.out.println(err.toString());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        } else if(newData[0].toLowerCase().equals(\"delete\")){"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                deleteCommand(tasks, userData);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            } catch (DukeException err) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                System.out.println(err.toString());"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            throw new InvalidCommandException(\"Invalid command.\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public static void main(String[] args) throws InvalidCommandException {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        greeting();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        Storage storage \u003d new Storage(\"output.txt\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            String userData \u003d scan.nextLine();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            if (userData.toLowerCase().equals(\"bye\")) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                    ArrayList\u003cTask\u003e tasks \u003d storage.getData();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                    executeCommand(tasks, userData);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                    storage.saveData(tasks);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                } catch (DukeException err) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                    System.out.println(err.toString());"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                } catch (FileNotFoundException err) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                    ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                    executeCommand(tasks, userData);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                    storage.saveData(tasks);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zi-hui": 186,
      "-": 10
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "import commands.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "import commands.Todo;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "import commands.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "import commands.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "     public ArrayList\u003cTask\u003e getData() throws FileNotFoundException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            String userData \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            char taskType \u003d userData.charAt(0);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            char isDone \u003d userData.charAt(4);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            case \u0027T\u0027:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                Task todo \u003d new Todo(userData.substring(8));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                if (isDone \u003d\u003d \u00271\u0027) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                    todo.updateIsDone();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                tasks.add(todo);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            case \u0027E\u0027: {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                String[] description \u003d userData.substring(8).split(\" \\\\(at: \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                Task event \u003d new Event(description[0], description[1].substring(0, description[1].length() - 1));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                if (isDone \u003d\u003d \u00271\u0027) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                    event.updateIsDone();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                tasks.add(event);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            case \u0027D\u0027: {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                String[] description \u003d userData.substring(8).split(\" \\\\(by: \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                Task deadline \u003d new Deadline(description[0], description[1].substring(0, description[1].length() - 1));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                if (isDone \u003d\u003d \u00271\u0027) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                    deadline.updateIsDone();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                tasks.add(deadline);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public void saveData(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"output.txt\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            for (Task task : tasks){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                String addData;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                switch (task.getTaskDescription()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                    if (task.isDone()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                        addData \u003d \"T |\" + \" 1 | \" + task.getDescription();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                        addData \u003d \"T |\" + \" 0 | \" + task.getDescription();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                    fw.write(addData + System.lineSeparator());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                    if (task.isDone()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                        addData \u003d \"E |\" + \" 1 | \" + task.getDescription() + task.getAtDescription();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                        addData \u003d \"E |\" + \" 0 | \" + task.getDescription() + task.getAtDescription();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                    fw.write(addData + System.lineSeparator());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                    if (task.isDone()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                        addData \u003d \"D |\" + \" 1 | \" + task.getDescription() + task.getByDescription();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                        addData \u003d \"D |\" + \" 0 | \" + task.getDescription() + task.getByDescription();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                    fw.write(addData + System.lineSeparator());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        } catch (IOException err) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "            err.printStackTrace();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zi-hui": 100
    }
  },
  {
    "path": "src/main/java/commands/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        this.taskDescription \u003d \"deadline\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public String getByDescription() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        return (\" (by: \" + by + \")\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zi-hui": 21
    }
  },
  {
    "path": "src/main/java/commands/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        this.taskDescription \u003d \"event\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public String getAtDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        return (\" (at: \" + at + \")\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zi-hui": 21
    }
  },
  {
    "path": "src/main/java/commands/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    private static int listCount \u003d 0;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    protected String taskDescription;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        taskDescription \u003d \"task\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        listCount +\u003d 1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public void updateIsDone (){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public String getTaskDescription() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        return taskDescription;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public String getAtDescription() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public String getByDescription() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zi-hui": 51
    }
  },
  {
    "path": "src/main/java/commands/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        this.taskDescription \u003d \"todo\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zi-hui": 15
    }
  },
  {
    "path": "src/main/java/exceptions/DeadlineDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "public class DeadlineDateException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    private String error;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public DeadlineDateException(String error) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        this.error \u003d error;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        return String.format(\"Error: %s\", this.error);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zi-hui": 14
    }
  },
  {
    "path": "src/main/java/exceptions/DeadlineTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "public class DeadlineTaskException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    private String error;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public DeadlineTaskException(String error) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        this.error \u003d error;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        return String.format(\"Error: %s\", this.error);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zi-hui": 14
    }
  },
  {
    "path": "src/main/java/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zi-hui": 4
    }
  },
  {
    "path": "src/main/java/exceptions/EmptyListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "public class EmptyListException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    private String error;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public EmptyListException(String error) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        this.error \u003d error;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        return String.format(\"Error: %s\", this.error);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zi-hui": 14
    }
  },
  {
    "path": "src/main/java/exceptions/EventDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "public class EventDateException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    private String error;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public EventDateException(String error) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        this.error \u003d error;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        return String.format(\"Error: %s\", this.error);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zi-hui": 14
    }
  },
  {
    "path": "src/main/java/exceptions/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    private String error;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public InvalidCommandException(String error) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        this.error \u003d error;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        return String.format(\"Error: %s\", this.error);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zi-hui": 14
    }
  },
  {
    "path": "src/main/java/exceptions/TaskDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "public class TaskDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    private String error;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public TaskDescriptionException(String error) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        this.error \u003d error;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        return String.format(\"Error: %s\", this.error);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zi-hui": 14
    }
  },
  {
    "path": "src/main/java/exceptions/TaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "public class TaskException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    private String error;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public TaskException(String error) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        this.error \u003d error;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        return String.format(\"Error: %s\", this.error);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zi-hui": 14
    }
  },
  {
    "path": "src/main/java/exceptions/TaskNumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "public class TaskNumberException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    private String error;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public TaskNumberException(String errorMsg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        this.error \u003d error;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zi-hui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "        return String.format(\"Error: %s\", this.error);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zi-hui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zi-hui": 14
    }
  }
]

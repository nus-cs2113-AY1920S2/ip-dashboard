[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "DDzuikeai": 1,
      "-": 38
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DDzuikeai": 1,
      "-": 19
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "[E][√] attend meeting (at:  Tuesday)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "[D][×] push repo (by:  Friday)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "[T][×] eatfood"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "[D][√] finish homeword (by: tonight)"
      }
    ],
    "authorContributionMap": {
      "DDzuikeai": 4
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "# Duke User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "## Content Page"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "1.  **Introduction**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "2.  **Features**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    *   2.1 Choose Mode"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    *   2.2 Add Task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        *   2.2.1 Add ToDo Task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        *   2.2.2 Add Event Task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        *   2.2.3 Add Deadline Task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    *   2.3 Mark Task As Done"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    *   2.4 List Tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    *   2.5 Delete Task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    *   2.6 Find Related Task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    *   2.7 Exit Program"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    *   2.8 Save And Load Data"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "3.  **Command Summary**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Duke is a task management software which help people keep track of daily tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "It is a java application optimized for users who want to type fast with Command Line Interface(CLI)."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "###`Command Format`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Words in `UPPER_CASE` are the parameters to be supplied by the users."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "For example: In `todo \u003cTASK_DESCRIPTION\u003e`,`TASK_DESCRIPTION` is a parameter used to describe a ToDo task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "### `2.1 Choose Mode`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Select one mode from two options:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "1.  echo mode (simply repeat user\u0027s input)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "2.  command mode (help manage user\u0027s tasks) `(Recommended)`"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Format: `mode \u003cMODE_INDEX\u003e`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "### `2.2 Add Task`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "#### `2.2.1 Add ToDo Task`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Add a todo task to the list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Format: `todo \u003cTASK_DESCRIPTION\u003e`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "#### `2.2.2 Add Event Task`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Add a event task to the list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Format: `event \u003cTASK_DESCRIPTION\u003e /at \u003cTIME_DESCRIPTION\u003e`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "#### `2.2.3 Add Deadline Task`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Add a deadline task to the list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Format: `deadline \u003cTASK_DESCRIPTION\u003e /by \u003cTIME_DESCRIPTION\u003e`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "### `2.3 Mark Task As Done`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Mark a task as done with its index."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Format: `done \u003cTASK_INDEX\u003e`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "### `2.4 List Tasks`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "List all the tasks in the list."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "### `2.5 Delete Task`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Remove a task from the list with its index."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Format: `delete \u003cTASK_INDEX\u003e`"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "### `2.6 Find Related Task`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Search for all tasks that relate to certain keywords."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Format: `find \u003cKEYWORDS\u003e`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "### `2.7 Exit Program`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Exit the program after use."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "### `2.8 Save And Load Data`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "All tasks in the list will be automatically saved in the hard disk before program exits."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "The saved tasks will be restored automatically when launching the program later."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "### todo"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Expected Output"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    ________________________________"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    added: read book"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    Now there are totally 1 task in the list"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    ________________________________"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "### event "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "event attend meeting /at 2020-03-01"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Expected Output"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    ________________________________"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    added: attend meeting"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    Now there are totally 2 tasks in the list"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    ________________________________"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "### deadline"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Example"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "deadline finish IP /by tomorrow"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Expected Output"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    ________________________________"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    added: finish IP"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    Now there are totally 3 tasks in the list"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    ________________________________"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "### list "
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Example"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "list"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Expected Output"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    ________________________________"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    1.[T][×] read book"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    2.[E][×] attend meeting (at: Mar 01 2020)"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    3.[D][×] finish IP (by: tomorrow)"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    ________________________________"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "### done"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Example"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Expected Output"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    ________________________________"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    Congratulations! You have just finished this task:"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    [T][√] read book"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    ________________________________"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "### delete"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Example"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Expected Output"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    ________________________________"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    [D][×] finish IP (by: tomorrow)"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    There are totally 2 tasks in the taskList"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    ________________________________"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "### find"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Example"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "find book"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Expected Output"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    ________________________________"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    1.[T][√] read book"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    ________________________________"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "### bye"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Example"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "bye"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Expected Output"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "~~~"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    ________________________________"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    Don\u0027t leave me alone! Please come back soon!"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    ________________________________"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "~~~"
      }
    ],
    "authorContributionMap": {
      "DDzuikeai": 191,
      "-": 9
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": " * The entry point of this task management software."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": " * Finish all initializations first and then interact with user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    private static TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    protected static Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    private static Parser parser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            storage.loadFileData(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            Ui.printFileNotFoundInfo();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    /** The program runs until user enters \"Bye\".*/"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public void run(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        prepare();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        chooseOneModeAndRun();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public static void prepare(){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        Ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public static void exit(){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        Ui.sayBye();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    /** Enter into one mode and execute."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * echo mode(mode 1) simply repeats user\u0027s input."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * command mode(mode 2) deals with tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    private static void chooseOneModeAndRun() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        String input \u003d parser.getAndProcessInput();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        boolean isInputValid \u003d false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        while (!isInputValid) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            switch (input) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            case \"mode 1\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "                runInEchoMode();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "                isInputValid \u003d true;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            case \"mode 2\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "                runInCommandMode();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "                isInputValid \u003d true;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "                Ui.showUnknownModeInfo();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "                input \u003d parser.getAndProcessInput();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public static void runInEchoMode() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        Ui.showEchoModeGuideInfo();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        String input \u003d parser.getAndProcessInput();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        while (!parser.isByeCommand(input)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            Ui.repeatInput(input);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            input \u003d parser.getAndProcessInput();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public static void runInCommandMode() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        Ui.showCommandModeGuideInfo();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        String input \u003d parser.getAndProcessInput();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        while (!parser.isByeCommand(input)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            Ui.showSplitLine();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            parseAndExecuteCommand(input,storage);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            Ui.showSplitLine();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            input \u003d parser.getAndProcessInput();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * Parse user\u0027s original input and check which type of command it belongs to."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * Execute the command according to its type."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * @param input user\u0027s input"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * @param storage instance of Storage"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    private static void parseAndExecuteCommand(String input,Storage storage) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        if(parser.isDoneCommand(input)){"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            tasks.setTaskAsDoneAndSave(input,storage);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        }else if(parser.isDeleteCommand(input)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            tasks.removeCertainTaskAndSave(input,storage);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        } else if(parser.isListCommand(input)){"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            tasks.printTaskList();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        } else if(parser.isFindCommand(input)){"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            String targetWords \u003d parser.getTargetWords(input);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            tasks.showAllRelatedTasks(targetWords);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        } else tasks.addNewTaskAndSave(input,storage);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DDzuikeai": 113
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "import duke.exception.InexplicitTimeDescription;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    private static Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public String getAndProcessInput() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        String input \u003d in.nextLine().trim();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public boolean isByeCommand(String input){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        return input.toLowerCase().equals(\"bye\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public boolean isDoneCommand(String input){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        return input.startsWith(\"done\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public boolean isDeleteCommand(String input){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        return input.startsWith(\"delete\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public boolean isListCommand(String input){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        return input.startsWith(\"list\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public boolean isFindCommand(String input){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        return input.startsWith(\"find\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public int getTaskIndex(String input) throws NumberFormatException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        int dividePosition \u003d input.indexOf(\" \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            return Integer.parseInt(input.substring(dividePosition + 1));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public String getNewTodoName(String input) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        input \u003d input.replace(\"todo \", \"\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public String getDdlOrEventName(String input) throws InexplicitTimeDescription {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        String newName \u003d input.replace(\"deadline \", \"\").replace(\"event \", \"\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            int cutPosition \u003d newName.indexOf(\"/\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            newName \u003d newName.substring(0, cutPosition - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            throw new InexplicitTimeDescription();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        return newName;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public String getByOrDate(String input) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        int byBeginPosition \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        return input.substring(byBeginPosition + 4);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public String parseTaskType(String input){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        int dividePosition \u003d input.indexOf(\" \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        return input.substring(0,dividePosition);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public String getTargetWords(String input){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        String targetWords \u003d \"\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            int splitIndex \u003d input.indexOf(\" \");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            targetWords \u003d input.substring(splitIndex).trim();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            Ui.showCannotGetTargetWordsInfo(input);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        return targetWords;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DDzuikeai": 81
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    private String FILE_PATH;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    private String DIR_PATH;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    private File f;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public Storage(String filePath){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        this.FILE_PATH \u003d filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        this.DIR_PATH \u003d FILE_PATH.substring(0,FILE_PATH.indexOf(\"/\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        this.f \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public void loadFileData(TaskList tasks) throws FileNotFoundException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        checkDirectory();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            String record \u003d s.nextLine().replace(\"[\", \"\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "                    .replace(\"]\", \"\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            restoreTasks(record,tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    private void checkDirectory() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        File dir \u003d new File(DIR_PATH);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        if(!dir.exists()){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            dir.mkdir();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public void restoreTasks(String record,TaskList tasks) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        String taskType \u003d record.substring(0, 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        String taskStatus \u003d \"[\"+record.substring(1, 2)+\"]\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        String taskName \u003d \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        String timeDescription \u003d \"\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        if (record.contains(\"(\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            taskName \u003d record.substring(2,record.indexOf(\u0027(\u0027)).trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            timeDescription \u003d record.substring(record.indexOf(\":\") + 1).replace(\")\",\"\").trim();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            taskName \u003d record.substring(2).trim();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            tasks.append(new ToDo(taskName,taskStatus));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            tasks.append(new Event(taskName, timeDescription,taskStatus));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            tasks.append(new Deadline(taskName, timeDescription,taskStatus));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public void saveToFile(TaskList tasks){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            rewriteFile(tasks);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            Ui.printIoWrongInfo();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    private void rewriteFile(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        FileWriter fw \u003d new FileWriter(FILE_PATH);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        for (int i \u003d 0; i \u003c TaskList.getLenOfList(); i++) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            Task cur_task \u003d tasks.getOneTask(i);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            String taskInfo \u003d cur_task.showTaskInfo();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            fw.write(taskInfo+System.lineSeparator());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DDzuikeai": 84
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "import duke.exception.InexplicitTimeDescription;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "import duke.exception.UnknownCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    private static Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * @param taskIndex index of the wanted task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * @return a Task instance."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public Task getOneTask(int taskIndex){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        return taskList.get(taskIndex);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public static int getLenOfList(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * Append a new task to the tail of a TaskList(tasks)."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public void append(Task task){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * Remove a task from the list with its index."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * @param taskIndex the index of the task to be removed."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public void remove(int taskIndex){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        taskList.remove(taskIndex-1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        Task.setTaskNum(Task.getTaskNum()-1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * Print detailed info of all tasks in the TaskList(tasks)."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public void printTaskList(){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        for(Task task:taskList){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            String prefix \u003d \"    \"+index+\".\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            System.out.println(prefix+task.showTaskInfo());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * Print all the tasks in the TaskList(tasks) that contain certain keywords."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * @param targetWords keywords supplied by user"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public void showAllRelatedTasks(String targetWords){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        for(Task task:taskList){"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            if(!task.showTaskInfo().contains(targetWords)) continue;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            String prefix \u003d \"    \"+index+\".\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            if(index\u003d\u003d1) System.out.println(\"    Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            System.out.println(prefix+task.showTaskInfo());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        if(index\u003d\u003d0) System.out.println(\"    No matching tasks found!\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * @param input user\u0027s command to add a new task."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * @param type  the type of the tobe-added task."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * @return description(name) of the new task."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * @throws UnknownCommandException if user\u0027s command cannot be parsed legally."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * @throws InexplicitTimeDescription if Event or Deadline isn\u0027t with correct time description."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public String newTaskAndReturnName(String input, String type)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            throws UnknownCommandException, InexplicitTimeDescription {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        String newTaskName \u003d \"\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            newTaskName \u003d parser.getNewTodoName(input);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            this.append(new ToDo(newTaskName));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "                newTaskName \u003d parser.getDdlOrEventName(input);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            } catch (InexplicitTimeDescription e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "                throw e;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            String by \u003d parser.getByOrDate(input);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            this.append(new Deadline(newTaskName, by));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "                newTaskName \u003d parser.getDdlOrEventName(input);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            } catch (InexplicitTimeDescription e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "                throw e;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            String date \u003d parser.getByOrDate(input);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            this.append(new Event(newTaskName, date));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            throw new UnknownCommandException();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        return newTaskName;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * Parse original input and figure out the type of the task to be added."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * Add a new task to the TaskList(tasks) and Save changes to the file."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * @param input user\u0027s command to add a new task"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * @param storage instance of Storage class, helps to save changes into file."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public void addNewTaskAndSave(String input,Storage storage) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            String type \u003d parser.parseTaskType(input);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            String newTaskName \u003d this.newTaskAndReturnName(input,type);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            storage.saveToFile(this);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            Ui.showAddTaskInfo(newTaskName);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        } catch(StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            Ui.showCannotResolveTaskNameInfo(input);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        } catch (UnknownCommandException e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            Ui.showUnknownCommandInfo();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        } catch (InexplicitTimeDescription e){"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            Ui.showInexplictTimeDesCriptionInfo();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * Parse user\u0027s original input and delete the task according to taskIndex."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * Save the modifications to the file."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * @param input user\u0027s input with the form \"delete TASK_INDEX\"."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * @param storage instance of Storage class, helps to save changes into file."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public void removeCertainTaskAndSave(String input,Storage storage) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            int taskIndex \u003d parser.getTaskIndex(input);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            Task cur_task \u003d this.getOneTask(taskIndex-1);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            this.remove(taskIndex);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            storage.saveToFile(this);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            Ui.printTaskRemovedInfo(cur_task);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            Ui.showTotalTaskNum();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        } catch (NumberFormatException e){"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            Ui.showUnknownTaskIndexInfo();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        } catch (IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            Ui.showTaskNotFoundInfo();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * Parse original input and get the index of the referred task."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * Set the corresponding task in TaskList(tasks) as \"Done\"."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * Save changes to the file"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * @param input user\u0027s command to set a task as \"Done\" with its index;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * @param storage instance of Storage class, helps to save changes into file."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public void setTaskAsDoneAndSave(String input,Storage storage) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            int taskIndex \u003d parser.getTaskIndex(input);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            Task cur_task \u003d this.getOneTask(taskIndex-1);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            cur_task.setTaskStatus(Task.DONE);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            storage.saveToFile(this);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            Ui.printTaskDoneInfo(cur_task);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        } catch (NumberFormatException e){"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            Ui.showUnknownTaskIndexInfo();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        } catch (IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            Ui.showTaskNotFoundInfo();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DDzuikeai": 181
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    private static final String logo \u003d"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "              \"     ____        _        \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            + \"    |  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            + \"    | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            + \"    | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            + \"    |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    private static final String splitLine \u003d \"    ________________________________\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public static void showWelcomeMessage(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        System.out.println(\"    Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        showSplitLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        System.out.println(\"    Hello,I\u0027m little pepper. Your personal sweetheart.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        System.out.println(\"    What can I do for you? You can choose two model:\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        System.out.println(\"    1.echo mode\\n    2.command mode\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        showSplitLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public static void showSplitLine(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        System.out.println(splitLine);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public static void sayBye(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        showSplitLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        System.out.println(\"    Don\u0027t leave me alone! Please come back soon!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        showSplitLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public static void showCommandModeGuideInfo(){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        showSplitLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        System.out.println(\"    Now you are in command mode!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        showSplitLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public static void showEchoModeGuideInfo(){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        showSplitLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        System.out.println(\"    Now you are in echo mode!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        System.out.println(\"    Type in anything you want and I will repeat your words!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        System.out.println(\"    \u0027Bye\u0027 to exit\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        showSplitLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public static void showUnknownModeInfo(){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        System.out.println(\"    Unknown mode, please try again.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public static void showUnknownCommandInfo(){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        System.out.println(\"    OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public static void showInexplictTimeDesCriptionInfo(){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        System.out.println(\"    Invalid input!!! Please use \u0027/\u0027 to split task name and its time description\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public static void showCannotResolveTaskNameInfo(String input){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        System.out.println(\"    Invalid input! Cannot find description for a task event\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        System.out.println(\"    Your input: \"+input+\".\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        System.out.println(\"    Please use \u0027 \u0027 to split a task type and its description\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public static void showCannotGetTargetWordsInfo(String input){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        System.out.println(\"    Invalid input! Cannot find target words in given input\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        System.out.println(\"    Your input: \"+input+\".\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        System.out.println(\"    Please use \u0027 \u0027 to split \u0027find\u0027 and \u0027keywords\u0027\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public static void showUnknownTaskIndexInfo(){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        System.out.println(\"    You have to point out clearly which task to mark as done or delete!!!\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public static void printFileNotFoundInfo(){"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        System.out.println(\"    File not found! I will make a new one to you!\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public static void showTaskNotFoundInfo(){"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        System.out.println(\"    Referred task doesn\u0027t exist!!!\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        showTotalTaskNum();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public static void showTotalTaskNum(){"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        System.out.println(\"    There are totally \"+Integer.toString(TaskList.getLenOfList())+\" tasks in the taskList\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public static void showAddTaskInfo(String newTaskName) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        System.out.println(\"    added: \" + newTaskName);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        System.out.println(\"    Now there are totally \" + Integer.toString(TaskList.getLenOfList()) + \" tasks in the list\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public static void printTaskDoneInfo(Task cur_task) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        System.out.println(\"    Congratulations! You have just finished this task:\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        System.out.println(\"    \" + cur_task.showTaskInfo());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public static void printTaskRemovedInfo(Task cur_task){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        System.out.println(\"    Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        System.out.println(\"    \"+cur_task.showTaskInfo());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public static void printIoWrongInfo(){"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        System.out.println(\"Something wrong while writing to file\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public static void repeatInput(String input){"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        showSplitLine();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        System.out.println(\"    \" + input);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        showSplitLine();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DDzuikeai": 116
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "public abstract class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DDzuikeai": 4
    }
  },
  {
    "path": "src/main/java/duke/exception/InexplicitTimeDescription.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "public class InexplicitTimeDescription extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DDzuikeai": 4
    }
  },
  {
    "path": "src/main/java/duke/exception/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DDzuikeai": 4
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    private static int deadlineNum \u003d 0;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    private LocalDate standardTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    private boolean isStandardTime \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public Deadline(String taskName,String by){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        this.taskType \u003d \"[D]\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        deadlineNum++;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            standardTime \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            isStandardTime \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        } catch (DateTimeParseException ignored){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public Deadline(String taskName,String by,String taskStatus){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        this(taskName,by);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        this.setTaskStatus(taskStatus);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * @return total number of deadlines in the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public static int getDeadlineNum(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        return deadlineNum;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public void setBy(String by) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * @return time description of a deadline."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * If time description is in standard form, format it pattern \"MMM dd yyyy\" first."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public String getBy(){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        if(isStandardTime) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            return this.standardTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\",Locale.ENGLISH));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            return this.by;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * @return detailed information of a deadline."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public String showTaskInfo(){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        return super.showTaskInfo()+\" (by: \"+this.getBy()+\")\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DDzuikeai": 61
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    private static int eventNum \u003d 0;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    private LocalDate standardTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    private boolean isStandardTime \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public Event(String taskName,String date){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        this.taskType \u003d \"[E]\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        eventNum++;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            standardTime \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            isStandardTime \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        } catch (DateTimeParseException ignored){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public Event(String taskName,String date,String taskStatus){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        this(taskName,date);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        this.setTaskStatus(taskStatus);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public static int getEventNum(){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        return eventNum;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * Set time description"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * @param date time description of an event"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public void setDate(String date) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * @return time description of an event."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * If time description is in standard form, format it pattern \"MMM dd yyyy\" first."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public String getDate(){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        if(isStandardTime) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            return this.standardTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\",Locale.ENGLISH));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "            return this.date;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     * @return detailed information of an event."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public String showTaskInfo(){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        return super.showTaskInfo()+\" (at: \"+this.getDate()+\")\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DDzuikeai": 62
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    private static int taskNum \u003d 0;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    private String taskStatus;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public static final String NOT_DONE \u003d \"[\\u00D7]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public static final String DONE \u003d \"[\\u221A]\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public Task(String taskName){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        setTaskName(taskName);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        setTaskStatus(NOT_DONE);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        taskNum++;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public static void setTaskNum(int taskNum){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        Task.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public void setTaskName(String taskName){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public void setTaskStatus(String taskStatus){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        this.taskStatus \u003d taskStatus;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public String getTaskName(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        return this.taskName;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public String getTaskStatus(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        return this.taskStatus;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public String getTaskType(){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        return this.taskType;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public static int getTaskNum(){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        return taskNum;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public String showTaskInfo(){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        String info \u003d this.getTaskType()+this.getTaskStatus()+\" \"+this.getTaskName();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        return info;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DDzuikeai": 49
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    private static int toDoNum \u003d 0;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public ToDo(String taskName){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        toDoNum++;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        this.taskType \u003d \"[T]\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public ToDo(String taskName,String taskStatus){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        this(taskName);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        this.setTaskStatus(taskStatus);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    public static int getToDoNum(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "        return toDoNum;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "DDzuikeai": 21
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "mode 2"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "event wash clothes /at tonight"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "deadline push my repo /by Monday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "event write something"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "deadline finish homework /by 2020-03-02"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "haha blah"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "done"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "find homework"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "Bye"
      }
    ],
    "authorContributionMap": {
      "DDzuikeai": 16
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "del OUTPUT.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\task\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the OUTPUT.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e OUTPUT.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "DDzuikeai"
        },
        "content": "FC OUTPUT.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "DDzuikeai": 21
    }
  }
]

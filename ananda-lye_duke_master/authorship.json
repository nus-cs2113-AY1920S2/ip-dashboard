[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "Duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for Duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "ananda-lye": 2
    }
  },
  {
    "path": "saved/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "0|something|T"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "0|newevent|E|kukubird"
      }
    ],
    "authorContributionMap": {
      "ananda-lye": 2
    }
  },
  {
    "path": "src/main/java/Duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    public Deadline(String description, String by, String status) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        if (status.equals(\"1\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            this.markAsDone();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        return(super.toSaveFormat() + \"D|\" + this.by);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ananda-lye": 28
    }
  },
  {
    "path": "src/main/java/Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    public static final String GREETING \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    public static final String GOODBYE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    public static final String FILEPATH \u003d \"saved/data.txt\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        System.out.println(GREETING);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        File f \u003d new File(FILEPATH);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        ArrayList\u003cTask\u003e lastShownList \u003d (ArrayList\u003cTask\u003e) taskArrayList.clone();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        int exit \u003d 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        int taskListSize \u003d 0;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        int lastShownListSize \u003d 0;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            taskListSize \u003d loadFileContents(FILEPATH, taskArrayList);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            System.out.println(\"No saved file available\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        while (exit \u003d\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            String userInput \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            String[] tokenizedInputs \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            String instruction \u003d tokenizedInputs[0];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            switch(instruction) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                System.out.println(GOODBYE);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                exit \u003d 1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                saveTasks(FILEPATH, taskArrayList, true);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                String keyword \u003d tokenizedInputs[1];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                lastShownList.clear();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                lastShownListSize \u003d 0;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                displayMatchingTasks(taskArrayList, lastShownList, lastShownListSize, keyword);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                printTasks(taskArrayList, taskListSize);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                lastShownList.clear();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                lastShownList \u003d (ArrayList\u003cTask\u003e) taskArrayList.clone();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                if (checkEmptyDescription(tokenizedInputs, instruction)) break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                int taskDone \u003d Integer.valueOf(tokenizedInputs[1]) - 1;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                //to do more error handling here"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                System.out.println(lastShownList.get(taskDone).markAsDone());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                if (checkEmptyDescription(tokenizedInputs, instruction)) break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                int taskToDelete \u003d Integer.valueOf(tokenizedInputs[1]) - 1;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                //to do more error handling here"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                taskListSize--;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                respondDeleteSuccess(taskListSize, \"Noted. I\u0027ve removed this task:\\n\", lastShownList.get(taskToDelete));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                taskArrayList.remove(lastShownList.get(taskToDelete));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                if (checkEmptyDescription(tokenizedInputs, instruction)) break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                String toDo \u003d tokenizedInputs[1];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                taskArrayList.add(new ToDo(tokenizedInputs[1]));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                respondAddedSuccess(taskListSize, taskArrayList.get(taskListSize));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                taskListSize++;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                if (checkEmptyDescription(tokenizedInputs, instruction)) break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                String[] deadlineInfo \u003d tokenizedInputs[1].split(\" /by \");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                if (checkDateEntered(deadlineInfo)) break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                taskArrayList.add(new Deadline(deadlineInfo[0], deadlineInfo[1]));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                respondAddedSuccess(taskListSize, taskArrayList.get(taskListSize));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                taskListSize++;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                if (checkEmptyDescription(tokenizedInputs, instruction)) break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                String[] eventInfo \u003d tokenizedInputs[1].split(\" /at \");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                if (checkDateEntered(eventInfo)) break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                taskArrayList.add(new Event(eventInfo[0], eventInfo[1]));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                respondAddedSuccess(taskListSize, taskArrayList.get(taskListSize));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                taskListSize++;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    private static void displayMatchingTasks(ArrayList\u003cTask\u003e taskArrayList, ArrayList\u003cTask\u003e lastShownList, int lastShownListSize, String keyword) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        for (Task i : taskArrayList) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            if (i.description.contains(keyword)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                lastShownList.add(i);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                lastShownListSize++;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        if (lastShownListSize \u003e 0) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                    \"     Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            printTasks(lastShownList, lastShownListSize);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            System.out.println(\"There are no tasks matching that description.\\n\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    private static void saveTasks(String filePath, ArrayList\u003cTask\u003e taskArrayList, boolean overWrite) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        for (Task currTask : taskArrayList) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            if(overWrite \u003d\u003d true) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                    writeToFile(filePath,currTask.toSaveFormat() + \"\\n\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                    System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                overWrite \u003d false;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                    appendToFile(filePath,currTask.toSaveFormat() + \"\\n\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                    System.out.println(\"Something went wrong: \" + e.getMessage() + \"\\n\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    private static void respondDeleteSuccess(int taskListSize, String s, Task task) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                s + task.toString());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        System.out.print(\"Now you have \");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        System.out.print(taskListSize);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        if (taskListSize \u003d\u003d 1) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            System.out.print(\" task in the list.\\n\" +"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                    \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            System.out.print(\" tasks in the list.\\n\" +"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                    \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    private static void printTasks(ArrayList\u003cTask\u003e taskArrayList, int taskListSize) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d taskListSize; i++) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            System.out.print(i);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            System.out.println(\".\" + taskArrayList.get(i-1).toString());"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    private static void respondAddedSuccess(int taskListSize, Task task) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                \"Got it. I\u0027ve added this task:\\n\" + task.toString());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        System.out.print(\"Now you have \");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        System.out.print(taskListSize + 1);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        if (taskListSize \u003c\u003d 0) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            System.out.print(\" task in the list.\\n\" +"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                    \"____________________________________________________________\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            System.out.print(\" tasks in the list.\\n\" +"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                    \"____________________________________________________________\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    private static boolean checkDateEntered(String[] information) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        if (information.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            System.out.println(\"☹ OOPS!!! You did not enter a date\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    private static boolean checkEmptyDescription(String[] tokens, String instruction) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        if (tokens.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of a \"+ instruction +\" cannot be empty.\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    private static int loadFileContents(String filePath, ArrayList\u003cTask\u003e taskArrayList) throws FileNotFoundException {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        int taskListSize \u003d 0;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            String newLine \u003d s.nextLine();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            String[] tokenizedLine \u003d newLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            String type \u003d tokenizedLine[2];"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            case (\"T\"):"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                taskArrayList.add(new ToDo(tokenizedLine[1], tokenizedLine[0]));"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                taskListSize++;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            case (\"E\"):"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                taskArrayList.add(new Event(tokenizedLine[1], tokenizedLine[3] ,tokenizedLine[0]));"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                taskListSize++;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            case (\"D\"):"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                taskArrayList.add(new Deadline(tokenizedLine[1], tokenizedLine[3] ,tokenizedLine[0]));"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                taskListSize++;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        System.out.println(\"Previous tasks has been loaded successfully:\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        printTasks(taskArrayList, taskListSize);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        return taskListSize;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    private static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    private static void appendToFile(String filePath, String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        fw.write(textToAppend);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 2,
      "ananda-lye": 227
    }
  },
  {
    "path": "src/main/java/Duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ananda-lye": 4
    }
  },
  {
    "path": "src/main/java/Duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    public Event(String description, String at, String status) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        if (status.equals(\"1\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            this.markAsDone();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        return(super.toSaveFormat() + \"E|\" + this.at);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ananda-lye": 28
    }
  },
  {
    "path": "src/main/java/Duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    public String markAsDone () {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        return (\"[\" + this.getStatusIcon() + \"] \"+ this.description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        return (\"[\"+ this.getStatusIcon() + \"] \" + this.description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        if (this.isDone \u003d\u003d true) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            return (\"1|\" + this.description+ \"|\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            return (\"0|\" + this.description + \"|\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ananda-lye": 34
    }
  },
  {
    "path": "src/main/java/Duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    public ToDo(String description, String status) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        if (status.equals(\"1\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "            this.markAsDone();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        return (\"[T]\" + super.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "        return(super.toSaveFormat() + \"T\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ananda-lye"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ananda-lye": 25
    }
  }
]

[
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "1. [T] [✘] buy a book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "2. [D] [✘] finish iP (by: Mar 2 2020)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "3. [E] [✘] watch a moive (at: tomorrow)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "4. [E] [✓] watch two moives (at: Feb 21 2020)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "5. [E] [✓] get hair cut (at: Feb 27 2020)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "6. [D] [✘] release iP (by: 2 Mar.)"
      }
    ],
    "authorContributionMap": {
      "RenzoTsai": 6
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "# Duke User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "## Content Page"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "1. **Introduction**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "2. **Features**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    2.1. **Add Tasks**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     - 2.1.1 **Add Todo Task**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     -  2.1.2 **Add Deadline Task**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     -  2.1.3 **Add Event Task**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    2.2. **Mark Tasks As Done** "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    2.3. **Delete Tasks**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    2.4. **List Tasks**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    2.5. **Find Tasks**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    2.6. **Save and Load**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "3. **Command Summary**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "## 1. Introduction:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Duke is a software to help people manage their daily tasks. "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "And it is optimized for users who want to type fast with CLI."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "## 2. Features:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "### Command Format"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Words in `UPPER_CASE` are the parameters to be supplied by the user."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "For example:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "in ​```todo TASK_NAME```, `TASK_NAME` is the parameter of a specific todo task’s name which can be used as `todo buy a book`."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "### 2.1 `Add` Tasks: "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "#### 2.1.1 Add `Todo` Task"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Add todo task into task list"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Format:​ ```todo TASK_NAME```"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "#### 2.1.2 Add `Deadline` Task"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Add deadline task into task list"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Format:​ ```deadline TASK_NAME /by TIME```"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Noted: If the users input a time in the format of `yyyy-mm-dd`, Duke can recognize the input time string as a real time."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "#### 2.1.3 Add `Event` Task"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Add event task into task list"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Format:​ ```event TASK_NAME /by TIME```"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Noted: If the users input a time in the format of `yyyy-mm-dd`, Duke can recognize the input time string as a real time."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "### 2.2 Mark Tasks As `Done`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Users can mark a task as done with the index of a task when they finish it."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Format: ​`done TASK_INDEX`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "### 2.3 `Delete` Tasks"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Users can delete a task as done with the index of a task when they finish it."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Format: ​`delete TASK_INDEX`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "### 2.4 `List` Tasks"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Users can list all the tasks in the task list when they need to look through it."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Format: ​`list`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "### 2.5 `Find` Tasks"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Users can find all the tasks which contains a certain keyword(Case sensitive)."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Format: ​`find KEYWORD`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "### 2.6 Save and Load"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "This software can save and load the recorded data automatically."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "## 3. Command Summary:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "### `Todo`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Command:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    todo TASK_NAME"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Example:​ "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    todo buy a book"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "```"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "\t[T] [✘] buy a book"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "\tNow you have 1 task(s) in the list"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Please enter your command or enter \"bye\" to exit:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "```"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "### `Deadline`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Command: "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    deadline TASK_NAME /by TIME "
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Example:​ "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    deadline finish iP /by next weekend"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "```"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "\t[D] [✘] finish iP (by: next weekend)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "\tNow you have 2 task(s) in the list"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Please enter your command or enter \"bye\" to exit:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "```"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Example:​ "
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    deadline finish iP /by 2020-03-02"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "```"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "\t[D] [✘] finish iP (by: Mar 2 2020)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "\tNow you have 3 task(s) in the list"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Please enter your command or enter \"bye\" to exit:"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "```"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "### `Event`"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Command:"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    event TASK_NAME /at TIME "
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Example:​ "
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    event watch a moive /at tomorrow"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    "
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "```"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "\t[E] [✘] watch a moive (at: tomorrow)"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "\tNow you have 4 task(s) in the list"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Please enter your command or enter \"bye\" to exit:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "```"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Example:​ "
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    event watch two moives /at 2020-02-21"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "```"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "\t[E] [✘] watch two moives (at: Feb 21 2020)"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "\tNow you have 5 task(s) in the list"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Please enter your command or enter \"bye\" to exit:"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "```"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "### `Done`"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Command: "
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    done TASK_INDEX"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Example:​ "
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    done 2"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "```"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "\tGot it. I\u0027ve marked this task:"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "\t[D] [✓] finish iP (by: next weekend)"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Please enter your command or enter \"bye\" to exit:"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "```"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "### `Delete`"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Command: "
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    delete TASK_INDEX"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Example:​ "
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    delete 2"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "```"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "\tGot it. I\u0027ve remove this task:"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "\t[D] [✓] finish iP (by: next weekend)"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "\tNow you have 4 task(s) in the list"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Please enter your command or enter \"bye\" to exit:"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "```"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "### `List`"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Command: "
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    list"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "```"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "\tHere are the matching tasks in your list:"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "\t1.[T] [✘] buy a book"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "\t2.[D] [✘] finish iP (by: Mar 2 2020)"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "\t3.[E] [✘] watch a moive (at: tomorrow)"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "\t4.[E] [✘] watch two moives (at: Feb 21 2020)"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Please enter your command or enter \"bye\" to exit:"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "```"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    "
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "### `Find`"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Command: "
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    find KEYWORD"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Example:​ "
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    find iP"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    "
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "```"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "\tHere are the matching tasks in your list:"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "\t1.[D] [✘] finish iP (by: Mar 2 2020)"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Please enter your command or enter \"bye\" to exit:"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "RenzoTsai": 261,
      "-": 16
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " * Entry point of Duke application."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " * Initializes the application and starts the interaction with the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            tasks \u003d storage.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /** Runs the application until user enters \"bye\". */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        processCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /** Starts with greeting to the user. */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /** Exits with saying \"bye\" to the user. */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        ui.bye();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /** Reads the user command and execute it until user enters \"bye\". */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void processCommand() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                String fullCommand \u003d ui.getUserCommand();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                Command command \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "RenzoTsai": 70,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.exception.TestDukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " * Adds a task to the task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"add\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static final String TODO_COMMAND_WORD \u003d \"todo\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static final String DEADLINE_COMMAND_WORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static final String EVENT_COMMAND_WORD \u003d \"event\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public AddCommand(String fullCommand, String taskType, String args) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        super(fullCommand, taskType, args);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        Task newTask \u003d addTask(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        ui.printTask(newTask, tasks, \"added\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Processes the todo command and gets the todo task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @return a todo task the user wants to record."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws DukeException if task name missing."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public Todo processToDoDescription() throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        /*Process Todo Exception */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        TestDukeException testTodoException \u003d new TestDukeException(super.fullCommand);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        testTodoException.throwToDoException();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        /*Set up a new Todo Task */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String todoDescription \u003d super.args;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return new Todo(todoDescription);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Processes the deadline command and gets the deadline task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @return a deadline task the user wants to record."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws DukeException if task name or time missing."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public Deadline processDeadlineDescription() throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        /*Process Deadline Exception */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        TestDukeException testDeadlineException \u003d new TestDukeException(super.fullCommand);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        testDeadlineException.throwDeadlineException();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        /*Set up a new Deadline Task */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String[] words \u003d super.args.split(\" /by \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if(words.length \u003c 2){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throw new DukeException(\"Args for deadline is wrong!\" + System.lineSeparator() +"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                    \"\\tPlease input your command in the format of:\" + System.lineSeparator() +"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                    \"\\tdeadline TASK_NAME /by TIME.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String name \u003d words[0];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String time \u003d words[1];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return new Deadline(name, time);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Processes the event command and gets the event task."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @return a event task the user wants to record."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws DukeException if task name or time missing."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public Event processEventDescription() throws DukeException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        /*Process Event Exception */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        TestDukeException testEventException \u003d new TestDukeException(super.fullCommand);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        testEventException.throwEventException();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        /*Set up a new Event Task */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String[] words \u003d super.args.split(\" /at \");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if(words.length \u003c 2){"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throw new DukeException(\"Args for event is wrong!\" + System.lineSeparator() +"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                    \"\\tPlease input your command in the format of\" + System.lineSeparator() +"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                    \"\\tevent TASK_NAME /at TIME.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String name \u003d words[0];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String time \u003d words[1];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return new Event(name, time);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Adds the task into task list."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param tasks the task list."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @return the added task."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws DukeException if something wrong when processes the command."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public Task addTask(TaskList tasks) throws DukeException{"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        boolean isToDo \u003d super.taskType.equalsIgnoreCase(\"todo\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        boolean isDeadline \u003d super.taskType.equalsIgnoreCase(\"deadline\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        boolean isEvent \u003d super.taskType.equalsIgnoreCase(\"event\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        TestDukeException testDukeException \u003d new TestDukeException(super.fullCommand);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if (isToDo) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            newTask \u003d processToDoDescription();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } else if (isDeadline) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            newTask \u003d processDeadlineDescription();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } else if (isEvent) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            newTask \u003d processEventDescription();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            testDukeException.throwTaskTypeException();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            newTask \u003d null;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RenzoTsai": 124
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.exception.TestDukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " * Represents an executable command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    protected String fullCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    protected String args;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    protected boolean isTodo;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    protected boolean isDeadline;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    protected boolean isEvent;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    protected boolean isList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    protected boolean isDelete;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    protected boolean isAdd;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    protected boolean isWrongType;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static final String CUTTING_LINE \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public Command(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public Command(String fullCommand, String taskType, String args){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        this.args \u003d args;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        isTodo \u003d taskType.equalsIgnoreCase(\"todo\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        isDeadline \u003d taskType.equalsIgnoreCase(\"deadline\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        isEvent \u003d taskType.equalsIgnoreCase(\"event\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        isExit \u003d taskType.equalsIgnoreCase(\"bye\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        isList \u003d taskType.equalsIgnoreCase(\"list\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        isDone \u003d taskType.equalsIgnoreCase(\"done\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        isDelete \u003d taskType.equalsIgnoreCase(\"delete\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        isWrongType \u003d !(isTodo || isDeadline || isEvent);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        isAdd \u003d isTodo || isDeadline || isEvent;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Detects whether the command is exit."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @return whether the command is exit."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param tasks the task list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param ui the Duke\u0027s ui."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param storage the Duke\u0027s storage."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws DukeException if something wrong when executing."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RenzoTsai": 68
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " * Deletes a task using it\u0027s index from the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public DeleteCommand(String fullCommand, String taskType, String args) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        super(fullCommand, taskType, args);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        Task taskTobeDeleted \u003d delete(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        ui.printTask(taskTobeDeleted, tasks, \"remove\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Deletes the task from the task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param tasks the task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @return the deleted task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws DukeException if index is out of range."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public Task delete(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        int taskID \u003d Integer.parseInt(super.args);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        /* Exit if enter a wrong task id */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        boolean isWrongID \u003d taskID \u003e tasks.size() || taskID \u003c 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if (isWrongID) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throw new DukeException(\"Your input number is out of range!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        Task taskToBeDeleted \u003d tasks.get(taskID - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        tasks.remove(taskID - 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return taskToBeDeleted;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RenzoTsai": 44
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " * Marks a task as done using it\u0027s index from the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public DoneCommand(String fullCommand, String taskType, String args) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        super(fullCommand, taskType, args);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        Task taskToBeMarked \u003d markAsDone(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        ui.printTask(taskToBeMarked, \"marked\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param tasks the task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @return the marked task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws DukeException if index is out of range."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public Task markAsDone(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if(super.args.length() \u003d\u003d 0){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throw new DukeException(\"Please enter a number!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        int taskID \u003d Integer.parseInt(super.args);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        /* Exit if enter a wrong task id */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        boolean isWrongID \u003d taskID \u003e tasks.size() || taskID \u003c 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if (isWrongID) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throw new DukeException(\"Your input number is out of range!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        Task taskToBeMarked \u003d tasks.get(taskID - 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        taskToBeMarked.markAsDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return taskToBeMarked;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RenzoTsai": 49
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " * Terminates the program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public ExitCommand(String fullCommand, String taskType, String args) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        super(fullCommand, taskType, args);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RenzoTsai": 21
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "/** Gives users a way to find a task by searching for a keyword. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public FindCommand(String fullCommand, String taskType, String args) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        super(fullCommand, taskType, args);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        find(tasks, args, ui);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Finds a task by searching for a keyword."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param tasks task list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param args the keyword"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param ui Duke\u0027s UI"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws DukeException if user do not enter a keyword or find nothing."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void find(TaskList tasks, String args, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        boolean isEmptyKeyword \u003d args.length()\u003d\u003d0;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if(isEmptyKeyword){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throw new DukeException(\"Please enter a keyword.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        int id \u003d 0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        for(Task task: tasks){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            if(task.toString().contains(args)){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                boolean isFirstOne \u003d id \u003d\u003d 0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                if (isFirstOne){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                    ui.printInfoHead(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                id ++;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                ui.printOneTask(task, id);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        boolean isNotFound \u003d id \u003d\u003d 0;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if(isNotFound){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throw new DukeException(\"Not found this keyword.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        ui.printOutputTail();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RenzoTsai": 52
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " * Lists all tasks in the task list to the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public ListCommand(String fullCommand, String taskType, String args) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        super(fullCommand, taskType, args);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "       list(tasks, ui);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Lists tasks in the task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param tasks the task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param ui Duke\u0027s UI."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void list(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        ui.printInfoHead(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        for(Task task: tasks){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            int id \u003d tasks.indexOf(task) + 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            ui.printOneTask(task, id);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        ui.printOutputTail();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RenzoTsai": 37
    }
  },
  {
    "path": "src/main/java/duke/data/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " * Represents Duke\u0027s task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "public class TaskList extends ArrayList\u003cTask\u003e{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void list() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        for (Task task: this) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            int taskID \u003d super.indexOf(task) + 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            System.out.println(\"\\t\" + taskID + \".\" + task.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RenzoTsai": 23
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " * Signals that some exceptions when Duke runs."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public DukeException(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RenzoTsai": 18
    }
  },
  {
    "path": "src/main/java/duke/exception/TestDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " * Tests whether there is a Duke exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "public class TestDukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private boolean isTodo ;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private boolean isDeadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private boolean isEvent;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private String[] words;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public TestDukeException(String message){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        words \u003d this.message.split(\" \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        taskType \u003d words[0];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        isTodo \u003d taskType.equalsIgnoreCase(\"todo\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        isDeadline \u003d taskType.equalsIgnoreCase(\"deadline\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        isEvent \u003d taskType.equalsIgnoreCase(\"event\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Tests whether there is a Todo exception."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws DukeException if todo\u0027s task name missing."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void throwToDoException() throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String[] words \u003d message.split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        boolean isWrongLength \u003d words.length \u003c\u003d 1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if(isWrongLength \u0026\u0026 isTodo){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Tests whether there is a Deadline exception."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws DukeException if deadline\u0027s task name or time missing."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void throwDeadlineException() throws DukeException{"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String[] words \u003d message.split(\" \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        boolean isWrongLength \u003d words.length \u003c\u003d 1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if(isWrongLength \u0026\u0026 isDeadline){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Tests whether there is a Event exception."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws DukeException if Event\u0027s task name or time missing."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void throwEventException() throws DukeException{"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String[] words \u003d message.split(\" \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        boolean isWrongLength \u003d words.length \u003c\u003d 1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if(isWrongLength \u0026\u0026 isEvent){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throw new DukeException(\"The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void throwTaskTypeException() throws DukeException{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RenzoTsai": 62
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " * Parses user input."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param fullCommand full user input command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @return the command based on user input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws DukeException if user input command is invalid."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String taskType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String args;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String[] words;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        words \u003d fullCommand.split(\"\\\\s+\",2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        taskType \u003d words[0];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String taskTypeLowerCase \u003d getTaskTypeLowerCase(taskType);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        args \u003d getArgs(fullCommand, taskType, words);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        switch (taskTypeLowerCase) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        case AddCommand.COMMAND_WORD :"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            return new AddCommand(fullCommand, taskType, args);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        case ListCommand.COMMAND_WORD :"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            return new ListCommand(fullCommand, taskType, args);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        case DeleteCommand.COMMAND_WORD :"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            return new DeleteCommand(fullCommand, taskType, args);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        case DoneCommand.COMMAND_WORD :"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            return new DoneCommand(fullCommand, taskType, args);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        case ExitCommand.COMMAND_WORD :"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            return new ExitCommand(fullCommand, taskType, args);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        case FindCommand.COMMAND_WORD :"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            return new FindCommand(fullCommand, taskType, args);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throw new DukeException(\"Your command cannot be used.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Gets user input\u0027s args."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param fullCommand full user input command."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param taskType the user input task type."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param words full user input\u0027s string array."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @return user input\u0027s args."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private static String getArgs(String fullCommand, String taskType, String[] words) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String args;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        boolean isNotEmpty \u003d words.length \u003e 1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if(isNotEmpty){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            args \u003d fullCommand.replace(taskType + \" \", \"\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            args \u003d \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return args;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Translates user input into task type string in lower case."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param taskType the user input task type."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @return task type string in lower case."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private static String getTaskTypeLowerCase(String taskType) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String taskTypeLowerCase \u003d taskType.toLowerCase();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        boolean isAdd \u003d taskTypeLowerCase.equals(AddCommand.TODO_COMMAND_WORD)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                || taskTypeLowerCase.equals(AddCommand.DEADLINE_COMMAND_WORD)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                || taskTypeLowerCase.equals(AddCommand.EVENT_COMMAND_WORD);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if (isAdd){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            taskTypeLowerCase \u003d AddCommand.COMMAND_WORD;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return taskTypeLowerCase;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RenzoTsai": 81
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.exception.TestDukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " * Saves and loads the file of Duke\u0027s data."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static final String DEFAULT_FILEPATH \u003d \"/data/tasks.txt\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static final String FOLDER_PATH \u003d \"data\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public Storage(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        this(DEFAULT_FILEPATH);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public Storage(String filePath){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Loads the file of Duke\u0027s data."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @return Duke\u0027s task list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws DukeException if file path is wrong."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public TaskList load() throws DukeException{"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            return loadFileContents();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throw new DukeException(\"No data file exits. I will make a new one later!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Uses scanner to get the data in file and gets the stored task list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @return Duke\u0027s task list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws FileNotFoundException if file path is wrong."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public TaskList loadFileContents() throws FileNotFoundException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        checkDir();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        File fileToBeLoad \u003d new File(filePath);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        Scanner s \u003d new Scanner(fileToBeLoad);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        while (s.hasNext()){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            int indexOfCommand \u003d 3;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            String command \u003d s.nextLine().substring(indexOfCommand).replace(\"(\",\"/\")"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                    .replace(\")\",\"\")"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                   ;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            addLoadedTask(command,tasks);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Checks whether the data folder exits. If not, make this dir."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private void checkDir() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        File dir \u003d new File(FOLDER_PATH);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        if(!dir.exists()){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            dir.mkdir();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Translates data into tasks and adds tasks into task list."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param description one single line record in the file."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param tasks the task list"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void addLoadedTask(String description, TaskList tasks){"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String[] words \u003d description.split(\" \",3);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String taskType \u003d words[0];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String taskStatus \u003d words[1];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String args \u003d words[2];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String isDoneIcon \u003d \"[\\u2713]\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        boolean isToDo \u003d taskType.equals(\"[T]\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        boolean isDeadline \u003d taskType.equals(\"[D]\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        boolean isEvent \u003d taskType.equals(\"[E]\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        boolean isDone \u003d taskStatus.equals(isDoneIcon);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        TestDukeException testDukeException \u003d new TestDukeException(description);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            if (isToDo) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                String command \u003d \"todo \" + args;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                newTask \u003d processToDoDescription(command,args);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            } else if (isDeadline) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                String command \u003d \"deadline \" + args;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                newTask \u003d processDeadlineDescription(command,args);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            } else if (isEvent) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                String command \u003d \"event \" + args;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                newTask \u003d processEventDescription(command,args);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                testDukeException.throwTaskTypeException();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                newTask \u003d null;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            if (isDone) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                assert newTask !\u003d null;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "                newTask.markAsDone();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            tasks.add(newTask);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } catch (DukeException dukeException){"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            System.out.println(dukeException.getMessage());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Save task list into a local file."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param tasks the task list"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws DukeException if gets a IOException when saving."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void save(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            writeToFile(tasks);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            throw new DukeException(\"Some thing wrong when saving...\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Writes the task list to the local file."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param tasks the task list."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws IOException if something wrong when writes the file."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void writeToFile(TaskList tasks) throws IOException{"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            int taskID \u003d tasks.indexOf(task) + 1;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            fw.write(taskID + \". \" + task.toString() + System.lineSeparator());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Processes todo\u0027s recorded line in file and translates it into a todo task."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param fullCommand todo\u0027s line recorded in file."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param args todo\u0027s task name."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @return a todo task"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws DukeException if task name missing."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public Todo processToDoDescription(String fullCommand, String args) throws DukeException {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        /*Process Todo Exception */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        TestDukeException testTodoException \u003d new TestDukeException(fullCommand);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        testTodoException.throwToDoException();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        /*Set up a new Todo Task */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String todoDescription \u003d args;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return new Todo(todoDescription);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Processes deadline\u0027s recorded line in file and translates it into a deadline task."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param fullCommand deadline\u0027s line recorded in file."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param args deadline\u0027s task name and time."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @return a deadline task"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws DukeException if deadline\u0027s task name or time missing."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public Deadline processDeadlineDescription(String fullCommand, String args) throws DukeException {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        /*Process Deadline Exception */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        TestDukeException testDeadlineException \u003d new TestDukeException(fullCommand);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        testDeadlineException.throwDeadlineException();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        /*Set up a new Deadline Task */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String[] words \u003d args.split(\" /by: \");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String name \u003d words[0];"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String time \u003d words[1];"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return new Deadline(name, time);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Processes event\u0027s recorded line in file and translates it into a deadline task."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param fullCommand event\u0027s line recorded in file."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param args event\u0027s task name and time."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @return a event task"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @throws DukeException if event\u0027s task name or time missing."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public Event processEventDescription(String fullCommand, String args) throws DukeException {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        /*Process Event Exception */"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        TestDukeException testEventException \u003d new TestDukeException(fullCommand);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        testEventException.throwEventException();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        /*Set up a new Event Task */"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String[] words \u003d args.split(\" /at: \");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String name \u003d words[0];"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String time \u003d words[1];"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return new Event(name, time);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RenzoTsai": 203
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " * Represents a deadline task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private boolean isStandardTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        isStandardTime \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            this.date \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            isStandardTime \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } catch (DateTimeParseException e){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            super.taskType \u003d \"D\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Gets this deadline\u0027s time"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @return the deadline\u0027s time"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Sets this deadline\u0027s time"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void setBy(String by) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String outputTime \u003d isStandardTime? date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) : by;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return \"[D] \" + super.toString() + \" (by: \" + outputTime + \")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RenzoTsai": 49
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " * Represents an event task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private boolean isStandardTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        this.at \u003d time;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        isStandardTime \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            this.date \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            isStandardTime \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } catch (DateTimeParseException e){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            super.taskType \u003d \"E\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Gets this event\u0027s time"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @return the event\u0027s time"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Sets this event\u0027s time"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void setAt(String at) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        String outputTime \u003d isStandardTime? date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) : at;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return \"[E] \" + super.toString() + \" (at: \" + outputTime + \")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RenzoTsai": 49
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public Task(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        this(\"\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public Task(String name){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        setName(name);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Set the name of task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param name the task name."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void setName(String name){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public String getName(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /** Marks the task as done. */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Gets the Status icon of task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @return status icon."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public String getStatusIcon(){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public String getTaskType(){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return getStatusIcon() + \" \" + name;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RenzoTsai": 54
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " * Represents a todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        super.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        super.taskType \u003d \"[T]\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return super.isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return \"[T] \" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RenzoTsai": 23
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " * UI of the application."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static final String CUTTING_LINE \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static final String LOGO \u003d \"\\t _____    _____   __   _   ______  _____  \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            + \"\\t|  _  \\\\  | ____| |  \\\\ | | |___  / /  _  \\\\ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            + \"\\t| |_| |  | |__   |   \\\\| |    / /  | | | | \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            + \"\\t|  _  /  |  __|  | |\\\\   |   / /   | | | | \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            + \"\\t| | \\\\ \\\\  | |___  | | \\\\  |  / /__  | |_| | \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "            + \"\\t|_|  \\\\_\\\\ |_____| |_|  \\\\_| /_____| \\\\_____/ \\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public static final String TAB \u003d \"\\t\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private Scanner in;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    private PrintStream out;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "       this(System.in, System.out);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public Ui(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /** Greets when the user opens the application. */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void greet(){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        out.println(CUTTING_LINE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        out.println(LOGO);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        out.println(\"\\tHello! I\u0027m Renzo\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        out.println(\"\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        printOutputTail();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /** The information shows to the user in the end. */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void printOutputTail() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        out.println(CUTTING_LINE);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        out.println(\"\\nPlease enter your command or enter \\\"bye\\\" to exit:\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**Byes when the user issues to exit. */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void bye(){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        out.println(CUTTING_LINE);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        out.println(\"\\tBye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        out.println(CUTTING_LINE);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Reads the text command entered by the user."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @return command (full line) entered by the user."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public String getUserCommand(){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Prints the error gotten in Duke Exception."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void showError(String e){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        out.println(CUTTING_LINE);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        out.println(\"\\t☹ OOPS!!! \" + e);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        printOutputTail();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Prints the added or deleted task and show the new size of task list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param newTask the added or deleted task."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param tasks the task list."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param taskType  the task type of this command."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void printTask(Task newTask, TaskList tasks, String taskType) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        out.println(CUTTING_LINE);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        out.println(\"\\tGot it. I\u0027ve \"+ taskType+ \" this task:\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        out.println(TAB + newTask.toString());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        out.printf(\"\\tNow you have %d task(s) in the list\\n\", tasks.size());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        printOutputTail();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Prints the modified task."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param newTask the modified task."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param taskType  the task type of this command."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void printTask(Task newTask, String taskType) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        out.println(CUTTING_LINE);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        out.println(\"\\tGot it. I\u0027ve \"+ taskType+ \" this task:\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        out.println(TAB + newTask.toString());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        printOutputTail();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Prints one task to the user."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param task the task to print."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param ID the task ID."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void printOneTask(Task task, int ID) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        out.println(TAB + ID + \".\" + task.toString());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * Prints some information head."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     * @param infoHead some information depends on different task type"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    public void printInfoHead(String infoHead) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        out.println(CUTTING_LINE);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "        out.println(TAB +infoHead);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RenzoTsai": 118
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "todo buy books"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "deadline finish project /by Friday Morning"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "Deadline finish homework /by Friday Afternoon"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "blah"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "RenzoTsai": 16
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/task/*.java ../src/main/java/duke/exception/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RenzoTsai"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "RenzoTsai": 34
    }
  }
]

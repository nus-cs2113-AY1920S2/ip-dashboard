[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "yantingsanity": 2,
      "-": 37
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "Ting\u0027s duke is an application for those who \u003cb\u003eprefer to use a desktop app for managing tasks\u003c/b\u003e. More importantly, it is \u003cb\u003eoptimised for those who prefer to work with a Command Line Interface (CLI) \u003c/b\u003e. Would you like to start playing with this new task manager? :smiles:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "## 2. Features "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "### 2.1 Listing the tasks: `list`"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "This lists out the current tasks that you have inserted into the application."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "#### `list` - lists out the tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "`Here are the tasks in your list:`\u003cbr\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " `1. [E][✗] hello world  (at: Jan 1 2020)`\u003cbr\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " `2. [T][✓] math homework`\u003cbr\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " `3. [D][✗] essay  (by: Jan 2 2019)`"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "### 2.2 Marking a task as done: `done`"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "This allows you to mark a task as completed once you have finished it."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "#### `done` - mark a task as done"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "Use `list` to view the list of the tasks and choose the number for the task that you have completed by doing this `done \u003cINDEX\u003e`."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "`list`\u003cbr\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "`done 2`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "`Here are the tasks in your list:`\u003cbr\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " `1. [E][✗] hello world  (at: Jan 1 2020)`\u003cbr\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " `2. [T][✗] math homework`\u003cbr\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " `3. [D][✗] essay  (by: Jan 2 2019)`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "After listing as shown above, mark the second item on the list as done and the following will be shown: \u003cbr\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "`Nice! I have marked this task as done:`\u003cbr\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " `[T][✓] math homework ` \u003cbr\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "### 2.3 Delete task from the list: `delete`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "This allows you to delete a task from the list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "#### `delete` - delete the specified task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " Use `list` to view the list of the tasks and choose the number for the task that you want to delete by doing this `delete \u003cINDEX\u003e`."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " Example of usage: "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " `list` \u003cbr\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " `delete 1`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " Expected outcome:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "`Here are the tasks in your list:`\u003cbr\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " `1. [E][✗] hello world  (at: Jan 1 2020)`\u003cbr\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " `2. [T][✓] math homework`\u003cbr\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " `3. [D][✗] essay  (by: Jan 2 2019)`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "After listing as shown above, first item will be deleted and the following will be shown: \u003cbr\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "`[E][✓] hello world  (at: Jan 1 2020) has been deleted!`\u003cbr\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "`Now you have 2 tasks in the list.`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "  "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "### 2.4 Finding a task: `find`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "This allows you to find a specific task from the list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "#### `find` - finding a specific task from the list"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "Use `find` to find the task."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " Example of usage: "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " `find essay`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " Expected outcome:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " `1. [D][✓] essay  (by: Jan 2 2019 12:00)`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "### 2.5 Adding tasks into the application"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "In this Ting\u0027s duke, you will be able add three different type of tasks into the tasks list.  "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "#### 2.5.1 Adding a ToDo task: `todo`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "This allows you to add in a ToDo task. A ToDo task only consists of task description."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "#### `todo TASK_NAME` - add in a ToDo task"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "Use `todo TASK_NAME` to add in a task"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " Example of usage: "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " `todo math homework`"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " Expected outcome:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "`Got it. I\u0027ve added this task:`\u003cbr\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " `[T][✗] math homework`\u003cbr\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " `Now you have 7 tasks in the list.`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "#### 2.5.2 Adding a Deadline task: `deadline`"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "This allows you to add in a Deadline task. A Deadline task consists of task description, date and time that the task need to be submitted."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "#### `deadline TASK_NAME /by TASK_DATE [TASK_TIME]` - add in a Deadline task"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "Use `deadline TASK_NAME /by TASK_DATE [TASK_TIME]` to add in a task"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " TASK_NAME: name of the task\u003cbr\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " TASK_DATE: date by which the task needs to be submitted in this format of `yyyy-mm-dd` \u003cbr\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " TASK_TIME: (optional) time by which the task needs to be submitted in this format `hh:mm`\u003cbr\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": " Example of usage: "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " `deadline CS2113T iP week 6 /by 2020-02-02 13:00`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": " Expected outcome:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "`Got it. I\u0027ve added this task:`\u003cbr\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "`[D][✗] CS2113T iP week 6  (by: Feb 2 2020 13:00)`\u003cbr\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "`Now you have 8 tasks in the list.`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "#### 2.5.3 Adding an Event task: `event`"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "This allows you to add in an Event task. An Event task consists of event description, date and time of the event.."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " "
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "#### `event EVENT_NAME /at EVENT_DATE [EVENT_TIME]` - add in an Event task"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "Use `event EVENT_NAME /at EVENT_DATE [EVENT_TIME]` to add in an Event task"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " EVENT_NAME: name of the event\u003cbr\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " EVENT_DATE: date of the event in this format of `yyyy-mm-dd` \u003cbr\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " EVENT_TIME: (optional) time of the event in this format `hh:mm`\u003cbr\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " Example of usage: "
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " `event Colours\u0027 Run /at 2019-11-02 09:00`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " "
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " Expected outcome:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "`Got it. I\u0027ve added this task:`\u003cbr\u003e"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " `[E][✗] Colours\u0027 Run  (at: Nov 2 2019 09:00)`\u003cbr\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " `Now you have 9 tasks in the list.`\u003cbr\u003e"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " "
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "### 2.6 End the program: `bye`"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "This will terminate the program."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " "
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "#### `bye` - end the program"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " "
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " Use `bye` to terminate the program."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " "
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " Expected outcome:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " `BYE BYE SEE YOU SOON!`"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " "
      }
    ],
    "authorContributionMap": {
      "yantingsanity": 149,
      "-": 18
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "E,0,helloWrold ,2020-12-12"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "E,0,Colour ,2020-01-21"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "T,0,homework"
      }
    ],
    "authorContributionMap": {
      "yantingsanity": 3
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import duke.Parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import duke.Storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import duke.TaskList.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import duke.UI.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import duke.exceptions.InvalidInputException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * \u003ch1\u003eDuke\u003c/h1\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * The Duke program allows users to manage their tasks by"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * adding, editing and deleting their tasks from the task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * @author  Lim Yan Ting"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * @version 2.0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * @since   2020-03-01"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public static Storage storage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    private static TaskList totalTasks;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    private static UI ui;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    private static Parser newParser;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Initialise the Duke application with new Storage and UI."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Loading lists from a current file"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public static void initialise() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        storage \u003d new Storage(\"\\\\duke.txt\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            totalTasks \u003d storage.loadFile();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            ui.getErrorMessage(\"fileIO\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            totalTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Starts the program. Program will terminate once isBye \u003d\u003d true."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public static void run() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        boolean isBye \u003d false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        newParser \u003d new Parser(totalTasks);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        while (!isBye) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            String userInput \u003d ui.getUserInput();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            newParser.readUserInput(userInput);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                newParser.executeCommand();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                isBye \u003d newParser.isBye();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            } catch (InvalidInputException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                ui.getErrorMessage(\"invalidInput\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                ui.getErrorMessage(\"indexOutOfBounds\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            System.out.println(\"____________________________________________________________________\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Close the Duke application with a \"bye\"."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public static void end() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        ui.closeInput();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public static void main(String [] args) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        initialise();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        run();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        end();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yantingsanity": 82,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "package duke.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import duke.TaskList.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import duke.TaskList.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import duke.TaskList.task.commands.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import duke.TaskList.task.commands.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import duke.TaskList.task.commands.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import duke.UI.UI;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import duke.exceptions.InvalidInputException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import static duke.Duke.storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * \u003ch1\u003eParser\u003c/h1\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * This class retrieves the user command from the I/O and parses"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * it in a way where the application will be able to make sense"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * of the command and execute them."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * @author  Lim Yan Ting"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * @version 2.0"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * @since   2020-03-01"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    String userCommand \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    String [] taskStrings;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    String [] taskDescriptions;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    private static TaskList totalTasks;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public Parser(TaskList newTasks){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        totalTasks \u003d newTasks;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Returns true if user has inputted \"bye\" to terminate the program."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Else returns false if user has not inputted \"bye\"."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return true if user inputted bye, else false"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public boolean isBye() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        if (this.userCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Read in the user input and split them into different strings."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public void readUserInput(String userInput) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        this.taskStrings \u003d userInput.split(\"/\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        this.userCommand \u003d userInput;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Execute the command based on the user input."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @throws InvalidInputException  If userCommand is not any valid command."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @throws IndexOutOfBoundsException If there are less/more arguments for the commands"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public void executeCommand() throws InvalidInputException, IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        if (isBye() \u003d\u003d false) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            if (this.userCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                listCommand(this.totalTasks);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                this.taskDescriptions \u003d this.taskStrings[0].split(\" \", 2);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                if (this.userCommand.contains(\"done\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                    this.totalTasks.setTaskDone(this.userCommand);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                } else if (this.userCommand.contains(\"delete\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                    this.totalTasks.deleteTask(this.userCommand);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                } else if (this.userCommand.contains(\"find\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                    this.totalTasks.findTasks(taskDescriptions[1]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                } else if (this.userCommand.contains(\"todo\") || this.userCommand.contains(\"event\")"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                            || this.userCommand.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                    taskCommand(this.totalTasks);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                    throw new InvalidInputException();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                storage.writeToFile(this.totalTasks);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Return the date of the task in String format."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return the date of the task in String format"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @throws IndexOutOfBoundsException  If taskStrings only has one value after the split"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public String getTaskDate() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        return this.taskStrings[1].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Creates a new task of the following types (todo, event, deadline)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * based on the user command."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @param totalTasks the current list of tasks"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @throws InvalidInputException  If commands are invalid"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public void taskCommand(TaskList totalTasks) throws InvalidInputException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            switch (this.taskDescriptions[0].trim()) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                newTask \u003d new ToDo(taskDescriptions[1]);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                newTask \u003d new Event(taskDescriptions[1], getTaskDate());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                newTask \u003d new Deadline(taskDescriptions[1], getTaskDate());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                throw new InvalidInputException();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            totalTasks.addNewTask(newTask, \"new\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            totalTasks.printTotalSize();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            UI.getErrorMessage(\"missingParam\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        } catch (DateTimeParseException e){"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            UI.getErrorMessage(\"dateTime\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Prints out all the tasks that are currently in the list."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @param totalTasks the current list of tasks"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public void listCommand(TaskList totalTasks) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            totalTasks.printTaskList();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        } catch (NullPointerException e){"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            UI.getErrorMessage(\"zeroTasks\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yantingsanity": 153
    }
  },
  {
    "path": "src/main/java/duke/Storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "package duke.Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import duke.TaskList.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import duke.TaskList.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import duke.TaskList.task.commands.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import duke.TaskList.task.commands.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import duke.TaskList.task.commands.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import duke.UI.UI;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * \u003ch1\u003eStorage\u003c/h1\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * The Storage class deals with the input and output functions"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * of the \"duke.txt\" file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * @author  Lim Yan Ting"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * @version 2.0"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * @since   2020-03-01"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public boolean doesFileExist;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    String pathToFile \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    String homePath \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        this.pathToFile \u003d filePath;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        this.doesFileExist \u003d checkIfFileExists();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Creates a new \"duke.txt\" file if it cannot be found."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public void createFile() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        String filepath \u003d this.homePath + \"\\\\duke.txt\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        File newFile \u003d new File(filepath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            newFile.createNewFile();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            UI.getErrorMessage(\"fileCreation\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        this.pathToFile \u003d filepath;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Returns true if the file exists."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Else, return false."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return true if file exists, else false."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public boolean checkIfFileExists() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        String filepath \u003d this.homePath + this.pathToFile;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        this.doesFileExist \u003d new java.io.File(filepath).exists();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        this.pathToFile \u003d filepath;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        return this.doesFileExist;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Returns the list of tasks loaded from \"duke.txt\"."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return list of tasks loaded from file"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @throws FileNotFoundException  If file cannot be found."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public TaskList loadFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        TaskList newTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        File f \u003d new File(this.pathToFile);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            String newLine \u003d s.nextLine();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            String[] contents \u003d newLine.split(\",\", 4);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            Task newTask \u003d null;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            switch (contents[0]) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                newTask \u003d new ToDo(contents[2]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                newTask \u003d new Event(contents[2], contents[3]);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                newTask \u003d new Deadline(contents[2], contents[3]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            if (contents[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                newTask.setTaskAsDone();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            newTasks.addNewTask(newTask, \"load\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        return newTasks;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Returns lateral location of the specified position."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * If the position is unset, NaN is returned."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @param listToSave current list of tasks to save into file"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @catch IOException if file cannot be opened or written to."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "  "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public void writeToFile(TaskList listToSave) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        if (!this.doesFileExist) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            createFile();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.pathToFile);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            String stringToWrite \u003d \"\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            for (Task task : listToSave.totalTasks) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                String status \u003d \"\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                if (task.getTaskStatus() \u003d\u003d \"✓\") {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                    status \u003d \"1\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                    status \u003d \"0\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                switch (task.getTaskType()) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                case \u0027T\u0027:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                    stringToWrite \u003d task.getTaskType() + \",\" + status + \",\" + task.getTaskDescription() + \"\\n\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                case \u0027E\u0027:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                case \u0027D\u0027:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                    stringToWrite \u003d task.getTaskType() + \",\" + status + \",\" + task.getTaskDescription() + \",\" +"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                            task.getDateTimeStringForFile() + \"\\n\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                fw.write(stringToWrite);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            UI.getErrorMessage(\"fileIOModified\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yantingsanity": 147
    }
  },
  {
    "path": "src/main/java/duke/TaskList/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "package duke.TaskList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import duke.TaskList.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import duke.UI.UI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * \u003ch1\u003eTaskList\u003c/h1\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * The TaskList class deals with the different functions"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * related to the Task such as adding, editing and deleting."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * @author  Lim Yan Ting"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * @version 2.0"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * @since   2020-03-01"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public static ArrayList\u003cTask\u003e totalTasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Initialise an ArrayList for tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        totalTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Prints out all the tasks in the current list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public void printTaskList() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            if (totalTasks.size() \u003e 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                int index \u003d 0;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                for (Task task : totalTasks){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                    System.out.println((++index) + \". \" + task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            UI.getErrorMessage(\"zeroTasks\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Adds a new task to the current list of tasks."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * If addType \u003d \"load\", do not print any statements."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @param newTask the new task to be added"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public void addNewTask(Task newTask, String addType) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        if (!addType.equals(\"load\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            System.out.println(newTask);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        totalTasks.add(newTask);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Prints the size of the current list of tasks."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public void printTotalSize() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        System.out.println(\"Now you have \" + totalTasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Gets the index of the task that the user specified"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @param userCommand the command that the user has inputted"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return returns index which is an ID of the task specified, else -1 if there are no tasks in list"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public int getTaskID(String userCommand) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        String [] inputStrings \u003d userCommand.split(\" \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        if (inputStrings.length \u003e 1) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            int index \u003d Integer.parseInt(inputStrings[1].trim()) - 1;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            return index;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Sets a task as done with a tick."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @param userCommand the command that the user has inputted"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public void setTaskDone(String userCommand) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        int taskNum \u003d getTaskID(userCommand);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            Task task \u003d totalTasks.get(taskNum);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            task.setTaskAsDone();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            System.out.println(\"Nice! I have marked this task as done: \\n\" + task);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            UI.getErrorMessage(\"updateIndex\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Deletes a task."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @param userCommand the command that the user has inputted"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public void deleteTask(String userCommand) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        int taskNum \u003d getTaskID(userCommand);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            Task task \u003d totalTasks.get(taskNum);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            task.setTaskAsDone();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            System.out.println(task + \" has been deleted!\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            totalTasks.remove(taskNum);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            printTotalSize();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            UI.getErrorMessage(\"deleteIndex\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Finds a specific task with the given keyword supplied by the user."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @param findString the keyword that user supplied"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public void findTasks(String findString) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        for (Task newTask : totalTasks) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            if (newTask.getTaskDescription().contains(findString)) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                System.out.println((++index) + \". \" + newTask);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        if (index \u003d\u003d 0) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            System.out.println(\"There are no tasks with that keyword! :(\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yantingsanity": 150
    }
  },
  {
    "path": "src/main/java/duke/TaskList/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "package duke.TaskList.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * \u003ch1\u003eTask\u003c/h1\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * The Task class contains the descriptions"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * of a single task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * @author  Lim Yan Ting"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * @version 2.0"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * @since   2020-02-29"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Set the isDone variable as done, indicating that the"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * task is done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public void setTaskAsDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Gets the status of the task in terms of ticks and crosses."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return ✓ if task is done, else ✗"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public String getTaskStatus() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        if (isDone \u003d\u003d true){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            return \"✓\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            return \"✗\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Gets the description of the task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return task description"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public String getTaskDescription() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Gets the type of the task (deadline, event, todo)."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return the task type (T, E or D)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public char getTaskType() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        return 0;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Gets the date for this task in terms of String format (yyyy-MM-dd HH:mm)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return date for the task."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public String getDateTimeStringForFile() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    };"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Gets the date for this task in terms of String format (MMM d yyyy)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return date for the task."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public String getDateTimeStringForDuke() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    };"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yantingsanity": 86
    }
  },
  {
    "path": "src/main/java/duke/TaskList/task/commands/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "package duke.TaskList.task.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import duke.TaskList.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import duke.UI.UI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * \u003ch1\u003eDeadline\u003c/h1\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * The Deadline class contains the descriptions and functions"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * of a Deadline task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * @author  Lim Yan Ting"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * @version 2.0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * @since   2020-03-01"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    private char taskType;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    private LocalDateTime deadlineDateTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    private LocalDate deadlineDateOnly;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    DateTimeFormatter dateTimeFormat2 \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    DateTimeFormatter dateFormat2 \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public Deadline(String description, String date) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        taskType \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        getDateTime(date);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Converts the String dateTime into a LocalDateTime object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @param date the date and time in String"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @throws DateTimeParseException if the date and time are not in the correct format"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public void getDateTime(String date) throws DateTimeParseException{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        String[] dateTimeSplit \u003d date.split(\" \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        if (dateTimeSplit.length \u003e 1) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            date \u003d dateTimeSplit[0] + \"T\" + dateTimeSplit[1];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            deadlineDateTime \u003d LocalDateTime.parse(date, DateTimeFormatter.ISO_DATE_TIME);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            deadlineDateOnly \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Prints out the details of the Deadline task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return a string containing all the details of Deadline task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        return \"[\" + taskType + \"][\" + super.getTaskStatus() + \"] \" + super.getTaskDescription() +"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                \" (by: \" + getDateTimeStringForDuke() + \")\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Gets the task type which is \"D\" for this task."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return D since it is Deadline task."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public char getTaskType() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        return this.taskType;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Gets the date for this Deadline task in terms of String format (yyyy-MM-dd HH:mm)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * This is used to save into our output file."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return date for the task."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public String getDateTimeStringForFile() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        if (deadlineDateTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            return deadlineDateOnly.format(dateFormat);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            return deadlineDateTime.format(dateTimeFormat);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Gets the date for this Deadline task in terms of String format (MMM d yyyy)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return date for the task."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public String getDateTimeStringForDuke() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        if (deadlineDateTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            return deadlineDateOnly.format(dateFormat2);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            return deadlineDateTime.format(dateTimeFormat2);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yantingsanity": 108
    }
  },
  {
    "path": "src/main/java/duke/TaskList/task/commands/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "package duke.TaskList.task.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import duke.TaskList.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import duke.UI.UI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * \u003ch1\u003eEvent\u003c/h1\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * The Event class contains the descriptions and functions"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * of a Event task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * @author  Lim Yan Ting"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * @version 2.0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * @since   2020-03-01"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    private char taskType;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    private LocalDateTime eventDateTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    private LocalDate eventDateOnly;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    DateTimeFormatter dateTimeFormat2 \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    DateTimeFormatter dateFormat2 \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public Event(String description, String date) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        taskType \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        getDateTime(date);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Converts the String dateTime into a LocalDateTime object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @param date the date and time in String"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @throws  DateTimeParseException if the date and time are not in the correct format"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public void getDateTime(String date) throws DateTimeParseException{"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        String [] dateTimeSplit \u003d date.split(\" \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        if (dateTimeSplit.length \u003e 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            date \u003d dateTimeSplit[0] + \"T\" + dateTimeSplit[1];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            eventDateTime \u003d LocalDateTime.parse(date, DateTimeFormatter.ISO_DATE_TIME);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            eventDateOnly \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Prints out the details of the Event task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return a string containing all the details of Event task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        return \"[\" + taskType + \"][\" + super.getTaskStatus() + \"] \" + super.getTaskDescription() +"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                \" (at: \" + getDateTimeStringForDuke() + \")\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Gets the task type which is \"E\" for this task."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return E since it is Event task."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public char getTaskType() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        return this.taskType;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Gets the date for this Event task in terms of String format (yyyy-MM-dd HH:mm)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * This is used to save into our output file."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return date for the task."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public String getDateTimeStringForFile(){"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        if (eventDateTime \u003d\u003d null){"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            return eventDateOnly.format(dateFormat);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            return eventDateTime.format(dateTimeFormat);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Gets the date for this Event task in terms of String format (MMM d yyyy)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return date for the task."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public String getDateTimeStringForDuke(){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        if (eventDateTime \u003d\u003d null){"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            return eventDateOnly.format(dateFormat2);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            return eventDateTime.format(dateTimeFormat2);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yantingsanity": 109
    }
  },
  {
    "path": "src/main/java/duke/TaskList/task/commands/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "package duke.TaskList.task.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import duke.TaskList.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * \u003ch1\u003eToDo\u003c/h1\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * The ToDo class contains the descriptions and functions"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * of a Todo task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * @author  Lim Yan Ting"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * @version 2.0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * @since   2020-02-24"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    private char taskType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        taskType \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Prints out the details of the ToDo task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return a string containing all the details of ToDo task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        return \"[\" + taskType + \"][\" + super.getTaskStatus() + \"] \" + super.getTaskDescription();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Gets the task type which is \"T\" for this task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return T since it is ToDo task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public char getTaskType() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        return this.taskType;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yantingsanity": 43
    }
  },
  {
    "path": "src/main/java/duke/UI/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "package duke.UI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * \u003ch1\u003eUI\u003c/h1\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * This class simply handles all the user inputs and outputs of"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * the Duke application."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " *  *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * @author  Lim Yan Ting"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * @version 2.0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * @since   2020-02-24"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    private static Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public UI(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        getWelcomeMessage();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Prints out the welcome message for the Duke application"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public static void getWelcomeMessage() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        String logo \u003d \"  __  .__             /\\\\            .___     __           \\n\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                \"_/  |_|__| ____    ___)/ ______   __| _/_ __|  | __ ____  \\n\" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                \"\\\\   __\\\\  |/    \\\\  / ___\\\\/  ___/  / __ |  |  \\\\  |/ // __ \\\\ \\n\" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                \" |  | |  |   |  \\\\/ /_/  \u003e___ \\\\  / /_/ |  |  /    \u003c\\\\  ___/ \\n\" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                \" |__| |__|___|  /\\\\___  /____  \u003e \\\\____ |____/|__|_ \\\\\\\\___  \u003e\\n\" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                \"              \\\\//_____/     \\\\/       \\\\/          \\\\/    \\\\/ \";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        System.out.println(\"What can I do for you, today?\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        System.out.println(\"____________________________________________________________________\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Prints out the help message for the Duke application+"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public static void getHelpMessage() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        String helpMessage \u003d \"\\nHere are some help for you!! :) \\n\" +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                \"1) list: List out all the tasks in your list \\n\" +"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                \"2) Creation of tasks into list:\\n\" +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                \"   a) todo \u003ctodo_task\u003e\\n\" +"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                \"   b) deadline \u003cdeadline_task\u003e /by \u003cdeadline date\u003e \u003cdeadline time\u003e\\n\" +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                \"   c) event \u003cevent_name\u003e /at \u003cevent date\u003e \u003cevent time\u003e\\n\" +"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                \"3) done \u003cindex\u003e: To indicate that the task is done\\n\" +"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                \"4) delete \u003cindex\u003e: To delete a task\\n\" +"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                \"5) find \u003ckeyword\u003e: To find specific tasks in the tasks list\\n\" +"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "                \"6) bye: To end the program\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        System.out.println(helpMessage);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Returns the command that the user has entered."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Used to get the user input."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @return the command that the user has inputted"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public static String getUserInput() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        String userInput \u003d input.nextLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Close the Scanner object and print out the \"bye\" to indicate that"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * application has ended."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public static void closeInput() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        System.out.println(\"BYE BYE SEE YOU SOON!\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        input.close();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * Prints out error message based on the type of exception encountered."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     * @param type the type of exception encountered"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public static void getErrorMessage(String type) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        case \"fileIO\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            System.out.println(\"File cannot be found! Created a new file instead.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        case \"invalidInput\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            System.out.println(\"You have entered an invalid command!\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            getHelpMessage();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        case \"zeroTasks\":"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            System.out.println(\"There is currently no tasks in the list!\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        case \"missingParam\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            System.out.println(\"There is a missing parameter in your input!\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            getHelpMessage();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        case \"indexOutOfBounds\":"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            System.out.println(\"Please choose a correct index/key in a word for us to search!\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        case \"fileCreation\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            System.out.println(\"File cannot be created!\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        case \"fileIOModified\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            System.out.println(\"Error with the file!\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        case \"dateTime\":"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            System.out.println(\"Please key in the date in the correct format of yyyy-mm-dd hh:mm, thank you!\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        case \"deleteIndex\":"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            System.out.println(\"Please provide an appropriate index to delete!\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        case \"updateIndex\":"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            System.out.println(\"Please provide an appropriate index to update!\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "            getHelpMessage();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yantingsanity": 127
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * \u003ch1\u003eInvalidInputException\u003c/h1\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * The class deals with the exception when users entered an incorrect command."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * @author  Lim Yan Ting"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * @version 2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " * @since   2020-02-24"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "public class InvalidInputException extends Exception {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    public InvalidInputException(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yantingsanity": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "event Colours\u0027 Run /at 2019-11-02 09:00"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "deadline programming /by 2020-11-12"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "yantingsanity": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\exceptions\\InvalidInputException.java ..\\src\\main\\java\\duke\\exceptions\\InvalidListSizeException.java ..\\src\\main\\java\\duke\\UI\\UI.java ..\\src\\main\\java\\duke\\TaskList\\TaskList.java ..\\src\\main\\java\\duke\\TaskList\\task\\Task.java ..\\src\\main\\java\\duke\\TaskList\\task\\commands\\Event.java ..\\src\\main\\java\\duke\\TaskList\\task\\commands\\ToDo.java ..\\src\\main\\java\\duke\\TaskList\\task\\commands\\Deadline.java ..\\src\\main\\java\\duke\\Storage\\Storage.java ..\\src\\main\\java\\duke\\Parser\\parser.java  ..\\src\\main\\java\\duke\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yantingsanity"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "yantingsanity": 21
    }
  }
]

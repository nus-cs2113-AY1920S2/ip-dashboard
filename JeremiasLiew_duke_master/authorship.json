[
  {
    "path": "src/main/java/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import common.exceptions.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": " * The Command class stores all information needed, in a format that is easy for the"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": " * chatbot to understand and execute. Certain variables are optional as they are not"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": " * needed for all command types."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    private final String commandType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    private final Optional\u003cString\u003e description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    private final Optional\u003cString\u003e check;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    private final Optional\u003cLocalDate\u003e date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    private final Optional\u003cLocalTime\u003e time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    private final Optional\u003cDukeException\u003e e;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public Command(String commandType) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.commandType \u003d commandType;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.description \u003d Optional.empty();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.check \u003d Optional.empty();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.date \u003d Optional.empty();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.time \u003d Optional.empty();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.e \u003d Optional.empty();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public Command(String commandType, Optional\u003cString\u003e description) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.commandType \u003d commandType;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.check \u003d Optional.empty();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.date \u003d Optional.empty();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.time \u003d Optional.empty();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.e \u003d Optional.empty();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public Command(String commandType, Optional\u003cString\u003e description, Optional\u003cString\u003e check, "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                   Optional\u003cLocalDate\u003e date, Optional\u003cLocalTime\u003e time) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.commandType \u003d commandType;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.check \u003d check;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.e \u003d Optional.empty();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public Command(DukeException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.commandType \u003d \"exception\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.description \u003d Optional.empty();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.check \u003d Optional.empty();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.date \u003d Optional.empty();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.time \u003d Optional.empty();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.e \u003d Optional.of(e);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public String getCommandType() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return this.commandType;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public Optional\u003cString\u003e getDescription() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public Optional\u003cString\u003e getCheck() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return this.check;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public Optional\u003cLocalDate\u003e getDate() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public Optional\u003cLocalTime\u003e getTime() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public DukeException getException() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return this.e.get();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremiasLiew": 83
    }
  },
  {
    "path": "src/main/java/commands/CommandExecution.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.time.Period;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import common.exceptions.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import common.tasks.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import common.tasks.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import common.tasks.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import common.tasks.ToDo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "public class CommandExecution {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public ArrayList\u003cTask\u003e removedTasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Constructor for CommandExecution class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Handles all the execution and validation of commands."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param tasks List of tasks that references TaskList."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param removedTasks List of removed tasks that references TaskList."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public CommandExecution(ArrayList\u003cTask\u003e tasks, ArrayList\u003cTask\u003e removedTasks) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.removedTasks \u003d removedTasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Searches the current tasks for a particular substring and outputs a list of"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * all tasks that contain the substring."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param command Command containing the substring to be found."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @return msg String representation of a list of all tasks containing the substring."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public String findTask(Command command) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        CommandValidation.validate(command, \"find\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        Optional\u003cString\u003e commandDescription \u003d command.getDescription();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        String toFind \u003d commandDescription.get();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            if (task.getDescription().contains(toFind)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                foundTasks.add(task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        String msg \u003d listFound(foundTasks);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Formats the list of found tasks into a proper chatbot reply."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param list List of found tasks."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @return msg Properly formatted chatbot reply."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public String listFound(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        String msg \u003d \"\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        // accesses the list"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            msg \u003d \"No matching tasks found!\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            msg \u003d \"Here are the matching tasks in your list:\" + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            msg +\u003d \u0027\\n\u0027;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            for (Task s : list) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                msg +\u003d \"    \" + counter + \". \" + s.toString();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                msg +\u003d \u0027\\n\u0027;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Clear all tasks, including stored tasks."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @return msg Chatbot reply acknowledging that the command has been executed."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public String clearAll() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        tasks.removeAll(tasks);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        String msg \u003d \"All tasks have been cleared.\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Shows upcoming tasks within the number of days specified in the input command,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * and outputs a list of all such tasks."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param command Command containing the timeframe in days."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @return msg String representation of a list of all upcoming tasks in the time frame."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public String showUpcoming(Command command) throws DukeException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        CommandValidation.validate(command, \"show\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        Optional\u003cString\u003e commandDescription \u003d command.getDescription();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        int days \u003d Integer.valueOf(commandDescription.get());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        ArrayList\u003cTask\u003e upcomingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        LocalDate today \u003d LocalDate.now();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            if (task.getOptionalDate().isPresent()) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                LocalDate date \u003d task.getDate();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                Period period \u003d Period.between(today, date);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                if (period.getDays() \u003c\u003d days \u0026\u0026 period.getDays() \u003e\u003d 0) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    upcomingTasks.add(task);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        Collections.sort(upcomingTasks);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        String msg \u003d listUpcoming(upcomingTasks, days);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Formats the list of upcoming tasks into a proper chatbot reply."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param list List of upcoming tasks."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param days Timeframe of upcoming tasks."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @return msg Properly formatted chatbot reply."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public String listUpcoming(ArrayList\u003cTask\u003e list, int days) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        String msg \u003d \"\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        // accesses the list"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            if (days \u003d\u003d 0) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                msg \u003d \"Great! No upcoming tasks today! :)\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                msg \u003d \"Great! No upcoming tasks within \" + days + \" day(s)! :)\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            if (days \u003d\u003d 0) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                msg \u003d \"Here are the upcoming tasks today:\" + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                msg \u003d \"Here are the upcoming tasks within \" + days + \" day(s):\" + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            msg +\u003d \u0027\\n\u0027;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            for (Task s : list) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                msg +\u003d \"    \" + counter + \". \" + s.toString();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                msg +\u003d \u0027\\n\u0027;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Shows all overdue tasks that have not been completed, and outputs "
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * a list of all such tasks."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param command Command to be executed."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @return msg String representation of a list of all overdue tasks."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public String showOverdue(Command command) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        ArrayList\u003cTask\u003e overdueTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        LocalDate today \u003d LocalDate.now();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            if (task.getOptionalDate().isPresent()) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                LocalDate date \u003d task.getDate();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                if (date.isBefore(today) \u0026\u0026 !task.isDone()) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    overdueTasks.add(task);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        Collections.sort(overdueTasks);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        String msg \u003d listOverdue(overdueTasks);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Formats the list of overdue tasks into a proper chatbot reply."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param list List of overdue tasks."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @return msg Properly formatted chatbot reply."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public String listOverdue(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        String msg \u003d \"\";"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        // accesses the list"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            msg \u003d \"Great! No uncompleted overdue tasks! :)\";"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            msg \u003d \"Here are the uncompleted overdue tasks:\" + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            msg +\u003d \u0027\\n\u0027;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            for (Task s : list) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                msg +\u003d \"    \" + counter + \". \" + s.toString();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                msg +\u003d \u0027\\n\u0027;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Remove all completed tasks."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @return msg Chatbot reply acknowledging that the command has been executed."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public String removeCompleted() {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        ArrayList\u003cTask\u003e completedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            if (task.isDone()) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                completedTasks.add(task);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                removedTasks.add(task);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        tasks.removeAll(completedTasks);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        String msg \u003d \"All completed tasks have been removed\";"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Removes all tasks that have passed, regardless of if the task has been"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * completed or not."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @return msg Chatbot reply acknowledging that the command has been executed."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public String removePast() {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        ArrayList\u003cTask\u003e pastTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        LocalDate today \u003d LocalDate.now();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            if (task.getOptionalDate().isPresent()) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                LocalDate date \u003d task.getDate();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                if (date.isBefore(today)) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    pastTasks.add(task);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        tasks.removeAll(pastTasks);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        String msg \u003d \"All past tasks have been removed\";"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Sets an undone task as done."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param command Command to be executed."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @return msg Chatbot reply acknowledging that the command has been executed."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public String makeDone(Command command) throws DukeException {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        CommandValidation.validate(command, \"done\", tasks);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        Optional\u003cString\u003e commandDescription \u003d command.getDescription();"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        String msg \u003d \"\";"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        // sets a specified task as done"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        int index \u003d Integer.valueOf(commandDescription.get());"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        Task curr \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        curr.markAsDone();"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        msg +\u003d \"Nice! I\u0027ve marked this task as done: \" + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        msg +\u003d \"    \" + curr.toString();"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Removes the selected task."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param command Command to be executed."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @return msg Chatbot reply acknowledging that the command has been executed."
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public String removeTask(Command command) throws DukeException {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        CommandValidation.validate(command, \"remove\", tasks);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        Optional\u003cString\u003e commandDescription \u003d command.getDescription();"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        String msg \u003d \"\";"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        int index \u003d Integer.valueOf(commandDescription.get());"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        Task curr \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        removedTasks.add(curr);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        msg +\u003d \"Noted. I\u0027ve removed this task: \" + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        msg +\u003d \"    \" + curr.toString() + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        tasks.remove(index - 1);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        msg +\u003d \"  Now you have \" + tasks.size() + \" tasks in the tasks.\";"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Adds a todo task."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param command Command to be executed."
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @return msg Chatbot reply acknowledging that the command has been executed."
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public String addTodo(Command command) throws DukeException {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        CommandValidation.validate(command, \"todo\");"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        Optional\u003cString\u003e commandDescription \u003d command.getDescription();"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        String msg \u003d \"\";"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        String description \u003d commandDescription.get();"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        Task todo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        tasks.add(todo);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        msg \u003d outputMessage(todo);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Adds a deadline task."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param command Command to be executed."
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @return msg Chatbot reply acknowledging that the command has been executed."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public String addDeadline(Command command) throws DukeException {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        CommandValidation.validate(command, \"deadline\");"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        Optional\u003cString\u003e commandDescription \u003d command.getDescription();"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        Optional\u003cLocalDate\u003e date \u003d command.getDate();"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        Optional\u003cLocalTime\u003e time \u003d command.getTime();"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        String description \u003d commandDescription.get();"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        Task deadline \u003d new Deadline(description, date, time);"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        tasks.add(deadline);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        String msg \u003d outputMessage(deadline);"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Adds an event task."
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param command Command to be executed."
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @return msg Chatbot reply acknowledging that the command has been executed."
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public String addEvent(Command command) throws DukeException {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        CommandValidation.validate(command, \"event\");"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        Optional\u003cString\u003e commandDescription \u003d command.getDescription();"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        Optional\u003cLocalDate\u003e date \u003d command.getDate();"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        Optional\u003cLocalTime\u003e time \u003d command.getTime();"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        String description \u003d commandDescription.get();"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        Task event \u003d new Event(description, date, time);"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        tasks.add(event);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        String msg \u003d outputMessage(event);"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Properly formats the chatbot reply when adding tasks."
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param task Task to be added"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @return Properly formatted chatbot reply."
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public String outputMessage(Task task) {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        String msg \u003d \"Got it. I\u0027ve added this task: \" + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        msg +\u003d \"    \" + task.toString() + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        msg +\u003d \"  Now you have \" + tasks.size() + \" task(s) in the list.\";"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremiasLiew": 346
    }
  },
  {
    "path": "src/main/java/commands/CommandValidation.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import common.exceptions.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import common.tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "public class CommandValidation {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Validates the showUpcoming, findTask, addTodo, addDeadline, addEvent commands."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Checks if the input Command is valid for the command type called."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param command Command to be checked for validity."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param type Command type to check validity for."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public static void validate(Command command, String type) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        Optional\u003cString\u003e commandDescription \u003d command.getDescription();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        Optional\u003cString\u003e commandCheck \u003d command.getCheck();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        Optional\u003cLocalDate\u003e date \u003d command.getDate();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        if (type.equals(\"show\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            if (!commandDescription.isPresent()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                throw new DukeException(\"Oops!! Please enter a time period.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            int index;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                index \u003d Integer.valueOf(commandDescription.get());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            } catch (Exception exception) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                throw new DukeException(\"Oops!! Wrong format.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            if (index \u003c 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                throw new DukeException(\"Oops!! Please enter a non-negative integer.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            if (!commandDescription.isPresent()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                throw new DukeException(\"Oops!! Please enter a description.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        if (type.equals(\"event\") || type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            if (!commandCheck.isPresent()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                throw new DukeException(\"Oops!! Wrong format.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            } else if (!commandCheck.get().equals(\"/at\") \u0026\u0026 type.equals(\"event\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                throw new DukeException(\"Oops!! Wrong format.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            } else if (!commandCheck.get().equals(\"/by\") \u0026\u0026 type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                throw new DukeException(\"Oops!! Wrong format.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            } else if (!date.isPresent()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                throw new DukeException(\"Oops!! Please specify a date.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        } "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Validates the makeDone, removeTask commands."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Checks if the input Command is valid for the command type called."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param command Command to be checked for validity."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param type Command type to check validity for."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param tasks List of current tasks for reference."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public static void validate(Command command, String type, ArrayList\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        Optional\u003cString\u003e commandDescription \u003d command.getDescription();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        if (!commandDescription.isPresent()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            throw new DukeException(\"Oops!! Please enter a task number.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            index \u003d Integer.valueOf(commandDescription.get());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        } catch (Exception exception) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            throw new DukeException(\"Oops!! Wrong format.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        if (index \u003c 1) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            throw new DukeException(\"Oops!! Invalid task.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        } else if (index \u003e tasks.size()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            throw new DukeException(\"Oops!! No such task.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        } else if (tasks.get(index - 1).isDone() \u0026\u0026 type.equals(\"done\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            throw new DukeException(\"Oops!! Task is already completed.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremiasLiew": 84
    }
  },
  {
    "path": "src/main/java/common/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "package common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public final static String name \u003d \"Rick\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public final static String line \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public final static String LINE_BUFFER \u003d \"  \";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public final static String MESSAGE_GREETING \u003d LINE_BUFFER + \"Hello! I\u0027m \" + name +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        \u0027\\n\u0027 + LINE_BUFFER + \"What can I do for you?\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public final static String MESSAGE_GOODBYE \u003d LINE_BUFFER + \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremiasLiew": 12
    }
  },
  {
    "path": "src/main/java/common/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "package common.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremiasLiew": 14
    }
  },
  {
    "path": "src/main/java/common/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "package common.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public Deadline(String description, Optional\u003cLocalDate\u003e date, Optional\u003cLocalTime\u003e time) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        super(description, date, time);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public Deadline(String description, Optional\u003cLocalDate\u003e date, Optional\u003cLocalTime\u003e time, boolean isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        super(description, date, time);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        if (this.time.isPresent()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            return \"[D][\" + this.getStatusIcon() + \"] \" + this.description + \"(by: \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                + this.getDate().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")) + \" \" "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                + this.getTime().format(DateTimeFormatter.ofPattern(\"HH:mm\")) + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            return \"[D][\" + this.getStatusIcon() + \"] \" + this.description + \"(by: \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                + this.getDate().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")) + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremiasLiew": 30
    }
  },
  {
    "path": "src/main/java/common/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "package common.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public Event(String description, Optional\u003cLocalDate\u003e date, Optional\u003cLocalTime\u003e time) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        super(description, date, time);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public Event(String description, Optional\u003cLocalDate\u003e date, Optional\u003cLocalTime\u003e time, boolean isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        super(description, date, time);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        if (this.time.isPresent()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            return \"[E][\" + this.getStatusIcon() + \"] \" + this.description + \"(at: \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                + this.getDate().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")) + \" \" "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                + this.getTime().format(DateTimeFormatter.ofPattern(\"HH:mm\")) + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            return \"[E][\" + this.getStatusIcon() + \"] \" + this.description + \"(at: \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                + this.getDate().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")) + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremiasLiew": 30
    }
  },
  {
    "path": "src/main/java/common/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "package common.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "public class Task implements Comparable\u003cTask\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    protected final String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    protected final Optional\u003cLocalDate\u003e date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    protected final Optional\u003cLocalTime\u003e time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Constructor for Task class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.date \u003d Optional.empty();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.time \u003d Optional.empty();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Constructor for Task class."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param date Date of the task (only for Event and Deadline)."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param time Time of the task (optional for Event and Deadline)."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public Task(String description, Optional\u003cLocalDate\u003e date, Optional\u003cLocalTime\u003e time) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Returns status icon depicting if task is done or not."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @return Indication if task is done or not."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return (isDone ? \"Y\" : \"N\"); //return tick or X symbols"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public Optional\u003cLocalDate\u003e getOptionalDate() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public Optional\u003cLocalTime\u003e getOptionalTime() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return this.date.get();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return this.time.get();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Sets task as done."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @return void."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Custom comparable between two tasks. Sorted by date then time."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * If time is not present, then time taken to be until 2359."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param o Other task to compare against."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @return Integer depicting result of comparison."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public int compareTo(Task o) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        if (!this.date.get().equals(o.getDate())) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            return this.date.get().compareTo(o.getDate());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            if (!this.time.isPresent()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                if (o.getOptionalTime().isPresent()) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    return 1;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    return 0;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                if (!o.getOptionalTime().isPresent()) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    return -1;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    return this.time.get().compareTo(o.getTime());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Returns String representation of Task."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @return String representation of Task."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremiasLiew": 118
    }
  },
  {
    "path": "src/main/java/common/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "package common.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return \"[T][\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremiasLiew": 18
    }
  },
  {
    "path": "src/main/java/data/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "package data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import common.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import common.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import ui.TextUi;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import commands.CommandExecution;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    private ArrayList\u003cTask\u003e removedTasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    private CommandExecution commandExecution;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Constructor for TaskList class, which stores all the tasks for the current"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * instance of the chatbot. Tasks are imported from the Storage and added to"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * the currant instance of the chatbot."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param storage Storage that imports saved tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public TaskList(Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.tasks \u003d storage.list;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.removedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.commandExecution \u003d new CommandExecution(tasks, removedTasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public boolean isTerminated() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Executes the given command on the stored classes. Prints out the corresponding"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * chatbot reply, and updates the stored tasks in the text file when there are"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * any changes to the tasks in the current instance."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param ui TextUi that prints out the corresponding chatbot reply."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param storage Storage for updating the stored tasks in the text file."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param command Command to be executed."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public void executeCommand(TextUi ui, Storage storage, Command command) throws DukeException, IOException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        String commandType \u003d command.getCommandType();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        String msg \u003d \"  \";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            switch (commandType) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    // exits the program"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    this.isExit \u003d true;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                case \"exception\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    throw command.getException();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    msg +\u003d list();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                case \"show_deleted\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    msg +\u003d showRemoved();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    msg +\u003d commandExecution.findTask(command);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                case \"show_upcoming\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    msg +\u003d commandExecution.showUpcoming(command);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                case \"show_overdue\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    msg +\u003d commandExecution.showOverdue(command);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                case \"clear_all\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    msg +\u003d commandExecution.clearAll();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                case \"remove_completed\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    msg +\u003d commandExecution.removeCompleted();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                case \"remove_past\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    msg +\u003d commandExecution.removePast();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    msg +\u003d commandExecution.removeTask(command);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    msg +\u003d commandExecution.makeDone(command);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    msg +\u003d commandExecution.addTodo(command);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    msg +\u003d commandExecution.addDeadline(command);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    msg +\u003d commandExecution.addEvent(command);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    throw new DukeException(\"Oops!! Unknown Command.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            msg +\u003d exception.getMessage();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        ui.outputMessage(msg);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Lists out all tasks"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @return msg Chatbot reply."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public String list() throws DukeException {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        String msg \u003d \"\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        // accesses the list"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            throw new DukeException(\"Oops!! List is empty.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            msg +\u003d \"Here are the tasks in your list:\" + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            msg +\u003d \u0027\\n\u0027;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            for (Task s : tasks) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                msg +\u003d \"    \" + counter + \". \" + s.toString();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                msg +\u003d \u0027\\n\u0027;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Lists all tasks that have been removed in the current instance of the chatbot."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @return msg Chatbot reply."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public String showRemoved() throws DukeException {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        String msg \u003d \"\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        // accesses the list"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        if (removedTasks.isEmpty()) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            throw new DukeException(\"Oops!! No removed tasks.\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            msg +\u003d \"Here are the tasks that have been removed:\" + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            msg +\u003d \u0027\\n\u0027;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            for (Task s : removedTasks) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                msg +\u003d \"    \" + counter + \". \" + s.toString();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                msg +\u003d \u0027\\n\u0027;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremiasLiew": 163
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import ui.TextUi;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import common.exceptions.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import data.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    private TextUi ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public Duke() throws IOException, DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.ui \u003d new TextUi();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.storage \u003d new Storage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        storage.readFromFile();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.tasks \u003d new TaskList(storage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public static void main(String[] args) throws DukeException, IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Starts the chatbot."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public void run() throws DukeException, IOException{"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        ui.greet(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        initialiseChatting();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        ui.goodbye();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Starts the chatting part of the chatbot."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public void initialiseChatting() throws IOException, DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        boolean isTerminated \u003d false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        while (!isTerminated) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            String input \u003d ui.getUserCommand();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            Command command \u003d new Parser().parse(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            tasks.executeCommand(ui, storage, command);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            isTerminated \u003d tasks.isTerminated();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremiasLiew": 57
    }
  },
  {
    "path": "src/main/java/parser/DateTimeParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "public class DateTimeParser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public DateTimeFormatter dateKey;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public DateTimeFormatter timeKey;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Constructor for a DateTimeParser object. A DateTimeParser contains the"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * accepted formats for parsing LocalDate and LocalTime."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public DateTimeParser() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.dateKey \u003d DateTimeFormatter.ofPattern(\"[dd/MM/yyyy][d/M/yyyy][dd/MM/yy][d/M/yy]\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                                                       + \"[yyyy/MM/dd][yyyy-MM-dd][yyyy-M-d]\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                                                       + \"[dd-MM-yyyy][d-M-yyyy][dd-MM-yy][d-M-yy]\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                                                       + \"[dd.MM.yy][d.M.yy][dd.MM.yyyy][d.M.yyyy]\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                                                       + \"[dd-MMM-yyyy][d-MMM-yyyy][d-MMM-yy]\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.timeKey \u003d DateTimeFormatter.ofPattern(\"[hh:mma][hh:mm:ssa]\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                                                       + \"[HH:mm][HHmm][HH:mm:ss][hha][ha]\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremiasLiew": 23
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import common.exceptions.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public static int COMMAND_TYPE \u003d 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public static int COMMAND_DESCRIPTION \u003d 1;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public static int COMMAND_CHECK \u003d 2;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public static int COMMAND_DATE \u003d 3;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public static int COMMAND_TIME \u003d 4;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Parses a String user input into a Command that can be easily understood by the chatbot."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * The necessary information that will be extracted are the command type, command description,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * command check (used to check input format, optional), date (optional), time (optional)."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param input User input that has been obtained by the UI."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @return command Command that contains all necessary information for the chatbot to process."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        String[] inputCommand \u003d input.split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        String[] commandParts \u003d new String[5];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        String commandType \u003d inputCommand[0];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        commandParts[COMMAND_TYPE] \u003d commandType;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        if (inputCommand.length \u003e 1) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            commandParts[COMMAND_DESCRIPTION] \u003d inputCommand[1];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            int index \u003d -1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            for (int i \u003d 0; i \u003c inputCommand.length; i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                if (inputCommand[i].equals(\"/by\") || inputCommand[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    index \u003d i;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                String description \u003d input.replaceFirst(commandType, \"\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                commandParts[COMMAND_DESCRIPTION] \u003d description.trim();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            } else if (index \u003e 1) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                String description \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                for (int i \u003d 1; i \u003c index; i++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    description +\u003d inputCommand[i] + \" \";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                commandParts[COMMAND_DESCRIPTION] \u003d description.trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                int j \u003d 2;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                int i \u003d index;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                while (i \u003c inputCommand.length \u0026\u0026 j \u003c 5) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    commandParts[j] \u003d inputCommand[i];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    i++;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    j++;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            command \u003d process(commandParts);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            command \u003d new Command(e);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Parses stored text from the storage and extracts all relevant information."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * This information is to be passed back to Storage for the purposes of populating"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * the task list according to the stored tasks in the text file."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param input Input from saved text in text file."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @return commandParts String[] containing needed task information."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public String[] parseFromStorage(String input) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        String[] commandParts \u003d new String[5];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        int index \u003d input.indexOf(\u0027(\u0027);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            description \u003d input.substring(7);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            description \u003d input.substring(7, index);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            int index2 \u003d input.indexOf(\u0027:\u0027) + 2;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            String trimmed \u003d input.substring(index2, input.length() - 1);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            String[] inputCommands \u003d trimmed.split(\" \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            String[] dateTime \u003d new String[2];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            for (int i \u003d 0; i \u003c inputCommands.length; i++) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                dateTime[i] \u003d inputCommands[i];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            commandParts[COMMAND_DATE] \u003d dateTime[0];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            commandParts[COMMAND_TIME] \u003d dateTime[1];"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        commandParts[COMMAND_TYPE] \u003d input.substring(1, 2);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        commandParts[COMMAND_DESCRIPTION] \u003d description;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return commandParts;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Needed for the parse method. A String[] containing command information"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * is processed into a Command that can be easily understood by the chatbot."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param commandParts String[] that is to be processed into a Command."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @return Command Command that is understood by the chatbot."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public Command process(String[] commandParts) throws DukeException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        String commandType \u003d commandParts[COMMAND_TYPE];"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        Optional\u003cString\u003e description \u003d Optional.ofNullable(commandParts[COMMAND_DESCRIPTION]);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        Optional\u003cString\u003e check \u003d Optional.ofNullable(commandParts[COMMAND_CHECK]);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        Optional\u003cLocalDate\u003e date \u003d parseDate(commandParts[COMMAND_DATE]);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        Optional\u003cLocalTime\u003e time \u003d parseTime(commandParts[COMMAND_TIME]);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return new Command(commandType, description, check, date, time);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Parses a String representation of a date into a LocalDate object which can be"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * easily understood by the chatbot. The accepted input formats are dictated by "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * a DateTimeParser."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param date String representation of a date."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @return parsedDate Optional\u003cLocalDate\u003e that contains a LocalDate if the input date is valid."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public Optional\u003cLocalDate\u003e parseDate(String date) throws DukeException {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        DateTimeParser dateParser \u003d new DateTimeParser();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        Optional\u003cLocalDate\u003e parsedDate;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            parsedDate \u003d Optional.ofNullable(LocalDate.parse(date, dateParser.dateKey));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            parsedDate \u003d Optional.empty();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            throw new DukeException(\"Oops!! Wrong date format.\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return parsedDate;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Parses a String representation of a time into a LocalTime object which can be"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * easily understood by the chatbot. The accepted input formats are dictated by "
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * a DateTimeParser."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param time String representation of a date."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @return parsedTime Optional\u003cLocalTime\u003e that contains a LocalTime if the input time is valid."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public Optional\u003cLocalTime\u003e parseTime(String time) throws DukeException {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        DateTimeParser timeParser \u003d new DateTimeParser();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        Optional\u003cLocalTime\u003e parsedTime;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            parsedTime \u003d Optional.ofNullable(LocalTime.parse(time, timeParser.timeKey));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            parsedTime \u003d Optional.empty();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            throw new DukeException(\"Oops!! Wrong time format.\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return parsedTime;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremiasLiew": 159
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import common.tasks.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import common.tasks.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import common.tasks.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import common.tasks.ToDo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import common.exceptions.DukeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public static int COMMAND_TYPE \u003d 0;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public static int COMMAND_DESCRIPTION \u003d 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public static int COMMAND_CHECK \u003d 2;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public static int COMMAND_DATE \u003d 3;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public static int COMMAND_TIME \u003d 4;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Writes all tasks to a text file in the home directory."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param tasks List of tasks to be written to a text file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public void writeToFile(ArrayList\u003cTask\u003e tasks) throws IOException, DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"duke.txt\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            fw.write(\"\u003cduke.java\u003e No saved tasks yet! :)\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        } else if (!list.isEmpty()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                fw.write(\"\u003cduke.java\u003e Saved tasks: (Please do not edit)\" + \u0027\\n\u0027);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                for (Task task : tasks) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    fw.write(task.toString() + \u0027\\n\u0027);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            throw new DukeException(\"Oops!! Something went wrong.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Reads and import stored tasks from a text file in the home directory."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * The text file has to be named \"duke.txt\"."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public void readFromFile() throws IOException, DukeException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        BufferedReader br;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            br \u003d new BufferedReader(new FileReader(\"duke.txt\"));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            br.readLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            while ((input \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                boolean isDone \u003d input.charAt(4) \u003d\u003d \u0027Y\u0027;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                String[] commandParts \u003d parser.parseFromStorage(input);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                String commandType \u003d commandParts[COMMAND_TYPE];"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                String commandDescription \u003d commandParts[COMMAND_DESCRIPTION];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                Optional\u003cLocalDate\u003e date \u003d parser.parseDate(commandParts[COMMAND_DATE]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                Optional\u003cLocalTime\u003e time \u003d parser.parseTime(commandParts[COMMAND_TIME]);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                switch (commandType) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                        list.add(new ToDo(commandDescription, isDone));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                        list.add(new Deadline(commandDescription, date, time, isDone));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                        list.add(new Event(commandDescription, date, time, isDone));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremiasLiew": 96
    }
  },
  {
    "path": "src/main/java/ui/TextUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import common.exceptions.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import data.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import static common.Messages.MESSAGE_GREETING;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import static common.Messages.MESSAGE_GOODBYE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "import static common.Messages.line;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "public class TextUi {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Constructor for TextUi class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public TextUi() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        this.out \u003d System.out;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Greets the user and displays the tasks that are due today."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Runs every time the user starts the program."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param tasks Stored list of tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public void greet(TaskList tasks) throws DukeException, IOException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        outputMessage(MESSAGE_GREETING);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        Command startingCommand \u003d new Command(\"show_upcoming\", Optional.of(\"0\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        tasks.executeCommand(this, null, startingCommand);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Prints a message bidding goodbye to the user."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public void goodbye() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        outputMessage(MESSAGE_GOODBYE);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Prints the selected message."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @param message Message to be printed."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public void outputMessage(String... message) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        out.println(line);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        for (String m : message) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "            out.println(m);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        out.println(line);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * Reads the next user input."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     * @return String representation of the next user input."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    public String getUserCommand() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JeremiasLiew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremiasLiew": 70
    }
  }
]

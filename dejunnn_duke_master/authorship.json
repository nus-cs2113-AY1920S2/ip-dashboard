[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "dejunnn": 2,
      "-": 37
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "[T] [X] hihi"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 1
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.exceptions.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        TaskList tasklist \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        UI ui \u003d new UI();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        Storage storage \u003d new Storage(tasklist, ui);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        ui.displayWelcomeMessage();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        while (!ui.isExitStatus()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                String input \u003d ui.readInput();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                Command command \u003d Parser.parseInput(input);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                command.execute(tasklist, ui, storage);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                ui.displayInvalidCommandMessage();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            } catch (InvalidDeadlineException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                ui.displayInvalidDeadlineMessage();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            } catch (InvalidEventException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                ui.displayInvalidEventMessage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            } catch (InvalidToDoException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                ui.displayInvalidToDoMessage();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            } catch (InvalidFormatException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                ui.displayInvalidFormatMessage();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                ui.displayInvalidIndexMessage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 42
    }
  },
  {
    "path": "src/main/java/duke/commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public ByeCommand(String command) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void execute(TaskList tasklist, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        ui.displayGoodbyeMessage();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        ui.setExitStatus(true);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 22
    }
  },
  {
    "path": "src/main/java/duke/commands/ClearCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public ClearCommand(String command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void execute(TaskList tasklist, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        ui.displayListClearConfirmationMessage();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        String confirmation \u003d sc.nextLine().trim().toUpperCase();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        if (confirmation.equals(\"Y\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            tasklist.clearList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            ui.displayListClearMessage();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            storage.clearFile();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            ui.displayListNotClearedMessage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 32
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public Command(String command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        return this.command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public abstract void execute(TaskList tasklist, UI ui, Storage storage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 21
    }
  },
  {
    "path": "src/main/java/duke/commands/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public DeadlineCommand(String command, String description, String by) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void execute(TaskList tasklist, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        Deadline deadline;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(this.by);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            String formattedDate \u003d date.format(formatter);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            deadline \u003d new Deadline(this.description, formattedDate);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            deadline \u003d new Deadline(this.description, this.by);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        tasklist.addTask(deadline);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        storage.writeFileLine(deadline);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        ui.displayAddDeadlineMessage(deadline, tasklist.getTaskList());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 37
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public DeleteCommand(String command, String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void execute(TaskList tasklist, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        int taskIndex \u003d Integer.parseInt(this.description) - 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        if (taskIndex \u003e\u003d tasklist.getLength()) throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        Task deleteTask \u003d tasklist.getTaskList().get(taskIndex);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        tasklist.removeTask(deleteTask);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        storage.rewriteFile();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        ui.displayDeleteTaskMessage(deleteTask);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 26
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public DoneCommand(String command, String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void execute(TaskList tasklist, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        int taskIndex \u003d Integer.parseInt(this.description) - 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        if (taskIndex \u003e\u003d tasklist.getLength()) throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        Task doneTask \u003d tasklist.getTaskList().get(taskIndex);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        doneTask.setDone(true);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        ui.displayDoneTaskMessage(doneTask);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 25
    }
  },
  {
    "path": "src/main/java/duke/commands/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public EventCommand(String command, String description, String at) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        this.at \u003dat;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void execute(TaskList tasklist, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        Event event \u003d new Event(this.description, this.at);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        tasklist.addTask(event);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        storage.writeFileLine(event);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        ui.displayAddEventMessage(event, tasklist.getTaskList());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 26
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public FindCommand(String command, String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void execute(TaskList tasklist, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        List\u003cTask\u003e foundList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        for (Task task : tasklist.getTaskList()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            if (task.getDescription().contains(this.description)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                foundList.add(task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        if (foundList.isEmpty()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            ui.displayUnableToFindTaskMessage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            ui.displayFoundTaskMessage(foundList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 34
    }
  },
  {
    "path": "src/main/java/duke/commands/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.ui.HelpList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public HelpCommand(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void execute(TaskList tasklist, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        ui.displayHelpListMessage();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 20
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public ListCommand(String command) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void execute(TaskList tasklist, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        ui.displayShowListMessage(tasklist.getTaskList());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 17
    }
  },
  {
    "path": "src/main/java/duke/commands/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public class ToDoCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public ToDoCommand(String command, String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void execute(TaskList tasklist, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        ToDo todo \u003d new ToDo(this.description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        tasklist.addTask(todo);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        storage.writeFileLine(todo);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        ui.displayAddToDoMessage(todo, tasklist.getTaskList());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 24
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 4
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidDataException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public class InvalidDataException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 4
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public class InvalidDeadlineException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 4
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public class InvalidEventException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 4
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public class InvalidFormatException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 4
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidToDoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public class InvalidToDoException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 4
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.exceptions.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    private static String commandPrompt;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    private static String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    private static int numArguments;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static void prepareInput(String input) throws InvalidCommandException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        String[] inputArray \u003d input.trim().toLowerCase().split(\" \", 2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        numArguments \u003d inputArray.length;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        if (numArguments \u003d\u003d 0) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        if (numArguments \u003d\u003d 2) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            description \u003d inputArray[1];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        commandPrompt \u003d inputArray[0];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String simpleParse(String input) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        return input.trim().toLowerCase();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static Command parseInput(String input) throws InvalidCommandException, InvalidDeadlineException, InvalidEventException, InvalidToDoException, InvalidFormatException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        prepareInput(input);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        switch (commandPrompt) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                command \u003d new ListCommand(commandPrompt);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                if (numArguments !\u003d 2) throw new InvalidToDoException();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                command \u003d new ToDoCommand(commandPrompt, description);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                if (numArguments !\u003d 2) throw new InvalidDeadlineException();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                String[] deadlineInfo \u003d description.split(\"/by \", 2);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                if (deadlineInfo.length !\u003d 2) throw new InvalidDeadlineException();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                command \u003d new DeadlineCommand(commandPrompt, deadlineInfo[0], deadlineInfo[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                if (numArguments !\u003d 2) throw new InvalidEventException();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                String[] eventInfo \u003d description.split(\"/at \", 2);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                if (eventInfo.length !\u003d 2) throw new InvalidEventException();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                command \u003d new EventCommand(commandPrompt, eventInfo[0], eventInfo[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                if (!description.matches(\"-?\\\\d+\") || numArguments !\u003d 2) throw new InvalidFormatException();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                command \u003d new DoneCommand(commandPrompt, description);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                if (!description.matches(\"-?\\\\d+\") || numArguments !\u003d 2) throw new InvalidFormatException();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                command \u003d new DeleteCommand(commandPrompt, description);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                if (numArguments !\u003d 2) throw new InvalidFormatException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                command \u003d new FindCommand(commandPrompt, description);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            case \"clear\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                command \u003d new ClearCommand(commandPrompt);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            case \"/help\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                command \u003d new HelpCommand(commandPrompt);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                command \u003d new ByeCommand(commandPrompt);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                throw new InvalidCommandException();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 78
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.exceptions.InvalidDataException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.tasks.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.ui.MessageBank;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    private TaskList tasklist;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    private static String FILE_PATH \u003d \"data\" + File.separator + \"duke.txt\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    private static String DIRECTORY_PATH \u003d \"data\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public Storage(TaskList tasklist, UI ui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        this.tasklist \u003d tasklist;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        this.loadFile();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void loadFile() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        this.ui.displayLineSeparator();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            Path directoryPath \u003d Paths.get(DIRECTORY_PATH);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            if (!Files.exists(directoryPath)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                Files.createDirectory(directoryPath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                System.out.println(\"New Directory created: \" + directoryPath.getFileName());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            File dukeData \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            if (dukeData.createNewFile()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                System.out.println(\"No existing file is found, new file created: \" + dukeData.getName());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                System.out.println(\"File already exists. Existing data loaded from: \" + dukeData.getName());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                this.readFile();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            ui.displayErrorMessage();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        this.ui.displayLineSeparator();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void readFile() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            File dukeData \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            Scanner myReader \u003d new Scanner(dukeData);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            while (myReader.hasNextLine()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                String dataLine \u003d myReader.nextLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                String[] dataLineArray \u003d dataLine.trim().split(\" \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                String taskType \u003d dataLineArray[0];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                    case \"[T]\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                        task \u003d new ToDo(dataLineArray[2]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                    case \"[E]\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                        task \u003d new Event(dataLineArray[2], dataLineArray[3]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                    case \"[D]\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                        task \u003d new Deadline(dataLineArray[2], dataLineArray[3]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                        throw new InvalidDataException();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                if (dataLineArray[1].equals(\"[/]\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                    task.setDone(true);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                    task.setDone(false);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                tasklist.getTaskList().add(task);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            myReader.close();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        } catch (FileNotFoundException | InvalidDataException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            ui.displayErrorMessage();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void clearFile() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            PrintWriter pw \u003d new PrintWriter(FILE_PATH);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            pw.close();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            ui.displayErrorMessage();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void rewriteFile() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            FileWriter myWriter \u003d new FileWriter(FILE_PATH, false);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            for (Task task : tasklist.getTaskList()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                myWriter.write(task.toString() + MessageBank.NEW_LINE);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            myWriter.close();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            ui.displayErrorMessage();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void writeFileLine(Task task) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            BufferedWriter myWriter \u003d new BufferedWriter(new FileWriter(FILE_PATH, true));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            myWriter.write(task.toString() + MessageBank.NEW_LINE);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            myWriter.close();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            System.out.println(\"Successfully wrote to the file.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            ui.displayErrorMessage();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 120
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        super(\"[D]\", description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        return super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 16
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        super(\"[E]\", description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        return super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 16
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public Task(String taskType, String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void setDone(boolean update) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        this.isDone \u003d update;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        return this.taskType;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        return (isDone ? \"[/]\" : \"[X]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        return getTaskType() + \" \" + getStatusIcon() + \" \" + this.description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 40
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public List\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void removeTask(Task task) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        this.tasks.remove(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public int getLength() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void clearList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        this.tasks.clear();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 31
    }
  },
  {
    "path": "src/main/java/duke/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        super(\"[T]\", description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        return super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 13
    }
  },
  {
    "path": "src/main/java/duke/ui/HelpList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public class HelpList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String TODO_HELP \u003d \"To add a ToDo, enter: todo {description}\\n\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String DEADLINE_HELP \u003d \"To add a Deadline with a description, enter: deadline /by {description}\\n\" +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            \"To add a Deadline with a date(yyyy-mm-dd), enter: deadline /by {date}\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String EVENT_HELP \u003d \"To add an Event, enter: event /at {location}\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String LIST_HELP \u003d \"To display your task list, enter: list\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String FIND_HELP \u003d \"To find a task from a substring, enter: find {substring}\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String DELETE_HELP \u003d \"To delete a task from your task list with its index, enter: delete {task index}\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String DONE_HELP \u003d \"To mark a task as done with its index, enter: done {task index}\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String CLEAR_HELP \u003d \"To clear your task list, enter: clear\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String BYE_HELP \u003d \"To exit the programme, enter: bye\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String HELP_LIST_HELP \u003d \"To display the help list, enter: /help\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String HelpListMessage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        output.append(TODO_HELP + DEADLINE_HELP + EVENT_HELP + LIST_HELP +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                FIND_HELP + DELETE_HELP + DONE_HELP +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                CLEAR_HELP + HELP_LIST_HELP + BYE_HELP);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 25
    }
  },
  {
    "path": "src/main/java/duke/ui/MessageBank.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public class MessageBank {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String DUKE_LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String LINE_SEPARATOR \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String WELCOME_MESSAGE \u003d \"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            \"What can I do for you?\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String GOODBYE_MESSAGE \u003d \"Goodbye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String SHOW_LIST_MESSAGE \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String SHOW_LIST_EMPTY_MESSAGE \u003d \"You have no tasks in your list at the moment.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String ADD_TODO_MESSAGE \u003d \"Noted! I have added a new todo.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String ADD_DEADLINE_MESSAGE \u003d \"Noted! I have added a new deadline.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String ADD_EVENT_MESSAGE \u003d \"Noted! I have added a new event.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String DONE_TASK_MESSAGE \u003d \"Great! I have marked this task as done.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String LIST_CLEAR_MESSAGE \u003d \"Your task list has been cleared successfully!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String LIST_CLEAR_CONFIRMATION_MESSAGE \u003d \"Are you sure you want to clear all tasks in your list? Type \u0027Y\u0027 to confirm.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String LIST_NOT_CLEARED_MESSAGE \u003d \"You task list has not been cleared\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String LIST_SIZE_MESSAGE \u003d \"You now have %d tasks in the list.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String DELETE_TASK_MESSAGE \u003d \"Got it! The following task has been successfully deleted.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String FOUND_TASK_MESSAGE \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String UNABLE_TO_FIND_TASK_MESSAGE \u003d \"Sorry, I am unable to find any matching tasks in your list :(\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String INVALID_TODO_MESSAGE \u003d \"Oops! To add a todo, enter: ToDo {description}\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String INVALID_DEADLINE_MESSAGE \u003d \"Oops! To add a Deadline with a description, enter: deadline /by {description} \\n\" +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            \"To add a Deadline with a date(yyyy-mm-dd), enter: deadline /by {date}\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String INVALID_EVENT_MESSAGE \u003d \"Oops! To add an Event, enter: event /at {location}\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String INVALID_COMMAND_MESSAGE \u003d \"I\u0027m sorry, but I don\u0027t know what that means :(.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String INVALID_FORMAT_MESSAGE \u003d \"Please follow the correct format when entering a command.\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String INVALID_INDEX_MESSAGE \u003d \"The index you have entered is invalid\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String ERROR_MESSAGE \u003d \"Hmm, an error has occurred...\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String PROMPT_HELP_MESSAGE \u003d \"Type /help for a list of available commands\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public static String NEW_LINE \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 39
    }
  },
  {
    "path": "src/main/java/duke/ui/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    private boolean exitStatus;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        this.exitStatus \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public boolean isExitStatus() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        return this.exitStatus;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void setExitStatus(boolean update) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        this.exitStatus \u003d update;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public String readInput() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void displayWelcomeMessage() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(MessageBank.DUKE_LOGO + MessageBank.NEW_LINE + MessageBank.WELCOME_MESSAGE);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayPromptHelpMessage();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void displayGoodbyeMessage() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(MessageBank.GOODBYE_MESSAGE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void displayLineSeparator() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(MessageBank.LINE_SEPARATOR);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void displayAddToDoMessage(Task task, List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(MessageBank.ADD_TODO_MESSAGE + MessageBank.NEW_LINE + task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayListSizeMessage(taskList);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void displayAddDeadlineMessage(Task task, List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(MessageBank.ADD_DEADLINE_MESSAGE + MessageBank.NEW_LINE + task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayListSizeMessage(taskList);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void displayAddEventMessage(Task task, List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(MessageBank.ADD_EVENT_MESSAGE + MessageBank.NEW_LINE + task);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayListSizeMessage(taskList);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void displayShowListMessage(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            System.out.println(MessageBank.SHOW_LIST_EMPTY_MESSAGE);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            System.out.println(MessageBank.SHOW_LIST_MESSAGE);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            int counter \u003d 0;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                System.out.println(counter + \". \" + task);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void displayDoneTaskMessage(Task task) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(MessageBank.DONE_TASK_MESSAGE + MessageBank.NEW_LINE + task);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void displayFoundTaskMessage(List\u003cTask\u003e foundList) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(MessageBank.FOUND_TASK_MESSAGE);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        for (Task task : foundList) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            System.out.println(counter + \". \" + task);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void displayUnableToFindTaskMessage() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(MessageBank.UNABLE_TO_FIND_TASK_MESSAGE);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void displayListClearMessage() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(MessageBank.LIST_CLEAR_MESSAGE);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void displayListNotClearedMessage() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(MessageBank.LIST_NOT_CLEARED_MESSAGE);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void displayListClearConfirmationMessage() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(MessageBank.LIST_CLEAR_CONFIRMATION_MESSAGE);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void displayListSizeMessage(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.format(MessageBank.LIST_SIZE_MESSAGE + MessageBank.NEW_LINE, taskList.size());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void displayDeleteTaskMessage(Task task) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(MessageBank.DELETE_TASK_MESSAGE + MessageBank.NEW_LINE + task);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void displayInvalidToDoMessage() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(MessageBank.INVALID_TODO_MESSAGE);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayPromptHelpMessage();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void displayInvalidDeadlineMessage() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(MessageBank.INVALID_DEADLINE_MESSAGE);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayPromptHelpMessage();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void displayInvalidEventMessage() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(MessageBank.INVALID_EVENT_MESSAGE);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayPromptHelpMessage();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void displayInvalidFormatMessage() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(MessageBank.INVALID_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayPromptHelpMessage();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void displayInvalidCommandMessage() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(MessageBank.INVALID_COMMAND_MESSAGE);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayPromptHelpMessage();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void displayInvalidIndexMessage() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(MessageBank.INVALID_INDEX_MESSAGE);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayPromptHelpMessage();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void displayErrorMessage() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(MessageBank.ERROR_MESSAGE);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayPromptHelpMessage();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void displayHelpListMessage() {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(HelpList.HelpListMessage());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayLineSeparator();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void displayPromptHelpMessage() {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(MessageBank.PROMPT_HELP_MESSAGE);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 169
    }
  }
]

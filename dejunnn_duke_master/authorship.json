[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import Exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import Exceptions.ToDoEmptyException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import Tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import Tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import Tasks.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        displayWelcomeMessage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            File newFile \u003d new File(\"./src/main/java/data/duke.txt\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            if (newFile.createNewFile()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                System.out.println(\"File created: \" + newFile.getName());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                System.out.println(\"File already exists.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            System.out.println(\"An error occurred.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        Boolean exitProgram \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        while (!exitProgram) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            String[] inputArray \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                FileWriter fileWriter \u003d new FileWriter(\"./src/main/java/data/duke.txt\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                    viewList(tasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                } else if (inputArray[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                    if (inputArray.length \u003c 2) throw new ToDoEmptyException();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                    addToDo(tasks, inputArray[1]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                } else if (inputArray[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                    addDeadline(tasks, inputArray[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                } else if (inputArray[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                    addEvent(tasks, inputArray[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                } else if (inputArray[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                    markDone(tasks, inputArray[1]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                } else if (inputArray[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                    deleteTask(tasks, inputArray[1]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                } else if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                    exitMessage();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                    exitProgram \u003d true;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                    throw new InvalidCommandException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                int counter \u003d 0;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                for (Task task : tasks) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                    counter++;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                    fileWriter.write(counter + \". \" + task);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                fileWriter.close();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            } catch (ToDoEmptyException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                System.out.println(\"OOPS!!! The description of a todo cannot be empty\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :(\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                System.out.println(\"An error occurred.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    private static void deleteTask(List\u003cTask\u003e tasks, String s) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        int taskIndex \u003d Integer.parseInt(s) - 1;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        Task deleteTask \u003d tasks.get(taskIndex);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        tasks.remove(deleteTask);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(deleteTask);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.format(\"Now you have %d tasks in the list.\\n\", tasks.size());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    private static void markDone(List\u003cTask\u003e tasks, String s) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        int taskIndex \u003d Integer.parseInt(s) - 1;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        Task doneTask \u003d tasks.get(taskIndex);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        doneTask.setDone(true);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(doneTask);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    private static void exitMessage() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    private static void addEvent(List\u003cTask\u003e tasks, String s) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        String[] eventInfo \u003d s.split(\"/at \", 2);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        Event newEvent \u003d new Event(eventInfo[0], eventInfo[1]);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        tasks.add(newEvent);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(newEvent);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.format(\"Now you have %d tasks in the list.\\n\", tasks.size());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    private static void addDeadline(List\u003cTask\u003e tasks, String s) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        String[] deadlineInfo \u003d s.split(\"/by \", 2);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(deadlineInfo[0], deadlineInfo[1]);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        tasks.add(newDeadline);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(newDeadline);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.format(\"Now you have %d tasks in the list.\\n\", tasks.size());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    private static void addToDo(List\u003cTask\u003e tasks, String description) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        ToDo newToDo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        tasks.add(newToDo);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(newToDo);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.format(\"Now you have %d tasks in the list.\\n\", tasks.size());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    private static void viewList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "            System.out.println(counter + \". \" + task);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    private static void displayWelcomeMessage() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 141,
      "-": 10
    }
  },
  {
    "path": "src/main/java/Exceptions/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 4
    }
  },
  {
    "path": "src/main/java/Exceptions/ToDoEmptyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public class ToDoEmptyException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 4
    }
  },
  {
    "path": "src/main/java/Tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 16
    }
  },
  {
    "path": "src/main/java/Tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 16
    }
  },
  {
    "path": "src/main/java/Tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public void setDone(boolean update) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        this.isDone \u003d update;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 25
    }
  },
  {
    "path": "src/main/java/Tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dejunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dejunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dejunnn": 13
    }
  }
]

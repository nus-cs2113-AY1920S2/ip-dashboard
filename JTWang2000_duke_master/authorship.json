[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 2,
      "-": 37
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "test {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 22,
      "-": 19
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "D | 0 | return book | June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "E | 1 | project meeting | Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "T | 1 | join sports club"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 4
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.common.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import static duke.common.Constants.CREATE_FILE_PATH;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import static duke.common.Constants.FILE_PATH;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Initializes Duke object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param filePath place where hard disk data stores"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            storage.load(tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            File newFolder \u003d new File(CREATE_FILE_PATH);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            newFolder.mkdirs();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                File f \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            } catch (IOException error) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                System.out.println(\"\\tUnknown errors: \" + error.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Runs the Duke object."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        new Duke(FILE_PATH).run();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 74
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.tasklist.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " * Deals with commands related to adding tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    private Task newtask;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public AddCommand(Task newtask) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        this.newtask \u003d newtask;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Adds a new task in taskList, updates ui and backup file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param tasks stores all tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param ui deals with user interface."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param storage deals with back up file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @throws IOException if cannot find back up file in the hard disk."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        tasks.addTask(newtask);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        ui.showAddTaskMessage(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        storage.write(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 34
    }
  },
  {
    "path": "src/main/java/duke/command/CheckCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.common.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.taskList.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.util.function.ToDoubleBiFunction;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import static duke.common.Constants.TODO;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public class CheckCommand extends Command{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    private static String checkString;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    private static ArrayList\u003cInteger\u003e checkCount;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public CheckCommand (String checkString) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        this.checkString \u003d checkString;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        checkCount \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    private Boolean isLocalDateFormat() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            LocalDate.parse(this.checkString);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void execute (TaskList tasks, Ui ui, Storage storage) throws IOException, DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (!isLocalDateFormat()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            throw new DukeException(\"\\t Please follow the format: check yyyy-mm-dd\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(checkString);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        for(int i \u003d 0; i\u003ctasks.size(); i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            if((tasks.getATask(i).getTime() \u003d\u003d null)) { //either it is a todo event or the time does not follow standard"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            if(tasks.getATask(i).getTime().equals(date)){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                checkCount.add(i);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        ui.showCheckTask(tasks,checkCount);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 51
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.common.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " * Deals with user Command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " * Abstract class since there can not be general command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public Command(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Deals with iteration between tasks, ui and storage."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param tasks stores all tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param ui deals with user interface."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param storage deals with back up file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @throws IOException if cannot find back up file in the hard disk."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @throws DukeException deals with other exception."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DukeException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 33
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.common.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " * Deals with commands related to deleting tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    private int deleteCount;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public DeleteCommand(int deleteCount) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        // The array index will be actual count minus one."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        this.deleteCount \u003d deleteCount - 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Delete tasks, asks ui to show deleted task, and updates backup files."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param tasks stores all tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param ui deals with user interface."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param storage deals with back up file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @throws IOException if cannot find back up file in the hard disk."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @throws DukeException if the intended delete index is invalid e.g. not exist."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (deleteCount + 1 \u003e tasks.size()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            throw new DukeException(\"\\tThere is no task \" + (deleteCount + 1) + \". Please reconsider the index.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        ui.showDeleteMessage(tasks.deleteTask(deleteCount),tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        storage.write(tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 38
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.common.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " * Deals with command related to mark tasks as done."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    private int doneCount;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public DoneCommand(int doneCount) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        /** The array index will be actual count minus one */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        this.doneCount \u003d doneCount - 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Marks a task as done, asks ui to show task marked as done, and updates back up file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param tasks stores all tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param ui deals with user interface."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param storage deals with back up file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @throws IOException if cannot find back up file in the hard disk."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @throws DukeException if the intended task to mark as done is invalid e.g. not exist."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (doneCount + 1 \u003e tasks.size()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            throw new DukeException(\"\\tThere is no task \" + (doneCount + 1) + \". Please reconsider the index.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        tasks.getATask(this.doneCount).markAsDone();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        ui.showMarkAsDoneMessage(tasks,this.doneCount);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        storage.write(tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 39
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " * Deals with command related to exit the Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Updates ui to show Goodbye."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param tasks stores all tasks, useless here."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param ui deals with user interface."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param storage deals with back up file, useless here."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        ui.showGoodByeMessage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 31
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.common.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.taskList.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public class FindCommand extends Command{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    private static String findString;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    private static ArrayList\u003cInteger\u003e findCount;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public FindCommand (String findString) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        this.findString \u003d findString;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        findCount \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void execute (TaskList tasks, Ui ui, Storage storage) throws IOException, DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        for(int i \u003d 0; i\u003ctasks.size(); i++) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            if(tasks.getATask(i).getDescription().contains(findString)) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                findCount.add(i);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        ui.showFindTask(tasks,findCount);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 28
    }
  },
  {
    "path": "src/main/java/duke/command/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.common.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " * Deals with command that cannot be recognized."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public InvalidCommand(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Throws exception since there is invalid command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param tasks stores all tasks, useless here."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param ui deals with user interface, useless here."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param storage deals with back up file, useless here."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @throws DukeException exists since the command is invalid."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        throw new DukeException(\"\\t Sorry.I do not understand you.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 28
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.common.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " * Deals with command related to list all tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Lists all tasks and asks ui to show tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param tasks stores all tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param ui deals with user interface."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param storage deals with back up file, useless here."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @throws DukeException exists since there is no task in list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            throw new DukeException(\"\\tCurrently, there is no task in the list!\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        ui.showListOfTasks(tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 27
    }
  },
  {
    "path": "src/main/java/duke/common/Constants.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " * Stores all constant values."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public final class Constants {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static final String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static final String LINE_BREAK \u003d \"\\t____________________________________________________________\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static final int TODO_LENGTH \u003d 5;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static final int DEADLINE_LENGTH \u003d 9;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static final int EVENT_LENGTH \u003d 6;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static final int FORMAT_LENGTH \u003d 5;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static final String FILE_PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static final String CREATE_FILE_PATH \u003d System.getProperty(\"user.dir\") + \"/data\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 31
    }
  },
  {
    "path": "src/main/java/duke/common/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 7
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.common.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.command.InvalidCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.tasklist.task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.tasklist.task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.tasklist.task.Todo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import static duke.common.Constants.TODO;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import static duke.common.Constants.DEADLINE;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import static duke.common.Constants.EVENT;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import static duke.common.Constants.LIST;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import static duke.common.Constants.DELETE;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import static duke.common.Constants.DONE;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import static duke.common.Constants.BYE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import static duke.common.Constants.TODO_LENGTH;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import static duke.common.Constants.DEADLINE_LENGTH;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import static duke.common.Constants.EVENT_LENGTH;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import static duke.common.Constants.FORMAT_LENGTH;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " * Deals with making sense of the user command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Checks if a string is integer."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param str input string."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @return returns true if it is integer, else returns false."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static boolean isNumeric(String str) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            Integer.parseInt(str);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Deals with making sense of the user command."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param fullCommand user input."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @return returns different types of command."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @throws DukeException when user\u0027s command does not match with command standard."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String[] responses \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        switch (responses[0]) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            if (responses.length \u003c 2) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                throw new DukeException(\"\\tThe description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return new AddCommand(new Todo(fullCommand.substring(TODO_LENGTH)));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            if (responses.length \u003c 2) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                throw new DukeException(\"\\tThe description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            int deadlineDividerPosition \u003d fullCommand.indexOf(\" /by\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            if (deadlineDividerPosition \u003d\u003d -1) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                throw new DukeException(\"\\tPlease follow the format: deadline thingsToDo /by time\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            String deadlineName \u003d fullCommand.substring(DEADLINE_LENGTH,deadlineDividerPosition);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            String deadlineTime \u003d fullCommand.substring(deadlineDividerPosition + FORMAT_LENGTH);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return new AddCommand(new Deadline(deadlineName,deadlineTime));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            if (responses.length \u003c 2) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                throw new DukeException(\"\\tThe description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            int eventDividerPosition \u003d fullCommand.indexOf(\" /at\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            if (eventDividerPosition \u003d\u003d -1) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                throw new DukeException(\"\\tPlease follow the format: event thingsToDo /at time\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            String eventName \u003d fullCommand.substring(EVENT_LENGTH,eventDividerPosition);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            String eventTime \u003d fullCommand.substring(eventDividerPosition + FORMAT_LENGTH);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return new AddCommand(new Event(eventName,eventTime));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            if (responses.length \u003c 2 || !isNumeric(responses[1])) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                throw new DukeException(\"\\tPlease input a task number that you want to mark as done\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return new DoneCommand(Integer.parseInt(responses[1]));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            if (responses.length \u003c 2 || !isNumeric(responses[1])) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                throw new DukeException(\"\\tPlease input a task number that you want to delete\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            int deleteCount \u003d Integer.parseInt(responses[1]);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return new DeleteCommand(deleteCount);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            return new InvalidCommand();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 107
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.tasklist.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.tasklist.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.tasklist.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    private static String filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Changes the format of a task in file to correct format of a task in taskList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Then stores the right format task to list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param oneTask a line in the hard disk."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param tasks stores taskList."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static void loadATask(String oneTask, TaskList tasks) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        String[] taskSplit \u003d oneTask.split(\" \\\\| \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        switch (taskSplit[0]) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            tasks.addTask(new Todo(taskSplit[2]));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            tasks.addTask(new Deadline(taskSplit[2],taskSplit[3]));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            tasks.addTask(new Event(taskSplit[2],taskSplit[3]));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (taskSplit[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            tasks.getATask(tasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Loads the content in the file to taskList."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param tasks stores taskList."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @throws FileNotFoundException if there is no back up file."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void load(TaskList tasks) throws FileNotFoundException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (!f.exists()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            throw new FileNotFoundException();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            String oneTask;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            loadATask(s.nextLine(),tasks);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Writes a list of tasks to hard disk file."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param tasks stores taskList."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @throws IOException there is no back up file."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static void write(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (!f.exists()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            throw new IOException();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            fw.write(tasks.getATask(i).toFile() + \"\\n\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 89
    }
  },
  {
    "path": "src/main/java/duke/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.tasklist.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " * Contains the task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " * It has operations to add/delete tasks in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static void addTask(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public static Task deleteTask(int deleteCount) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return tasks.remove(deleteCount);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public Task getATask(int taskCount) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return this.tasks.get(taskCount);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 33
    }
  },
  {
    "path": "src/main/java/duke/tasklist/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package duke.tasklist.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " * Stores a deadline task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    protected LocalDate time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public Deadline(String description,String by) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            this.time \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            this.by \u003d time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\", Locale.US)) + \", \" + time.getDayOfWeek();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            this.by \u003d by;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public LocalDate getTime() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return \"D | \" + super.toFile() + \" | \" + by;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 41
    }
  },
  {
    "path": "src/main/java/duke/tasklist/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package duke.tasklist.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import static duke.common.Constants.EVENT;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " * Stores an event class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    protected LocalDate time;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public Event(String description,String at) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            this.time \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            this.at \u003d time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\", Locale.US)) + \", \" + time.getDayOfWeek();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            this.at \u003d at;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public LocalDate getTime() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return \"E | \" + super.toFile() + \" | \" + at;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 42
    }
  },
  {
    "path": "src/main/java/duke/tasklist/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package duke.tasklist.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " * Stores a task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " * Since there is no task without type, this super class is an abstract class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public Task(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        /** Return tick or X symbols. */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return (isDone ? \"/\" : \" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public LocalDate getTime() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Prints a task appropriately."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @return a string."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Stores a task according to back up file standard."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @return a string."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return ((isDone ? \"1\" : \"0\") + \" | \" + this.description);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 55
    }
  },
  {
    "path": "src/main/java/duke/tasklist/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package duke.tasklist.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " * Stores a todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return \"T | \" + super.toFile();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 21
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.common.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import duke.tasklist.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import static duke.common.Constants.LINE_BREAK;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "import static duke.common.Constants.LOGO;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " * Deals with interactions with the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    private static Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        System.out.println(\"Hello from\\n\" + LOGO);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        System.out.println(LINE_BREAK);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Generates and prints the welcome message upon the start of the application."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        System.out.println(\"\\tHello! I\u0027m duke.Duke\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        System.out.println(\"\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Generates and prints the goodbye message upon the end of the application."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void showGoodByeMessage() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        System.out.println(\"\\tBye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Displays list of tasks and if they are done."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param tasks store the task list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @throws DukeException If there is no tasks, throws the exception."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void showListOfTasks(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        System.out.println(\"\\tHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            System.out.println(\"\\t\" + (i + 1) + \".\" + tasks.getATask(i));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Displays prompt message that a task is marked as done."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Displays the task that is marked done."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param tasks store the task list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param doneCount the task that is done."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void showMarkAsDoneMessage(TaskList tasks, int doneCount) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        System.out.println(\"\\t  yes! \" + tasks.getATask(doneCount).getDescription());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Displays prompt message that a task is deleted."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Displays the task that is deleted and the task count."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param deleteTask the task that is deleted."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param tasks stored the taskList."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void showDeleteMessage(Task deleteTask, TaskList tasks) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        System.out.println(\"\\tNoted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        System.out.println(\"\\t  \" + deleteTask);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        System.out.println(\"\\tNow you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void showCheckTask (TaskList tasks, ArrayList\u003cInteger\u003e findCount) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (findCount.size() \u003e 0) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            System.out.println(\"\\tHere are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            for (Integer i : findCount) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                System.out.println(\"\\t\" + (i + 1) + \".\" + tasks.getATask(i));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            System.out.println(\"\\t No matching tasks.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Displays prompt message that a new task is added in the task list."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * Displays the newly added task and current task count."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     * @param tasks store the taskList."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void showAddTaskMessage(TaskList tasks) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        System.out.println(\"\\tGot it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        System.out.println(\"\\t  \" + tasks.getATask(tasks.size() - 1));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        System.out.println(\"\\tNow you have \" + tasks.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void showFindTask (TaskList tasks, ArrayList\u003cInteger\u003e findCount) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        if (findCount.size() \u003e 0) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            System.out.println(\"\\tHere are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            for (Integer i : findCount) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "                System.out.println(\"\\t\" + (i + 1) + \".\" + tasks.getATask(i));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "            System.out.println(\"\\t No matching tasks.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        System.out.println(\"\\tCreating back up file in the hard disk...\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    public void showError(String error) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "        System.out.println(error);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "}"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 129
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\tCreating back up file in the hard disk..."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\tHello! I\u0027m duke.Duke"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\tWhat can I do for you?"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\tPlease input a task number that you want to mark as done"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\tCurrently, there is no task in the list!"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t  [T][ ] read book"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\tNow you have 1 tasks in the list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t  [T][ ] sleep"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\tNow you have 2 tasks in the list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\tThe description of a todo cannot be empty."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t Sorry.I do not understand you."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t  [D][ ] cs2113 (by: Tuesday)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\tNow you have 3 tasks in the list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t  [D][ ] assignment (by: Mar 21 2020, SATURDAY)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\tNow you have 4 tasks in the list"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t  [E][ ] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\tNow you have 5 tasks in the list"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t  [E][ ] concert (at: Mar 21 2020, SATURDAY)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\tNow you have 6 tasks in the list"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\tHere are the matching tasks in your list:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t4.[D][ ] assignment (by: Mar 21 2020, SATURDAY)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t6.[E][ ] concert (at: Mar 21 2020, SATURDAY)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\tThe description of a event cannot be empty."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\tHere are the matching tasks in your list:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t1.[T][ ] read book"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t5.[D][ ] book review (by: Friday)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\tPlease input the thing you want to find"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t No matching tasks."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\tNice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t  yes! sleep"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\tNice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t  yes! cs2113"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\tThere is no task 10. Please reconsider the index."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\tHere are the tasks in your list:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t1.[T][ ] read book"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t2.[T][/] sleep"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t3.[D][/] cs2113 (by: Tuesday)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t4.[D][ ] assignment (by: Mar 21 2020, SATURDAY)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t5.[E][ ] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t6.[E][ ] concert (at: Mar 21 2020, SATURDAY)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\tNoted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t  [T][/] sleep"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\tNow you have 5 tasks in the list."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\tPlease input a task number that you want to delete"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\tHere are the tasks in your list:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t1.[T][ ] read book"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t2.[D][/] cs2113 (by: Tuesday)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t3.[D][ ] assignment (by: Mar 21 2020, SATURDAY)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t4.[E][ ] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t5.[E][ ] concert (at: Mar 21 2020, SATURDAY)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\tBye. Hope to see you again soon!"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "\t____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 113
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "done"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "todo sleep"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "todo"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "heyhey"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "deadline cs2113 /by Tuesday"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "deadline assignment /by 2020-03-21"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "event concert /at 2020-03-21"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "check 2020-03-21"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "find book"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "find"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "find exam"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "done 10"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "delete"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 23
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\common\\*.java ..\\src\\main\\java\\duke\\parser\\*.java ..\\src\\main\\java\\duke\\storage\\*.java ..\\src\\main\\java\\duke\\taskList\\*.java ..\\src\\main\\java\\duke\\taskList\\task\\*.java ..\\src\\main\\java\\duke\\ui\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JTWang2000"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "JTWang2000": 21
    }
  }
]
